t that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> or <paramref name="newTrustPassword" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which the trust directions must be changed.</param>
      <param name="newTrustDirection"> A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the new trust direction for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <summary>Verifies that a previously established outbound trust with the specified forest is valid.</summary>
      <param name="targetForestName">The DNS name of the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no outbound trust relationship with the forest that is specified by <paramref name="targetForestName" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetForestName" /> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForestName" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Verifies that a previously established trust with the specified forest is valid.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object for which to verify the trust relationship.</param>
      <param name="direction">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the direction of the trust, relative to this forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest" />, or the target forest does not have the trust direction that is specified by <paramref name="direction" />.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetForest" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="direction" /> parameter is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <summary>Indicates the mode in which a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows 2000 mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows Server 2003 domain-function mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in Windows Server 2003 mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> is operating in  mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008R2Forest">
      <summary />
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class exception is thrown when a trust collision occurs during a trust relationship management request.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" /> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="collisions">A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object that contains one or more <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> that contains one or more <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that describe the trust relationship collision errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains serialized object data about the exception being thrown. </param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.  </param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <summary>Specifies the collision type of a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <summary>The collision is between top-level domains. This collision type indicates a collision with a namespace element of another forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <summary>The collision is between domain cross-references. This collision type indicates a collision with a domain in the same forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <summary>The collision is not a collision between top-level domains or domain cross references.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object is in the collection; otherwise, false.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object to get.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> class contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object and is contained in a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <summary>Gets the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <summary>Gets the SID of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the SID of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <summary>Gets the NetBIOS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>A string that contains the NetBIOS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <summary>Gets or sets the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" /> values that represents the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="Status" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" /> enumeration value.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <summary>Indicates the status of a forest trust relationship.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <summary>The forest trust relationship is enabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <summary>The forest trust SID is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <summary>The forest trust SID is disabled due to a conflict with an existing SID.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <summary>The forest trust NetBIOS record is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <summary>The forest trust NetBIOS record is disabled due to a conflict with an existing NetBIOS record.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <summary>Represents a collision record resulting from a collision between forest trust records.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <summary>Gets the collision record from the underlying Active Directory Domain Services service.</summary>
      <returns>A <see cref="T:System.String" /> containing the collision record resulting from a collision between forest trust records.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" /> value indicating the collision type.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" /> value that provides information about the collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> type is <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" /> value for the forest trust collision.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" /> value that provides information about the collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> type is <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object is in the collection; otherwise, false.</returns>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collision" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object.</returns>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collision" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> class contains information about a trust relationship between two <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <summary>Gets the excluded top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> object.</summary>
      <returns>A read/write <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the excluded top-level names in the current object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <summary>Commits any changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> properties to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">A collision occurred with an existing trust relationship. </exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <summary>Gets the top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" /> object.</summary>
      <returns>A read-only <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" /> object that contains the top-level names in the current object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <summary>Gets the trusted domain information for this <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object.</summary>
      <returns>A read-only <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" /> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" /> object  for the current object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> class represents a global catalog server. A global catalog server is a domain controller that hosts a replica of the global catalog. </summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <summary>Demotes this domain controller from a global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has already been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <summary>Not supported for the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> class because this domain controller is already a global catalog server.</summary>
      <returns>Not applicable. This method will always throw an <see cref="T:System.InvalidOperationException" /> exception.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is already a global catalog server.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds all global catalog servers in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> object that contains the global catalog servers found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all global catalog servers in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> object that contains the global catalog servers found by the search.</returns>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <param name="siteName">The name of the site to search for global catalog servers.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="siteName" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <summary>Retrieves all of the Active Directory Domain Services properties that are stored on this global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> object that contains the Active Directory Domain Services properties that are stored on this global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds a single global catalog server in the specified context.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of global catalog server to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single global catalog server in the specified context and site.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="siteName" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context and site, allowing for additional search options.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server found by the search.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of global catalog server to find.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" />, <paramref name="siteName" />, or <paramref name="flag" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="siteName" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the global catalog server.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectorySearcher" /> object for the global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object for the specified context.</summary>
      <returns>An <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that represents the global catalog server that was found.</returns>
      <param name="context">An  <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object. The target of the context must be a domain controller.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context" /> could not be made.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <summary>Determines if this domain controller is a global catalog server.</summary>
      <returns>true if this domain controller is a global catalog server; false if it is not a global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> is in this collection; otherwise, false.</returns>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalog" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="globalCatalogs">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="globalCatalogs" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalogs" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object.</returns>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="globalCatalog" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <summary>Indicates the hour of the day.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <summary>12:00 A.M. (midnight)</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <summary>1:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <summary>2:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <summary>3:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <summary>4:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <summary>5:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <summary>6:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <summary>7:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <summary>8:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <summary>9:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <summary>10:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <summary>11:00 A.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <summary>12:00 P.M. (noon)</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <summary>1:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <summary>2:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <summary>3:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <summary>4:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <summary>5:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <summary>6:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <summary>7:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <summary>8:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <summary>9:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <summary>10:00 P.M.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <summary>11:00 P.M.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <summary>Specifies search flags for finding a domain controller in a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <summary>Forces cached domain controller data to be ignored when searching for domain controllers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <summary>Search only for domain controllers that are currently running the Kerberos Key Distribution Center service.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <summary>Search only for domain controllers that are currently running the Windows Time service.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired">
      <summary>Search only for writeable domain controllers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <summary>When searching for domain controllers from a domain controller, exclude this domain controller from the search. If the current computer is not a domain controller, this flag is ignored.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <summary>Indicates the 15-minute intervals within an hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <summary>Represents 0 to 14 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <summary>Represents 15 to 29 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <summary>Represents 30 to 44 minutes after the hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <summary>Represents 45 to 59 minutes after the hour.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <summary>Represents the notification status of a replication connection. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <summary>Do not send notifications.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <summary>Send notifications only for intra-site connections.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <summary>Always send notifications.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <summary>Specifies the property types to select when calling the <see cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" /> method.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <summary>A property that is indexed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <summary>A property that is replicated in the global catalog.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="classes">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="classes" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="classes" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.</returns>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object is in this collection; otherwise, false.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="properties">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="properties" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object.</returns>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaProperty" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object is in this collection; otherwise, false.</returns>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServer" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="directoryServers">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="directoryServers" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServers" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object.</returns>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directoryServer" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" /> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection.             </summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection; otherwise, false.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects in this collection to the specified array, starting at the specified index of the target array.             </summary>
      <param name="sites">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="sites" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="sites" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.             </summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object.</returns>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object in this collection.             </summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object is in this collection; otherwise, false.</returns>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridge" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="bridges">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="bridges" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridges" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object.</returns>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bridge" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" /> object is in this collection; otherwise, false.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to search for.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> array that receives the elements of this collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="links" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="links" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member in this collection is identical to the specified <paramref name="link" /> object.</returns>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to locate in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" /> class is a read-only collection that contains <see cref="T:System.String" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <summary>Determines if the specified <see cref="T:System.String" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.String" /> object is in this collection, otherwise, false.</returns>
      <param name="value">The <see cref="T:System.String" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies all <see cref="T:System.String" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.String" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="values" /> where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.String" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.String" /> object.</returns>
      <param name="value">The <see cref="T:System.String" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.String" /> object in this collection.</summary>
      <returns>The <see cref="T:System.String" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.String" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class represents a replication connection.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, and source server.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="sourceServer" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, and schedule.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that specifies when the source is available for replication.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceServer" /> or <paramref name="schedule" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, schedule, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that specifies when the source is available for replication.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" />, <paramref name="sourceServer" /> or <paramref name="schedule" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not valid.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="context" /> is an AD LDS instance and <paramref name="transport" /> is <see cref="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />, which is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> class, using the specified context, name, source server, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to establish a replication connection with.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> object that identifies the source server of the connection.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:The target of the <paramref name="context" /> parameter is not a domain controller or AD LDS instance.<paramref name="sourceServer" /> is invalid or an empty string.The target specified in the <paramref name="context" /> parameter does not match the server type specified in the <paramref name="sourceServer" /> parameter. The servers must both be either domain controllers or AD LDS instances.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are domain controllers, but are not in the same forest.The servers specified in the <paramref name="context" /> and <paramref name="sourceServer" /> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="sourceServer" /> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="transport" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> value.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="context" /> is an AD LDS instance and <paramref name="transport" /> is <see cref="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />, which is not supported.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <summary>Gets or sets the change notification status of this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" /> members that specifies the change notification status of this replication connection.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">When setting the property, the new value is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <summary>Gets or sets a value indicating whether this replication connection compresses data.</summary>
      <returns>true if this replication connection uses data compression; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <summary>Deletes this replication connection.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object has not yet been saved to the underlying directory store.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <summary>Gets the DNS name of the server that is the destination of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the destination of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <summary>Releases the unmanaged and managed resources held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged and, optionally, the managed resources, held by the object.</summary>
      <param name="disposing">true to release the managed resources; otherwise, false.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <summary>Gets or sets a value indicating whether this replication connection is enabled.</summary>
      <returns>true if this replication connection is enabled; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Retrieves the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that matches the specified target context and name.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that represents the connection.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to search for.</param>
      <param name="name">The name of the connection to search for.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The connection could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> or <paramref name="name" /> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> or <paramref name="name" /> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <summary>Gets or sets a value indicating whether this replication connection was generated by the knowledge consistency checker (KCC).</summary>
      <returns>true if this replication connection was generated by the KCC; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the replication connection.</summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the target of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The current object has not been committed to the server. <see cref="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" /> must be called first.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <summary>Gets the name of this replication connection.</summary>
      <returns>A string that contains the user-defined name of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <summary>Gets or sets a value indicating whether this replication connection supports reciprocal replication.</summary>
      <returns>true if this replication connection supports reciprocal replication; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <summary>Gets or sets the schedule on which the source server is available for replication.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" /> object that represents the schedule on which the source server is available for replication. If this property is null, then the default schedule is used.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <summary>Gets or sets a value indicating whether the replication schedule is owned by the user.</summary>
      <returns>true if the replication schedule is owned by the user; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <summary>Gets the span of this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" /> members that specifies the span of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <summary>Commits the replication connection to the server. The replication connection object does not actually exist in Active Directory Domain Services until this method is called.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <summary>Gets the DNS name of the server that is the source of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the source of this replication connection.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <summary>Retrieves the name of the replication connection.</summary>
      <returns>A string that contains the name of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <summary>Gets the type of transport that is used by this replication connection.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> members that specifies the type of transport that is used by this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" /> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object is in this collection; otherwise, false.</returns>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="connections">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="connections" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connections" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of the collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object.</returns>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection" /> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="connection" /> does not exist.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> class represents a replication operation occurrence.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <summary>Gets the time of the last successful replication synchronization with the replication source server.</summary>
      <returns>The time at which the last successful replication synchronization occurred.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not supported on Windows 2000.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <summary>Gets the name of the partition to which this replication operation was applied.</summary>
      <returns>The name of the partition represented by this replication cursor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <summary>Gets the invocation identifier of the replication source server.</summary>
      <returns>The invocation identifier of the replication source server</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <summary>Gets the maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</summary>
      <returns>The maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object is in this collection; otherwise, false.</returns>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="values" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="values" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object.</returns>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <summary>Contains information about a failed replication attempt.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <summary>Gets the number of consecutive failures since the last successful replication. </summary>
      <returns>The number of consecutive failures since the last successful replication.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <summary>Gets the date and time that the first failure occurred.</summary>
      <returns>The date and time that the first failure occurred when replicating from the source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <summary>Gets the error code for the most recent failure.</summary>
      <returns>An HRESULT that contains the error code that is associated with the most recent failure. This will be ERROR_SUCCESS if the specific error is unavailable.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <summary>Gets the error message for the most recent failure.</summary>
      <returns>The error message for the most recent failure.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <summary>Gets the DNS name of the source server.</summary>
      <returns>The DNS name of the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object is in this collection; otherwise, false.</returns>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failure" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="failures">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="failures" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failures" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object.</returns>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="failure" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> class contains information about a replication neighbor of an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <summary>Gets the number of replication failures since the last successful replication cycle.</summary>
      <returns>The number of failed replication attempts from this source since the last successful replication attempt. If no previous attempt was successful, the return value is the number of failed replication attempts since the source was added as a neighbor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <summary>Gets the time of the last replication attempt from this source.</summary>
      <returns>The time of the last replication attempt. If no replication attempt occurred, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <summary>Gets the time of the last successful replication cycle from this source.</summary>
      <returns>The time of the last successful synchronization. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <summary>Gets the message that is associated with the last replication attempt from this source.</summary>
      <returns>The message that corresponds to the last replication attempt. If the last attempt succeeded, the value is an empty string. </returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <summary>Gets the error code that is associated with the last replication attempt from this source.</summary>
      <returns>The error code for the last replication attempt. If the last attempt succeeded, the value is ERROR_SUCCESS.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <summary>Gets the partition name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
      <returns>The name of the partition for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <summary>Gets the attribute and object settings for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" /> value that contains the attribute and option settings for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <summary>Gets the invocation identifier that was used by the replication source server in the last replication attempt.</summary>
      <returns>The invocation identifier that was used by the replication source server in the last replication attempt.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <summary>Gets the transport type that was used for replication.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" /> enumeration value that indicates the transport type that was used for the replication connection. </returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <summary>Gets the update sequence number (USN) value for the last successful replication cycle.</summary>
      <returns>The USN value for the last successful replication cycle. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <summary>Gets the update sequence number (USN) of the last object update that was received.</summary>
      <returns>The USN of the last update that was received.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <summary>Specifies the options for a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <summary>The local copy of the naming context is writable.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <summary>Replication of this naming context from this source is attempted when the destination server is restarted. This normally only applies to intra-site neighbors.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <summary>Perform replication on a schedule. This option is normally set unless the schedule for this naming context/source is "never", that is, the empty schedule.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <summary>Perform replication indirectly through the Inter-Site Messaging Service. This flag is set only when replicating over SMTP. This flag is not set when replicating over inter-site RPC/IP.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <summary>If set, this option indicates that when inbound replication is complete, the destination server must tell the source server to synchronize in the reverse direction. This feature is used in dial-up scenarios where only one of the two servers can initiate a dial-up connection. For example, this option would be used in a corporate headquarters and branch office, where the branch office connects to the corporate headquarters over the Internet by means of a dial-up ISP connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <summary>This neighbor is in a state where it returns parent objects before children objects. It goes into this state after it receives a child object before its parent.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <summary>The destination server is performing a full synchronization from the source server. Full synchronizations do not use vectors that create updates (DS_REPL_CURSORS) for filtering updates. Full synchronizations are not used as a part of the normal replication protocol.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <summary>The last packet from the source indicated that an object that has not yet been created by the destination server has been modified. The next packet that is requested will instruct the source server to put all attributes of the modified object into the packet.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <summary>A synchronization has never been successfully completed from this source.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <summary>The replication engine has temporarily stopped processing this neighbor in order to service another higher-priority neighbor, either for this partition or another partition. The replication engine will resume processing this neighbor after the higher-priority work is completed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <summary>This option is set to disable notification based synchronizations. Within a site, domain controllers synchronize with each other based on notifications when changes occur. This setting prevents this neighbor from performing syncs that are triggered by notifications. The neighbor will still do synchronizations based on its schedule, or if requested manually.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <summary>This option is set to disable synchronizations based on its schedule. The only way this neighbor will perform synchronizations is in response to a change notification or to a manual request for synchronizations.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <summary>Changes that are received from this source are compressed. This option is usually set only if the source server is in a different site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <summary>No change notifications should be received from this source. This option is usually set only if the source server is in a different site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <summary>This neighbor is in a state where it is rebuilding the contents of this replica because of a change in the partial attribute set.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object is in this collection, otherwise, false.</returns>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbor" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="neighbors">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="neighbors" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbors" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object.</returns>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="neighbor" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> class represents an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <summary>Contains the operation number of this replication operation.</summary>
      <returns>An integer that contains the operation number of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <summary>Contains the type of replication operation that this operation represents.</summary>
      <returns>One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" /> members that indicates the type of replication operation that this operation represents.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <summary>Contains the distinguished name of the partition that is associated with this replication operation.</summary>
      <returns>A string that contains the distinguished name of the partition that is associated with this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <summary>Contains the priority of this replication operation.</summary>
      <returns>An integer that contains the priority of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <summary>Contains the DNS name of the source server for this replication operation.</summary>
      <returns>A string that contains the DNS name of the source server for this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <summary>Contains the time that this replication operation was added to the operation queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the date and time that this replication operation was added to the operation queue.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object is in this collection; otherwise, false.</returns>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation" /> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="operations">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="operations" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operations" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object.</returns>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation" /> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> class contains information about an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" /> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <summary>Gets the current replication operation.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" /> object that represents the current replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <summary>Gets the time that this replication operation started.</summary>
      <returns>A <see cref="T:System.DateTime" /> object that contains the date and time that this replication operation started.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <summary>Gets the replication operations that have not been run.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" /> object that contains the pending replication operations.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <summary>Indicates a specific type of replication operation.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <summary>Indicates an inbound replication over an existing replication agreement from a direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <summary>Indicates the addition of a replication agreement for a new direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <summary>Indicates the removal of a replication agreement for an existing direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <summary>Indicates the modification of a replication agreement for an existing direct replication partner.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <summary>Indicates the addition, deletion, or update of outbound change notification data for a direct replication partner.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <summary>Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <summary>Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <summary>Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <summary>All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <summary>Determines the span of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <summary>The source and destination servers are in the same site.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <summary>The source and destination servers are in different sites.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <summary>
                     
                        Specifies the class type of an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" /> object.
                     </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <summary>The class is a type 88 class. Classes defined before 1993 are not required to be included in another category; assigning classes to categories was not required in the X.500 1988 specification. Classes defined prior to the X.500 1993 standards default to the 1988 class. This type of class is specified by a value of 0 in the objectClassCategory attribute.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <summary>The class is a structural class.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <summary>The class is an abstract class.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <summary>The class is an auxiliary class.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <summary>The server could not be contacted for replication.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <summary>The replication operation failed to complete.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <summary>The server is not reachable.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <summary>Gets the category of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" /> enumeration value that indicates the category of the error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A value that identifies the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <summary>Gets the message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</summary>
      <returns>A message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <summary>Gets the name of the source server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception occurred.</summary>
      <returns>The name of the source server that is involved in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <summary>Gets the name of the target server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception occurred.</summary>
      <returns>The name of the target server that is involved in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <summary>Used in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" /> delegate to specify the type of synchronization event. </summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <summary>An error occurred.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <summary>Synchronization of two servers has started.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <summary>Synchronization of two servers has just completed.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <summary>The entire replication process has completed.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> exception is thrown when the request to synchronize from all servers fails. </summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception" /> object that contains underlying exception information.</param>
      <param name="errors">An array of one or more <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <summary>Gets an array of <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</summary>
      <returns>An array of one or more <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" /> objects that describe the errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <summary>Specifies additional options when performing a synchronization.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <summary>No synchronization options.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <summary>Aborts the synchronization if any server cannot be contacted or if any server is unreachable.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <summary>Disables transitive replication. Synchronization is performed only with adjacent servers.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <summary>Disables all synchronization. The topology is analyzed and unavailable or unreachable servers are identified.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <summary>Assumes that all servers are responding. This will speed up the operation of this method, but if some servers are not responding, some transitive replications might be blocked.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <summary>Pushes changes from the home server out to all partners using transitive replication. This reverses the direction of replication and the order of execution of the replication sets from the usual mode of execution.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <summary>Synchronizes across site boundaries. By default, this method attempts to synchronize only with domain controllers in the same site as the home system. Set this flag to attempt to synchronize with all domain controllers in the enterprise forest. However, the domain controllers can be synchronized only if connected by a synchronous (RPC) transport.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <summary>Receives event notifications during a replica synchronization.</summary>
      <returns>true if the SyncReplicaFromAllServers method invoked on a <see cref="T:System.DirectoryServices.ActiveDirectory.ADAMInstance" />,  <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object should resume; false if the SyncReplicaFromAllServers method should terminate.</returns>
      <param name="eventType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" /> members that specifies the type of event.</param>
      <param name="targetServer">Contains the DNS name of the server that is the target of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="sourceServer">Contains the DNS name of the server that is the source of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="exception">A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" /> object that contains additional information about any error that has occurred. This parameter will be null if no error has occurred.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <summary>Contains forest trust account information about a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <summary>Gets the name of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <summary>Gets or sets the status of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" />.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" /> value that contains the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" /> values.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" /> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object is in this collection.</summary>
      <returns>true if the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object is in this collection; otherwise, false.</returns>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="names">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="names" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> parameter that was specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="names" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object.</returns>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" /> property gets a <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> that is located at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter that was specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <summary>Specifies additional information about a forest trust collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" /> property value is <see cref="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName" />.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <summary>No action has occurred.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <summary>The forest trust account has been created and is disabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <summary>The forest trust account was disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <summary>The forest trust account was disabled due to a conflict with an existing forest trust account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <summary>Indicates the forest trust account status of a top-level domain in a forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <summary>The forest trust account is enabled.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <summary>The forest trust account was disabled on creation.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <summary>The forest trust account is disabled by administrative action.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <summary>The forest trust account is disabled due to a conflict with an existing forest trust account.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <summary>Indicates the direction of a trust.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <summary>This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <summary>This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <summary>Each domain or forest has access to the resources of the other domain or forest.</summary>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> class contains information for a trust relationship between a pair of <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <summary>Obtains the name of the source <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the source <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <summary>Obtains the name of the target <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the target <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> objects for this trust relationship relative to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects that created the trust.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value for this trust relationship relative to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> objects that created the trust.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustType" /> object of the trust relationship.</summary>
      <returns>A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustType" /> value that represents the type of the trust relationship.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> class contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object is contained in this collection.</summary>
      <returns>true if the specified object is in this collection; otherwise, false.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index" /> specified.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object in this collection.</summary>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object.</returns>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to search for in this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="information" /> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object in this collection.</summary>
      <returns>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object to get.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <summary>Indicates the type of a <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <summary>One of the domains in the trust relationship is a tree root.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <summary>The trust relationship is between a parent and a child domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <summary>The trust relationship is a shortcut between two domains that exists to optimize the authentication processing between two domains that are in separate domain trees.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <summary>The trust relationship is with a domain outside of the current forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <summary>The trust relationship is between two forest root domains in separate Windows Server 2003 forests.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <summary>The trusted domain is an MIT Kerberos realm.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <summary>The trust is a non-specific type.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.EnterpriseServices.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.EnterpriseServices</name>
  </assembly>
  <members>
    <member name="T:System.EnterpriseServices.AccessChecksLevelOption">
      <summary>Specifies the level of access checking for an application, either at the process level only or at all levels, including component, interface, and method levels.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.Application">
      <summary>Enables access checks only at the process level. No access checks are made at the component, interface, or method level.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AccessChecksLevelOption.ApplicationComponent">
      <summary>Enables access checks at every level on calls into the application.</summary>
    </member>
    <member name="T:System.EnterpriseServices.ActivationOption">
      <summary>Specifies the manner in which serviced components are activated in the application.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Library">
      <summary>Specifies that serviced components in the marked application are activated in the creator's process.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ActivationOption.Server">
      <summary>Specifies that serviced components in the marked application are activated in a system-provided process.</summary>
    </member>
    <member name="T:System.EnterpriseServices.Activity">
      <summary>Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Activity" /> class.</summary>
      <param name="cfg">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used. </param>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.EnterpriseServices.Activity" /> is not supported on the current platform. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)">
      <summary>Runs the specified user-defined batch work asynchronously.</summary>
      <param name="serviceCall">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work. </param>
    </member>
    <member name="M:System.EnterpriseServices.Activity.BindToCurrentThread">
      <summary>Binds the user-defined work to the current thread.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)">
      <summary>Runs the specified user-defined batch work synchronously.</summary>
      <param name="serviceCall">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work. </param>
    </member>
    <member name="M:System.EnterpriseServices.Activity.UnbindFromThread">
      <summary>Unbinds the batch work that is submitted by the <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> or <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> methods from the thread on which the batch work is running.</summary>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationAccessControlAttribute">
      <summary>Specifies access controls to an assembly containing <see cref="T:System.EnterpriseServices.ServicedComponent" /> classes.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" /> class, enabling the COM+ security configuration.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationAccessControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationAccessControlAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value" /> property indicating whether to enable COM security configuration.</summary>
      <param name="val">true to allow configuration of security; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.AccessChecksLevel">
      <summary>Gets or sets the access checking level to process level or to component level.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.AccessChecksLevelOption" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Authentication">
      <summary>Gets or sets the remote procedure call (RPC) authentication level.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.AuthenticationOption" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.ImpersonationLevel">
      <summary>Gets or sets the impersonation level that is allowed for calling targets of this application.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.ImpersonationLevelOption" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationAccessControlAttribute.Value">
      <summary>Gets or sets a value indicating whether to enable COM+ security configuration.</summary>
      <returns>true if COM+ security configuration is enabled; otherwise, false.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationActivationAttribute">
      <summary>Specifies whether components in the assembly run in the creator's process or in a system process.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationActivationAttribute.#ctor(System.EnterpriseServices.ActivationOption)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationActivationAttribute" /> class, setting the specified <see cref="T:System.EnterpriseServices.ActivationOption" /> value.</summary>
      <param name="opt">One of the <see cref="T:System.EnterpriseServices.ActivationOption" /> values. </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapMailbox">
      <summary>This property is not supported in the current version.</summary>
      <returns>This property is not supported in the current version.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.SoapVRoot">
      <summary>Gets or sets a value representing a virtual root on the Web for the COM+ application.</summary>
      <returns>The virtual root on the Web for the COM+ application.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationActivationAttribute.Value">
      <summary>Gets the specified <see cref="T:System.EnterpriseServices.ActivationOption" /> value.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.ActivationOption" /> values, either Library or Server.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationIDAttribute">
      <summary>Specifies the application ID (as a GUID) for this assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationIDAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationIDAttribute" /> class specifying the GUID representing the application ID for the COM+ application.</summary>
      <param name="guid">The GUID associated with the COM+ application. </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationIDAttribute.Value">
      <summary>Gets the GUID of the COM+ application.</summary>
      <returns>The GUID representing the COM+ application.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationNameAttribute">
      <summary>Specifies the name of the COM+ application to be used for the install of the components in the assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" /> class, specifying the name of the COM+ application to be used for the install of the components.</summary>
      <param name="name">The name of the COM+ application. </param>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationNameAttribute.Value">
      <summary>Gets a value indicating the name of the COM+ application that contains the components in the assembly.</summary>
      <returns>The name of the COM+ application.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ApplicationQueuingAttribute">
      <summary>Enables queuing support for the marked assembly and enables the application to read method calls from Message Queuing queues. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ApplicationQueuingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ApplicationQueuingAttribute" /> class, enabling queuing support for the assembly and initializing <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled" />, and <see cref="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads" />.</summary>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled">
      <summary>Gets or sets a value indicating whether queuing support is enabled.</summary>
      <returns>true if queuing support is enabled; otherwise, false. The default value set by the constructor is true.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads">
      <summary>Gets or sets the number of threads used to extract messages from the queue and activate the corresponding component.</summary>
      <returns>The maximum number of threads to use for processing messages arriving in the queue. The default is zero.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled">
      <summary>Gets or sets a value indicating whether the application will accept queued component calls from clients.</summary>
      <returns>true if the application accepts queued component calls; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.EnterpriseServices.AuthenticationOption">
      <summary>Specifies the remote procedure call (RPC) authentication mechanism. Applicable only when the <see cref="T:System.EnterpriseServices.ActivationOption" /> is set to Server.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Default">
      <summary>Uses the default authentication level for the specified authentication service. In COM+, this setting is provided by the DefaultAuthenticationLevel property in the LocalComputer collection.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.None">
      <summary>Authentication does not occur.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Connect">
      <summary>Authenticates credentials only when the connection is made.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Call">
      <summary>Authenticates credentials at the beginning of every call.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Packet">
      <summary>Authenticates credentials and verifies that all call data is received.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Integrity">
      <summary>Authenticates credentials and verifies that no call data has been modified in transit.</summary>
    </member>
    <member name="F:System.EnterpriseServices.AuthenticationOption.Privacy">
      <summary>Authenticates credentials and encrypts the packet, including the data and the sender's identity and signature.</summary>
    </member>
    <member name="T:System.EnterpriseServices.AutoCompleteAttribute">
      <summary>Marks the attributed method as an AutoComplete object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> class, specifying that the application should automatically call <see cref="M:System.EnterpriseServices.ContextUtil.SetComplete" /> if the transaction completes successfully.</summary>
    </member>
    <member name="M:System.EnterpriseServices.AutoCompleteAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> class, specifying whether COM+ AutoComplete is enabled.</summary>
      <param name="val">true to enable AutoComplete in the COM+ object; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.AutoCompleteAttribute.Value">
      <summary>Gets a value indicating the setting of the AutoComplete option in COM+.</summary>
      <returns>true if AutoComplete is enabled in COM+; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.BindingOption">
      <summary>Indicates whether all work submitted by <see cref="T:System.EnterpriseServices.Activity" /> should be bound to only one single-threaded apartment (STA). This enumeration has no impact on the multithreaded apartment (MTA).</summary>
    </member>
    <member name="F:System.EnterpriseServices.BindingOption.NoBinding">
      <summary>The work submitted by the activity is not bound to a single STA.</summary>
    </member>
    <member name="F:System.EnterpriseServices.BindingOption.BindingToPoolThread">
      <summary>The work submitted by the activity is bound to a single STA.</summary>
    </member>
    <member name="T:System.EnterpriseServices.BOID">
      <summary>Represents the unit of work associated with a transaction. This structure is used in <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.BOID.rgb">
      <summary>Represents an array that contains the data.</summary>
    </member>
    <member name="T:System.EnterpriseServices.BYOT">
      <summary>Wraps the COM+ ByotServerEx class and the COM+ DTC interfaces ICreateWithTransactionEx and ICreateWithTipTransactionEx. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)">
      <summary>Creates an object that is enlisted within a manual transaction using the Transaction Internet Protocol (TIP).</summary>
      <returns>The requested transaction.</returns>
      <param name="url">A TIP URL that specifies a transaction. </param>
      <param name="t">The type. </param>
    </member>
    <member name="M:System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)">
      <summary>Creates an object that is enlisted within a manual transaction.</summary>
      <returns>The requested transaction.</returns>
      <param name="transaction">The <see cref="T:System.EnterpriseServices.ITransaction" /> or <see cref="T:System.Transactions.Transaction" /> object that specifies a transaction. </param>
      <param name="t">The specified type. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.ComponentAccessControlAttribute">
      <summary>Enables security checking on calls to a component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ComponentAccessControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ComponentAccessControlAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value" /> property to indicate whether to enable COM+ security configuration.</summary>
      <param name="val">true to enable security checking on calls to a component; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.ComponentAccessControlAttribute.Value">
      <summary>Gets a value indicating whether to enable security checking on calls to a component.</summary>
      <returns>true if security checking is to be enabled; otherwise, false.</returns>
    </member>
    <member name="T:System.EnterpriseServices.COMTIIntrinsicsAttribute">
      <summary>Enables you to pass context properties from the COM Transaction Integrator (COMTI) into the COM+ context.</summary>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" /> class, setting the <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" /> property to true.</summary>
    </member>
    <member name="M:System.EnterpriseServices.COMTIIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.COMTIIntrinsicsAttribute" /> class, enabling the setting of the <see cref="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value" /> property.</summary>
      <param name="val">true if the COMTI context properties are passed into the COM+ context; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.COMTIIntrinsicsAttribute.Value">
      <summary>Gets a value indicating whether the COM Transaction Integrator (COMTI) context properties are passed into the COM+ context.</summary>
      <returns>true if the COMTI context properties are passed into the COM+ context; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ConstructionEnabledAttribute">
      <summary>Enables COM+ object construction support. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" /> class and initializes the default settings for <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ConstructionEnabledAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ConstructionEnabledAttribute" /> class, setting <see cref="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled" /> to the specified value.</summary>
      <param name="val">true to enable COM+ object construction support; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Default">
      <summary>Gets or sets a default value for the constructor string.</summary>
      <returns>The value to be used for the default constructor string. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.EnterpriseServices.ConstructionEnabledAttribute.Enabled">
      <summary>Gets or sets a value indicating whether COM+ object construction support is enabled.</summary>
      <returns>true if COM+ object construction support is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ContextUtil">
      <summary>Obtains information about the COM+ object context. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ActivityId">
      <summary>Gets a GUID representing the activity containing the component.</summary>
      <returns>The GUID for an activity if the current context is part of an activity; otherwise, GUID_NULL.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationId">
      <summary>Gets a GUID for the current application.</summary>
      <returns>The GUID for the current application.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows XP or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId">
      <summary>Gets a GUID for the current application instance.</summary>
      <returns>The GUID for the current application instance.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows XP or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.ContextId">
      <summary>Gets a GUID for the current context.</summary>
      <returns>The GUID for the current context.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn">
      <summary>Gets or sets the done bit in the COM+ context.</summary>
      <returns>true if the object is to be deactivated when the method returns; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.DisableCommit">
      <summary>Sets both the consistent bit and the done bit to false in the COM+ context.</summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">No COM+ context is available.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.EnableCommit">
      <summary>Sets the consistent bit to true and the done bit to false in the COM+ context.</summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">No COM+ context is available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)">
      <summary>Returns a named property from the COM+ context.</summary>
      <returns>The named property for the context.</returns>
      <param name="name">The name of the requested property. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)">
      <summary>Determines whether the caller is in the specified role.</summary>
      <returns>true if the caller is in the specified role; otherwise, false.</returns>
      <param name="role">The name of the role to check. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.IsDefaultContext">
      <summary>Determines whether the serviced component is activated in the default context. Serviced components that do not have COM+ catalog information are activated in the default context.</summary>
      <returns>true if the serviced component is activated in the default context; otherwise, false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsInTransaction">
      <summary>Gets a value that indicates whether the current context is transactional.</summary>
      <returns>true if the current context is transactional; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled">
      <summary>Gets a value that indicates whether role-based security is active in the current context.</summary>
      <returns>true if the current context has security enabled; otherwise, false.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.MyTransactionVote">
      <summary>Gets or sets the consistent bit in the COM+ context.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either Commit or Abort.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.PartitionId">
      <summary>Gets a GUID for the current partition.</summary>
      <returns>The GUID for the current partition.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows XP or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetAbort">
      <summary>Sets the consistent bit to false and the done bit to true in the COM+ context.</summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetComplete">
      <summary>Sets the consistent bit and the done bit to true in the COM+ context.</summary>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)">
      <summary>Sets the named property for the COM+ context.</summary>
      <param name="name">The name of the property to set. </param>
      <param name="value">Object that represents the property value to set.</param>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.SystemTransaction">
      <summary>Gets the current transaction context.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.Transaction">
      <summary>Gets an object describing the current COM+ DTC transaction.</summary>
      <returns>An object that represents the current transaction.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.ContextUtil.TransactionId">
      <summary>Gets the GUID of the current COM+ DTC transaction.</summary>
      <returns>A GUID representing the current COM+ DTC transaction, if one exists.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no COM+ context available. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The platform is not Windows 2000 or later. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.DescriptionAttribute">
      <summary>Sets the description on an assembly (application), component, method, or interface. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.DescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.DescriptionAttribute" /> class.</summary>
      <param name="desc">The description of the assembly (application), component, method, or interface. </param>
    </member>
    <member name="T:System.EnterpriseServices.EventClassAttribute">
      <summary>Marks the attributed class as an event class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.EventClassAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.EventClassAttribute" /> class.</summary>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.AllowInprocSubscribers">
      <summary>Gets or sets a value that indicates whether subscribers can be activated in the publisher's process.</summary>
      <returns>true if subscribers can be activated in the publisher's process; otherwise, false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.FireInParallel">
      <summary>Gets or sets a value that indicates whether events are to be delivered to subscribers in parallel.</summary>
      <returns>true if events are to be delivered to subscribers in parallel; otherwise, false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.EventClassAttribute.PublisherFilter">
      <summary>Gets or sets a publisher filter for an event method.</summary>
      <returns>The publisher filter.</returns>
    </member>
    <member name="T:System.EnterpriseServices.EventTrackingEnabledAttribute">
      <summary>Enables event tracking for a component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" /> class, enabling event tracking.</summary>
    </member>
    <member name="M:System.EnterpriseServices.EventTrackingEnabledAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.EventTrackingEnabledAttribute" /> class, optionally disabling event tracking.</summary>
      <param name="val">true to enable event tracking; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value">
      <summary>Gets the value of the <see cref="P:System.EnterpriseServices.EventTrackingEnabledAttribute.Value" /> property, which indicates whether tracking is enabled.</summary>
      <returns>true if tracking is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ExceptionClassAttribute">
      <summary>Sets the queuing exception class for the queued class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ExceptionClassAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ExceptionClassAttribute" /> class.</summary>
      <param name="name">The name of the exception class for the player to activate and play back before the message is routed to the dead letter queue. </param>
    </member>
    <member name="P:System.EnterpriseServices.ExceptionClassAttribute.Value">
      <summary>Gets the name of the exception class for the player to activate and play back before the message is routed to the dead letter queue.</summary>
      <returns>The name of the exception class for the player to activate and play back before the message is routed to the dead letter queue.</returns>
    </member>
    <member name="T:System.EnterpriseServices.IAsyncErrorNotify">
      <summary>Implements error trapping on the asynchronous batch work that is submitted by the <see cref="T:System.EnterpriseServices.Activity" /> object.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IAsyncErrorNotify.OnError(System.Int32)">
      <summary>Handles errors for asynchronous batch work.</summary>
      <param name="hresult">The HRESULT of the error that occurred while the batch work was running asynchronously. </param>
    </member>
    <member name="T:System.EnterpriseServices.IISIntrinsicsAttribute">
      <summary>Enables access to ASP intrinsic values from <see cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" /> class, enabling access to the ASP intrinsic values.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IISIntrinsicsAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.IISIntrinsicsAttribute" /> class, optionally disabling access to the ASP intrinsic values.</summary>
      <param name="val">true to enable access to the ASP intrinsic values; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.IISIntrinsicsAttribute.Value">
      <summary>Gets a value that indicates whether access to the ASP intrinsic values is enabled.</summary>
      <returns>true if access is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ImpersonationLevelOption">
      <summary>Specifies the level of impersonation allowed when calling targets of a server application.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Default">
      <summary>Uses the default impersonation level for the specified authentication service. In COM+, this setting is provided by the DefaultImpersonationLevel property in the LocalComputer collection.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Anonymous">
      <summary>The client is anonymous to the server. The server process can impersonate the client, but the impersonation token does not contain any information about the client.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Identify">
      <summary>The system default level. The server can obtain the client's identity, and the server can impersonate the client to do ACL checks.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Impersonate">
      <summary>The server can impersonate the client's security context while acting on behalf of the client. The server can access local resources as the client.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ImpersonationLevelOption.Delegate">
      <summary>The most powerful impersonation level. When this level is selected, the server (whether local or remote) can impersonate the client's security context while acting on behalf of the client </summary>
    </member>
    <member name="T:System.EnterpriseServices.InheritanceOption">
      <summary>Indicates whether to create a new context based on the current context or on the information in <see cref="T:System.EnterpriseServices.ServiceConfig" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InheritanceOption.Inherit">
      <summary>The new context is created from the existing context. <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" /> is the default value for <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InheritanceOption.Ignore">
      <summary>The new context is created from the default context.</summary>
    </member>
    <member name="T:System.EnterpriseServices.InstallationFlags">
      <summary>Flags used with the <see cref="T:System.EnterpriseServices.RegistrationHelper" /> class.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Default">
      <summary>Do the default installation, which configures, installs, and registers, and assumes that the application already exists.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ExpectExistingTypeLib">
      <summary>Do not export the type library; one can be found either by the generated or supplied type library name.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.CreateTargetApplication">
      <summary>Creates the target application. An error occurs if the target already exists.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.FindOrCreateTargetApplication">
      <summary>Creates the application if it does not exist; otherwise use the existing application.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReconfigureExistingApplication">
      <summary>If using an existing application, ensures that the properties on this application match those in the assembly.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ConfigureComponentsOnly">
      <summary>Configures components only, do not configure methods or interfaces.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.ReportWarningsToConsole">
      <summary>When alert text is encountered, writes it to the Console.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Register">
      <summary>Should not be used.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Install">
      <summary>Should not be used.</summary>
    </member>
    <member name="F:System.EnterpriseServices.InstallationFlags.Configure">
      <summary>Should not be used.</summary>
    </member>
    <member name="T:System.EnterpriseServices.InterfaceQueuingAttribute">
      <summary>Enables queuing support for the marked interface. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class setting the <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> and <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> properties to their default values.</summary>
    </member>
    <member name="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> class, optionally disabling queuing support.</summary>
      <param name="enabled">true to enable queuing support; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled">
      <summary>Gets or sets a value indicating whether queuing support is enabled.</summary>
      <returns>true if queuing support is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface">
      <summary>Gets or sets the name of the interface on which queuing is enabled.</summary>
      <returns>The name of the interface on which queuing is enabled.</returns>
    </member>
    <member name="T:System.EnterpriseServices.IPlaybackControl">
      <summary>Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
      <summary>Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
      <summary>Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</summary>
    </member>
    <member name="T:System.EnterpriseServices.IProcessInitControl">
      <summary>Supports setting the time-out for the <see cref="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" /> method.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout(System.Int32)">
      <summary>Sets the number of seconds remaining before the <see cref="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" /> method times out.</summary>
      <param name="dwSecondsRemaining">The number of seconds that remain before the time taken to execute the start up method times out. </param>
    </member>
    <member name="T:System.EnterpriseServices.IProcessInitializer">
      <summary>Supports methods that can be called when a COM component starts up or shuts down.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
      <summary>Performs shutdown actions. Called when Dllhost.exe is shut down.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
      <summary>Performs initialization at startup. Called when Dllhost.exe is started.</summary>
      <param name="punkProcessControl">In Microsoft Windows XP, a pointer to the IUnknown interface of the COM component starting up. In Microsoft Windows 2000, this argument is always null. </param>
    </member>
    <member name="T:System.EnterpriseServices.IRegistrationHelper">
      <summary>Installs and configures assemblies in the COM+ catalog.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>Installs the assembly into the COM+ catalog.</summary>
      <param name="assembly">The assembly name as a file or the strong name of an assembly in the global assembly cache (GAC). </param>
      <param name="application">The application parameter can be null. If it is, the name of the application is automatically generated based on the name of the assembly or the ApplicationName attribute. If the application contains an ApplicationID attribute, the attribute takes precedence. </param>
      <param name="tlb">The name of the output type library (TLB) file, or a string containing null if the registration helper is expected to generate the name. On call completion, the actual name used is placed in the parameter. </param>
      <param name="installFlags">The installation options specified in the enumeration. </param>
    </member>
    <member name="M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>Uninstalls the assembly from the COM+ catalog.</summary>
      <param name="assembly">The assembly name as a file or the strong name of an assembly in the global assembly cache (GAC). </param>
      <param name="application">The name of the COM+ application. </param>
    </member>
    <member name="T:System.EnterpriseServices.IRemoteDispatch">
      <summary>Implemented by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class to determine if the <see cref="T:System.EnterpriseServices.AutoCompleteAttribute" /> class attribute is set to true or false for a remote method invocation.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(System.String)">
      <summary>Ensures that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's done bit is set to true after a remote method invocation.</summary>
      <returns>A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</returns>
      <param name="s">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</param>
    </member>
    <member name="M:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(System.String)">
      <summary>Does not ensure that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's done bit is set to true after a remote method invocation.</summary>
      <returns>A string converted from a response object implementing the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</returns>
      <param name="s">A string to be converted into a request object implementing the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</param>
    </member>
    <member name="T:System.EnterpriseServices.IServiceCall">
      <summary>Implements the batch work that is submitted through the activity created by <see cref="T:System.EnterpriseServices.Activity" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IServiceCall.OnCall">
      <summary>Starts the execution of the batch work implemented in this method.</summary>
    </member>
    <member name="T:System.EnterpriseServices.IServicedComponentInfo">
      <summary>Implemented by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class to obtain information about the component via the <see cref="M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)" /> method.</summary>
    </member>
    <member name="M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)">
      <summary>Obtains certain information about the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class instance.</summary>
      <param name="infoMask">A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</param>
      <param name="infoArray">A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</param>
    </member>
    <member name="T:System.EnterpriseServices.ITransaction">
      <summary>Corresponds to the Distributed Transaction Coordinator (DTC) ITransaction interface and is supported by objects obtained through <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Abort(System.EnterpriseServices.BOID@,System.Int32,System.Int32)">
      <summary>Aborts the transaction.</summary>
      <param name="pboidReason">An optional <see cref="T:System.EnterpriseServices.BOID" /> that indicates why the transaction is being aborted. This parameter can be null, indicating that no reason for the abort is provided. </param>
      <param name="fRetaining">Must be false. </param>
      <param name="fAsync">When <paramref name="fAsync" /> is true, an asynchronous abort is performed and the caller must use ITransactionOutcomeEvents to learn the outcome of the transaction. </param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>Commits the transaction.</summary>
      <param name="fRetaining">Must be false. </param>
      <param name="grfTC">A value taken from the OLE DB enumeration XACTTC. </param>
      <param name="grfRM">Must be zero. </param>
    </member>
    <member name="M:System.EnterpriseServices.ITransaction.GetTransactionInfo(System.EnterpriseServices.XACTTRANSINFO@)">
      <summary>Returns information about a transaction object.</summary>
      <param name="pinfo">Pointer to the caller-allocated <see cref="T:System.EnterpriseServices.XACTTRANSINFO" /> structure that will receive information about the transaction. Must not be null. </param>
    </member>
    <member name="T:System.EnterpriseServices.JustInTimeActivationAttribute">
      <summary>Turns just-in-time (JIT) activation on or off. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> class. The default constructor enables just-in-time (JIT) activation.</summary>
    </member>
    <member name="M:System.EnterpriseServices.JustInTimeActivationAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> class, optionally allowing the disabling of just-in-time (JIT) activation by passing false as the parameter.</summary>
      <param name="val">true to enable JIT activation; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.JustInTimeActivationAttribute.Value">
      <summary>Gets the value of the <see cref="T:System.EnterpriseServices.JustInTimeActivationAttribute" /> setting.</summary>
      <returns>true if JIT activation is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.LoadBalancingSupportedAttribute">
      <summary>Determines whether the component participates in load balancing, if the component load balancing service is installed and enabled on the server.</summary>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" /> class, specifying load balancing support.</summary>
    </member>
    <member name="M:System.EnterpriseServices.LoadBalancingSupportedAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.LoadBalancingSupportedAttribute" /> class, optionally disabling load balancing support.</summary>
      <param name="val">true to enable load balancing support; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.LoadBalancingSupportedAttribute.Value">
      <summary>Gets a value that indicates whether load balancing support is enabled.</summary>
      <returns>true if load balancing support is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.MustRunInClientContextAttribute">
      <summary>Forces the attributed object to be created in the context of the creator, if possible. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" /> class, requiring creation of the object in the context of the creator.</summary>
    </member>
    <member name="M:System.EnterpriseServices.MustRunInClientContextAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.MustRunInClientContextAttribute" /> class, optionally not creating the object in the context of the creator.</summary>
      <param name="val">true to create the object in the context of the creator; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.MustRunInClientContextAttribute.Value">
      <summary>Gets a value that indicates whether the attributed object is to be created in the context of the creator.</summary>
      <returns>true if the object is to be created in the context of the creator; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ObjectPoolingAttribute">
      <summary>Enables and configures object pooling for a component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />, <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" />, and <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout" /> properties to their default values.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" /> property.</summary>
      <param name="enable">true to enable object pooling; otherwise, false. </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Boolean,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled" />, <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" />, and <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" /> properties.</summary>
      <param name="enable">true to enable object pooling; otherwise, false. </param>
      <param name="minPoolSize">The minimum pool size.</param>
      <param name="maxPoolSize">The maximum pool size.</param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize" /> and <see cref="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize" /> properties.</summary>
      <param name="minPoolSize">The minimum pool size. </param>
      <param name="maxPoolSize">The maximum pool size. </param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.AfterSaveChanges(System.Collections.Hashtable)">
      <summary>Called internally by the .NET Framework infrastructure while installing and configuring assemblies in the COM+ catalog.</summary>
      <returns>true if the method has made changes.</returns>
      <param name="info">A hash table that contains internal objects referenced by internal keys.</param>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.Apply(System.Collections.Hashtable)">
      <summary>Called internally by the .NET Framework infrastructure while applying the <see cref="T:System.EnterpriseServices.ObjectPoolingAttribute" /> class attribute to a serviced component.</summary>
      <returns>true if the method has made changes.</returns>
      <param name="info">A hash table that contains an internal object to which object pooling properties are applied, referenced by an internal key.</param>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout">
      <summary>Gets or sets the length of time to wait for an object to become available in the pool before throwing an exception. This value is in milliseconds.</summary>
      <returns>The time-out value in milliseconds.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.Enabled">
      <summary>Gets or sets a value that indicates whether object pooling is enabled.</summary>
      <returns>true if object pooling is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.EnterpriseServices.ObjectPoolingAttribute.IsValidTarget(System.String)">
      <summary>Called internally by the .NET Framework infrastructure while installing and configuring assemblies in the COM+ catalog.</summary>
      <returns>true if the attribute is applied to a serviced component class.</returns>
      <param name="s">A string generated by the .NET Framework infrastructure that is checked for a special value that indicates a serviced component.</param>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize">
      <summary>Gets or sets the value for the maximum size of the pool.</summary>
      <returns>The maximum number of objects in the pool.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize">
      <summary>Gets or sets the value for the minimum size of the pool.</summary>
      <returns>The minimum number of objects in the pool.</returns>
    </member>
    <member name="T:System.EnterpriseServices.PartitionOption">
      <summary>Indicates the context in which to run the COM+ partition.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.Ignore">
      <summary>The enclosed context runs in the Global Partition. <see cref="F:System.EnterpriseServices.PartitionOption.Ignore" /> is the default setting for <see cref="P:System.EnterpriseServices.ServiceConfig.PartitionOption" /> when <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> is set to <see cref="F:System.EnterpriseServices.InheritanceOption.Ignore" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.Inherit">
      <summary>The enclosed context runs in the current containing COM+ partition. This is the default setting for <see cref="P:System.EnterpriseServices.ServiceConfig.PartitionOption" /> when <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> is set to <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PartitionOption.New">
      <summary>The enclosed context runs in a COM+ partition that is different from the current containing partition.</summary>
    </member>
    <member name="T:System.EnterpriseServices.PrivateComponentAttribute">
      <summary>Identifies a component as a private component that is only seen and activated by components in the same application. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.PrivateComponentAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.PrivateComponentAttribute" /> class.</summary>
    </member>
    <member name="T:System.EnterpriseServices.PropertyLockMode">
      <summary>Specifies the mode for accessing shared properties in the shared property group manager.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.SetGet">
      <summary>Locks a property during a get or set, assuring that every get or set operation on a shared property is atomic.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyLockMode.Method">
      <summary>Locks all the properties in the shared property group for exclusive use by the caller, as long as the caller's current method is executing.</summary>
    </member>
    <member name="T:System.EnterpriseServices.PropertyReleaseMode">
      <summary>Specifies the release mode for the properties in the new shared property group.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Standard">
      <summary>When all clients have released their references on the property group, the property group is automatically destroyed. This is the default COM mode.</summary>
    </member>
    <member name="F:System.EnterpriseServices.PropertyReleaseMode.Process">
      <summary>The property group is not destroyed until the process in which it was created has terminated.</summary>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationConfig">
      <summary>Provides configuration information for installing assemblies into the COM+ catalog.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationConfig.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationConfig" /> class.</summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.Application">
      <summary>Gets or sets the name of the COM+ application in which the assembly is to be installed.</summary>
      <returns>The name of the COM+ application in which the assembly is to be installed.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.ApplicationRootDirectory">
      <summary>Gets or sets the name of the root directory of the application.</summary>
      <returns>The name of the root directory of the application.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.AssemblyFile">
      <summary>Gets or sets the file name of the assembly to install.</summary>
      <returns>The file name of the assembly to install.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.InstallationFlags">
      <summary>Gets or sets a flag that indicates how to install the assembly.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.InstallationFlags" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.Partition">
      <summary>Gets or sets the name of the COM+ partition.</summary>
      <returns>The name of the COM+ partition.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationConfig.TypeLibrary">
      <summary>Gets or sets the name of the output Type Library Exporter (Tlbexp.exe) file.</summary>
      <returns>The name of the output Type Library Exporter (Tlbexp.exe) file.</returns>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationErrorInfo">
      <summary>Retrieves extended error information about methods related to multiple COM+ objects. This also includes methods that install, import, and export COM+ applications and components. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode">
      <summary>Gets the error code for the object or file.</summary>
      <returns>The error code for the object or file.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorString">
      <summary>Gets the description of the <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode" />.</summary>
      <returns>The description of the <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.ErrorCode" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MajorRef">
      <summary>Gets the key value for the object that caused the error, if applicable.</summary>
      <returns>The key value for the object that caused the error, if applicable.</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.MinorRef">
      <summary>Gets a precise specification of the item that caused the error, such as a property name.</summary>
      <returns>A precise specification of the item, such as a property name, that caused the error. If multiple errors occurred, or this does not apply, <see cref="P:System.EnterpriseServices.RegistrationErrorInfo.MinorRef" /> returns the string "&lt;Invalid&gt;".</returns>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationErrorInfo.Name">
      <summary>Gets the name of the object or file that caused the error.</summary>
      <returns>The name of the object or file that caused the error.</returns>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationException">
      <summary>The exception that is thrown when a registration error is detected.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationException" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationException" /> class with a specified error message.</summary>
      <param name="msg">The message displayed to the client when the exception is thrown. </param>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationException" /> class with a specified error message and nested exception.</summary>
      <param name="msg">The message displayed to the client when the exception is thrown. </param>
      <param name="inner">The nested exception.</param>
    </member>
    <member name="P:System.EnterpriseServices.RegistrationException.ErrorInfo">
      <summary>Gets an array of <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" /> objects that describe registration errors.</summary>
      <returns>The array of <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" /> objects.</returns>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the error information in <see cref="T:System.EnterpriseServices.RegistrationErrorInfo" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains serialized object data. </param>
      <param name="ctx">The contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="info" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationHelper">
      <summary>Installs and configures assemblies in the COM+ catalog. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationHelper" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>Installs the named assembly in a COM+ application.</summary>
      <param name="assembly">The file name of the assembly to install. </param>
      <param name="application">The name of the COM+ application to install into. This parameter can be null. If the parameter is null and the assembly contains a <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, then the attribute is used. Otherwise, the name of the application is generated based on the name of the assembly, then is returned.</param>
      <param name="partition">The name of the partition. This parameter can be null. </param>
      <param name="tlb">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains null if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion. </param>
      <param name="installFlags">A bitwise combination of the <see cref="T:System.EnterpriseServices.InstallationFlags" /> values. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
      <summary>Installs the named assembly in a COM+ application.</summary>
      <param name="assembly">The file name of the assembly to install. </param>
      <param name="application">The name of the COM+ application to install into. This parameter can be null. If the parameter is null and the assembly contains a <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, then the attribute is used. Otherwise, the name of the application is generated based on the name of the assembly, then is returned.</param>
      <param name="tlb">The name of the output Type Library Exporter (Tlbexp.exe) file, or a string that contains null if the registration helper is expected to generate the name. The actual name used is placed in the parameter on call completion. </param>
      <param name="installFlags">A bitwise combination of the <see cref="T:System.EnterpriseServices.InstallationFlags" /> values. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)">
      <summary>Installs the named assembly in a COM+ application.</summary>
      <param name="regConfig">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifying the assembly to install. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)">
      <summary>Uninstalls the assembly from the given application.</summary>
      <param name="assembly">The file name of the assembly to uninstall. </param>
      <param name="application">If this name is not null, it is the name of the application that contains the components in the assembly. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)">
      <summary>Uninstalls the assembly from the given application.</summary>
      <param name="assembly">The file name of the assembly to uninstall. </param>
      <param name="application">If this name is not null, it is the name of the application that contains the components in the assembly. </param>
      <param name="partition">The name of the partition. This parameter can be null. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)">
      <summary>Uninstalls the assembly from the given application.</summary>
      <param name="regConfig">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identifying the assembly to uninstall. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.RegistrationHelperTx">
      <summary>Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>Installs the named assembly in the COM+ catalog using transactional semantics.</summary>
      <param name="assembly">The file name of the assembly to install.</param>
      <param name="application">Either the name of the COM+ application to install into or a string that contains null.</param>
      <param name="partition">Either the name of the partition or null.</param>
      <param name="tlb">Either the name of the output Type Library Exporter (Tlbexp.exe) file or null.</param>
      <param name="installFlags">A bitwise combination of the installation flags values.</param>
      <param name="sync">A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags,System.Object)">
      <summary>Installs the named assembly in the COM+ catalog using transactional semantics.</summary>
      <param name="assembly">The file name of the assembly to install.</param>
      <param name="application">Either the name of the COM+ application to install into or null.</param>
      <param name="tlb">Either the name of the output Type Library Exporter (Tlbexp.exe) file or null.</param>
      <param name="installFlags">A bitwise combination of the installation flags values.</param>
      <param name="sync">A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)">
      <summary>Installs a specified assembly in the COM+ catalog using transactional semantics.</summary>
      <param name="regConfig">Configuration information for installing an assembly into the COM+ catalog.</param>
      <param name="sync">A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.IsInTransaction">
      <summary>Gets a value indicating whether the current context for the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class instance is transactional.</summary>
      <returns>true if the current context for the <see cref="T:System.EnterpriseServices.RegistrationHelperTx" /> class instance is transactional; otherwise, false.</returns>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.Object)">
      <summary>Uninstalls an assembly from a COM+ application using transactional semantics.</summary>
      <param name="assembly">The file name of the assembly to uninstall.</param>
      <param name="application">Either the name of the COM+ application that contains the components in the assembly or null.</param>
      <param name="sync">A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssembly(System.String,System.String,System.String,System.Object)">
      <summary>Uninstalls an assembly from a COM+ application using transactional semantics.</summary>
      <param name="assembly">The file name of the assembly to uninstall.</param>
      <param name="application">Either the name of the COM+ application that contains the components in the assembly or null.</param>
      <param name="partition">Either the name of the partition or null.</param>
      <param name="sync">A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.RegistrationHelperTx.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@,System.Object)">
      <summary>Uninstalls a specified assembly from a COM+ application using transactional semantics.</summary>
      <param name="regConfig">Configuration information that specifies an assembly to uninstall from an application.</param>
      <param name="sync">A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.ResourcePool">
      <summary>Stores objects in the current transaction. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.#ctor(System.EnterpriseServices.ResourcePool.TransactionEndDelegate)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ResourcePool" /> class.</summary>
      <param name="cb">A <see cref="T:System.EnterpriseServices.ResourcePool.TransactionEndDelegate" />, that is called when a transaction is finished. All items currently stored in the transaction are handed back to the user through the delegate. </param>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.GetResource">
      <summary>Gets a resource from the current transaction.</summary>
      <returns>The resource object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ResourcePool.PutResource(System.Object)">
      <summary>Adds a resource to the current transaction.</summary>
      <returns>true if the resource object was added to the pool; otherwise, false.</returns>
      <param name="resource">The resource to add. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.ResourcePool.TransactionEndDelegate">
      <summary>Represents the method that handles the ending of a transaction.</summary>
      <param name="resource">The object that is passed back to the delegate. </param>
    </member>
    <member name="T:System.EnterpriseServices.SecureMethodAttribute">
      <summary>Ensures that the infrastructure calls through an interface for a method or for each method in a class when using the security service. Classes need to use interfaces to use security services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SecureMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SecureMethodAttribute" /> class.</summary>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallContext">
      <summary>Describes the chain of callers leading up to the current method call.</summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.Callers">
      <summary>Gets a <see cref="T:System.EnterpriseServices.SecurityCallers" /> object that describes the caller.</summary>
      <returns>The <see cref="T:System.EnterpriseServices.SecurityCallers" /> object that describes the caller.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">There is no security context. </exception>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.CurrentCall">
      <summary>Gets a <see cref="T:System.EnterpriseServices.SecurityCallContext" /> object that describes the security call context.</summary>
      <returns>The <see cref="T:System.EnterpriseServices.SecurityCallContext" /> object that describes the security call context.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.DirectCaller">
      <summary>Gets a <see cref="T:System.EnterpriseServices.SecurityIdentity" /> object that describes the direct caller of this method.</summary>
      <returns>A <see cref="T:System.EnterpriseServices.SecurityIdentity" /> value.</returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)">
      <summary>Verifies that the direct caller is a member of the specified role.</summary>
      <returns>true if the direct caller is a member of the specified role; otherwise, false.</returns>
      <param name="role">The specified role. </param>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled">
      <summary>Determines whether security checks are enabled in the current context.</summary>
      <returns>true if security checks are enabled in the current context; otherwise, false.</returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)">
      <summary>Verifies that the specified user is in the specified role.</summary>
      <returns>true if the specified user is a member of the specified role; otherwise, false.</returns>
      <param name="user">The specified user. </param>
      <param name="role">The specified role. </param>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel">
      <summary>Gets the MinAuthenticationLevel value from the ISecurityCallContext collection in COM+.</summary>
      <returns>The MinAuthenticationLevel value from the ISecurityCallContext collection in COM+.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.NumCallers">
      <summary>Gets the NumCallers value from the ISecurityCallContext collection in COM+.</summary>
      <returns>The NumCallers value from the ISecurityCallContext collection in COM+.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallContext.OriginalCaller">
      <summary>Gets a <see cref="T:System.EnterpriseServices.SecurityIdentity" /> that describes the original caller.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.SecurityIdentity" /> values.</returns>
    </member>
    <member name="T:System.EnterpriseServices.SecurityCallers">
      <summary>Provides an ordered collection of identities in the current call chain.</summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Count">
      <summary>Gets the number of callers in the chain.</summary>
      <returns>The number of callers in the chain.</returns>
    </member>
    <member name="M:System.EnterpriseServices.SecurityCallers.GetEnumerator">
      <summary>Retrieves the enumeration interface for the object.</summary>
      <returns>The enumerator interface for the ISecurityCallersColl collection.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityCallers.Item(System.Int32)">
      <summary>Gets the specified <see cref="T:System.EnterpriseServices.SecurityIdentity" /> item.</summary>
      <returns>A <see cref="T:System.EnterpriseServices.SecurityIdentity" /> object.</returns>
      <param name="idx">The item to access using an index number. </param>
    </member>
    <member name="T:System.EnterpriseServices.SecurityIdentity">
      <summary>Contains information that regards an identity in a COM+ call chain.</summary>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AccountName">
      <summary>Gets the name of the user described by this identity.</summary>
      <returns>The name of the user described by this identity.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationLevel">
      <summary>Gets the authentication level of the user described by this identity.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.AuthenticationOption" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.AuthenticationService">
      <summary>Gets the authentication service described by this identity.</summary>
      <returns>The authentication service described by this identity.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityIdentity.ImpersonationLevel">
      <summary>Gets the impersonation level of the user described by this identity.</summary>
      <returns>A <see cref="T:System.EnterpriseServices.ImpersonationLevelOption" /> value.</returns>
    </member>
    <member name="T:System.EnterpriseServices.SecurityRoleAttribute">
      <summary>Configures a role for an application or component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" /> property.</summary>
      <param name="role">A security role for the application, component, interface, or method. </param>
    </member>
    <member name="M:System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SecurityRoleAttribute" /> class and sets the <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.Role" /> and <see cref="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess" /> properties.</summary>
      <param name="role">A security role for the application, component, interface, or method. </param>
      <param name="everyone">true to require that the newly created role have the Everyone user group added as a user; otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Description">
      <summary>Gets or sets the role description.</summary>
      <returns>The description for the role.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.Role">
      <summary>Gets or sets the security role.</summary>
      <returns>The security role applied to an application, component, interface, or method.</returns>
    </member>
    <member name="P:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess">
      <summary>Sets a value indicating whether to add the Everyone user group as a user.</summary>
      <returns>true to require that a newly created role have the Everyone user group added as a user (roles that already exist on the application are not modified); otherwise, false to suppress adding the Everyone user group as a user.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ServiceConfig">
      <summary>Specifies and configures the services that are to be active in the domain which is entered when calling <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> or creating an <see cref="T:System.EnterpriseServices.Activity" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServiceConfig.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServiceConfig" /> class, setting the properties to configure the desired services.</summary>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform. </exception>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Binding">
      <summary>Gets or sets the binding option, which indicates whether all work submitted by the activity is to be bound to only one single-threaded apartment (STA).</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.BindingOption" /> values. The default is <see cref="F:System.EnterpriseServices.BindingOption.NoBinding" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.BringYourOwnSystemTransaction">
      <summary>Gets or sets a <see cref="T:System.Transactions.Transaction" /> that represents an existing transaction that supplies the settings used to run the transaction identified by <see cref="T:System.EnterpriseServices.ServiceConfig" />.</summary>
      <returns>A <see cref="T:System.Transactions.Transaction" />. The default is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.BringYourOwnTransaction">
      <summary>Gets or sets a <see cref="T:System.EnterpriseServices.ITransaction" /> that represents an existing transaction that supplies the settings used to run the transaction identified by <see cref="T:System.EnterpriseServices.ServiceConfig" />.</summary>
      <returns>An <see cref="T:System.EnterpriseServices.ITransaction" />. The default is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.COMTIIntrinsicsEnabled">
      <summary>Gets or sets a value that indicates whether COM Transaction Integrator (COMTI) intrinsics are enabled.</summary>
      <returns>true if COMTI intrinsics are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.IISIntrinsicsEnabled">
      <summary>Gets or sets a value that indicates whether Internet Information Services (IIS) intrinsics are enabled.</summary>
      <returns>true if IIS intrinsics are enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Inheritance">
      <summary>Gets or sets a value that indicates whether to construct a new context based on the current context or to create a new context based solely on the information in <see cref="T:System.EnterpriseServices.ServiceConfig" />.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.InheritanceOption" /> values. The default is <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.IsolationLevel">
      <summary>Gets or sets the isolation level of the transaction.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.TransactionIsolationLevel" /> values. The default is <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Any" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.PartitionId">
      <summary>Gets or sets the GUID for the COM+ partition that is to be used.</summary>
      <returns>The GUID for the partition to be used. The default is a zero GUID.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.PartitionOption">
      <summary>Gets or sets a value that indicates how partitions are used for the enclosed work.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.PartitionOption" /> values. The default is <see cref="F:System.EnterpriseServices.PartitionOption.Ignore" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsDirectory">
      <summary>Gets or sets the directory for the side-by-side assembly for the enclosed work.</summary>
      <returns>The name of the directory to be used for the side-by-side assembly. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsName">
      <summary>Gets or sets the file name of the side-by-side assembly for the enclosed work.</summary>
      <returns>The file name of the side-by-side assembly. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.SxsOption">
      <summary>Gets or sets a value that indicates how to configure the side-by-side assembly.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.SxsOption" /> values. The default is <see cref="F:System.EnterpriseServices.SxsOption.Ignore" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Synchronization">
      <summary>Gets or sets a value in that indicates the type of automatic synchronization requested by the component.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.SynchronizationOption" /> values. The default is <see cref="F:System.EnterpriseServices.SynchronizationOption.Disabled" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.ThreadPool">
      <summary>Gets or sets a value that indicates the thread pool which runs the work submitted by the activity.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.ThreadPoolOption" /> values. The default is <see cref="F:System.EnterpriseServices.ThreadPoolOption.None" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TipUrl">
      <summary>Gets or sets the Transaction Internet Protocol (TIP) URL that allows the enclosed code to run in an existing transaction.</summary>
      <returns>A TIP URL. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingAppName">
      <summary>Gets or sets a text string that corresponds to the application ID under which tracker information is reported.</summary>
      <returns>The application ID under which tracker information is reported. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingComponentName">
      <summary>Gets or sets a text string that corresponds to the context name under which tracker information is reported.</summary>
      <returns>The context name under which tracker information is reported. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TrackingEnabled">
      <summary>Gets or sets a value that indicates whether tracking is enabled.</summary>
      <returns>true if tracking is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.Transaction">
      <summary>Gets or sets a value that indicates how transactions are used in the enclosed work.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.TransactionOption" /> values. The default is <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TransactionDescription">
      <summary>Gets or sets the name that is used when transaction statistics are displayed.</summary>
      <returns>The name used when transaction statistics are displayed. The default value is null.</returns>
    </member>
    <member name="P:System.EnterpriseServices.ServiceConfig.TransactionTimeout">
      <summary>Gets or sets the transaction time-out for a new transaction.</summary>
      <returns>The transaction time-out, in seconds.</returns>
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponent">
      <summary>Represents the base class of all classes using COM+ services.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Activate">
      <summary>Called by the infrastructure when the object is created or allocated from a pool. Override this method to add custom initialization code to objects.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
      <summary>This method is called by the infrastructure before the object is put back into the pool. Override this method to vote on whether the object is put back into the pool.</summary>
      <returns>true if the serviced component can be pooled; otherwise, false.</returns>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
      <summary>Called by the infrastructure just after the constructor is called, passing in the constructor string. Override this method to make use of the construction string value.</summary>
      <param name="s">The construction string. </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Deactivate">
      <summary>Called by the infrastructure when the object is about to be deactivated. Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.EnterpriseServices.ServicedComponent" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; otherwise, false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
      <summary>Finalizes the object and removes the associated COM+ reference.</summary>
      <param name="sc">The object to dispose. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
      <summary>Ensures that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's done bit is set to true after a remote method invocation</summary>
      <returns>A string converted from a response object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</returns>
      <param name="s">A string to be converted into a request object that implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
      <summary>Does not ensure that, in the COM+ context, the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class object's done bit is set to true after a remote method invocation.</summary>
      <returns>A string converted from a response object implementing the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</returns>
      <param name="s">A string to be converted into a request object implementing the <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
      <summary>Obtains information about the <see cref="T:System.EnterpriseServices.ServicedComponent" /> class instance.</summary>
      <param name="infoMask">A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</param>
      <param name="infoArray">A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</param>
    </member>
    <member name="T:System.EnterpriseServices.ServicedComponentException">
      <summary>The exception that is thrown when an error is detected in a serviced component.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class with a specified error message.</summary>
      <param name="message">The message displayed to the client when the exception is thrown. </param>
    </member>
    <member name="M:System.EnterpriseServices.ServicedComponentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.ServicedComponentException" /> class.</summary>
      <param name="message">The message displayed to the client when the exception is thrown. </param>
      <param name="innerException">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception. </param>
    </member>
    <member name="T:System.EnterpriseServices.ServiceDomain">
      <summary>Allows a code segment identified by <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> and <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> to run in its own context and behave as if it were a method that is called on an object created within the context. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)">
      <summary>Creates the context specified by the <see cref="T:System.EnterpriseServices.ServiceConfig" /> object and pushes it onto the context stack to become the current context.</summary>
      <param name="cfg">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used within the enclosed code. </param>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.ServiceDomain.Leave">
      <summary>Triggers the server and then the client side policies as if a method call were returning. The current context is then popped from the context stack, and the context that was running when <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> was called becomes the current context.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.TransactionStatus" /> values.</returns>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.SharedProperty">
      <summary>Accesses a shared property. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.EnterpriseServices.SharedProperty.Value">
      <summary>Gets or sets the value of the shared property.</summary>
      <returns>The value of the shared property.</returns>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroup">
      <summary>Represents a collection of shared properties. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreateProperty(System.String,System.Boolean@)">
      <summary>Creates a property with the given name.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</returns>
      <param name="name">The name of the new property. </param>
      <param name="fExists">Determines whether the property exists. Set to true on return if the property exists. </param>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.CreatePropertyByPosition(System.Int32,System.Boolean@)">
      <summary>Creates a property at the given position.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</returns>
      <param name="position">The index of the new property </param>
      <param name="fExists">Determines whether the property exists. Set to true on return if the property exists. </param>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.Property(System.String)">
      <summary>Returns the property with the given name.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</returns>
      <param name="name">The name of requested property. </param>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroup.PropertyByPosition(System.Int32)">
      <summary>Returns the property at the given position.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedProperty" />.</returns>
      <param name="position">The index of the property. </param>
    </member>
    <member name="T:System.EnterpriseServices.SharedPropertyGroupManager">
      <summary>Controls access to shared property groups. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SharedPropertyGroupManager" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.CreatePropertyGroup(System.String,System.EnterpriseServices.PropertyLockMode@,System.EnterpriseServices.PropertyReleaseMode@,System.Boolean@)">
      <summary>Finds or creates a property group with the given information.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />.</returns>
      <param name="name">The name of requested property. </param>
      <param name="dwIsoMode">One of the <see cref="T:System.EnterpriseServices.PropertyLockMode" /> values. See the Remarks section for more information. </param>
      <param name="dwRelMode">One of the <see cref="T:System.EnterpriseServices.PropertyReleaseMode" /> values. See the Remarks section for more information. </param>
      <param name="fExist">When this method returns, contains true if the property already existed; false if the call created the property. </param>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.GetEnumerator">
      <summary>Retrieves the enumeration interface for the collection.</summary>
      <returns>The enumerator interface for the collection.</returns>
    </member>
    <member name="M:System.EnterpriseServices.SharedPropertyGroupManager.Group(System.String)">
      <summary>Finds the property group with the given name.</summary>
      <returns>The requested <see cref="T:System.EnterpriseServices.SharedPropertyGroup" />.</returns>
      <param name="name">The name of requested property. </param>
    </member>
    <member name="T:System.EnterpriseServices.SxsOption">
      <summary>Indicates how side-by-side assemblies are configured for <see cref="T:System.EnterpriseServices.ServiceConfig" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.Ignore">
      <summary>Side-by-side assemblies are not used within the enclosed context. <see cref="F:System.EnterpriseServices.SxsOption.Ignore" /> is the default setting for <see cref="P:System.EnterpriseServices.ServiceConfig.SxsOption" /> when <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> is set to <see cref="F:System.EnterpriseServices.InheritanceOption.Ignore" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.Inherit">
      <summary>The current side-by-side assembly of the enclosed context is used. <see cref="F:System.EnterpriseServices.SxsOption.Inherit" /> is the default setting for <see cref="P:System.EnterpriseServices.ServiceConfig.SxsOption" /> when <see cref="P:System.EnterpriseServices.ServiceConfig.Inheritance" /> is set to <see cref="F:System.EnterpriseServices.InheritanceOption.Inherit" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SxsOption.New">
      <summary>A new side-by-side assembly is created for the enclosed context.</summary>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationAttribute">
      <summary>Sets the synchronization value of the component. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SynchronizationAttribute" /> class with the default <see cref="T:System.EnterpriseServices.SynchronizationOption" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.SynchronizationAttribute.#ctor(System.EnterpriseServices.SynchronizationOption)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.SynchronizationAttribute" /> class with the specified <see cref="T:System.EnterpriseServices.SynchronizationOption" />.</summary>
      <param name="val">One of the <see cref="T:System.EnterpriseServices.SynchronizationOption" /> values. </param>
    </member>
    <member name="P:System.EnterpriseServices.SynchronizationAttribute.Value">
      <summary>Gets the current setting of the <see cref="P:System.EnterpriseServices.SynchronizationAttribute.Value" /> property.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.SynchronizationOption" /> values. The default is Required.</returns>
    </member>
    <member name="T:System.EnterpriseServices.SynchronizationOption">
      <summary>Specifies the type of automatic synchronization requested by the component.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Disabled">
      <summary>COM+ ignores the synchronization requirements of the component when determining context for the object.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.NotSupported">
      <summary>An object with this value never participates in synchronization, regardless of the status of its caller. This setting is only available for components that are non-transactional and do not use just-in-time (JIT) activation.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Supported">
      <summary>An object with this value participates in synchronization, if it exists.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.Required">
      <summary>Ensures that all objects created from the component are synchronized.</summary>
    </member>
    <member name="F:System.EnterpriseServices.SynchronizationOption.RequiresNew">
      <summary>An object with this value must participate in a new synchronization where COM+ manages contexts and apartments on behalf of all components involved in the call.</summary>
    </member>
    <member name="T:System.EnterpriseServices.ThreadPoolOption">
      <summary>Indicates the thread pool in which the work, submitted by <see cref="T:System.EnterpriseServices.Activity" />, runs.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.None">
      <summary>No thread pool is used. If this value is used to configure a <see cref="T:System.EnterpriseServices.ServiceConfig" /> that is passed to an <see cref="T:System.EnterpriseServices.Activity" />, an exception is thrown.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.Inherit">
      <summary>The same type of thread pool apartment as the caller's thread apartment is used.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.STA">
      <summary>A single-threaded apartment (STA) is used.</summary>
    </member>
    <member name="F:System.EnterpriseServices.ThreadPoolOption.MTA">
      <summary>A multithreaded apartment (MTA) is used.</summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionAttribute">
      <summary>Specifies the type of transaction that is available to the attributed object. Permissible values are members of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration.</summary>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.TransactionAttribute" /> class, setting the component's requested transaction type to <see cref="F:System.EnterpriseServices.TransactionOption.Required" />.</summary>
    </member>
    <member name="M:System.EnterpriseServices.TransactionAttribute.#ctor(System.EnterpriseServices.TransactionOption)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.TransactionAttribute" /> class, specifying the transaction type.</summary>
      <param name="val">The specified transaction type, a <see cref="T:System.EnterpriseServices.TransactionOption" /> value. </param>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Isolation">
      <summary>Gets or sets the transaction isolation level.</summary>
      <returns>One of the <see cref="T:System.EnterpriseServices.TransactionIsolationLevel" /> values.</returns>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Timeout">
      <summary>Gets or sets the time-out for this transaction.</summary>
      <returns>The transaction time-out in seconds.</returns>
    </member>
    <member name="P:System.EnterpriseServices.TransactionAttribute.Value">
      <summary>Gets the <see cref="T:System.EnterpriseServices.TransactionOption" /> value for the transaction, optionally disabling the transaction service.</summary>
      <returns>The specified transaction type, a <see cref="T:System.EnterpriseServices.TransactionOption" /> value.</returns>
    </member>
    <member name="T:System.EnterpriseServices.TransactionIsolationLevel">
      <summary>Specifies the value of the <see cref="T:System.EnterpriseServices.TransactionAttribute" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Any">
      <summary>The isolation level for the component is obtained from the calling component's isolation level. If this is the root component, the isolation level used is <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadUncommitted">
      <summary>Shared locks are issued and no exclusive locks are honored.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.ReadCommitted">
      <summary>Shared locks are held while the data is being read to avoid reading modified data, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.RepeatableRead">
      <summary>Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads, but phantom rows are still possible.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable">
      <summary>Prevents updating or inserting until the transaction is complete.</summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionOption">
      <summary>Specifies the automatic transaction type requested by the component.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Disabled">
      <summary>Ignores any transaction in the current context.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.NotSupported">
      <summary>Creates the component in a context with no governing transaction.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Supported">
      <summary>Shares a transaction, if one exists.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.Required">
      <summary>Shares a transaction, if one exists, and creates a new transaction if necessary.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionOption.RequiresNew">
      <summary>Creates the component with a new transaction, regardless of the state of the current context.</summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionStatus">
      <summary>Indicates the transaction status.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Commited">
      <summary>The transaction has committed.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.LocallyOk">
      <summary>The transaction has neither committed nor aborted.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.NoTransaction">
      <summary>No transactions are being used through <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Aborting">
      <summary>The transaction is in the process of aborting.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionStatus.Aborted">
      <summary>The transaction is aborted.</summary>
    </member>
    <member name="T:System.EnterpriseServices.TransactionVote">
      <summary>Specifies the values allowed for transaction outcome voting.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Commit">
      <summary>Commits the current transaction.</summary>
    </member>
    <member name="F:System.EnterpriseServices.TransactionVote.Abort">
      <summary>Aborts the current transaction.</summary>
    </member>
    <member name="T:System.EnterpriseServices.XACTTRANSINFO">
      <summary>Represents a structure used in the <see cref="T:System.EnterpriseServices.ITransaction" /> interface.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupported">
      <summary>Specifies zero. This field is reserved.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfRMSupportedRetaining">
      <summary>Specifies zero. This field is reserved.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupported">
      <summary>Represents a bitmask that indicates which grfTC flags this transaction implementation supports.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.grfTCSupportedRetaining">
      <summary>Specifies zero. This field is reserved.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoFlags">
      <summary>Specifies zero. This field is reserved.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.isoLevel">
      <summary>Represents the isolation level associated with this transaction object. ISOLATIONLEVEL_UNSPECIFIED indicates that no isolation level was specified.</summary>
    </member>
    <member name="F:System.EnterpriseServices.XACTTRANSINFO.uow">
      <summary>Represents the unit of work associated with this transaction.</summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute">
      <summary>Enables Compensating Resource Manger (CRM) on the tagged application.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" /> class, setting the <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" /> property to true.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute" /> class, optionally setting the <see cref="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value" /> property to false.</summary>
      <param name="val">true to enable Compensating Resource Manager (CRM); otherwise, false. </param>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute.Value">
      <summary>Enables or disables Compensating Resource Manager (CRM) on the tagged application.</summary>
      <returns>true if CRM is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Clerk">
      <summary>Writes records of transactional actions to a log.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.String,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> class.</summary>
      <param name="compensator">The name of the compensator. </param>
      <param name="description">The description of the compensator. </param>
      <param name="flags">A bitwise combination of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> values. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.#ctor(System.Type,System.String,System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> class.</summary>
      <param name="compensator">A type that represents the compensator. </param>
      <param name="description">The description of the compensator. </param>
      <param name="flags">A bitwise combination of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions" /> values. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceLog">
      <summary>Forces all log records to disk.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForceTransactionToAbort">
      <summary>Performs an immediate abort call on the transaction.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.ForgetLogRecord">
      <summary>Does not deliver the last log record that was written by this instance of this interface.</summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.LogRecordCount">
      <summary>Gets the number of log records.</summary>
      <returns>The number of log records.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Clerk.TransactionUOW">
      <summary>Gets a value representing the transaction unit of work (UOW).</summary>
      <returns>A GUID representing the UOW.</returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Clerk.WriteLogRecord(System.Object)">
      <summary>Writes unstructured log records to the log.</summary>
      <param name="record">The log record to write to the log. </param>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo">
      <summary>Contains information describing an active Compensating Resource Manager (CRM) Clerk object.</summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.ActivityId">
      <summary>Gets the activity ID of the current Compensating Resource Manager (CRM) Worker.</summary>
      <returns>Gets the activity ID of the current Compensating Resource Manager (CRM) Worker.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Clerk">
      <summary>Gets <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> for the current Clerk.</summary>
      <returns>
        <see cref="F:System.Runtime.InteropServices.UnmanagedType.IUnknown" /> for the current Clerk.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Compensator">
      <summary>Gets the ProgId of the Compensating Resource Manager (CRM) Compensator for the current CRM Clerk.</summary>
      <returns>The ProgId of the CRM Compensator for the current CRM Clerk.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.Description">
      <summary>Gets the description of the Compensating Resource Manager (CRM) Compensator for the current CRM Clerk. The description string is the string that was provided by the ICrmLogControl::RegisterCompensator method.</summary>
      <returns>The description of the CRM Compensator for the current CRM Clerk.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.InstanceId">
      <summary>Gets the instance class ID (CLSID) of the current Compensating Resource Manager (CRM) Clerk.</summary>
      <returns>The instance CLSID of the current CRM Clerk.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo.TransactionUOW">
      <summary>Gets the unit of work (UOW) of the transaction for the current Compensating Resource Manager (CRM) Clerk.</summary>
      <returns>The UOW of the transaction for the current CRM Clerk.</returns>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor">
      <summary>Contains a snapshot of all Clerks active in the process.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" /> class.</summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Count">
      <summary>Gets the count of the Clerk monitors in the Compensating Resource Manager (CRM) monitor collection.</summary>
      <returns>The number of Clerk monitors in the CRM monitor collection.</returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.GetEnumerator">
      <summary>Returns the enumeration of the clerks in the Compensating Resource Manager (CRM) monitor collection.</summary>
      <returns>An enumerator describing the clerks in the collection.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> object for this <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />.</summary>
      <returns>The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> object for this <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />.</returns>
      <param name="index">The integer index that identifies the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />. </param>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Item(System.String)">
      <summary>Gets the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> object for this <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />.</summary>
      <returns>The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkInfo" /> object for this <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />.</returns>
      <param name="index">The numeric index that identifies the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor" />. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor.Populate">
      <summary>Gets the Clerks collection object, which is a snapshot of the current state of the Clerks.</summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.Compensator">
      <summary>Represents the base class for all Compensating Resource Manager (CRM) Compensators.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Compensator" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>Delivers a log record to the Compensating Resource Manager (CRM) Compensator during the abort phase.</summary>
      <returns>true if the delivered record should be forgotten; otherwise, false.</returns>
      <param name="rec">The log record to be delivered. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the abort phase of the transaction completion, and the upcoming delivery of records.</summary>
      <param name="fRecovery">true to begin abort phase; otherwise, false. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the commit phase of the transaction completion and the upcoming delivery of records.</summary>
      <param name="fRecovery">true to begin commit phase; otherwise, false. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator of the prepare phase of the transaction completion and the upcoming delivery of records.</summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk">
      <summary>Gets a value representing the Compensating Resource Manager (CRM) <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</summary>
      <returns>The <see cref="T:System.EnterpriseServices.CompensatingResourceManager.Clerk" /> object.</returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>Delivers a log record in forward order during the commit phase.</summary>
      <returns>true if the delivered record should be forgotten; otherwise, false.</returns>
      <param name="rec">The log record to forward. </param>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has received all the log records available during the abort phase.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has delivered all the log records available during the commit phase.</summary>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare">
      <summary>Notifies the Compensating Resource Manager (CRM) Compensator that it has had all the log records available during the prepare phase.</summary>
      <returns>true if successful; otherwise, false.</returns>
    </member>
    <member name="M:System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
      <summary>Delivers a log record in forward order during the prepare phase.</summary>
      <returns>true if the delivered record should be forgotten; otherwise, false.</returns>
      <param name="rec">The log record to forward. </param>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions">
      <summary>Specifies flags that control which phases of transaction completion should be received by the Compensating Resource Manager (CRM) Compensator, and whether recovery should fail if questionable transactions remain after recovery has been attempted.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.PreparePhase">
      <summary>Represents the prepare phase.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.CommitPhase">
      <summary>Represents the commit phase.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AbortPhase">
      <summary>Represents the abort phase.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.AllPhases">
      <summary>Represents all phases.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.CompensatorOptions.FailIfInDoubtsRemain">
      <summary>Fails if in-doubt transactions remain after recovery has been attempted.</summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecord">
      <summary>Represents an unstructured log record delivered as a COM+ CrmLogRecordRead structure. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Flags">
      <summary>Gets a value that indicates when the log record was written.</summary>
      <returns>A bitwise combination of the <see cref="T:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags" /> values which provides information about when this record was written.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Record">
      <summary>Gets the log record user data.</summary>
      <returns>A single BLOB that contains the user data.</returns>
    </member>
    <member name="P:System.EnterpriseServices.CompensatingResourceManager.LogRecord.Sequence">
      <summary>The sequence number of the log record.</summary>
      <returns>An integer value that specifies the sequence number of the log record.</returns>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags">
      <summary>Describes the origin of a Compensating Resource Manager (CRM) log record.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ForgetTarget">
      <summary>Indicates the delivered record should be forgotten.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringPrepare">
      <summary>Log record was written during prepare.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringCommit">
      <summary>Log record was written during commit.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringAbort">
      <summary>Log record was written during abort.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDurringRecovery">
      <summary>Log record was written during recovery.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.WrittenDuringReplay">
      <summary>Log record was written during replay.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.LogRecordFlags.ReplayInProgress">
      <summary>Log record was written when replay was in progress.</summary>
    </member>
    <member name="T:System.EnterpriseServices.CompensatingResourceManager.TransactionState">
      <summary>Specifies the state of the current Compensating Resource Manager (CRM) transaction.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Active">
      <summary>The transaction is active.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Committed">
      <summary>The transaction is commited.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Aborted">
      <summary>The transaction is aborted.</summary>
    </member>
    <member name="F:System.EnterpriseServices.CompensatingResourceManager.TransactionState.Indoubt">
      <summary>The transaction is in-doubt.</summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.AppDomainHelper">
      <summary>Switches into the given application domain, which the object should be bound to, and does a callback on the given function.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AppDomainHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.AppDomainHelper" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AppDomainHelper.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.ComponentModel.Component" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.AssemblyLocator">
      <summary>Locates an assembly and returns information about its modules.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.AssemblyLocator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.AssemblyLocator" /> class.</summary>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClientRemotingConfig">
      <summary>Defines a static <see cref="M:System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> method that creates a client remoting configuration file for a client type library.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ClientRemotingConfig" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a client remoting configuration file for a client type library in a SOAP-enabled COM+ application.</summary>
      <returns>true if the client remoting configuration file was successfully created; otherwise false.</returns>
      <param name="DestinationDirectory">The folder in which to create the configuration file.</param>
      <param name="VRoot">The name of the virtual root.</param>
      <param name="BaseUrl">The base URL that contains the virtual root.</param>
      <param name="AssemblyName">The display name of the assembly that contains common language runtime (CLR) metadata corresponding to the type library.</param>
      <param name="TypeName">The fully qualified name of the assembly that contains CLR metadata corresponding to the type library.</param>
      <param name="ProgId">The programmatic identifier of the class.</param>
      <param name="Mode">The activation mode.</param>
      <param name="Transport">Not used. Specify null for this parameter.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ClrObjectFactory">
      <summary>Activates SOAP-enabled COM+ application proxies from a client.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the assembly's configuration file.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> that represents the type, with culture, arguments, and binding and activation attributes set to null, or null if the <paramref name="TypeName" /> parameter is not found.</returns>
      <param name="AssemblyName">The name of the assembly to activate. </param>
      <param name="TypeName">The name of the type to activate. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The class is not registered. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the remote assembly's mailbox. Currently not implemented; throws a <see cref="T:System.Runtime.InteropServices.COMException" /> if called.</summary>
      <returns>This method throws an exception if called.</returns>
      <param name="Mailbox">A mailbox on the Web service. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">Simple Mail Transfer Protocol (SMTP) is not implemented. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to null, or null if the assembly identified by the <paramref name="VrootUrl" /> parameter is not found.</returns>
      <param name="VrootUrl">The virtual root URL of the object to be activated. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The thread token could not be opened. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to null, or null if the assembly identified by the <paramref name="WsdlUrl" /> parameter is not found.</returns>
      <param name="WsdlUrl">The WSDL URL of the Web service. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The thread token could not be opened. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ComManagedImportUtil">
      <summary>Identifies and installs components in the COM+ catalog.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)">
      <summary>Gets the component information from the assembly.</summary>
      <param name="assemblyPath">The path to the assembly. </param>
      <param name="numComponents">When this method returns, this parameter contains the number of components in the assembly. </param>
      <param name="componentInfo">When this method returns, this parameter contains the information about the components. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> is an empty string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.-or- The system could not retrieve the absolute path. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permissions. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblyPath" /> contains a colon (":"). </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)">
      <summary>Installs an assembly into a COM+ application.</summary>
      <param name="asmpath">The path for the assembly. </param>
      <param name="parname">The COM+ partition name. </param>
      <param name="appname">The COM+ application name. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ComSoapPublishError">
      <summary>Error handler for publishing SOAP-enabled services in COM+ applications.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComSoapPublishError.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ComSoapPublishError" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ComSoapPublishError.Report(System.String)">
      <summary>Writes to an event log an error encountered while publishing SOAP-enabled COM interfaces in COM+ applications.</summary>
      <param name="s">An error message to be written to the event log.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.GenerateMetadata">
      <summary>Generates common language runtime (CLR) metadata for a COM+ component.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.GenerateMetadata" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)">
      <summary>Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.</summary>
      <returns>The generated assembly name; otherwise, an empty string if the inputs are invalid.</returns>
      <param name="strSrcTypeLib">The name of the type library for which to generate an assembly.</param>
      <param name="outPath">The folder in which to generate an assembly or to locate an already existing assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)">
      <summary>Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.</summary>
      <returns>The generated assembly name; otherwise, an empty string if the inputs are invalid.</returns>
      <param name="strSrcTypeLib">The name of the type library for which to generate an assembly.</param>
      <param name="outPath">The folder in which to generate an assembly or to locate an already existing assembly.</param>
      <param name="PublicKey">A public key used to import type library information into an assembly.</param>
      <param name="KeyPair">A strong-named key pair used to sign the generated assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)">
      <summary>Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.</summary>
      <returns>The generated assembly name; otherwise, an empty string if the inputs are invalid.</returns>
      <param name="strSrcTypeLib">The name of the type library for which to generate an assembly.</param>
      <param name="outPath">The folder in which to generate an assembly or to locate an already existing assembly.</param>
      <param name="InstallGac">Ignored. </param>
      <param name="Error">A string to which an error message can be written.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])">
      <summary>Searches for a specified file in a specified path.</summary>
      <returns>If the search succeeds, the return value is the length of the string copied to <paramref name="buffer" />. If the search fails, the return value is 0.</returns>
      <param name="path">The path to be searched for the file.</param>
      <param name="fileName">The name of the file for which to search.</param>
      <param name="extension">An extension to be added to the file name when searching for the file.</param>
      <param name="numBufferChars">The size of the buffer that receives the valid path and file name.</param>
      <param name="buffer">The buffer that receives the path and file name of the file found.</param>
      <param name="filePart">The variable that receives the address of the last component of the valid path and file name.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IClrObjectFactory">
      <summary>Activates SOAP-enabled COM+ application proxies from a client.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the assembly's configuration file.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to null, or null if the <paramref name="type" /> parameter is not found.</returns>
      <param name="assembly">The name of the assembly to activate. </param>
      <param name="type">The name of the type to activate. </param>
      <param name="mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The class is not registered. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the remote assembly's mailbox. Currently not implemented; throws a <see cref="T:System.Runtime.InteropServices.COMException" /> if called.</summary>
      <returns>This method throws an exception if called.</returns>
      <param name="Mailbox">A mailbox on the Web service. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Runtime.InteropServices.COMException">Simple Mail Transfer Protocol (SMTP) is not implemented. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to null, or null if the assembly identified by the <paramref name="VrootUrl" /> parameter is not found.</returns>
      <param name="VrootUrl">The virtual root URL of the remote object. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The thread token could not be opened. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)">
      <summary>Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.</summary>
      <returns>An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to null, or null if the assembly identified by the <paramref name="WsdlUrl" /> parameter is not found.</returns>
      <param name="WsdlUrl">The WSDL URL of the Web service. </param>
      <param name="Mode">Not used. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">The thread token could not be opened. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComManagedImportUtil">
      <summary>Identifies and installs components in the COM+ catalog.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)">
      <summary>Gets the component information from the assembly.</summary>
      <param name="assemblyPath">The path to the assembly. </param>
      <param name="numComponents">When this method returns, this parameter contains the number of components in the assembly. </param>
      <param name="componentInfo">When this method returns, this parameter contains the information about the components. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> is an empty string (""), contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.-or- The system could not retrieve the absolute path. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permissions. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="assemblyPath" /> contains a colon (":"). </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)">
      <summary>Installs an assembly into a COM+ application.</summary>
      <param name="filename">The path for the assembly. </param>
      <param name="parname">The COM+ partition name. </param>
      <param name="appname">The COM+ application name. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapIISVRoot">
      <summary>Interface definition for creating and deleting Internet Information Services (IIS) 6.0 virtual roots.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Create(System.String,System.String,System.String,System.String@)">
      <summary>Creates an Internet Information Services (IIS) virtual root.</summary>
      <param name="RootWeb">The root Web server.</param>
      <param name="PhysicalDirectory">The physical path of the virtual root, which corresponds to <paramref name="PhysicalPath" /> from the <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> method.</param>
      <param name="VirtualDirectory">The name of the virtual root, which corresponds to <paramref name="VirtualRoot" /> from the <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> method.</param>
      <param name="Error">A string to which an error message can be written.</param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapIISVRoot.Delete(System.String,System.String,System.String,System.String@)">
      <summary>Deletes an Internet Information Services (IIS) virtual root.</summary>
      <param name="RootWeb">The root Web server.</param>
      <param name="PhysicalDirectory">The physical path of the virtual root.</param>
      <param name="VirtualDirectory">The name of the virtual root.</param>
      <param name="Error">A string to which an error message can be written.</param>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapMetadata">
      <summary>Specifies methods for generating common language runtime (CLR) metadata for a COM+ component.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)">
      <summary>Generates an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.</summary>
      <returns>The generated assembly name.</returns>
      <param name="SrcTypeLibFileName">The name of the type library for which to generate an assembly.</param>
      <param name="OutPath">The folder in which to generate an assembly.</param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)">
      <summary>Generates an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.</summary>
      <returns>The generated assembly name.</returns>
      <param name="SrcTypeLibFileName">The name of the type library for which to generate an assembly.</param>
      <param name="OutPath">The folder in which to generate an assembly.</param>
      <param name="InstallGac">A flag that indicates whether to install the assembly in the global assembly cache.</param>
      <param name="Error">A string to which an error message can be written.</param>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IComSoapPublisher">
      <summary>Publishes COM interfaces for SOAP-enabled COM+ applications.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP-enabled COM+ application mailbox at a specified URL. Not fully implemented.</summary>
      <param name="RootMailServer">The URL for the root mail server. </param>
      <param name="MailBox">The mailbox to create. </param>
      <param name="SmtpName">When this method returns, this parameter contains the name of the Simple Mail Transfer Protocol (SMTP) server containing the mailbox. </param>
      <param name="Domain">When this method returns, this parameter contains the domain of the SMTP server. </param>
      <param name="PhysicalPath">When this method returns, this parameter contains the file system path for the mailbox. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP-enabled COM+ application virtual root.</summary>
      <param name="Operation">The operation to perform. </param>
      <param name="FullUrl">The complete URL address for the virtual root. </param>
      <param name="BaseUrl">When this method returns, this parameter contains the base URL address. </param>
      <param name="VirtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <param name="PhysicalPath">When this method returns, this parameter contains the file path for the virtual root. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- The caller does not have permission to access Domain Name System (DNS) information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="FullUrl" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving the local host name. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="FullUrl" /> is empty.-or- The scheme specified in <paramref name="FullUrl" /> is invalid.-or- <paramref name="FullUrl" /> contains more than two consecutive slashes.-or- The password specified in <paramref name="FullUrl" /> is invalid.-or- The host name specified in <paramref name="FullUrl" /> is invalid.-or- The file name specified in <paramref name="FullUrl" /> is invalid. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)">
      <summary>Deletes a SOAP-enabled COM+ application mailbox at a specified URL. Not fully implemented.</summary>
      <param name="RootMailServer">The URL for the root mail server. </param>
      <param name="MailBox">The mailbox to delete. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)">
      <summary>Deletes a SOAP-enabled COM+ application virtual root. Not fully implemented.</summary>
      <param name="RootWebServer">The root Web server. </param>
      <param name="FullUrl">The complete URL address for the virtual root. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)">
      <summary>Installs an assembly in the global assembly cache.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)">
      <summary>Removes an assembly from the global assembly cache.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="AssemblyPath" /> is empty. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)">
      <summary>Returns the full path for a strong-named signed generated assembly in the SoapCache directory.</summary>
      <param name="TypeLibPath">The path for the file that contains the typelib. </param>
      <param name="CachePath">When this method returns, this parameter contains the full path of the proxy assembly in the SoapCache directory. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="TypeLibPath" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <exception cref="T:System.ArgumentException">The file name is empty, contains only white spaces, or contains invalid characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access to <paramref name="TypeLibPath" /> is denied. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="TypeLibPath" /> contains a colon (:) in the middle of the string. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)">
      <summary>Reflects over an assembly and returns the type name that matches the ProgID.</summary>
      <returns>The type name that matches the ProgID.</returns>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Processes a client type library, creating a configuration file on the client.</summary>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <param name="SrcTlbPath">The path for the file that contains the typelib. </param>
      <param name="PhysicalPath">The Web application directory. </param>
      <param name="VRoot">The name of the virtual root. </param>
      <param name="BaseUrl">The base URL that contains the virtual root. </param>
      <param name="Mode">The activation mode. </param>
      <param name="Transport">Not used. Specify null for this parameter.</param>
      <param name="AssemblyName">When this method returns, this parameter contains the display name of the assembly. </param>
      <param name="TypeName">When this method returns, this parameter contains the fully-qualified type name of the assembly. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Processes a server type library, either adding or deleting component entries to the Web.config and Default.disco files. Generates a proxy if necessary.</summary>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <param name="SrcTlbPath">The path for the file that contains the type library. </param>
      <param name="PhysicalPath">The Web application directory. </param>
      <param name="Operation">The operation to perform. </param>
      <param name="AssemblyName">When this method returns, this parameter contains the display name of the assembly. </param>
      <param name="TypeName">When this method returns, this parameter contains the fully-qualified type name of the assembly. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The <paramref name="SrcTlbPath" /> parameter referenced scrobj.dll; therefore, SOAP publication of script components is not supported. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)">
      <summary>Registers an assembly for COM interop.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found, or a file name extension is not specified. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters. </exception>
      <exception cref="T:System.InvalidOperationException">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not static.-or- There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.-or- The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)">
      <summary>Unregisters a COM interop assembly.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found, or a file name extension is not specified. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters. </exception>
      <exception cref="T:System.InvalidOperationException">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not static.-or- There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.-or- The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IISVirtualRoot">
      <summary>Creates and deletes Internet Information Services (IIS) 6.0 virtual roots.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.IISVirtualRoot" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Create(System.String,System.String,System.String,System.String@)">
      <summary>Creates an Internet Information Services (IIS) virtual root.</summary>
      <param name="RootWeb">A string with the value "IIS://localhost/W3SVC/1/ROOT" representing the root Web server.</param>
      <param name="inPhysicalDirectory">The physical path of the virtual root, which corresponds to <paramref name="PhysicalPath" /> from the <see cref="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" /> method.</param>
      <param name="VirtualDirectory">The name of the virtual root, which corresponds to <paramref name="VirtualRoot" /> from <see cref="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />.</param>
      <param name="Error">A string to which an error message can be written.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.DirectoryServices.DirectoryServicesPermission, System.DirectoryServices, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IISVirtualRoot.Delete(System.String,System.String,System.String,System.String@)">
      <summary>Deletes an Internet Information Services (IIS) virtual root.</summary>
      <param name="RootWeb">The root Web server, as specified by <paramref name="RootWebServer" /> from the <see cref="M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)" /> method.</param>
      <param name="PhysicalDirectory">The physical path of the virtual root.</param>
      <param name="VirtualDirectory">The name of the virtual root.</param>
      <param name="Error">A string to which an error message can be written.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.DirectoryServices.DirectoryServicesPermission, System.DirectoryServices, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.IServerWebConfig">
      <summary>Creates a Web.config file for a SOAP-enabled COM+ application and adds component entries to the file for COM interfaces being published in the application.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
      <summary>Adds XML elements to a Web.config file for a COM interface being published in a SOAP-enabled COM+ application.</summary>
      <param name="FilePath">The path for the existing Web.config file.</param>
      <param name="AssemblyName">The name of the assembly that contains the type being added.</param>
      <param name="TypeName">The name of the type being added.</param>
      <param name="ProgId">The programmatic identifier for the type being added.</param>
      <param name="Mode">A string constant that corresponds to the name of a member from the <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> enumeration, which indicates how a well-known object is activated.</param>
      <param name="Error">A string to which an error message can be written.</param>
    </member>
    <member name="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)">
      <summary>Creates a Web.config file for a SOAP-enabled COM+ application so that the file is ready to have XML elements added for COM interfaces being published.</summary>
      <param name="FilePath">The folder in which to create the configuration file.</param>
      <param name="FileRootName">The string value to which a config extension can be added (for example, Web for Web.config).</param>
      <param name="Error">A string to which an error message can be written.</param>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapClientImport">
      <summary>Imports authenticated, encrypted SOAP client proxies.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a .NET remoting client configuration file that includes security and authentication options.</summary>
      <param name="progId">The programmatic identifier of the class. If an empty string (""), this method returns without doing anything. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="authentication">The type of ASP.NET authentication to use. </param>
      <param name="assemblyName">The name of the assembly. </param>
      <param name="typeName">The name of the type. </param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapServerTlb">
      <summary>Processes authenticated, encrypted SOAP components on servers.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerTlb.AddServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
      <summary>Adds the entries for a server type library to the Web.config and Default.disco files, depending on security options, and generates a proxy if necessary.</summary>
      <param name="progId">The programmatic identifier of the class. </param>
      <param name="classId">The class identifier (CLSID) for the type library. </param>
      <param name="interfaceId">The IID for the type library. </param>
      <param name="srcTlbPath">The path for the file containing the type library. </param>
      <param name="rootWebServer">The root Web server. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <param name="clientActivated">true if client activated; otherwise, false. </param>
      <param name="wellKnown">true if well-known; otherwise, false. </param>
      <param name="discoFile">true if a discovery file; otherwise, false. </param>
      <param name="operation">The operation to perform. Specify either "delete" or an empty string. </param>
      <param name="assemblyName">When this method returns, contains the name of the assembly. </param>
      <param name="typeName">When this method returns, contains the type of the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerTlb.DeleteServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Removes entries for a server type library from the Web.config and Default.disco files, depending on security options.</summary>
      <param name="progId">The programmatic identifier of the class. </param>
      <param name="classId">The class identifier (CLSID) for the type library. </param>
      <param name="interfaceId">The IID for the type library. </param>
      <param name="srcTlbPath">The path for the file containing the type library. </param>
      <param name="rootWebServer">The root Web server. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <param name="operation">Not used. Specify null for this parameter.</param>
      <param name="assemblyName">The name of the assembly. </param>
      <param name="typeName">The type of the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapServerVRoot">
      <summary>Publishes authenticated, encrypted SOAP virtual roots on servers.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP virtual root with security options.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="homePage">true if the EnableDefaultDoc property is to be set; otherwise, false.</param>
      <param name="discoFile">true if a default discovery file is to be created; false if there is to be no discovery file. If false and a Default.disco file exists, the file is deleted. </param>
      <param name="secureSockets">true if SSL encryption is required; otherwise, false.</param>
      <param name="authentication">Specify "anonymous" if no authentication is to be used (anonymous user). Otherwise, specify an empty string.</param>
      <param name="operation">Not used. Specify null for this parameter.</param>
      <param name="baseUrl">When this method returns, this parameter contains the base URL. </param>
      <param name="virtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <param name="physicalPath">When this method returns, this parameter contains the disk address of the Virtual Root directory. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)">
      <summary>Deletes a virtual root. Not fully implemented.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to identify the system directory failed. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>Returns the security status of an existing SOAP virtual root.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="exists">When this method returns, this parameter contains a true if the virtual directory exists; otherwise, false.</param>
      <param name="secureSockets">When this method returns, this parameter contains a true if SSL encryption is required; otherwise, false.</param>
      <param name="windowsAuth">When this method returns, this parameter contains true if Windows authentication is set, otherwise, false.</param>
      <param name="anonymous">When this method returns, this parameter contains true if no authentication is set (anonymous user); otherwise, false.</param>
      <param name="homePage">When this method returns, this parameter contains a true if the Virtual Root directory's EnableDefaultDoc property is set; otherwise, false.</param>
      <param name="discoFile">When this method returns, this parameter contains a true if a Default.disco file exists; otherwise, false.</param>
      <param name="physicalPath">When this method returns, this parameter contains the disk address of the Virtual Root directory. </param>
      <param name="baseUrl">When this method returns, this parameter contains the base URL. </param>
      <param name="virtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ISoapUtility">
      <summary>Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)">
      <summary>Returns the path for the SOAP virtual root bin directory.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL address. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="binPath">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)">
      <summary>Returns the path for the SOAP virtual root.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL address. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="physicalPath">When this method returns, this parameter contains the file path for the SOAP virtual root. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ISoapUtility.Present">
      <summary>Determines whether authenticated, encrypted SOAP interfaces are present.</summary>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
    </member>
    <member name="T:System.EnterpriseServices.Internal.Publish">
      <summary>Publishes COM interfaces for SOAP-enabled COM+ applications.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.Publish" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP-enabled COM+ application mailbox at a specified URL. Not fully implemented.</summary>
      <param name="RootMailServer">The URL for the root mail server. </param>
      <param name="MailBox">The mailbox to create. </param>
      <param name="SmtpName">When this method returns, this parameter contains the name of the Simple Mail Transfer Protocol (SMTP) server containing the mailbox. </param>
      <param name="Domain">When this method returns, this parameter contains the domain of the SMTP server. </param>
      <param name="PhysicalPath">When this method returns, this parameter contains the file system path for the mailbox. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP-enabled COM+ application virtual root.</summary>
      <param name="Operation">The operation to perform. </param>
      <param name="FullUrl">The complete URL address for the virtual root. </param>
      <param name="BaseUrl">When this method returns, this parameter contains the base URL address. </param>
      <param name="VirtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <param name="PhysicalPath">When this method returns, this parameter contains the file path for the virtual root. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- The caller does not have permission to access DNS information. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="FullUrl" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving the local host name. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="FullUrl" /> is empty.-or- The scheme specified in <paramref name="FullUrl" /> is invalid.-or- <paramref name="FullUrl" /> contains more than two consecutive slashes.-or- The password specified in <paramref name="FullUrl" /> is invalid.-or- The host name specified in <paramref name="FullUrl" /> is invalid.-or- The file name specified in <paramref name="FullUrl" /> is invalid. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.DirectoryServices.DirectoryServicesPermission, System.DirectoryServices, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)">
      <summary>Deletes a SOAP-enabled COM+ application mailbox at a specified URL. Not fully implemented.</summary>
      <param name="RootMailServer">The URL for the root mail server. </param>
      <param name="MailBox">The mailbox to delete. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)">
      <summary>Deletes a SOAP-enabled COM+ application virtual root. Not fully implemented.</summary>
      <param name="RootWebServer">The root Web server. </param>
      <param name="FullUrl">The complete URL address for the virtual root. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GacInstall(System.String)">
      <summary>Installs an assembly in the global assembly cache.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GacRemove(System.String)">
      <summary>Removes an assembly from the global assembly cache.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- The caller does not have path discovery permission. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="AssemblyPath" /> is empty. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)">
      <summary>Returns the full path for a strong-named signed generated assembly in the SoapCache directory.</summary>
      <param name="TypeLibPath">The path for the file that contains the typelib. </param>
      <param name="CachePath">When this method returns, this parameter contains the name of the SoapCache directory. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="TypeLibPath" /> is null. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <exception cref="T:System.ArgumentException">The file name is empty, contains only white spaces, or contains invalid characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access to <paramref name="TypeLibPath" /> is denied. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="TypeLibPath" /> contains a colon (:) in the middle of the string. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)">
      <summary>Returns the path for the directory for storing client configuration files.</summary>
      <returns>The path for the directory to contain the configuration files.</returns>
      <param name="CreateDir">Set to true to create the directory, or false to return the path but not create the directory. </param>
      <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)">
      <summary>Reflects over an assembly and returns the type name that matches the ProgID.</summary>
      <returns>The type name that matches the ProgID.</returns>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)">
      <summary>Parses a URL and returns the base URL and virtual root portions.</summary>
      <param name="FullUrl">The complete URL address for the virtual root. </param>
      <param name="BaseUrl">When this method returns, this parameter contains the base URL address. </param>
      <param name="VirtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="FullUrl" /> is null. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving the local host name. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have permission to access DNS information. </exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="FullUrl" /> is empty.-or- The scheme specified in <paramref name="FullUrl" /> is invalid.-or- <paramref name="FullUrl" /> contains too many slashes.-or- The password specified in <paramref name="FullUrl" /> is invalid.-or- The host name specified in <paramref name="FullUrl" /> is invalid.-or- The file name specified in <paramref name="FullUrl" /> is invalid. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Processes a client type library, creating a configuration file on the client.</summary>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <param name="SrcTlbPath">The path for the file that contains the typelib. </param>
      <param name="PhysicalPath">The Web application directory. </param>
      <param name="VRoot">The name of the virtual root. </param>
      <param name="BaseUrl">The base URL that contains the virtual root. </param>
      <param name="Mode">The activation mode. </param>
      <param name="Transport">Not used. Specify null for this parameter.</param>
      <param name="AssemblyName">When this method returns, this parameter contains the display name of the assembly. </param>
      <param name="TypeName">When this method returns, this parameter contains the fully-qualified type name of the assembly. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Processes a server type library, either adding or deleting component entries to the Web.config and Default.disco files. Generates a proxy if necessary.</summary>
      <param name="ProgId">The programmatic identifier of the class. </param>
      <param name="SrcTlbPath">The path for the file that contains the type library. </param>
      <param name="PhysicalPath">The Web application directory. </param>
      <param name="Operation">The operation to perform. </param>
      <param name="strAssemblyName">When this method returns, this parameter contains the display name of the assembly. </param>
      <param name="TypeName">When this method returns, this parameter contains the fully-qualified type name of the assembly. </param>
      <param name="Error">When this method returns, this parameter contains an error message if a problem was encountered. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The <paramref name="SrcTlbPath" /> parameter referenced scrobj.dll; therefore, SOAP publication of script components is not supported. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)">
      <summary>Registers an assembly for COM interop.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.EnterpriseServices.RegistrationException">The input assembly does not have a strong name. </exception>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found, or a filename extension is not specified. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters. </exception>
      <exception cref="T:System.InvalidOperationException">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not static.-or- There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.-or- The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)">
      <summary>Unregisters a COM interop assembly.</summary>
      <param name="AssemblyPath">The file system path for the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.-or- A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="AssemblyPath" /> is null. </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="AssemblyPath" /> is not found, or a file name extension is not specified. </exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="AssemblyPath" /> is not a valid assembly. </exception>
      <exception cref="T:System.IO.FileLoadException">An assembly or module was loaded twice with two different evidences, or the assembly name is longer than MAX_PATH characters. </exception>
      <exception cref="T:System.InvalidOperationException">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not static.-or- There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.-or- The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.ServerWebConfig">
      <summary>Creates a Web.config file for a SOAP-enabled COM+ application. Can also add component entries to the file for COM interfaces being published in the application.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ServerWebConfig" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
      <summary>Adds XML elements to a Web.config file for a COM interface being published in a SOAP-enabled COM+ application.</summary>
      <param name="FilePath">The path of the existing Web.config file.</param>
      <param name="AssemblyName">The name of the assembly that contains the type being added.</param>
      <param name="TypeName">The name of the type being added.</param>
      <param name="ProgId">The programmatic identifier for the type being added.</param>
      <param name="WkoMode">A string constant that corresponds to the name of a member from the <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> enumeration, which indicates how a well-known object is activated.</param>
      <param name="Error">A string to which an error message can be written.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.ServerWebConfig.Create(System.String,System.String,System.String@)">
      <summary>Creates a Web.config file for a SOAP-enabled COM+ application so that the file is ready to have XML elements added for COM interfaces being published.</summary>
      <param name="FilePath">The folder in which the configuration file should be created.</param>
      <param name="FilePrefix">The string value "Web", to which a config extension is added.</param>
      <param name="Error">A string to which an error message can be written.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapClientImport">
      <summary>Imports authenticated, encrypted SOAP client proxies. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapClientImport.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapClientImport" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates a .NET remoting client configuration file that includes security and authentication options.</summary>
      <param name="progId">The programmatic identifier of the class. If an empty string (""), this method returns without doing anything. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="authentication">The type of ASP.NET authentication to use. </param>
      <param name="assemblyName">The name of the assembly. </param>
      <param name="typeName">The name of the type. </param>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapServerTlb">
      <summary>Processes authenticated, encrypted SOAP components on servers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapServerTlb" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
      <summary>Adds the entries for a server type library to the Web.config and Default.disco files, depending on security options, and generates a proxy if necessary.</summary>
      <param name="progId">The programmatic identifier of the class. </param>
      <param name="classId">The class identifier (CLSID) for the type library. </param>
      <param name="interfaceId">The IID for the type library. </param>
      <param name="srcTlbPath">The path for the file containing the type library. </param>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="clientActivated">true if client activated; otherwise, false. </param>
      <param name="wellKnown">true if well-known; otherwise, false. </param>
      <param name="discoFile">true if a discovery file; otherwise, false.</param>
      <param name="operation">The operation to perform. Specify either "delete" or an empty string. </param>
      <param name="strAssemblyName">When this method returns, contains the name of the assembly. </param>
      <param name="typeName">When this method returns, contains the type of the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Removes entries for a server type library from the Web.config and Default.disco files, depending on security options.</summary>
      <param name="progId">The programmatic identifier of the class. </param>
      <param name="classId">The class identifier (CLSID) for the type library. </param>
      <param name="interfaceId">The IID for the type library. </param>
      <param name="srcTlbPath">The path for the file containing the type library. </param>
      <param name="rootWebServer">The root Web server. </param>
      <param name="baseUrl">The base URL that contains the virtual root. </param>
      <param name="virtualRoot">The name of the virtual root. </param>
      <param name="operation">Not used. Specify null for this parameter.</param>
      <param name="assemblyName">The name of the assembly. </param>
      <param name="typeName">The type of the assembly. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlAppDomain, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapServerVRoot">
      <summary>Publishes authenticated, encrypted SOAP virtual roots on servers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
      <summary>Creates a SOAP virtual root with security options.</summary>
      <param name="rootWebServer">The root Web server. The default is "IIS://localhost/W3SVC/1/ROOT". </param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="homePage">The URL of the home page. </param>
      <param name="discoFile">true if a default discovery file is to be created; false if there is to be no discovery file. If false and a Default.disco file exists, the file is deleted. </param>
      <param name="secureSockets">true if SSL encryption is required; otherwise, false. </param>
      <param name="authentication">Specify "anonymous" if no authentication is to be used (anonymous user). Otherwise, specify an empty string.</param>
      <param name="operation">Not used. Specify null for this parameter.</param>
      <param name="baseUrl">When this method returns, this parameter contains the base URL. </param>
      <param name="virtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <param name="physicalPath">When this method returns, this parameter contains the disk address of the Virtual Root directory. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.EventLogPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.DirectoryServices.DirectoryServicesPermission, System.DirectoryServices, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)">
      <summary>Deletes a virtual root. Not fully implemented.</summary>
      <param name="rootWebServer">The root Web server. The default is "IIS://localhost/W3SVC/1/ROOT".</param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>Returns the security status of an existing SOAP virtual root.</summary>
      <param name="RootWebServer">The root Web server. The default is "IIS://localhost/W3SVC/1/ROOT". </param>
      <param name="inBaseUrl">The base URL that contains the virtual root. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="Exists">When this method returns, this parameter contains a true if the virtual directory exists; otherwise, false. </param>
      <param name="SSL">When this method returns, this parameter contains a true if SSL encryption is required; otherwise, false. </param>
      <param name="WindowsAuth">When this method returns, this parameter contains true if Windows authentication is set, otherwise, false. </param>
      <param name="Anonymous">When this method returns, this parameter contains true if no authentication is set (anonymous user); otherwise, false.</param>
      <param name="HomePage">When this method returns, this parameter contains a true if the Virtual Root's EnableDefaultDoc property is set; otherwise, false.</param>
      <param name="DiscoFile">When this method returns, this parameter contains a true if a Default.disco file exists; otherwise, false.</param>
      <param name="PhysicalPath">When this method returns, this parameter contains the disk address of the virtual root directory. </param>
      <param name="BaseUrl">When this method returns, this parameter contains the base URL. </param>
      <param name="VirtualRoot">When this method returns, this parameter contains the name of the virtual root. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.DirectoryServices.DirectoryServicesPermission, System.DirectoryServices, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.EnterpriseServices.Internal.SoapUtility">
      <summary>Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> class.</summary>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)">
      <summary>Returns the path for the SOAP bin directory.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL address. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="binPath">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)">
      <summary>Returns the path for the SOAP virtual root.</summary>
      <param name="rootWebServer">The root Web server. </param>
      <param name="inBaseUrl">The base URL address. </param>
      <param name="inVirtualRoot">The name of the virtual root. </param>
      <param name="physicalPath">When this method returns, this parameter contains the file path for the SOAP virtual root. </param>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <exception cref="T:System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.EnterpriseServices.Internal.SoapUtility.Present">
      <summary>Determines whether authenticated, encrypted SOAP interfaces are present.</summary>
      <exception cref="T:System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code. </exception>
      <exception cref="T:System.PlatformNotSupportedException">The SOAP utility is not available. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.IdentityModel.Selectors.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IdentityModel.Selectors</name>
  </assembly>
  <members>
    <member name="T:System.IdentityModel.Selectors.CardSpaceException">
      <summary>The exception that is thrown when one or more exceptions have occurred at the  service level. The cause of the error will be logged in the event log.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.CardSpaceException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.CardSpaceException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />  that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.CardSpaceException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.CardSpaceException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that represents the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.CardSpacePolicyElement">
      <summary>This class is intended for use by the infrastructure.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpacePolicyElement.#ctor(System.Xml.XmlElement,System.Xml.XmlElement,System.Collections.ObjectModel.Collection{System.Xml.XmlElement},System.Uri,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /> class using the specified target and issuer of the policy, the policy parameters, privacy notice location, and the privacy notice version.</summary>
      <param name="target">An <see cref="T:System.Xml.XmlElement" /> that represents the target of this policy.Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Target" /> property.</param>
      <param name="issuer">An <see cref="T:System.Xml.XmlElement" /> that represents the policy issuer. Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Issuer" /> property.</param>
      <param name="parameters">A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that represents the parameters for this element. Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Parameters" /> property.</param>
      <param name="privacyNoticeLink">The <see cref="T:System.Uri" /> where the privacy policy is located. Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.PolicyNoticeLink" /> property.</param>
      <param name="privacyNoticeVersion">The version of the privacy information. Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.PolicyNoticeVersion" /> property.</param>
      <param name="isManagedIssuer">true if the issuer is managed; otherwise false. Sets the <see cref="P:System.IdentityModel.Selectors.CardSpacePolicyElement.IsManagedIssuer" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.IsManagedIssuer">
      <summary>Gets or sets a value that indicates whether the issuer of the policy is a managed issuer.</summary>
      <returns>true if the issuer is managed; otherwise false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Issuer">
      <summary>Gets or sets the policy issuer.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the policy issuer.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Parameters">
      <summary>Gets a collection of XML elements that represent the parameters for this element.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" /> that represents the parameters for this element.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.PolicyNoticeLink">
      <summary>Gets or sets the URI for the privacy information of this policy.</summary>
      <returns>The <see cref="T:System.Uri" /> where the privacy policy is located.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.PolicyNoticeVersion">
      <summary>Gets or sets the version of the privacy information.</summary>
      <returns>The version of the privacy information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.CardSpacePolicyElement.Target">
      <summary>Gets or sets the target of this policy.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the target of this policy.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.CardSpaceSelector">
      <summary>Provides access to all  public operations that are supported in managed code.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Generates a security token using the  system and the specified policy chain and token serializer.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> that represents the generated security token.</returns>
      <param name="policyChain">An array of <see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /> that describes the federated security chain that the client requires a final token to unwind.</param>
      <param name="tokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="policyChain" /> is null.-or-<paramref name="policyChain" /> is zero length.-or-<paramref name="tokenSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.Xml.XmlElement,System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Generates a security token using the  system and the specified endpoint, policy, token issuer, and token serializer.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> that represents the generated security token.</returns>
      <param name="endpoint">An <see cref="T:System.Xml.XmlElement" /> that represents the endpoint address of the recipient where the token is presented.</param>
      <param name="policy">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.Xml.XmlElement" /> that contains a policy fragment that specifies the token types and claims that are requested by the recipient.</param>
      <param name="requiredRemoteTokenIssuer">An <see cref="T:System.Xml.XmlElement" /> that represents the issuer of the token.</param>
      <param name="tokenSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> is null.-or-<paramref name="policy" /> is null.-or-<paramref name="tokenSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceSelector.Import(System.String)">
      <summary>Displays the Import Card user interface.</summary>
      <param name="fileName">The name of the file to import.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> is null.-or-<paramref name="fileName" /> is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CardSpaceSelector.Manage">
      <summary>Displays the  management user interface that allows the user to create, delete, rename, and modify the card.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.IdentityValidationException">
      <summary>Exception class to indicate that the recipient certificate was not valid.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.IdentityValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.IdentityValidationException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.IdentityValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.IdentityValidationException" /> class using the specified serialization information and serialization context.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.IdentityValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.IdentityValidationException" /> class with the specified error message.</summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.IdentityValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.IdentityValidationException" /> class with the specified error message and the original exception that caused this exception to be thrown.</summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="innerException">The original exception that caused this exception to be thrown.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.PolicyValidationException">
      <summary>Exception class to indicate that the policy supplied by the recipient could not be validated.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.PolicyValidationException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.PolicyValidationException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.PolicyValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.PolicyValidationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.PolicyValidationException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.PolicyValidationException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.PolicyValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.PolicyValidationException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.ServiceBusyException">
      <summary>Exception class to indicate that the  service is busy processing other requests.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceBusyException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceBusyException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceBusyException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceBusyException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceBusyException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceBusyException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.ServiceNotStartedException">
      <summary>The exception that is thrown when  has not been started on the user's computer.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceNotStartedException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceNotStartedException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceNotStartedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceNotStartedException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceNotStartedException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceNotStartedException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.ServiceNotStartedException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.ServiceNotStartedException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.StsCommunicationException">
      <summary>The exception that is thrown when there is a problem communicating with the security token service.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.StsCommunicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.StsCommunicationException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.StsCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.StsCommunicationException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.StsCommunicationException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.StsCommunicationException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.StsCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.StsCommunicationException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException">
      <summary>Indicates that a policy was provided to the system that included options that were unsupported.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception that is being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException" /> class with the specified error message.</summary>
      <param name="message">The error message.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UnsupportedPolicyOptionsException" /> class with the specified error message and the original exception that caused this exception to be thrown.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The original exception that caused this exception to be thrown.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.UntrustedRecipientException">
      <summary>The exception that is thrown when the user decides not to trust the entity that is requesting a token after reviewing the information from their certificate.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UntrustedRecipientException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UntrustedRecipientException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UntrustedRecipientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UntrustedRecipientException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UntrustedRecipientException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UntrustedRecipientException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UntrustedRecipientException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UntrustedRecipientException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserCancellationException">
      <summary>The exception that is thrown when the user cancels an operation during the <see cref="M:System.IdentityModel.Selectors.CardSpaceSelector.GetToken(System.IdentityModel.Selectors.CardSpacePolicyElement[],System.IdentityModel.Selectors.SecurityTokenSerializer)" /> call.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserCancellationException.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UserCancellationException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserCancellationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UserCancellationException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserCancellationException.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UserCancellationException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserCancellationException.#ctor(System.String,System.Exception)">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Selectors.UserCancellationException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Management.Instrumentation.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management.Instrumentation</name>
  </assembly>
  <members>
    <member name="T:System.Management.Instrumentation.DefaultManagementInstaller">
      <summary>Installs an instrumented assembly. To use this default project installer, simply derive a class from <see cref="T:System.Management.Instrumentation.DefaultManagementInstaller" /> inside the assembly. No methods need to be overridden.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.DefaultManagementInstaller" /> class. This is the default constructor.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationManager">
      <summary>Provides methods that manage the lifetime and the model used for decoupled providers.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.Publish(System.Object)">
      <summary>Makes an instance of a provider available within the WMI infrastructure.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Registers an assembly with the WMI infrastructure.</summary>
      <param name="managementAssembly"> The assembly to register.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.RegisterType(System.Type)">
      <summary>Registers a class with the WMI infrastructure.</summary>
      <param name="managementType">The type of the class.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.Revoke(System.Object)">
      <summary>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly(System.Reflection.Assembly)">
      <summary>Unregisters an assembly currently registered with the WMI infrastructure.</summary>
      <param name="managementAssembly">The registered assembly to unregister.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.UnregisterType(System.Type)">
      <summary>Unregisters a class registered with the WMI infrastructure.</summary>
      <param name="managementType">The registered type to unregister.</param>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedCommonProvider">
      <summary>The class is used internally by the WMI.NET Provider Extensions infrastructure.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor">
      <summary>This is the default constructor for <see cref="T:System.Management.Instrumentation.ManagedCommonProvider" /> which is used internally by the WMI.NET Provider Extensions infrastructure.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementQualifierAttribute">
      <summary>The ManagementQualifier attribute contains additional WMI provider-related information about an associated WMI class, instance, property, field or method.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementQualifierAttribute.#ctor(System.String)">
      <summary>Creates an instance of the ManagementQualifierAttribute.</summary>
      <param name="name"> Name of the qualifier.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor">
      <summary>Flavor of the attribute.</summary>
      <returns>Returns a ManagementQualifierFlavor that indicates the flavor of the qualifier.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name">
      <summary>Name of the qualifier.</summary>
      <returns>Returns a string containing the name of the qualifier.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value">
      <summary>Value associated with the qualifier.</summary>
      <returns>Returns an object that represents the value of the qualifier.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementQualifierFlavors">
      <summary>Qualifier flavors that can be used with WMI provider extensions.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.Amended">
      <summary>The qualifier is not required in the basic class definition and can be moved to the amendment to be localized.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.DisableOverride">
      <summary>The qualifier cannot be overridden in a derived class or instance. Note that being able to override a propagated qualifier is the default.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.ClassOnly">
      <summary>The qualifier is propagated to instances.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.ThisClassOnly">
      <summary>The qualifier is not propagated to derived classes.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.WmiProviderInstallationException">
      <summary>Represents an exception to throw when WMI provider installation fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor">
      <summary>Initializes a new instance of the class. This is the default constructor.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message that describes the exception.</summary>
      <param name="message"> Message that describes the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new class with the specified string and exception.</summary>
      <param name="message">Message that describes the exception.</param>
      <param name="innerException">The Exception instance that caused the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> class.</summary>
      <param name="oldSurface">The design surface that is losing activation.</param>
      <param name="newSurface">The design surface that is gaining activation.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>Gets the design surface that is gaining activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is gaining activation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>Gets the design surface that is losing activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is losing activation.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e">An <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />    that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Provides a user interface for editing arrays at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.ComponentModel.Design.ArrayEditor" /> using the specified data type for the array.</summary>
      <param name="type">The data type of the items in the array. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection is designed to contain.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the data type that the collection is designed to contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Gets the items in the array.</summary>
      <returns>An array consisting of the items within the specified array. If the object specified in the <paramref name="editValue" /> parameter is not an array, a new empty object is returned.</returns>
      <param name="editValue">The array from which to retrieve the items. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the items in the array.</summary>
      <returns>An instance of the new array. If the object specified by the <paramref name="editValue" /> parameter is not an array, the object specified by the <paramref name="editValue" /> parameter is returned.</returns>
      <param name="editValue">The array to set the items to. </param>
      <param name="value">The array of objects to set as the items of the array. </param>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>Provides a user interface for editing binary data.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.BinaryEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">The object to edit the value of. </param>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>Displays byte arrays in hexadecimal, ANSI, and Unicode formats.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ByteViewer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>Gets the bytes in the buffer.</summary>
      <returns>The unsigned byte array reference.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>Gets the display mode for the control.</summary>
      <returns>The display mode that this control uses. The returned value is defined in <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>Writes the raw data from the data buffer to a file.</summary>
      <param name="path">The file path to save to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">The file write failed. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>Handles the <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> event on the <see cref="T:System.ComponentModel.Design.ByteViewer" /> control's <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>Sets the byte array to display in the viewer.</summary>
      <param name="bytes">The byte array to display. </param>
      <exception cref="T:System.ArgumentNullException">The specified byte array is null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>Sets the current display mode.</summary>
      <param name="mode">The display mode to set. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified display mode is not from the <see cref="T:System.ComponentModel.Design.DisplayMode" /> enumeration. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>Sets the file to display in the viewer.</summary>
      <param name="path">The file path to load from. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">The file load failed. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>Sets the current line for the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> view.</summary>
      <param name="line">The current line to display from. </param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Provides a user interface that can edit most types of collections at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> class using the specified collection type.</summary>
      <param name="type">The type of the collection for this editor to edit. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Cancels changes to the collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Indicates whether original members of the collection can be removed.</summary>
      <returns>true if it is permissible to remove this value from the collection; otherwise, false. The default implementation always returns true.</returns>
      <param name="value">The value to remove. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>true if it multiple collection members can be selected at the same time; otherwise, false. By default, this returns true.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or null if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection contains.</summary>
      <returns>The data type of the items in the collection, or an <see cref="T:System.Object" /> if no Item property can be located on the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified object.</returns>
      <param name="itemType">The type of item to create. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can contain.</summary>
      <returns>An array of data types that this collection can contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services can be obtained. </param>
      <param name="value">The object to edit the value of. </param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program did not succeed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Retrieves the display text for the given list item.</summary>
      <returns>The display text for <paramref name="value" />.</returns>
      <param name="value">The list item for which to retrieve display text.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the edit style used by the <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Gets an array of objects containing the specified collection.</summary>
      <returns>An array containing the collection objects, or an empty object array if the specified collection does not inherit from <see cref="T:System.Collections.ICollection" />.</returns>
      <param name="editValue">The collection to edit. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Returns a list containing the given object</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains the individual objects to be created.</returns>
      <param name="instance">An <see cref="T:System.Collections.ArrayList" /> returned as an object.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <returns>An instance of the service, or null if the service cannot be found.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.</summary>
      <returns>The Help keyword to display the Help topic or topic list for when Help is requested from the editor.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Gets the available types of items that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the specified array as the items of the collection.</summary>
      <returns>The newly created collection object or, otherwise, the collection indicated by the <paramref name="editValue" /> parameter.</returns>
      <param name="editValue">The collection to edit. </param>
      <param name="value">An array of objects to set as the collection items. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Displays the default Help topic for the collection editor.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Provides a modal dialog box for editing the contents of a collection using a <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.CollectionEditor" /> to use for editing the collection. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Indicates whether you can remove the original members of the collection.</summary>
      <returns>true if it is permissible to remove this value from the collection; otherwise, false. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
      <param name="value">The value to remove. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>true if it multiple collection members can be selected at the same time; otherwise, false. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or null if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified object, or null if the user chose to cancel the creation of this instance.</returns>
      <param name="itemType">The type of item to create. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Displays the specified exception to the user.</summary>
      <param name="e">The exception to display. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Gets or sets the collection object to edit.</summary>
      <returns>The collection object to edit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <returns>An instance of the service, or null if the service cannot be found.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Gets or sets the array of items for this form to display.</summary>
      <returns>An array of objects for the form to display.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Gets the available item types that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Provides an opportunity to perform processing when a collection value has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Shows the dialog box for the collection editor using the specified <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> that indicates the result code returned from the dialog box.</returns>
      <param name="edSvc">An <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> that can be used to show the dialog box. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>Specifies the type of object-bound smart tag with respect to how it was associated with the component.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>Both types of smart tags.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>Pull model smart tags only.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>Push model smart tags only.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Extends the design mode behavior of a component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Gets the design-time action lists supported by the component associated with the designer.</summary>
      <returns>The design-time action lists supported by the component associated with the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Gets the collection of components associated with the component managed by the designer.</summary>
      <returns>The components that are associated with the component managed by the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Gets the component this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program failed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>Attempts to free resources by calling Dispose(false) before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Attempts to retrieve the specified type of service from the design mode site of the designer's component.</summary>
      <returns>An object implementing the requested service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to request. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Gets an attribute that indicates the type of inheritance of the associated component.</summary>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Gets a value indicating whether this component is inherited.</summary>
      <returns>true if the component is inherited; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the specified component.</summary>
      <param name="component">The component for this designer. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Reinitializes an existing component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Initializes the settings for an imported component that is already initialized to settings other than the defaults.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</returns>
      <param name="toInvoke">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Sets the default properties for the component.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Gets the parent component for this designer.</summary>
      <returns>The parent component for this designer, or null if this designer is the root component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed. </param>
      <param name="oldValue">The old value of the member. </param>
      <param name="newValue">The new value of the member. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Gets a collection of property values that override user settings.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or null if there is no parent.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Gets the design-time verbs supported by the component that is associated with the designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or null if no designer verbs are available. This default implementation always returns null.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Indicates whether a property matching the specified name exists in the collection.</summary>
      <returns>true if the property exists in the collection; otherwise, false.</returns>
      <param name="propertyName">The name of the property to check for in the collection. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Gets or sets the object at the specified index.</summary>
      <returns>The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.</returns>
      <param name="propertyName">The name of the property to access in the collection. </param>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>This date time editor is a <see cref="T:System.Drawing.Design.UITypeEditor" /> suitable for visually editing <see cref="T:System.DateTime" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> method. If the method is not supported, this will return None.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Represents a static header item on a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name string.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name and category strings.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Provides the base class for types that represent a panel item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
      <param name="description">Supplemental text for this item, potentially used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> property value.</summary>
      <returns>true if the item can be grouped; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Gets the group name for an item.</summary>
      <returns>A string that represents the group that the item is a member of. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Gets the supplemental text for the item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the descriptive text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Gets the text for this item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the display text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Gets a reference to a collection that can be used to store programmer-defined key/value pairs.</summary>
      <returns>A collection that implements <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to the current collection.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> index at which the value has been added.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" />  to add.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines whether the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains a specific element.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains the specified value; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Inserts an element into the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> at the specified index.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to remove from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Provides the base class for types that define a list of items used to create a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> class.</summary>
      <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.</summary>
      <returns>true if the panel should be shown when the owning component is created; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Gets the component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>A component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the component associated with the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />. This value is null if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
      <param name="serviceType">A service provided by the <see cref="T:System.ComponentModel.Component" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with default settings.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with the specified panel items.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to populate the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection.</summary>
      <returns>The position into which the new element is inserted into the collection's internal list.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to add.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> array to the end of the current collection.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the end of the current collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Indicates whether the collection contains a specific value.</summary>
      <returns>true if the collection contains the specified value; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to search for.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array of type <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the current collection is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <returns>The index of <paramref name="value" /> if found in the internal list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to locate in the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Inserts the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> into the collection at the specified position.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the count of elements in the current collection.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> at the specified index.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear"></member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new element into the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
      <param name="value">The value of the element to remove from <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
      <param name="newValue">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
      <param name="value">The object to validate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.ComponentModel.Design.DesignerActionList" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to remove from the current collection.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the collection.</param>
      <param name="changeType">A value that specifies whether a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> has been added or removed from the collection.</param>
      <param name="actionLists">The collection of list elements after the action has been applied.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Gets the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects associated with this event.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that represents the current state of the collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Gets a flag indicating whether an element has been added or removed from the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> that indicates the type of change.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Gets the object that that is associated with the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the managed <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Specifies the type of change occurring in a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been added to the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been removed from the collection.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Represents a smart tag panel item that is associated with a method in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, and display and description text.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Gets a value that indicates the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> should appear in other user interface contexts.</summary>
      <returns>true if the item is to be used in shortcut menus; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>Programmatically executes the method associated with the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException">The method, named in <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> cannot be found.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Gets the name of the method that this <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated method.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> objects to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies items.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Represents a panel item that is associated with a property in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and display names.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display and description text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Gets the name of the property that this item is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its items to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
      <param name="serviceProvider">The service provider for the current design-time environment.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="designerActionListCollection">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Releases all components from management and clears all push-model smart tag lists.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Determines whether the current smart tag service manages the action lists for the specified component.</summary>
      <returns>true if the component is managed by the current service; otherwise, false.</returns>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Occurs when a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> is removed or added for any component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Returns the collection of smart tag item lists associated with a component.</summary>
      <returns>The collection of smart tags for the specified component.</returns>
      <param name="component">The component that the smart tags are associated with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>Returns the collection of smart tag item lists of the specified type associated with a component.</summary>
      <returns>The collection of smart tags of the specified type for the specified component.</returns>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="type">The <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> to filter the associated smart tags with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the pull-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the push-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from all components managed by the current service.</summary>
      <param name="actionList">The list of smart tags to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Removes all the smart tag lists associated with the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <param name="actionList">The smart tag list to remove.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Represents a static text item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The category used to group similar items on the panel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Occurs when a request is made to show or hide a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Hides the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be hidden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Updates the smart tag panel.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to refresh.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Indicates whether to automatically show the smart tag panel.</summary>
      <returns>true to automatically show the smart tag panel; otherwise, false.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to automatically show.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Displays the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be displayed.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the panel.</param>
      <param name="changeType">A value that specifies whether the panel is being displayed or hidden.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Gets a flag indicating whether the smart tag panel is being displayed or hidden.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> that indicates the state of the panel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Gets the object that is associated with the smart tag panel.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the smart tag panel.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">The event-specific information.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Specifies the display state of a smart tag panel.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>The smart tag panel is being displayed.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>The smart tag panel is being hidden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>The smart tag panel is being refreshed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Represents a base class for design-time tools, not derived from <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, that provide smart tag or designer verb capabilities.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Gets the collection of all the smart tags associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the smart tags for the associated designed component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Returns a collection of command objects.</summary>
      <returns>A collection that contains the specified type—either <see cref="T:System.ComponentModel.Design.DesignerActionList" /> or <see cref="T:System.ComponentModel.Design.DesignerVerb" />—of command objects. The base implementation always returns null.</returns>
      <param name="name">The type of collection to return, indicating either a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> or a <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Gets the collection of all the designer verbs associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the designer verbs for the associated designed component.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Presents a user interface for designing components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or null if there is no parent used to resolve services.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or null if there is no parent used to resolve services.</param>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Begins the loading process with the given designer loader.</summary>
      <param name="loader">The designer loader to use for loading the designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Begins the loading process.</summary>
      <param name="rootComponentType">The type of component to create in design mode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Creates an instance of a component.</summary>
      <returns>The newly created component.</returns>
      <param name="componentType">The type of component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Creates a designer when a component is added to the container.</summary>
      <returns>An instance of the requested designer, or null if no matching designer could be found.</returns>
      <param name="component">The component for which the designer should be created.</param>
      <param name="rootDesigner">true to create a root designer; false to create a normal designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Creates an instance of the given type.</summary>
      <returns>The newly created object.</returns>
      <param name="type">The type to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <returns>The nested container.</returns>
      <param name="owningComponent">The component that manages the nested container.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <returns>The nested container.</returns>
      <param name="owningComponent">The component that manages the nested container.</param>
      <param name="containerName">An additional name for the nested container.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Occurs when the design surface is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Gets a value indicating whether the Design-time Error List is loading. </summary>
      <returns>true if the Design-time Error List is loading; otherwise, false. </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Serializes changes to the design surface.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Gets a service from the service container.</summary>
      <returns>An object that implements, or is a derived class of, <paramref name="serviceType" />, or null if the service does not exist in the service container.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Gets a value indicating whether the design surface is currently loaded.</summary>
      <returns>true if the design surface is currently loaded; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Occurs when the designer load has completed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Returns a collection of loading errors or a void collection.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of loading errors.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Occurs when the designer is about to be loaded.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Gets the service container.</summary>
      <returns>The service container that provides all services to designers contained within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Occurs when a designer has finished unloading.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Occurs when a designer is about to unload.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Gets the view for the root designer.</summary>
      <returns>The view for the root designer.</returns>
      <exception cref="T:System.InvalidOperationException">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">The designer loaded, but it does not offer a view compatible with this design surface.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>Contains a collection of design surfaces. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>Copies the collection members to the specified <see cref="T:System.ComponentModel.Design.DesignSurface" /> array beginning at the specified destination index.</summary>
      <param name="array">The array to copy collection members to.</param>
      <param name="index">The destination index to begin copying to.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>Gets the total number of design surfaces in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>The total number of elements in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>Gets the design surface at the specified index.</summary>
      <returns>The design surface at the specified index.</returns>
      <param name="index">The index of the design surface to return.</param>
      <exception cref="T:System.NotSupportedException">The design surface specified by <paramref name="index" /> is not supported.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.Count" /> property.</summary>
      <returns>The number of elements contained in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</summary>
      <returns>true if access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> class.</summary>
      <param name="surface">The design surface that is being created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>Gets the design surface that is being created.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is being created.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />      that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
      <param name="parentProvider">A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>Gets or sets the active designer.</summary>
      <returns>The active designer.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>Occurs when the currently active designer changes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>Creates an instance of a design surface.</summary>
      <returns>A new design surface instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>Creates an instance of a design surface.</summary>
      <returns>A new design surface instance.</returns>
      <param name="parentProvider">A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>Implementation that creates the design surface.</summary>
      <returns>A new design surface instance.</returns>
      <param name="parentProvider">A service provider to pass to the design surface. This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>Occurs when a designer is created.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>Occurs when a designer is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>Gets a collection of design surfaces.</summary>
      <returns>A collection of design surfaces that are currently hosted by the design surface manager.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>Gets a service in the design surface manager’s service container.</summary>
      <returns>An object that implements, or is a derived class of, the given service type; otherwise, null if the service does not exist in the service container.</returns>
      <param name="serviceType">The service type to retrieve.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>Occurs when the global selection changes.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</summary>
      <returns>The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>Defines identifiers that indicate the display modes used by <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>A hexadecimal format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>An ANSI format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>A Unicode format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> mode is selected. If the characters match a printable character set, a test is run to automatically select either the <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> or <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> display mode.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>A default implementation of the <see cref="T:System.ComponentModel.Design.IEventBindingService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.EventBindingService" /> class. </summary>
      <param name="provider">The service provider from which <see cref="T:System.ComponentModel.Design.EventBindingService" /> will query for services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique method name.</summary>
      <returns>The unique method name.</returns>
      <param name="component">The component for which the method name will be created.</param>
      <param name="e">The event to create a name for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is no longer being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method to be freed.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Returns a collection of names of compatible methods.</summary>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> containing the compatible delegate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>Gets the requested service from the service provider.</summary>
      <returns>A reference to the service specified by <paramref name="serviceType" />, or null if the requested service is not available.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>Displays user code.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Displays the user code for the specified method.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method for which to display code.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>Displays the user code at the given line number.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
      <param name="lineNumber">The line number to show.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique name for an event-handler method for the specified component and event.</summary>
      <returns>The recommended name for the event-handler method for this event.</returns>
      <param name="component">The component instance the event is connected to.</param>
      <param name="e">The event to create a name for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Gets a collection of event-handler methods that have a method signature compatible with the specified event.</summary>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <param name="e">The event to get the compatible event-handler methods for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or null if the property does not represent an event.</returns>
      <param name="property">The property that represents an event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Converts a set of event descriptors to a set of property descriptors.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</returns>
      <param name="events">The events to convert to properties.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Converts a single event descriptor to a property descriptor.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</returns>
      <param name="e">The event to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>Displays the user code for the designer.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Displays the user code for the specified event.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
      <param name="component">The component that the event is connected to.</param>
      <param name="e">The event to display.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>Displays the user code for the designer at the specified line.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
      <param name="lineNumber">The line number to place the caret on.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>Validates that the provided method name is valid for the language or script being used.</summary>
      <param name="methodName">The method name to validate.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Represents the collection of exceptions.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> class.</summary>
      <param name="exceptions">An array of type <see cref="T:System.Exception" />, containing the objects to populate the collection.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Gets the array of <see cref="T:System.Exception" /> objects that represent the collection of exceptions.</summary>
      <returns>An <see cref="T:System.Exception" /> array that represent the collection of exceptions.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>Provides debugging services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>Asserts on a condition inside a design-time environment.</summary>
      <param name="condition">true to prevent <paramref name="message" /> from being displayed; otherwise, false.</param>
      <param name="message">The message to display.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>Logs a failure message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>Gets or sets the indent level for debug output.</summary>
      <returns>The indent level for debug output.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>Gets a collection of trace listeners for monitoring design-time debugging output.</summary>
      <returns>A collection of trace listeners </returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>Logs a debug message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
      <param name="category">The category of <paramref name="message" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>Allows a designer to store and retrieve its state.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a state item specified by the key for the given component.</summary>
      <returns>The designer state for <paramref name="component" /> specified by <paramref name="key" />.</returns>
      <param name="component">The component for which to retrieve the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>Sets a state item specified by the key for the given component.</summary>
      <param name="component">The component for which to set the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
      <param name="value">The designer state item for <paramref name="component" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <summary>Utility for loading assemblies in a designer. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Determines the load path for the specified assembly in the target framework.</summary>
      <returns>The actual load path for the assembly, or null if the assembly is not loadable.</returns>
      <param name="runtimeOrTargetAssemblyName">The full assembly name for the runtime or target assembly.</param>
      <param name="suggestedAssemblyPath">The suggested path from which to load the assembly.</param>
      <param name="targetFramework">The target framework for the designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <summary>Loads the specified runtime assembly.</summary>
      <returns>The loaded runtime assembly, or null if the assembly could not be loaded.</returns>
      <param name="targetAssemblyName">The full target assembly name.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Defines multi-target type name resolution services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Resolves a type for the target framework to an assembly-qualified name.</summary>
      <returns>The <see cref="P:System.Type.AssemblyQualifiedName" /> for <paramref name="type" /> in the target framework. </returns>
      <param name="type">The type to resolve.</param>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Provides a set of methods for identifying inherited components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">The component to search for inherited components to add to the specified container. </param>
      <param name="container">The container to add the inherited components to. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">The base type to search for. </param>
      <param name="component">The component to search for inherited components to add to the specified container. </param>
      <param name="container">The container to add the inherited components to. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Gets the inheritance attribute of the specified component.</summary>
      <returns>An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</returns>
      <param name="component">The component to retrieve the inheritance attribute for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Indicates whether to ignore the specified member.</summary>
      <returns>true if the specified member should be included in the set of inherited components; otherwise, false.</returns>
      <param name="member">The member to check. This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />. </param>
      <param name="component">The component instance this member is bound to. </param>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> class.</summary>
      <param name="succeeded">true to indicate that the designer load was successful; otherwise, false.</param>
      <param name="errors">A collection of errors that occurred while the designer was loading.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Gets a collection of errors that occurred while the designer was loading.</summary>
      <returns>A collection of errors that occurred while the designer was loading.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Gets a value that indicates whether the designer load was successful.</summary>
      <returns>true if the designer load was successful; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>Provides design-time support for localization features to a root designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> class using the specified service provider and base component.</summary>
      <param name="serviceProvider">A service provider for the specified component. </param>
      <param name="baseComponent">The base component to localize. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>Indicates whether this object can provide its extender properties to the specified object.</summary>
      <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
      <param name="o">The object to receive the extender properties. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>Gets the current resource culture for the specified object.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource variety.</returns>
      <param name="o">The object to get the current resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>Gets the default resource culture to use when initializing the values of a localized object at design time.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource culture to use to initialize the values of the specified object.</returns>
      <param name="o">The object to get the resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>Gets a value indicating whether the specified object supports resource localization.</summary>
      <returns>true if the specified object supports resource localization; otherwise, false.</returns>
      <param name="o">The object to check for localization support. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>Resets the resource culture for the specified object.</summary>
      <param name="o">The object to reset the resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>Sets the current resource culture for the specified object to the specified resource culture.</summary>
      <param name="o">The base component to set the resource culture for. </param>
      <param name="language">A <see cref="T:System.Globalization.CultureInfo" /> that indicates the resource culture to use. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>Sets a value indicating whether the specified object supports localized resources.</summary>
      <param name="o">The base component to set as localizable or not localizable. </param>
      <param name="localizable">true if the object supports resource localization; otherwise, false. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>Gets a value indicating whether the specified object must have its localizable values persisted in a resource.</summary>
      <returns>true if the localizable values should be persisted in resources; otherwise, false.</returns>
      <param name="o">The object to get the language support persistence flag for. </param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> class.</summary>
      <param name="changeType">The type of change.</param>
      <param name="command">The menu command.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>Gets the type of change that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>Gets the command that was added, removed, or changed.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> that was added, removed, or changed.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event of a <see cref="T:System.ComponentModel.Design.MenuCommandService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>Specifies the type of action that occurred to the related object's <see cref="T:System.Windows.Forms.Design.MenuCommands" /> collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>Specifies that one or more command objects were added.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>Specifies that one or more commands were removed.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>Specifies that one or more commands have changed their status.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class. </summary>
      <param name="serviceProvider">The service provider that this service uses to obtain other services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Adds a command handler to the menu command service.</summary>
      <param name="command">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A command handler <paramref name="command" /> already exists.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>Ensures that the verb list has been created.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, null if the command is not found.</returns>
      <param name="commandID">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, null if the command is not found.</returns>
      <param name="guid">The GUID of the command.</param>
      <param name="id">The ID of the command.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>Gets the command list for a given GUID.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of commands.</returns>
      <param name="guid">The GUID of the command list.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>Gets a reference to the requested service.</summary>
      <returns>A reference to <paramref name="serviceType" />; otherwise, null if the service is not found.</returns>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Invokes the given command on the local form or in the global environment.</summary>
      <returns>true, if the command was found; otherwise, false.</returns>
      <param name="commandID">The command to invoke.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Invokes the given command with the given parameter on the local form or in the global environment.</summary>
      <returns>true, if the command was found; otherwise, false.</returns>
      <param name="commandId">The command to invoke.</param>
      <param name="arg">A parameter for the invocation.</param>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>Occurs when the status of a menu command has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Removes the given menu command from the document.</summary>
      <param name="command">The command to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Removes the given verb from the document.</summary>
      <param name="verb">The verb to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Shows the shortcut menu with the given command ID at the given location.</summary>
      <param name="menuID">The shortcut menu to display.</param>
      <param name="x">The x-coordinate of the shortcut menu's location.</param>
      <param name="y">The y-coordinate of the shortcut menu's location.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>Gets a collection of the designer verbs that are currently available.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Displays a dialog for editing multi-line strings in design mode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services can be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the supported editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <returns>false, indicating that this <see cref="T:System.Drawing.Design.UITypeEditor" /> does not display a visual representation in the Properties Window.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
      <param name="subObjectSelector">The specified sub-object selector value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Represents the current value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <returns>The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Fills a hierarchical collection of labeled items, with each item represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">A hierarchical collection of labeled items.</param>
      <param name="context">The context information for a component.</param>
      <param name="provider">The <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method of this interface that obtains the object that provides the service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that can be used to gain additional context information.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Represents the previous value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Sets the current <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> to the specified value.</summary>
      <param name="value">The specified value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Displays a hierarchical collection of labeled items, each represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Adds a new tree node to the collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> added to the collection. </returns>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
      <param name="parent">The parent of the node.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Removes all tree nodes from the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>This field is for internal use only.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Occurs after the tree node is selected.</summary>
      <param name="sender">The source of an event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" />  event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is clicked.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Sets the collection nodes to a specific value.</summary>
      <returns>true if the collection nodes were set; otherwise, false.</returns>
      <param name="value">The value to be set.</param>
      <param name="nodes">The nodes collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Initializes the editor service.</summary>
      <param name="edSvc">The editor service.</param>
      <param name="value">The value to be set.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Removes the editor service.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Represents a node of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> class.</summary>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Represents the value for the node.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Specifies the target framework for a project.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> class. </summary>
      <param name="targetFrameworkMoniker">The target framework for the project.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Gets the target framework for the project.</summary>
      <returns>The target framework for the project.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Specifies generic undo/redo functionality at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine" /> class.</summary>
      <param name="provider">A parenting service provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">A required service cannot be found. See <see cref="T:System.ComponentModel.Design.UndoEngine" /> for required services. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> to the undo stack.</summary>
      <param name="unit">The undo unit to add </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>A new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
      <param name="name">The name of the unit to create. </param>
      <param name="primary">true to create the first of a series of nested units; false to create subsequent nested units.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Discards an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">The unit to discard.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Enables or disables the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.UndoEngine" /> is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, if found.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the requested service is not found.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Occurs immediately before an undo action is performed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Indicates if an undo action is in progress.</summary>
      <returns>true if an undo action is in progress; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Occurs immediately after an undo action is performed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Encapsulates a unit of work that a user can undo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</summary>
      <param name="engine">The undo engine that owns this undo unit.</param>
      <param name="name">The name for this undo unit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Receives a call from the undo engine to close this unit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Gets an instance of the requested service.</summary>
      <returns>An instance of the given service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />. </summary>
      <returns>The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current name of the unit.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current name of the unit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Performs an undo or redo action.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
      <returns>The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>Implements the basic functionality required by a single data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>When overridden in a derived class, closes this stream and the underlying stream gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>When overridden in a derived class, gets the value indicating whether the data source is designable.</summary>
      <returns>true if the data source is designable; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>When overridden in a derived class, gets the name of the data source.</summary>
      <returns>The name of the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>When overridden in a derived class, gets the fully qualified type name of the data source.</summary>
      <returns>The fully qualified type name of the data source.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to the collection.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> that was added to the collection.</returns>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to add to the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</summary>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</returns>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>Implements the basic functionality required by a single data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>When overridden in a derived class, gets the collection of descriptors for the data sources in this group.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> that represents the collection of descriptors for the data sources in this group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>When overridden in a derived class, gets the value indicating whether this group is the default group.</summary>
      <returns>true if this group is the default group; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>When overridden in a derived class, gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to the collection.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> that was added to the collection.</returns>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</summary>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</returns>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>Implements the basic functionality required of a service for providing access to a data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, creates and returns an instance of the given data source, and adds it to the design surface.</summary>
      <returns>An <see cref="T:System.Object" /> representing an instance of the added data source.</returns>
      <param name="host">The designer host.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <exception cref="T:System.ArgumentException">The type name cannot be created or resolved.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>When overridden in a derived class, retrieves the collection of data sources at the EnvDTE.Project level.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, or null if there are no data sources at the EnvDTE.Project level.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>When overridden in a derived class, invokes the Add New Data Source Wizard.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> collection of newly added data sources, or null if no data sources are added.</returns>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, invokes the Configure Data Source dialog box on the specified data source.</summary>
      <returns>true if any changes were made to that data source; otherwise, false.</returns>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <exception cref="T:System.ArgumentException">The specified data source is invalid or null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>When overridden in a derived class, notifies the service that a component representing a data source was added to the design surface.</summary>
      <param name="dsc">The data source component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />.</summary>
      <returns>true if the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports configuring data sources using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />.</summary>
      <returns>true if the service supports configuring a data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>Represents a column of a table or view in the data store accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name and data type. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name, data type, and default value. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified values. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column</param>
      <param name="identity">true if the field is the identity field of the data row; otherwise, false.</param>
      <param name="nullable">true if the field can be null in the data store; otherwise, false.</param>
      <param name="primaryKey">true if the field is the primary key of the data row; otherwise, false.</param>
      <param name="precision">The maximum number of digits used by a numeric data field.</param>
      <param name="scale">The maximum number of digits to the right of the decimal point in a numeric data field.</param>
      <param name="length">The length of the data field, in bytes.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>Gets the data type of the data column.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>Gets the default value of the data column.</summary>
      <returns>The default value of the data column. The default is null.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>Gets a value indicating whether the data column is an identity column for the data row.</summary>
      <returns>true of the column is an identity column; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>Gets the length in bytes of the data column.</summary>
      <returns>The length of the data column, in bytes.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>Gets the name of the column in the data store.</summary>
      <returns>The name of the column in the data store.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>Gets a value indicating whether the column can be null in the data store.</summary>
      <returns>true if the column can be null in the data store; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>Gets the number of digits in a numeric data column.</summary>
      <returns>The number of digits in a numeric data column. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>Gets a value indicating whether the column is part of the table's primary key.</summary>
      <returns>true if the column is part of the table's primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>Gets the number of digits to the right of the decimal point in a numeric column.</summary>
      <returns>The number of digits to the right of the decimal point in a numeric column.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>Represents a connection to a data store in a design tool. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string. </summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string, and indicates whether the connection was loaded from a configuration file. </summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store.</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
      <param name="isConfigured">true to indicate the connection was created from information stored in the application's configuration file; otherwise, false.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>Gets the application connection string defined for the connection.</summary>
      <returns>The application connection string defined for the connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>Gets a value indicating whether the connection information is in the application's configuration file.</summary>
      <returns>true if the connection is defined in the application's configuration file; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>Gets the name of the data connection.</summary>
      <returns>The name of the data connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>Gets the name of the provider used to access the underlying data store.</summary>
      <returns>The name of the provider used to access the underlying data store.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>Represents a parameter for a stored procedure. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> class with the specified name, data type, and input/output semantics. </summary>
      <param name="name">The name of the parameter.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>Gets the database type of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>Gets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>Gets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>Represents to the designer a relationship between two tables in the data source accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> class with the specified name, parent column, and child relationship. </summary>
      <param name="name">The name of the relationship.</param>
      <param name="parentColumns">The columns in the parent table that define the relationship.</param>
      <param name="childTable">The child table in the relationship.</param>
      <param name="childColumns">The columns in the child table that define the relationship.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>Gets a collection of columns from the child table that are part of the relationship.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the child table.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>Gets the child table referenced in the relationship.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> object that represents the child table in the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>Gets the name of the relationship.</summary>
      <returns>The name of the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>Gets a collection of columns from the parent table that are part of the relationship between two tables.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the parent table.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>Specifies the types of objects that can be retrieved from a data-store schema. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>Indicates that stored procedures should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>Indicates that tables should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>Indicates that data views should be returned from the data-store schema.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>Represents a stored procedure in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name. </summary>
      <param name="name">The name of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name and owner. </summary>
      <param name="name">The name of the stored procedure.</param>
      <param name="owner">The data store owner of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>When overridden in a derived class, returns a collection of parameters for the stored procedure.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>Gets the name of the stored procedure.</summary>
      <returns>The name of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>Gets the owner of the stored procedure.</summary>
      <returns>The owner of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>Gets a collection of parameters required for a stored procedure.</summary>
      <returns>A collection of parameters for the stored procedure.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>Represents a table in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name. </summary>
      <param name="name">The name of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name and owner. </summary>
      <param name="name">The name of the table.</param>
      <param name="owner">The owner of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>When overridden in a derived class, returns a collection of relationship objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>Gets a collection of relationships defined for a table.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>Defines the properties and methods shared between data-store tables and data-store views.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class. </summary>
      <param name="name">The name of the table or view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class. </summary>
      <param name="name">The name of the table or view.</param>
      <param name="owner">The data-store owner of the table or view.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>Gets a collection of columns defined for a table or view.</summary>
      <returns>A collection of columns defined for a table or view.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>When overridden in a derived class, returns a collection of data-store column objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>Gets the name of the data-store table or view.</summary>
      <returns>The name of the data-store table or view.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>Gets the owner of the data-store table or view.</summary>
      <returns>The owner of the data-store table or view.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>Represents a data view in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name. </summary>
      <param name="name">The name of the view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name and owner. </summary>
      <param name="name">The name of the view.</param>
      <param name="owner">The data-store owner of the view.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>Defines an interface to data services that enables control designers to integrate data store or database-related functionality into their design environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Creates a new data connection or edits an existing connection using the design tool's new connection user interface.</summary>
      <returns>A new or edited <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object, or null if the user canceled.</returns>
      <param name="owner">The parent window for the connection dialog.</param>
      <param name="initialConnection">The connection, if any, to edit. To create a new connection, <paramref name="initialConnection" /> should be null.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>Launches a dialog to build a SQL query string.</summary>
      <returns>A string containing the SQL query, or null if the user canceled.</returns>
      <param name="owner">The parent window for the dialog.</param>
      <param name="connection">The data connection to use for the query.</param>
      <param name="mode">One of the <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" /> values.</param>
      <param name="initialQueryText">The initial value of the query or <see cref="F:System.String.Empty" /> to create a new query.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>Writes a connection string to the application's configuration file.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the saved connection data with the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> property set to <paramref name="name" />, and the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> property set to true.</returns>
      <param name="owner">The parent window for the dialog, if any.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the connection data to save.</param>
      <param name="name">The name of the new connection configuration entry.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>Gets a collection of data connections defined in the current design session.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> objects representing the data connections available in the current design session.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Returns a code expression that contains the source code required to retrieve a connection string from the application's configuration file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object containing the source code required to retrieve a connection string from the application's configuration file.</returns>
      <param name="connection">The connection to retrieve from the application's configuration file.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets the schema for the specified data connection.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> object containing the schema information for the specified data connection, or null if no schema information is available.</returns>
      <param name="connection">The data connection for which to return schema information.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets a database connection that can be used at design time.</summary>
      <returns>A <see cref="T:System.Data.Common.DbConnection" /> object that can be used at design time.</returns>
      <param name="connection">The desired data connection.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>Defines methods for retrieving data-store schema information.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Gets a collection of specified schema items.</summary>
      <returns>A collection of schema objects of the specified type.</returns>
      <param name="schemaClass">The schema objects to return.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Returns a value indicating whether the data store contains the specified data-schema object.</summary>
      <returns>true if the data store supports the specified data-schema object; otherwise, false.</returns>
      <param name="schemaClass">The schema objects to return.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>Specifies the type of data-store query the design environment should construct.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>The query being built is a Select query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>The query being built is an Update query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>The query being built is an Insert query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>The query being built is a Delete query.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Starts the loading process.</summary>
      <param name="host">The designer loader host to load.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <returns>true if the component notification was enabled prior to this call; otherwise, false.</returns>
      <param name="enable">true to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; false to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>Flushes pending changes to the designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the requested service cannot be found.</returns>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>Indicates whether the designer should be reloaded.</summary>
      <returns>true if the designer should be reloaded; otherwise, false. The default implementation always returns true.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>Gets the loader host.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>Gets a value indicating whether the designer loader is loading the design surface.</summary>
      <returns>true if the designer loader is currently loading the design surface; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>Gets or sets a value indicating whether the designer has been modified.</summary>
      <returns>true if the designer has been modified; otherwise, false,</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">true if the load completed successfully; otherwise, false.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>Notifies the designer loader that the state of the document is about to be modified.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Flushes all changes to the designer.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Loads a designer from persistence.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>Gets or sets the property provider for the serialization manager being used by the loader.</summary>
      <returns>An object whose properties are to be provided to the serialization manager.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>Queues a reload of the designer.</summary>
      <param name="flags">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>Gets a value indicating whether a reload has been queued.</summary>
      <returns>true, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>Reports errors that occurred while flushing changes.</summary>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</param>
      <exception cref="T:System.InvalidOperationException">One or more errors occurred while flushing changes.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>Sets the full class name of the base component.</summary>
      <param name="name">A string representing the full name of the component to be designed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Signals that a dependent load has finished.</summary>
      <param name="successful">true to load successfully; otherwise, false.</param>
      <param name="errorCollection">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</param>
      <exception cref="T:System.InvalidOperationException">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>Reloads the design document.</summary>
      <returns>true if the reload request is accepted; false if the loader does not allow the reload.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>Defines the behavior of the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> method. These flags can be combined using the bitwise OR operator.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to true if load errors occur.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>The designer loader will set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to true if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>The designer loader forces the reload to occur. Normally, a reload occurs only if the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> method returns true. This flag bypasses calling this method and always performs the reload.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>The designer loader abandons any changes before reloading.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Serializes a set of components into a serialization store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class using the given service provider to resolve services.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> to use for resolving services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Deserializes the given store to produce a collection of objects.</summary>
      <returns>A collection of deserialized components.</returns>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</summary>
      <returns>A collection of deserialized components.</returns>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <param name="container">A container to which <see cref="T:System.ComponentModel.IComponent" />  objects will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  from which the objects will be deserialized.</param>
      <param name="container">A container of objects to which data will be applied.</param>
      <param name="validateRecycledTypes">true to validate the recycled type; otherwise, false.</param>
      <param name="applyDefaults">true to apply default property values; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from the given stream.</summary>
      <returns>The loaded <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
      <param name="stream">The stream from which to load the <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> supports seeking, but its length is 0. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="value" /> will be serialized. </param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object, accounting for default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="value" /> will be serialized. </param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="member" /> will be serialized. </param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object, but also serializes the member if it contains the default property value.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="member" /> will be serialized. </param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>Provides the base class for implementing a CodeDOM-based designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use. </summary>
      <returns>The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>Returns a value indicating whether a reload is required.</summary>
      <returns>true if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event. </summary>
      <param name="component">The component to rename.</param>
      <param name="oldName">The original name of the component.</param>
      <param name="newName">The new name of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">true to indicate that the load completed successfully; otherwise, false.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Requests serialization of the root component of the designer.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Parses code from a CodeDOM provider.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>Deserializes the specified serialization data object and returns a collection of objects represented by that data.</summary>
      <returns>A collection of objects represented by <paramref name="serializationData" />.</returns>
      <param name="serializationData">An object consisting of serialized data.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>Serializes the specified collection of objects and stores them in a serialization data object.</summary>
      <returns>An object that contains the serialized state of the specified collection of objects.</returns>
      <param name="objects">A collection of objects to serialize.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />  was not found.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Creates a new name that is unique to all components in the specified container.</summary>
      <returns>A unique name for the data type.</returns>
      <param name="container">The container where the new object is added.</param>
      <param name="dataType">The data type of the object that receives the name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <returns>true if the name is valid; otherwise, false.</returns>
      <param name="name">The name to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <param name="name">The name to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not a valid identifier, or there is already a component with the same name. </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>Gets the type resolution service to be used with this designer loader.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>Writes compile-unit changes to persistent storage.</summary>
      <param name="unit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>Determines the localization model to be used by the CodeDom resource adapter.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>The localization provider will write localized property values into a resource file and use the <see cref="T:System.ComponentModel.ComponentResourceManager" /> class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>Provides CodeDOM resource serialization services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class. </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class. </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter </param>
      <param name="supportedCultures">An array of cultures that this resource adapter should support.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <returns>An instance of a serializer of the type requested, or null if the request cannot be satisfied.</returns>
      <param name="manager">The serialization manager requesting the serializer. </param>
      <param name="currentSerializer">An instance of the current serializer of the specified type. This can be null if no serializer of the specified type exists. </param>
      <param name="objectType">The data type of the object to serialize. </param>
      <param name="serializerType">The data type of the serializer to create. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Deserializes the specified serialized CodeDOM object into an object.</summary>
      <returns>The deserialized CodeDOM object.</returns>
      <param name="manager">A serialization manager interface that is used during the deserialization process. </param>
      <param name="codeObject">A serialized CodeDOM object to deserialize. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="codeObject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> is an unsupported code element.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a single statement.</summary>
      <returns>An object instance resulting from deserializing <paramref name="statement" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="statement">The statement to deserialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Determines which statement group the given statement should belong to.</summary>
      <returns>The name of the component with which <paramref name="statement" /> should be grouped.</returns>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> for which to determine the group.</param>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> that <paramref name="statement" /> has been reduced to.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of <paramref name="statement" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a CodeDOM object.</summary>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
      <param name="manager">The serialization manager to use during serialization. </param>
      <param name="value">The object to serialize. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object, accounting for default values.</summary>
      <returns>A CodeDom object representing <paramref name="value" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> representing the serialized state of <paramref name="member" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member, accounting for default values.</summary>
      <returns>A CodeDom object representing <paramref name="member" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified value to a CodeDOM expression.</summary>
      <returns>The serialized value. This returns null if no reference expression can be obtained for the specified value, or the value cannot be serialized.</returns>
      <param name="manager">The serialization manager to use during serialization. </param>
      <param name="value">The object to serialize. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Deserializes the given expression into an in-memory object.</summary>
      <returns>An object resulting from interpretation of <paramref name="expression" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="name">The name of the object that results from the expression. Can be null if there is no need to name the object.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Returns an instance of the given type.</summary>
      <returns>An instance of <paramref name="type" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="type">The <see cref="T:System.Type" /> of the instance to return.</param>
      <param name="parameters">The parameters to pass to the constructor for <paramref name="type" />.</param>
      <param name="name">The name of the deserialized object.</param>
      <param name="addToContainer">true to add this object to the design container; otherwise, false. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Deserializes properties on the given object from the invariant culture’s resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object from which the properties are to be deserialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a statement by interpreting and executing a CodeDOM statement.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="type">The target type.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of events as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of events as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns an expression for the given object.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing v<paramref name="alue" />, or null if there is no existing expression for v<paramref name="alue" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which to get an expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of properties as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of properties as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a reflection type generated from type metadata.</summary>
      <returns>A reflection type generated from the metadata of <paramref name="type" />.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="type">The type to use metadata from.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a reflection type generated from object metadata.</summary>
      <returns>A reflection type generated from the metadata of <paramref name="object" />.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">The object to use metadata from.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Locates a serializer for the given object value.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object specifying the serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Locates a serializer for the given type.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="valueType">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="valueType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</summary>
      <returns>A .NET Framework-aware type description provider.</returns>
      <param name="provider">The type description provider service.</param>
      <param name="instance">An object from which the type description provider service can be derived, if <paramref name="provider" /> is null.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a unique name for the given object.</summary>
      <returns>A unique name for <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which the name will be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a value indicating whether the given object has been serialized.</summary>
      <returns>true if <paramref name="value" /> has been serialized; otherwise, false.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</summary>
      <returns>true if <paramref name="value" /> has been serialized; otherwise, false.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <param name="honorPreset">true to include preset expressions; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Returns an expression representing the creation of the given object.</summary>
      <returns>An expression representing the creation of <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="isComplete">true if <paramref name="value" /> was fully serialized; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Serializes the given event into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object to which <paramref name="descriptor" /> is bound.</param>
      <param name="descriptor">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is null.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the specified events into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object on which events will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</param>
      <param name="value">The object on which the properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the invariant culture’s resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">Not used.</param>
      <param name="value">The object whose properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Serializes a property on the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</param>
      <param name="value">The object on which the property will be serialized.</param>
      <param name="propertyToSerialize">The property to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, null.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize. Can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Serializes the given object into an expression appropriate for the invariant culture.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="ensureInvariant">true to serialize into the invariant culture; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Associates an object with an expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Associates an object with an expression, optionally specifying a preset expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <param name="isPreset">true to specify a preset expression; otherwise, false.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>The exception that is thrown when line number information is available for a serialization error.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified exception and line information.</summary>
      <param name="ex">The exception to throw. </param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class. </summary>
      <param name="ex">The exception to throw. </param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified serialization data and context.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing. </param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified message and line information.</summary>
      <param name="message">A message describing the exception. </param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class. </summary>
      <param name="message">A message describing the exception. </param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the parameter name and additional exception information.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing. </param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Gets or sets the line information for the error associated with this exception.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the line information for the error.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Serializes collections.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Verifies serialization support by the <paramref name="method" />.</summary>
      <returns>true if the <paramref name="method" /> supports serialization; otherwise, false.</returns>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> to check for serialization attributes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given collection into a CodeDOM object.</summary>
      <returns>A CodeDOM object representing <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Serializes the given collection.</summary>
      <returns>Serialized collection if the serialization process succeeded; otherwise, null.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="targetExpression">The <see cref="T:System.CodeDom.CodeExpression" /> that refers to the collection</param>
      <param name="targetType">The <see cref="T:System.Type" /> of the collection.</param>
      <param name="originalCollection">The collection to serialize.</param>
      <param name="valuesToSerialize">The values to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, or <paramref name="valuesToSerialize" /> is null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Gets or sets to the container for this serialization manager.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Creates an instance of a type.</summary>
      <returns>A new instance of the type specified by <paramref name="type" />.</returns>
      <param name="type">The type to create an instance of.</param>
      <param name="arguments">The parameters of the type’s constructor. This can be null or an empty collection to invoke the default constructor.</param>
      <param name="name">A name to give the object. If null, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</param>
      <param name="addToContainer">true to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, false.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Creates a new serialization session.</summary>
      <returns>An <see cref="T:System.IDisposable" /> that represents a new serialization session.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager is already within a session. This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Gets the list of errors that occurred during serialization or deserialization.</summary>
      <returns>The list of errors that occurred during serialization or deserialization.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Gets the type corresponding to the specified type name.</summary>
      <returns>The specified type.</returns>
      <param name="typeName">The name of the type to get.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Gets the serializer for the given object type.</summary>
      <returns>The serializer for <paramref name="objectType" />, or null, if not found.</returns>
      <param name="objectType">The type of object for which to retrieve the serializer.</param>
      <param name="serializerType">The type of serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> or <paramref name="serializerType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Gets the requested type.</summary>
      <returns>The requested type, or null if the type cannot be resolved.</returns>
      <param name="typeName">The name of the type to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; false if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">This property was changed from within a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</summary>
      <returns>The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type. </summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; false if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Occurs when a session is created. </summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Occurs when a session is disposed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adds a custom serialization provider to the serialization manager.</summary>
      <param name="provider">The serialization provider to add.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Gets the context stack for this serialization session. </summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</summary>
      <returns>The newly created object instance.</returns>
      <param name="type">The data type to create. </param>
      <param name="arguments">The arguments to pass to the constructor for this type. </param>
      <param name="name">The name of the object. This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. If null is passed, the object is still created but cannot be accessed by name. </param>
      <param name="addToContainer">true to add this object to the design container. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Retrieves an instance of a created object of the specified name.</summary>
      <returns>An instance of the object with the given name, or null if no object by that name can be found.</returns>
      <param name="name">The name of the object to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Retrieves a name for the specified object.</summary>
      <returns>The name of the object, or null if the object is unnamed.</returns>
      <param name="value">The object for which to retrieve the name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Gets a serializer of the requested type for the specified object type.</summary>
      <returns>An instance of the requested serializer, or null if no appropriate serializer can be located.</returns>
      <param name="objectType">The type of the object to get the serializer for.</param>
      <param name="serializerType">The type of the serializer to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Gets a type of the specified name.</summary>
      <returns>An instance of the type, or null if the type cannot be loaded.</returns>
      <param name="typeName">The fully qualified name of the type to load.</param>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property. </summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Removes a previously added serialization provider.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Used to report a recoverable error in serialization.</summary>
      <param name="errorInformation">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table. </summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Occurs when serialization is complete.</summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Sets the name for the specified object.</summary>
      <param name="instance">The object to set the name.</param>
      <param name="name">A <see cref="T:System.String" /> used as the name of the object.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
      <exception cref="T:System.ArgumentException">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</summary>
      <returns>A service object of type <paramref name="serviceType" />.-or-null if there is no service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, false if it does not. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Provides a means of passing context state among serializers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner. </summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <param name="presetValue">The given code expression preset value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Gets the expression this context represents.</summary>
      <returns>The expression this context represents.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Gets the <see cref="T:System.Type" /> of the expression.</summary>
      <returns>The <see cref="T:System.Type" /> of the expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Gets the object owning this expression.</summary>
      <returns>The object owning this expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Gets the preset value of an expression.</summary>
      <returns>The preset value of this expression, or null if not assigned.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>Provides an interface that can be used to optimize the reloading of a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>Indicates whether the designer should reload in order to import the specified compile unit correctly.</summary>
      <returns>true if the designer should reload; otherwise, false.</returns>
      <param name="newTree">A <see cref="T:System.CodeDom.CodeCompileUnit" /> containing the designer document code. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Provides the base class for serializing a reflection primitive within the object graph.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Serializes the given member descriptor on the given value to a statement collection.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which <paramref name="descriptor" /> is serialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Determines if the given member should be serialized.</summary>
      <returns>true, if the member described by <paramref name="descriptor" /> should be serialized; otherwise, false.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Holds a table of statements that is offered by the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Determines whether the table contains the given statement owner.</summary>
      <returns>true if <paramref name="statementOwner" /> is in the table; otherwise, false.</returns>
      <param name="statementOwner">The owner of the statement collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Gets the statement collection for the given owner.</summary>
      <returns>The statement collection for <paramref name="statementOwner" />, or null if <paramref name="statementOwner" /> is not in the table.</returns>
      <param name="statementOwner">The owner of the statement collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Populates the statement table with a collection of statement owners.</summary>
      <param name="statementOwners">A collection of statement owners to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Populates the statement table with a statement owner.</summary>
      <param name="owner">The statement owner to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adds a root context to provide a definition of the root object. This class cannot be inherited</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> class. </summary>
      <param name="expression">The expression representing the root object in the object graph.</param>
      <param name="value">The root object of the object graph.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Gets the expression representing the root object in the object graph.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing the root object in the object graph.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Gets the root object of the object graph.</summary>
      <returns>The root object of the object graph.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Specifies that serializers should handle default values. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class with the option of binding to a specific member. </summary>
      <param name="member">The member to which this context is bound. Can be null.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Gets the member to which this context is bound.</summary>
      <returns>The member to which this context is bound, or null if the context is bound to all members of an object.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Gets a value indicating whether the given member should be serialized in this context.</summary>
      <returns>true if the given member should be serialized in this context; otherwise, false.</returns>
      <param name="member">The member to be examined for serialization.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Provides a location into which statements can be serialized. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Gets a collection of statements offered by the statement context.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> containing statements offered by the statement context. </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Serializes an object to a new type.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Deserializes the given type declaration.</summary>
      <returns>A root <see cref="T:System.Object" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">Type declaration to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Returns the method where statements used to serialize a member are stored.</summary>
      <returns>The method used to emit all of the initialization code for the given member.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <param name="value">The value to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Returns an array of methods to be interpreted during deserialization.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Serializes the object root by creating a new type declaration that defines root.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="root">The object to serialize.</param>
      <param name="members">Optional collection of members. Can be null or empty.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="root" /> is null.</exception>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>This class is used to generate a database query method signature, as it will be created by the typed dataset generator.</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>Initializes a new instance of the MethodSignatureGenerator class.</summary>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>Gets or sets the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object.</summary>
      <returns>The <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object, which provides code generation and code compilation interfaces for generating code and managing compilation for a single programming language. Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>Gets or sets the type of object that the query will fill.</summary>
      <returns>The type of object that the query will fill. The type will be either <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>Gets or sets the type name of the typed dataset to be filled.</summary>
      <returns>A string representing the type name of the typed dataset to be filled.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>Returns the code member method representing the database query, as generated by the typed dataset generator.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> object representing the database query, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>Returns a string representing the database query method signature, as generated by the typed dataset generator.</summary>
      <returns>A string representing the database query method signature, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>Returns a code type declaration containing the Insert, Update, and Delete methods associated with the database query.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object containing the Insert, Update, and Delete methods associated with the database query.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>Gets or sets a Boolean value specifying whether the signature generated needs to return a <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>A Boolean value specifying whether the signature generated needs to return a <see cref="T:System.Data.DataTable" /> object: True if the signature generated needs to return a data table, otherwise False.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>Gets or sets a Boolean value specifying whether the method supports paging.</summary>
      <returns>A Boolean value specifying whether the method supports paging: True if the method supports paging; False if it does not.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>Gets or sets the category of types to use for parameters.</summary>
      <returns>A ParameterGenerationOption value specifying the category of types to use for parameters: <see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" /> (the default), <see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" />, or <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>Sets the schema of the design table for which the database query method will be generated.</summary>
      <param name="designTableContent">A string representation of the table schema.</param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>Sets the database query for which the method signature will be generated.</summary>
      <param name="methodSourceContent">A string representation of the database query.</param>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>Gets or sets the type name of the typed table to fill.</summary>
      <returns>A string indicating the type name of the typed table to fill.</returns>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>Sets the type of parameters that are generated in a typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>Parameters in the typed dataset are CLR types.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>Parameters in the typed dataset are Sql types.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>Parameters in the typed dataset are all of <see cref="T:System.Object" />.</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on an existing <see cref="T:System.Data.DataSet" />. </summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeNamespace">The namespace that provides the target namespace for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="specifiedFactory">The <see cref="T:System.Data.Common.DbProviderFactory" /> to use to override the provider contained in the <paramref name="inputFileContent" />.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>Returns the first provider name found in the provided input file.</summary>
      <returns>A string that represents the specific provider for this <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>Returns the provider name for the <paramref name="tableName" /> in the input file.</summary>
      <returns>A string that represents the provider name for the specific table passed in to the <paramref name="tableName" /> parameter.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="tableName">A string that represents the name of the table to return the provider name from.</param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>Gets or sets the collection of assemblies referenced in a typed dataset.</summary>
      <returns>A collection containing all referenced assemblies in the dataset.</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>Provides the <see cref="T:System.Data.Design.TypedDataSetGenerator" />with information for creating typed datasets that support LINQ to DataSet and hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>Generates typed datasets that are compatible with typed datasets generated in versions of Visual Studio earlier than Visual Studio 2008.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>Generates typed datasets that have a TableAdapterManager and associated methods for enabling hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>Generates typed datasets that have data tables that inherit from <see cref="T:System.Data.TypedTableBase`1" /> in order to enable the ability to perform LINQ queries on data tables.</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>The exception that is thrown when a name conflict occurs while a strongly typed <see cref="T:System.Data.DataSet" /> is being generated.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class by passing in a collection of errors.</summary>
      <param name="list">An <see cref="T:System.Collections.IList" /> of errors.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with the specified string and inner exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>Gets a dynamic list of generated errors.</summary>
      <returns>The error list.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the ISerializable interface and returns the data that you must have to serialize the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class</summary>
      <param name="dataSetGenerateOptions">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> value for generating typed datasets that enable LINQ to DataSet and Hierarchical Update.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <returns>Returns a <see cref="T:System.String" /> representing the name of the typed dataset class.</returns>
      <param name="name">A <see cref="T:System.String" /> representing the name of the schema to import.</param>
      <param name="namespaceName">A <see cref="T:System.String" /> representing the namespace of the XML schema.</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the XML schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <returns>Returns a <see cref="T:System.String" /> representing the name of the typed dataset class.</returns>
      <param name="type">XMLSchemaType</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">CodeNamespace</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations. Expands upon <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> to provide additional functionality for typed datasets created for .NET Framework version 3.5.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" /> class.</summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context. </summary>
      <returns>true if the conversion can be performed; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" />  that represents the type you want to convert from.</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to a string, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" />  to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" />  to convert</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a collection of standard values for the data type this validator is designed for.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</summary>
      <returns>true because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports. This method never returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process module.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process module exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process thread.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>Provides basic design-time functionality for the <see cref="T:System.Messaging.Message" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.MessageDesigner" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Modifies the set of properties that the designer exposes through the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> that contains the set of properties to filter for the component.</param>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>Provides support for strongly-typed resources. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources referenced in the specified collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources referenced in the specified collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated. </param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources in the specified .resx file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> or <paramref name="codeProvider" /> is null.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources in the specified .resx file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated. </param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename " />or <paramref name="codeProvider" /> is null.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a valid resource string based on the specified input string and code provider.</summary>
      <returns>A valid resource name derived from the <paramref name="key" /> parameter. Any invalid tokens are replaced with the underscore (_) character, or null if the derived string still contains invalid characters according to the language specified by the <paramref name="provider" /> parameter.</returns>
      <param name="key">The string to verify and, if necessary, convert to a valid resource name.</param>
      <param name="provider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that specifies the target language to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="provider" /> is null.</exception>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>Provides design-time services for the <see cref="T:System.ServiceProcess.ServiceController" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the <see cref="T:System.ServiceProcess.ServiceController" /> exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the <see cref="T:System.ServiceProcess.ServiceController" /> class. </param>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing an application setting expression in a configuration file at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an application setting expression string and provides the design-time value for a control property.</summary>
      <returns>The object referenced by <paramref name="expression" />, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">An application setting expression string to evaluate. <paramref name="expression" /> does not include the AppSettings expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />.</param>
      <param name="propertyType">The control property type.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for an application setting expression.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines the application setting expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. <paramref name="expression" /> does not include the AppSettings expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>Provides a data-binding handler for a calendar.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Sets the calendar's date to the current day if the <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> property is data-bound.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to which data binding will be added. </param>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>Represents a client script element in a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItem" /> class using the provided parameters.</summary>
      <param name="text">The contents for the script element; a string of script statements to run on the client.</param>
      <param name="source">The src attribute value for the script element, specifying an external source location for the client script contents.</param>
      <param name="language">The language attribute value for the script element, specifying the language of the script statements.</param>
      <param name="type">The type attribute value for the script element, indicating the MIME type for the associated scripting engine.</param>
      <param name="id">The ID for the script element. This argument is required by the design host (for example, Visual Studio 2005).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is null (thrown by the design host).</exception>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>Gets the ID attribute value for the client script element.</summary>
      <returns>The ID value of the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>Gets the language attribute value for the client script element.</summary>
      <returns>The language name specified for the language attribute in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>Gets the src attribute value for the client script element.</summary>
      <returns>The path to the source file specified for the src attribute in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>Gets the script statements contained in the client script element.</summary>
      <returns>The script statements contained in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>Gets the type attribute value for the client script element.</summary>
      <returns>The name of the MIME type associated with the script element.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>Represents a read-only collection of client script blocks that are contained within a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> class. </summary>
      <param name="clientScriptItems">An array of <see cref="T:System.Web.UI.Design.ClientScriptItem" /> elements used to initialize the collection.</param>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>Provides an HTML color string builder at design time that allows a user to select a color.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>Starts a color editor to build an HTML color property value.</summary>
      <returns>The color value, represented as a string in an HTML color format, or null if the builder service could not be retrieved.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Web.UI.Control" /> used to parent the picker window. </param>
      <param name="initialColor">The initial color to be shown in the picker window, in a valid HTML color format. </param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>Provides a base class for a user interface to select and edit a connection string property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object by using the specified service provider and context.</summary>
      <returns>The selected connection expression, as a string object; otherwise, if a connection expression was not selected, the same <paramref name="value" /> that was passed in.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
      <param name="provider">A service provider object through which to obtain editing services.</param>
      <param name="value">An instance of the object being edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editing style that is associated with the connection string editor for the specified context.</summary>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value that indicates the editing style for the provided user interface.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the provider name for the provided instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <returns>Always an empty string ("").</returns>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Puts the provider name on the specified instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>Provides properties and methods for selecting a data connection expression that is associated with a control property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a connection string expression and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A connection string expression to evaluate. The expression does not include the ConnectionStrings expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a connection string expression.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> instance that defines the connection string expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. The expression does not include the ConnectionStrings expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>Provides designer functionality for controls that contain child controls or properties that can be modified at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds the style attributes for the control at design time.</summary>
      <param name="styleAttributes">A keyed collection of style attributes.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>Gets a value indicating if the control can be resized at design time.</summary>
      <returns>true, if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>Gets the caption that is displayed for a control at design time.</summary>
      <returns>The string used for the control frame caption at design time, if the control has a design-time caption; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>Gets the style that is applied to the control frame at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> for the control frame at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>Returns the collection of style attributes for the control at design time.</summary>
      <returns>A collection of style attributes applied to the control on the design surface. The style attribute names are keys used to access the style attribute values in the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Returns the HTML markup that is used to represent the control at design time.</summary>
      <returns>An HTML markup string that represents the control.</returns>
      <param name="regions">A collection of designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for the editable region of the control at design time.</summary>
      <returns>The persisted content of the region contained within the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.</returns>
      <param name="region">An editable design region contained within the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>Returns the persistable content of the control at design time.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content for the editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">Content to assign for the editable design region.</param>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>Provides a property structure that defines Web content at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.ContentDefinition" /> class.</summary>
      <param name="id">A string identifier for the content.</param>
      <param name="content">The default HTML markup content.</param>
      <param name="designTimeHtml">The design-time HTML markup content.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>Gets the ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> control that is associated with the current content.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> associated with the current content.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>Gets the default HTML markup for the content.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>Gets the HTML markup to represent the content at design time.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>Enumerates the possible settings for the state of a <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>The associated control displays the default content.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>The associated control displays the user content.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
      <returns>true, if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>Creates HTML markup to display a specified error message at design time.</summary>
      <returns>An HTML markup string that contains the specified error message.</returns>
      <param name="errorMessage">The error message to include in the generated HTML markup.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
      <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
      <param name="errorMessage">The error message to include in the generated HTML string.</param>
      <param name="e">The exception to include in the generated HTML string.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
      <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
      <returns>A string that contains design-time HTML markup providing information about the control.</returns>
      <param name="instruction">A string that contains text and markup to add to the HTML output. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
      <returns>true, if the container for the control supports data binding; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
      <returns>A <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> property that implements <see cref="T:System.Collections.IDictionary" /> and uses the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> to persist state data for the associated control at design time. </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>Gets the view-control object for the control designer.</summary>
      <returns>null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
      <returns>true, if loading must be complete before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">A collection of control designer regions for the associated control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, null.</returns>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception. </summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
      <returns>A string representing the persistable inner HTML markup for the associated control. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>Retrieves the persistable inner HTML markup of the control.</summary>
      <returns>The persistable inner HTML markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
      <returns>true, if the properties of the associated control are hidden when the control is in template mode; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>Gets or sets the ID string for the control.</summary>
      <returns>The ID string for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the control designer and loads the specified component.</summary>
      <param name="component">The control being designed. </param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
      <returns>true, if the control is in either template viewing or editing mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.-or-<paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
      <returns>true, if the Web server control has changed since it was last persisted or loaded; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
      <returns>true, if the property is data-bound; otherwise, false.</returns>
      <param name="propName">The property to test for data binding. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
      <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Called when the data-binding collection changes.</summary>
      <param name="propName">The property to test for changes in its bindings collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control. </summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is true.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
      <returns>true, if the properties of the control are read-only at design time; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>Registers internal data in a cloned control.</summary>
      <param name="original">The control associated with the control designer.</param>
      <param name="clone">The cloned copy of the associated control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="original" /> is null.-or-<paramref name="clone" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object that can be used at design time to access components on the Web Forms page that contains the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time. </summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
      <param name="region">An editable design region contained within the design-time view of the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
      <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
      <param name="setFlag">true to set the flag, false to remove the flag.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>Gets an object representing the HTML markup element for the associated control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> object that represents the HTML markup element for the associated control. </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true, if the control designer uses a temporary copy of the control for design-time preview; otherwise, false, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> object used by the base class to generate design-time HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>Gets or sets a value indicating whether a View control has been created for display on the design surface.</summary>
      <returns>true, if a control has been created for viewing on the design surface; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>Gets a value that indicates whether the control is visible at design time.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>Provides access to the state of the control designer in the design host through the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> interface. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>Represents one element, identified by the given key, in the state collection for a control designer.</summary>
      <returns>The object identified by <paramref name="key" />.</returns>
      <param name="key">The name of the item to set or retrieve from the state collection.</param>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>Specifies the possible locations for adding a control in a container.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>Adds the control before the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>Adds the control after the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>Adds the control at the start of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>Adds the control at the end of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>Adds the control as the first child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>Adds the control as the last child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>Provides methods for creating a Web server <see cref="T:System.Web.UI.Control" /> control or <see cref="T:System.Web.UI.ITemplate" /> interface from a string of markup that represents a persisted control or template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that controlText represents; otherwise, null, if the parser cannot build the control.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="controlText">The HTML markup for the control. </param>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid. </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host and directives.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that <paramref name="controlText" /> represents.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">The text of the HTML markup for the control.</param>
      <param name="directives">The page directives to include in the code for the control.</param>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid. </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an array of controls from the specified markup using the specified designer host.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Control" /> elements, parsed from <paramref name="controlText" />; otherwise, null, if the parser cannot build the controls.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">A string that represents a collection of markup for controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.- or -<paramref name="controlText" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an <see cref="T:System.Web.UI.ITemplate" /> interface from the specified template markup.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="templateText">A string containing the template markup. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Parses the specified template markup and creates an <see cref="T:System.Web.UI.ITemplate" /> interface.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="templateText">A string containing the template markup. </param>
      <param name="directives">Any directives to add to the beginning of the code for the template. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.</exception>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>Provides methods for persisting Web server controls at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>Gets a string of data that represents the persisted form of the specified control.</summary>
      <returns>A string that represents the persisted form of the control.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified control, using the specified designer host.</summary>
      <returns>A string that represents the persisted form of the control.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that can persist the inner properties of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to use. </param>
      <param name="component">The component to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that can persist the inner properties of the specified control.</summary>
      <returns>A string that contains the information to persist about the inner properties of the control.</returns>
      <param name="component">The component to persist the inner properties of. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Writes a string of data that represents the persisted form of the specified template to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write the persisted template data to.</param>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified template.</summary>
      <returns>A string that represents the persisted form of the template.</returns>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>Provides a type converter for <see cref="T:System.Web.UI.DataBindingCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a data binding collection to the specified type.</summary>
      <returns>The object produced by the type conversion. If the <paramref name="destinationType" /> parameter is of type <see cref="T:System.String" />, this method returns an empty string ("").</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the component or control to which the data binding collection belongs. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to provide additional culture information. </param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert to. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>Provides a user interface for editing a collection of data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified data-binding collection using the specified service provider and context.</summary>
      <returns>The new collection.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control the collection belongs to. </param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> to use. </param>
      <param name="value">The collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> object that specifies the editor style of the component or control.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control to retrieve the edit style for. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>Provides a base class for a data-binding handler.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingHandler" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Binds the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>Provides a UI handler for data binding values.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>Adds a data binding for the specified property and the specified value item list, if the current control has data bindings and the current object does not already have a binding.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can provide additional context information. </param>
      <param name="propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property to add a data binding for. </param>
      <param name="valueUIItemList">An <see cref="T:System.Collections.ArrayList" /> of items that have data bindings. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>Provides a type converter for a property representing the field name of a bound column field in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> instance containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <returns>true if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.</summary>
      <returns>true if this converter returns a standard set of available values for assignment to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>Provides a type converter that can retrieve a list of data fields from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data fields present within the selected data source if information about them is available.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> can be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>Provides a type converter that can retrieve a list of data members from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data members present within the selected data source, if information about them is available.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the data members of the data source selected for the component. </returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false. This implementation always returns true.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>Represents the structure, or schema, of a data field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> class using a specified <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> object that the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> object  describes.</param>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>Gets the type of data stored in the data field.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of data the data field contains.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the data field automatically increments for each new row added to the table or view.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> is numeric and the value of the column increments automatically as new rows are added to the <see cref="T:System.Data.DataTable" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.DataColumn" /> is read-only.</summary>
      <returns>true if the data field is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the data field are required to be unique.</summary>
      <returns>true if data in the data field is unique; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>Gets a value indicating the size of data that can be stored in the data field.</summary>
      <returns>The number of bytes the column can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>Gets the name of the data field.</summary>
      <returns>The name of the data field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>Gets a value indicating whether the data field can accept null values.</summary>
      <returns>true if the data field can accept null values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the data field.</summary>
      <returns>This property always returns -1.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the data field is in the primary key for the containing table or view.</summary>
      <returns>true if the data field is in the primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the data field are resolved.</summary>
      <returns>This property always returns -1.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>The <see cref="T:System.Web.UI.Design.DataSetSchema" /> class represents the structure, or schema, of a data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetSchema" /> class using a specified <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> that the <see cref="T:System.Web.UI.Design.DataSetSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>Gets an array containing information about each view in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>Represents the structure, or schema, of a <see cref="T:System.Data.DataTable" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> class using a specified <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>Gets an array containing information about each data field in the view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>Gets the name of the view using its <see cref="P:System.Data.DataTable.TableName" /> property.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>Provides a type converter for a property representing a Boolean field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available Boolean values that can be assigned to the associated field.</summary>
      <returns>A collection of Boolean values.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of data sources accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the standard data sources accessible to the control.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false. This implementation always returns true.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <returns>true if <paramref name="component" /> implements <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />; otherwise, false.</returns>
      <param name="component">The component to check as a valid data source.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>Provides design-time support in a design host for the <see cref="T:System.Web.UI.DataSourceControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>Gets a list of items that are used to create an action list menu at design time.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object containing the action list items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup for displaying the associated data source control at design time.</summary>
      <returns>The markup for the design-time display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="viewName">The name of the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>Returns an array of the view names that are available in this data source.</summary>
      <returns>An array of view names.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">true to allow events when refreshing the schema; false to disable the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> and <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> events when refreshing the schema.</param>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after the data source events have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>Provides a value that indicates whether two schemas are equal.</summary>
      <returns>true if both schemas are equivalent; otherwise, false.</returns>
      <param name="schema1">The first schema to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceSchema" />).</param>
      <param name="schema2">The second schema to compare.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Gets a value indicating whether the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event or the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method occurs.</summary>
      <returns>true if events are being suppressed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>Provides a value that determines whether two schema views are equal.</summary>
      <returns>true if both views are equivalent; otherwise, false. </returns>
      <param name="viewSchema1">The first view to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />).</param>
      <param name="viewSchema2">The second view to compare.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>Provides a type converter for a property representing a field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="typeFilter">A type used to filter fields to include in the standard values list.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <returns>true if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.</summary>
      <returns>true if this converter returns a standard set of available values for assignment to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>Provides the abstract base class for creating formats that can be applied to a custom Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class.</summary>
      <param name="name">A string that identifies a specific <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>Applies the associated formatting to the specified control.</summary>
      <param name="control">A Web server control to apply the formatting to.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>Returns a copy of the associated control in order to provide a preview before applying the format to the control.</summary>
      <returns>The <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> method returns a copy of the associated Web server control.</returns>
      <param name="runtimeControl">A run-time version of the Web server control.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>Gets the name of a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>Gets a <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> object that is used by the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to render a design-time preview of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> property of the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to the end of the collection.</summary>
      <returns>The index at which the format was added to the collection.</returns>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>Removes all formats from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Determines whether the specified format is contained within the collection.</summary>
      <returns>true, if the specified format is in the collection; otherwise, false.</returns>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="format" /> within the collection; otherwise, -1, if the format is not in the collection.</returns>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="format" />.</param>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>Gets the maximum outer dimensions of the control as it will appear at run time.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> structure that contains the height and width of the control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object from the collection.</summary>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <param name="array">The <see cref="T:System.Array" /> to receive the designated items.</param>
      <param name="index">The starting index for the items to copy.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements that are contained in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe) when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> is synchronized; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> interface that iterates through the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of the added item.</returns>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to add to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains a specific value when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>true, if the object is in the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of a item in the collection.</returns>
      <param name="value">The value.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the collection at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index at which to insert <paramref name="value" />.</param>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection has a fixed size when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this method, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Always true, which indicates that the collection cannot be replaced or deleted.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the element at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The index.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>Represents the style for a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object. This class is used primarily by control developers.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> class using default values.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents for the associated control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> values. The default is NotSet.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>Serves as the base class for design-time data source view classes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class using the specified data source designer and view name.</summary>
      <param name="owner">The parent data source designer.</param>
      <param name="viewName">The name of the view in the data source.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null-or-<paramref name="viewName" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>true if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows instead of the data itself.</summary>
      <returns>true if retrieving the total number of data rows is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
      <returns>true if a sorted view on the underlying data source is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>Gets a reference to the designer that created this <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> control.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object provided when the current <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> instance was created.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the specified number of rows, indicating whether it is returning sample data or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>Gets the name of the view as provided when this instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class was created.</summary>
      <returns>The view name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>Provides a base class for designers for data views based on hierarchical data. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> that is the designer for the associated control.</param>
      <param name="viewPath">A unique path to the block of data to use for the view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null-or-<paramref name="viewPath" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>Gets the associated designer.</summary>
      <returns>The parent <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="isSampleData">true to indicate the returned data is sample data; false to indicate the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>Gets the path to the block of data that is presented in the view.</summary>
      <returns>The path provided when creating the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view for the associated control.</summary>
      <returns>This implementation always returns null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>Represents an object in a design host such as Visual Studio 2005. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerObject" /> class.</summary>
      <param name="designer">The parent designer.</param>
      <param name="name">The name of the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>Gets the associated designer component.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>Gets a service from the design host, as identified by the provided type.</summary>
      <returns>The requested service.</returns>
      <param name="serviceType">The type of service being requested.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>Gets the name of the object.</summary>
      <returns>The name of the object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>Gets the object's properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object containing the object's properties and their values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <returns>The requested service.</returns>
      <param name="serviceType">The type of service being requested.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>Defines a region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="designer" /> is an empty string ("").-or-<paramref name="name" /> is null.-or-<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer, optionally setting the instance as a selectable region in the designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <param name="selectable">true to select the region; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="designer" /> is an empty string ("").-or-<paramref name="name" /> is null.-or-<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>Gets or sets the description for a designer region.</summary>
      <returns>A text description of the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>Defines the HTML attribute name for a designer region.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>Gets or sets the friendly display name for a designer region.</summary>
      <returns>A text display name for the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>Gets or sets a value indicating whether the region size is to be explicitly set on the designer region by the design host.</summary>
      <returns>true, if the design host should set the size on the designer region; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>Retrieves the size of the designer region on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the designer region size on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>Gets or sets a value indicating whether to highlight the designer region on the design surface.</summary>
      <returns>true, if the visual designer should highlight the designer region on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>Gets or sets a value indicating whether the designer region can be selected by the user on the design surface.</summary>
      <returns>true, if the designer region can be selected by the user on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>Gets or sets a value indicating whether the designer region is currently selected on the design surface.</summary>
      <returns>true, if the designer region is currently selected on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>Gets or sets optional user data to associate with the designer region.</summary>
      <returns>An object that contains user data stored for the designer region. The default is null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects within a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class for the specified control designer.</summary>
      <param name="owner">The control designer that owns this collection of designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object to the end of the collection.</summary>
      <returns>The index at which the region was added to the collection.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>Removes all regions from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>Gets a value indicating whether the specified region is contained within the collection.</summary>
      <returns>true, if the region is in the collection; otherwise, false.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="region" /> within the collection; otherwise, -1, if <paramref name="region" /> is not in the collection.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert the region.</param>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object has a fixed size.</summary>
      <returns>true, if the size of the collection cannot be changed by adding or removing items; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is read-only.</summary>
      <returns>true, if the collection cannot be changed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is synchronized (thread safe).</summary>
      <returns>true, if access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.- or -<paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>Gets the control designer that owns the designer region collection.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> that represents the control designer that owns the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object from the collection. </summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove from the collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true, if access to the collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The index at which the item was added to the collection.</returns>
      <param name="o">The item to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true, if the region is in the collection; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The zero-based index of the first occurrence of the object within the collection; otherwise, -1, if the object is not in the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert the object.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false, if the collection dynamically increases in size as new objects are added; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The object at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the object to get in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when you click on a selected control or a designer region in a selected control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> class with the specified region and location. </summary>
      <param name="region">The designer region that was clicked; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />.</param>
      <param name="location">The location that was clicked, relative to the upper left corner of the region; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>Gets the location within the control that was clicked.</summary>
      <returns>The <see cref="T:System.Drawing.Point" /> identifying the location within the region that was clicked.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>Gets the designer region that was clicked, if any.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the click event applies to, or null if no region was clicked.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>Provides helper methods that can be used by control designers to generate sample data for data-bound properties at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names indicating that the columns are connected to a data source.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> object with three columns and no data.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names that indicate that the columns contain sample data.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> with three columns. These columns can contain data of type string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>Creates a sample <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains columns with the same names and data types as the provided <paramref name="referenceData" />.</returns>
      <param name="referenceData">A data source with the desired schema to use as the format for the sample <see cref="T:System.Data.DataTable" /> object. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data and optionally containing column names indicating that the data is bound data.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object.</returns>
      <param name="referenceData">An <see cref="T:System.Collections.IEnumerable" /> object containing data.</param>
      <param name="useDataBoundData">If true, the column names indicate that they contain bound data.</param>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>Gets an event handler for data binding.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>Gets a collection of property descriptors for the data fields of the specified data source.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that describes the data fields of the specified data source.</returns>
      <param name="dataSource">The data source from which to retrieve the data fields. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>Gets the specified data member from the specified data source.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the specified data member from the specified data source, if it exists.</returns>
      <param name="dataSource">An <see cref="T:System.ComponentModel.IListSource" /> that contains the data in which to find the member. </param>
      <param name="dataMember">The name of the data member to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> is null-or-<paramref name="dataMember" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>Gets the names of the data members in the specified data source.</summary>
      <returns>An array of type String that contains the names of the data members in the specified data source.</returns>
      <param name="dataSource">The data source from which to retrieve the names of the members. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>Adds the specified number of sample rows to the specified data table.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing sample data for use at design time.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to which the sample rows are added. </param>
      <param name="minimumRows">The minimum number of rows to add. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data source name.</summary>
      <returns>An object implementing either <see cref="T:System.ComponentModel.IListSource" /> or <see cref="T:System.Collections.IEnumerable" /> representing the selected data source, or null if the data source or the designer host could not be accessed.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object that contains the data source. </param>
      <param name="dataSource">The name of the data source to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data-source name and member name.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the data member, or null if the data source, member, or component's site could not be accessed.</returns>
      <param name="component">The object implementing <see cref="T:System.ComponentModel.IComponent" /> that contains the data sourced property. </param>
      <param name="dataSource">The data source to retrieve. </param>
      <param name="dataMember">The data member to retrieve. </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>Used by control localization to read and write resources at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>When overridden in a derived class, creates a global resource provider using the provided <see cref="T:System.IServiceProvider" /> interface and resource class name.</summary>
      <returns>Either an <see cref="T:System.Web.Compilation.IResourceProvider" /> or an <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
      <param name="classKey">The name of the resource class.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource provider using the provided reference to the design host.</summary>
      <returns>An <see cref="T:System.Web.Compilation.IResourceProvider" /> or a class derived from <see cref="T:System.Web.Compilation.IResourceProvider" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource writer for using the provided reference to the design host.</summary>
      <returns>A <see cref="T:System.Resources.ResourceWriter" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>Represents an editable content region within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name and the initial value of the <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> property.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
      <param name="serverControlsOnly">true to have the region accept only Web server controls for content; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>Gets or sets the HTML markup for the content of the region.</summary>
      <returns>HTML markup representing the content of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>Returns a <see cref="T:System.Web.UI.Design.ViewRendering" /> object containing the design-time HTML markup for the given control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="control">The control for which to get the <see cref="T:System.Web.UI.Design.ViewRendering" /> object for the current region.</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>Gets or sets a value indicating whether the region can accept only Web server controls.</summary>
      <returns>true if the region can contain only Web server controls; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value indicating whether the region can be bound to a data source.</summary>
      <returns>true if the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content supports binding to a data source; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an expression string and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">An expression string to evaluate. The expression does not include the expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />. This typically is provided by the expression builder.</param>
      <param name="propertyType">The type of the control property to which <paramref name="expression" /> is bound.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.</summary>
      <returns>A string representing the prefix for expressions supported by the class derived from the <see cref="T:System.Web.UI.Design.ExpressionEditor" />; otherwise, an empty string (""), if the expression editor does not have an associated expression prefix.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression prefix.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionPrefix" />; otherwise, null, if <paramref name="expressionPrefix" /> is not defined or is not associated with an <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <param name="expressionPrefix">The expression prefix used to find the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression builder type.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionBuilderType" />; otherwise, null, if <paramref name="expressionBuilderType" /> cannot be located or has no associated <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <param name="expressionBuilderType">The type of the derived expression builder class, used to locate the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionBuilderType" /> is null.- or -<paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet that is associated with the current expression editor.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> that defines the custom expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for a custom expression. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</summary>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</summary>
      <returns>The custom expression string for the current property values.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the expression string is valid.</summary>
      <returns>true, if the expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the expression editor sheet.</summary>
      <returns>An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>Provides a type converter for expression binding collections.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an expression binding collection to the specified type.</summary>
      <returns>If <paramref name="destinationType" /> is not of type <see cref="T:System.String" />, the object produced by the type conversion; otherwise, if <paramref name="destinationType" /> is a string, an empty string ("").</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the component or control the expression binding collection belongs to. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that can be used to provide additional culture information.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>Provides a user interface for selecting and editing an expressions binding collection at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object with the specified service provider and context.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> object containing the selected expressions; otherwise, if no expressions are selected, the <paramref name="value" /> object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information such as the associated control.</param>
      <param name="provider">A service provider object through which editing services can be obtained.</param>
      <param name="value">An instance of the object being edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor for the specified context.</summary>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the editing style for the provided user interface.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of the hierarchical data sources that are accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <returns>true if <paramref name="component" /> implements <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; otherwise, false.</returns>
      <param name="component">The component to check as a valid data source.</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>This implementation always returns false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
      <param name="viewPath">The unique path to the block of data to use in creating the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data.</summary>
      <param name="preferSilent">This parameter is not used in this implementation. However, it should be supported in derived classes.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after they have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property is false.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Indicates whether data source events have been disabled.</summary>
      <returns>true if the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> or <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event has been disabled; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>Provides basic design-time functionality for ASP.NET server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>Gets or sets the DHTML behavior that is associated with the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> that is associated with the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>Gets the data bindings collection for the current control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataBindingCollection" /> that contains the data bindings for the current control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>Gets the design-time object representing the control that is associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object on the design surface.</summary>
      <returns>The design-time object representing the control associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>Gets the expression bindings for the current control at design time.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> that contains the expressions strings set for properties in the current control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and sets the component for design.</summary>
      <param name="component">The control element for design. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>Called when a behavior is associated with the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>Called when a behavior disassociates from the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Provides a method that can be used to indicate when a data binding has changed.</summary>
      <param name="propName">The name of the property that has changed. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>Provides a way to perform additional processing when the associated control is attached to a parent control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Sets the list of events that are exposed at design-time for the <see cref="T:System.ComponentModel.TypeDescriptor" /> object for the component.</summary>
      <param name="events">An <see cref="T:System.Collections.IDictionary" /> that contains the names of the events of the component to expose. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows the designer to expose a specific set of properties through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object at design time.</summary>
      <param name="properties">The set of properties to filter for the component. </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>Gets or sets a value indicating whether to create a field declaration for the control in the code-behind file for the current design document during serialization.</summary>
      <returns>true, if a declaration should be created; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>Provides a base designer for all intrinsic HTML controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>Provides a data-binding handler for a hyperlink property.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Resolves design-time data-binding for the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>Provides an interface for access to a master page from a content page at design time, if provided by a design host, such as Visual Studio 2005. </summary>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>Gets the <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects for the content placeholders that are identified in the master page.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing identifiers and <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>Retrieves the current state of the identified content place holder.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ContentDesignerState" />.</returns>
      <param name="identifier">The identifier for a content place holder.</param>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>Sets the current state of the identified content place holder.</summary>
      <param name="identifier">The identifier for a content place holder.</param>
      <param name="state">A <see cref="T:System.Web.UI.Design.ContentDesignerState" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>Enables the extension of specific behaviors of a control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>Gets the design-time view control object for the designer.</summary>
      <returns>The view control object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>Gets or sets the design-time HTML for the designer's control.</summary>
      <returns>The HTML used at design time to format the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform processing when the designer enters or exits template mode.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>Provides an interface for design-time access to the HTML markup for a control that is associated with a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>Retrieves the value of the identified attribute on the tag.</summary>
      <returns>A string containing the value of the attribute.</returns>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>Retrieves the HTML markup for the content of the tag.</summary>
      <returns>The HTML markup for the content of the tag.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>Retrieves the complete HTML markup for the control, including the outer tags.</summary>
      <returns>The outer HTML markup for the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>Gets a value indicating whether or not an attribute or the content of a tag has changed.</summary>
      <returns>true if the tag has changed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>Deletes the specified attribute from the tag.</summary>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified attribute and creates the attribute, if necessary.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>Sets the HTML markup for the content of the tag.</summary>
      <param name="content">The HTML markup for the content of the tag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property of the tag.</summary>
      <param name="dirty">The value for the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>Provides an interface for access to the visual representation and content of a control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>Gets the designer region that contains the associated control, if any.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerRegion" /> object if the associated control is contained in a designer region; otherwise null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>Retrieves the outer bounds of the designer view.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> containing information about the location and measurements of the view at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> for which you want to retrieve the bounds.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>Notifies the design host that the area represented by the provided rectangle needs to be repainted on the design surface.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> representing the location and outer measurements of the view on the design surface. The coordinate-system origin for this rectangle is the top-left corner of the element to which the behavior is attached.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>Gets the designer component for the naming container of the associated control, if any.</summary>
      <returns>An IDesigner object representing the designer component for the naming container for the associated control; otherwise null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />.</summary>
      <param name="viewFlags">A member of the <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration.</param>
      <param name="setFlag">true to set the flag, false to cancel the flag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Puts the provided content into the provided designer region.</summary>
      <param name="region">A <see cref="T:System.Web.UI.Design.DesignerRegion" /> into which the content is to be put.</param>
      <param name="content">The HTML markup to be put into the designer region.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>Gets a value indicating whether designer regions are supported.</summary>
      <returns>true if designer regions are supported; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>Causes the associated control to redraw the invalidated regions within its client area.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>An event raised by the design host for the view and designer component.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>Provides an interface for design-time access to a schema provider in a design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema.</summary>
      <returns>true, if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema for the data source.</summary>
      <param name="preferSilent">true to disable data-binding events until after the schema has been refreshed; false to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>Gets the current schema object for the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>Defines the basic functionality for a data source designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the underlying data source can refresh its schema; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>Launches the underlying data source's configuration wizard.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source has changed in a way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> for the specified view.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> containing information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of a view in the underlying data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>Gets the names of the views in the underlying data source.</summary>
      <returns>An array of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Resumes raising data source events after calling the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Suppresses all events raised by a data source until the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>Provides basic functionality for describing the structure of a data field at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>Gets the type of data stored in the field.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the field automatically increments for each new row.</summary>
      <returns>true if the field's <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> is numeric and the underlying field increments automatically as new rows are added; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the field is editable.</summary>
      <returns>true if the field is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the field are required to be unique.</summary>
      <returns>true if data in the field must be unique; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>Gets a value indicting the size of data that can be stored in the field.</summary>
      <returns>The number of bytes the field can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>Gets the name of the field.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>Gets a value indicating whether the field can accept null values.</summary>
      <returns>true if the field can accept null values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the field.</summary>
      <returns>The maximum number of digits used to represent the values of the field if the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type. If this property is not implemented, it should return -1.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the field is in the primary key.</summary>
      <returns>true if the field is in the primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the field are resolved.</summary>
      <returns>If the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type, returns the number of decimal places to which values are resolved, otherwise -1.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>Defines an interface that a control designer can implement to provide access to a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an <see cref="T:System.ComponentModel.IListSource" /> (such as a <see cref="T:System.Data.DataSet" />) for the data source, and provides a DataMember property to select a particular list (or <see cref="T:System.Data.DataTable" />) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>Gets a reference to the selected data source from the data source provider.</summary>
      <returns>The currently selected data source object of this data source provider.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>Provides basic functionality for describing the structure of a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>Gets an array of schema descriptors for views contained in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>Defines a set of methods and properties used to examine a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects that represent the child views contained in the current view.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>Gets an array containing information about each field in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects representing each of the fields in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>Gets the name of the view.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>Provides an interface for creating a custom <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>Used by the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class to localize data at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>Creates a key, using the provided string, to use to retrieve data from the given resource.</summary>
      <returns>The key used to write or retrieve <paramref name="obj" /> from <paramref name="resourceName" />.</returns>
      <param name="resourceName">The name of the resource.</param>
      <param name="obj">The object to localize.</param>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>Provides an interface for accessing a document item retrieved from a design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>Provides access to the contents of a document item that is retrieved from the design host.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>Opens a document item that is retrieved from the design host.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>Provides an interface for a project folder in a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>Adds a document to a project folder in a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDocumentProjectItem" /> representing the added document.</returns>
      <param name="name">The name of the document.</param>
      <param name="content">An array of type <see cref="T:System.Byte" /> containing the document contents.</param>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>Creates a new folder in a project folder of a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IFolderProjectItem" /> representing the new folder.</returns>
      <param name="name">The name for the new folder.</param>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>Gets a collection of items in a project folder in a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the items in the project folder of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for a class that is derived from the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />, otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source control has changed in some way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view that is associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
      <param name="viewPath">The XPath for the part of the data source to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">true to suppress events raised while refreshing the schema; otherwise false.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores events after calling the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Turns off events in the data source control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>Defines an interface that enables the extension of specific behaviors of an HTML control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>Gets or sets the designer that the behavior is associated with.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> that the behavior is associated with.NoteThe <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>Gets the element that the designer is associated with.</summary>
      <returns>The object that the designer is associated with.NoteThe <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>Gets the specified attribute.</summary>
      <returns>The attribute that was retrieved.</returns>
      <param name="attribute">The attribute to retrieve. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Gets the specified style attribute.</summary>
      <returns>The style attribute that was retrieved.</returns>
      <param name="attribute">The style attribute to retrieve. </param>
      <param name="designTimeOnly">true if the attribute is only active at design time; otherwise, false. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>Removes the specified attribute.</summary>
      <param name="attribute">The attribute to remove. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Removes the specified style attribute.</summary>
      <param name="attribute">The style attribute to remove. </param>
      <param name="designTimeOnly">true if the attribute is only active at design time; otherwise, false. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>Sets the specified attribute to the specified object.</summary>
      <param name="attribute">The attribute to set. </param>
      <param name="value">The object on which to set the attribute. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Sets the specified style attribute to the specified object.</summary>
      <param name="attribute">The attribute to set. </param>
      <param name="designTimeOnly">true if the attribute is only active at design-time; otherwise, false. </param>
      <param name="value">The object to set the attribute on. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>Provides a user interface for selecting a URL that references an image.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ImageUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This string is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>The filter string that can be used to filter the file list of the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>Provides an interface for an item that is retrieved at design time from a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>Gets the URL for the item relative to the design host.</summary>
      <returns>The relative URL.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>Gets the name of the item.</summary>
      <returns>The name of the item.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>Gets a reference to the containing item, if any.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />, if the current item is contained within another item; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>Gets the path for a project item.</summary>
      <returns>The path for the item.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>Provides an interface to manage a template editing area.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>Closes the control and optionally saves any changes.</summary>
      <param name="saveChanges">true if changes to the document should be saved; otherwise, false. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>Gets the style for the editing frame.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the Web server control style attributes for the editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>Gets or sets the initial height of the control.</summary>
      <returns>The initial height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>Gets or sets the initial width of the control.</summary>
      <returns>The initial width of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>Gets the name of the editing frame.</summary>
      <returns>The name of the editing frame.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>Opens and displays the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>Resizes the control to the specified width and height.</summary>
      <param name="width">The new width for the control. </param>
      <param name="height">The new height for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>Saves any changes to the document.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>Gets a set of names of templates to use.</summary>
      <returns>An array of template names.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>Gets the template styles for the control.</summary>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Style" /> objects that represent the template styles for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>Changes the name of the control to the specified name.</summary>
      <param name="newName">The new name for the control. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>Gets or sets the verb that invokes the template.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that invokes the template.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>Provides services for editing control templates at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, using the specified name, template names, control style, and template styles.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame. </param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <returns>The name of the parent template.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>true if the service supports nested template editing; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>Provides an interface for creating services for administering a Web site at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>Starts the Web administration facility in the design host.</summary>
      <param name="arguments">An <see cref="T:System.Collections.IDictionary" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>Provides an interface for accessing a Web application in a design host, such as Microsoft Visual Studio 2005, at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>Returns a project item from a design host based on its URL.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />.</returns>
      <param name="appRelativeUrl">The relative path to the project item to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>Returns a <see cref="T:System.Configuration.Configuration" /> object representing the current Web application in the design host.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="isReadOnly">true to indicate the returned <see cref="T:System.Configuration.Configuration" /> is editable; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>Gets the root project item from the design host.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>Provides an interface that can look up information about the types used in the current Web Forms project.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>Gets the type of the specified object.</summary>
      <returns>The <see cref="T:System.Type" /> of the object, if it could be resolved.</returns>
      <param name="tagPrefix">The tag prefix for the type. </param>
      <param name="typeName">The name of the type. </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project.</summary>
      <returns>The register directives for the current project.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified type of object.</summary>
      <returns>The tag prefix for the specified object type, if it could be located.</returns>
      <param name="objectType">The type of the object. </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>Provides methods to start specific user interfaces for building properties at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>Starts a <see cref="T:System.Web.UI.Design.ColorBuilder" /> to build a color property.</summary>
      <returns>The color that was selected. This value will be a named color, or an RGB color expressed in HTML color format (#RRGGBB).</returns>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.ColorBuilder" />. </param>
      <param name="initialColor">The initial color for the editor to pre-select. </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Launches an editor to build a URL property.</summary>
      <returns>A string that contains the URL returned by the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</returns>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.UrlBuilder" />. </param>
      <param name="initialUrl">The initial URL to display in the selection interface. </param>
      <param name="baseUrl">The base URL used to construct relative URLs. </param>
      <param name="caption">A caption that presents a message in the selection interface. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the selection interface. </param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />. </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>Provides methods to access services for tracking the loading state of a Web Forms document, handling events at load time, accessing a document's location, managing a document's undo service, and setting a new selection within the document.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>Creates a discardable undo unit.</summary>
      <returns>The new discardable undo unit.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>Discards the specified undo unit.</summary>
      <param name="discardableUndoUnit">The undo unit to discard. </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>Gets the URL at which the document is located.</summary>
      <returns>The URL at which the document is located, or null if the document has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>Enables the ability to undo actions that occur within undoable action units or transactions.</summary>
      <param name="enable">true if actions should be undoable; otherwise, false. </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>Gets a value indicating whether the document service is currently loading.</summary>
      <returns>true if the document service is loading; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>Occurs when the service has finished loading.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>When implemented in a derived class, updates the current selection.</summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>Provides a user interface for selecting and editing a mail file name for a property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MailFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>Gets the caption for the editor dialog.</summary>
      <returns>The caption for the design-time dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>Gets the file filter string for the dialog (such as "*.txt").</summary>
      <returns>The filter for selecting files in the design-time dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>Provides a design-time user interface for selecting a Microsoft Access database file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MdbDataFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>Extends design-time behavior for read/write server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a property, including description and value, to an intrinsic HTML style.</summary>
      <param name="propName">The name of the property to map. </param>
      <param name="varPropValue">The value of the property. </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>Provides notification that is raised when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event of the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> class.</summary>
      <param name="sender">The object sending the event. </param>
      <param name="ce">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the display of the control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing a resource expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a resource expression and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A resource expression to evaluate. <paramref name="expression" /> does not include the Resources expression prefix.</param>
      <param name="parseTimeData">An object supplying additional parse data, in the form of a <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> value.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns a resource expression editor sheet that is initialized with the input expression string and service provider implementation.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> that defines the resource expression properties.</returns>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to initialize the expression editor sheet.</param>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a resource expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> class.</summary>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>Gets or sets the key that matches the filename for the resource in the project's global resource folder.</summary>
      <returns>The key for a resource file in the global resource folder. </returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>Returns a resource expression that is formed by the expression editor sheet property values.</summary>
      <returns>The resource expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the resource expression string is valid.</summary>
      <returns>true if the resource expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>Gets or sets the name of the resource, which is used as a key to find the resource value.</summary>
      <returns>The name of the resource.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditor">
      <summary>Provides properties and methods for composing a RouteURL expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a RouteUrl expression and provides the design-time value.</summary>
      <returns>The URL for the specified route and route parameter values if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A RouteUrl expression to evaluate. The expression does not include the RouteUrl expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a RouteUrl expression.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> instance that defines the RouteUrl expression properties.</returns>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the RouteUrl expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a RouteUrl expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> class.</summary>
      <param name="expression">A RouteUrl expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression">
      <summary>Returns a RouteUrl expression that is formed by the expression editor sheet property values.</summary>
      <returns>The RouteUrl expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the RouteUrl expression string is valid.</summary>
      <returns>true if the RouteUrl expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName">
      <summary>Gets or sets the name of the route that a URL is to be generated for.</summary>
      <returns>The name of the route that a URL is to be generated for.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues">
      <summary>Gets or sets the URL parameter names and values that are to be used to generate a URL from a route.</summary>
      <returns>The URL parameter names and values that are to be used to generate a URL from a route.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditor">
      <summary>Provides properties and methods for composing a RouteValue expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a RouteValue expression and provides the design-time value.</summary>
      <returns>The value of the specified URL parameter if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A RouteValue expression to evaluate. The expression does not include the RouteValue expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information that is used to evaluate the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a RouteValue expression.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> instance that defines the RouteValue expression properties.</returns>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the RouteValue expression prefix.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a RouteValue expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> class.</summary>
      <param name="expression">A RouteValue expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression">
      <summary>Returns a RouteValue expression that is formed by the expression editor sheet property values.</summary>
      <returns>The RouteValue expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the RouteValue expression string is valid.</summary>
      <returns>true if the RouteValue expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue">
      <summary>Gets or sets the name of the URL parameter to be evaluated by the RouteValue expression.</summary>
      <returns>The name of the URL parameter to be evaluated by the RouteValue expression.</returns>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>Provides a list of valid skin IDs for a control at design time, based on the currently applicable theme.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the provided format context and type.</summary>
      <returns>true, if the conversion can be made; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context for the control being designed.</param>
      <param name="sourceType">A <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to the specified type, using the specified context.</summary>
      <returns>true, if a conversion can be made; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context for the control being designed.</param>
      <param name="destType">A <see cref="T:System.Type" /> that represents the type to convert to.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given string to a <see cref="P:System.Web.UI.Control.SkinID" /> object using the specified context and culture information.</summary>
      <returns>An object that can be cast as a <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> object, if the conversion can be made; otherwise, null.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
      <param name="value">The string to convert.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the specified context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null, the current culture is assumed. </param>
      <param name="value">The <see cref="P:System.Web.UI.Control.SkinID" /> object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert <paramref name="value" /> to (must be a <see cref="T:System.String" />). </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be applied to the control that is represented by the given format context.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects; otherwise, null, if the control does not support skins.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed. <paramref name="context" /> or properties of <paramref name="context" /> can be null.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value indicating whether the control that is represented by the given context supports a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be picked from a list.</summary>
      <returns>true, if <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the control being designed.</param>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>Indicates whether a control designer requires a preview instance of the control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class and sets the initial value of the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> property.</summary>
      <param name="supportsPreviewControl">The initial value to assign for <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />.</param>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>Gets an instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class that is set to the default preview value. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same preview attribute setting as the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> attribute and its value is the same as this instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />; otherwise, false.</returns>
      <param name="obj">The object to compare with the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>Returns the hash code for this instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <returns>A 32-bit signed integer hash code for the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>Indicates whether the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class is set to the default preview attribute value.</summary>
      <returns>true if the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> is equal to the default preview attribute value; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>Gets a value indicating whether the control designer requires a temporary preview control at design time.</summary>
      <returns>true if the designer uses a temporary copy of the associated control for design-time preview; false if the designer uses an instance of the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> control that is contained in the designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>Extends design-time behavior for template-based server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>Gets the active template editing frame.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> that is the currently active template editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>Gets a value indicating whether or not this designer will allow the viewing or editing of templates.</summary>
      <returns>true if the designer will allow the viewing or editing of templates; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>When overridden in a derived class, creates a template editing frame for the specified verb.</summary>
      <returns>The new template editing frame.</returns>
      <param name="verb">The template editing verb to create a template editing frame for. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether the designer allows data binding. </summary>
      <returns>true, if the designer allows data binding; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>Opens a particular template frame object for editing in the designer.</summary>
      <param name="newTemplateEditingFrame">The template editing frame object to open in the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Closes the currently active template editing frame after saving any relevant changes.</summary>
      <param name="fSwitchingTemplates">true when switching from one template editing frame to another; otherwise false. </param>
      <param name="fNested">true if this designer is nested (one or more levels) within another control whose designer is also in template editing mode; otherwise false. </param>
      <param name="fSave">true if templates should be saved on exit; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects, if any.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template's container.</summary>
      <returns>A string representing the data.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <returns>The data source of the container of the specified template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>When overridden in a derived class, gets the template's content.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The template editing frame to retrieve the content of. </param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>Gets the template editing verbs available to the designer.</summary>
      <returns>The template editing verbs available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>Creates a template from the specified text.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> from the specified text.</returns>
      <param name="text">The text to retrieve a template from. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the type of the parent of the template property.</summary>
      <returns>The type of the object that has the template property.</returns>
      <param name="templateName">The name of the template to return the type of the parent for. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>Gets a string of text that represents the specified template.</summary>
      <returns>A string that represents the specified template.</returns>
      <param name="template">The <see cref="T:System.Web.UI.ITemplate" /> to convert to text. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="template" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the designer document is in template mode.</summary>
      <returns>true if the designer document is in template mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>Provides an opportunity to perform additional processing when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Delegate to handle the component changed event.</summary>
      <param name="sender">The object sending the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>Provides an opportunity to perform additional processing when the parent of this designer is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform additional processing when the template mode is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>Saves the active template editing frame.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>When overridden in a derived class, sets the specified template's content to the specified content.</summary>
      <param name="editingFrame">The template editing frame to provide content for. </param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The content to set for the template. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing a template definition.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> elements.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>Updates the design-time HTML.</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>Defines an editable region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> class using the provided template definition.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> instance for the template to edit.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>Gets or sets whether the template occurs only once per instance of the containing control, such as a header template, or can appear many times according to available data, such as an item template.</summary>
      <returns>true if the template appears only once; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value that indicates whether the template can be bound to a data source.</summary>
      <returns>true if the template represented by the region can be bound to a data source; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>Gets a <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object describing the template that is referenced by the region.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>Provides properties and methods that define a template element in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, and property name.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and whether to limit the template contents to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template content should allow only Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and <see cref="T:System.Web.UI.WebControls.Style" /> object.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, <see cref="T:System.Web.UI.WebControls.Style" /> object, and whether to limit content to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template should limit content to Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>Gets a value that indicates whether the template should enable editing of its contents.</summary>
      <returns>true if editing is allowed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>Gets or sets the HTML markup representing the content of the template.</summary>
      <returns>HTML markup for the content of the template.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>Retrieves a value indicating whether the template should limit content to Web server controls, as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>true if content is limited to Web server controls; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>Retrieves the style that should be applied to the template as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>Retrieves or sets a value indicating whether the template supports data binding.</summary>
      <returns>true if the template supports data binding; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>Retrieves the component in which the template resides. This property is read-only.</summary>
      <returns>The component as set when this <see cref="T:System.Web.UI.Design.TemplateDefinition" /> was created.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>Retrieves the property name for the template that the design host should display in the property grid.</summary>
      <returns>The name of the template as it should appear in the Properties list of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>Provides services for editing control templates at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> class with the specified designer host. </summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" />  implementation, used to access components at design time.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> object, using the specified name, template names, control style, and template styles.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame. </param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> object. </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <returns>The name of the parent template.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>true if the service supports nested template editing; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>Represents a designer verb that creates a template editing frame, and that can be invoked only by a template editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class with the specified verb text and index.</summary>
      <param name="text">The text to show for the verb on a menu.</param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class.</summary>
      <param name="text">The text to show for the verb on a menu. </param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs. </param>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that can use this verb. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>Attempts to free resources before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>Gets the index or other user data for the verb.</summary>
      <returns>The index or user data for the verb.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>A collection of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects representing the template elements in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name.</summary>
      <param name="groupName">The name of the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name and style.</summary>
      <param name="groupName">The name of the group</param>
      <param name="groupStyle">A <see cref="T:System.Web.UI.WebControls.Style" /> object to be applied to templates in the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>Adds the provided <see cref="T:System.Web.UI.Design.TemplateDefinition" /> to the group.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>Gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>Gets the current style for the group.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> for the group if set; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>Gets a value indicating whether there are any templates in the group.</summary>
      <returns>true if there are no templates in the group; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>Gets an array of all template definitions in the group.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object to the end of the collection.</summary>
      <returns>The index at which the <see cref="T:System.Web.UI.Design.TemplateGroup" /> was added to the collection.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>Adds the template groups in an existing <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object to the current <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</summary>
      <param name="groups">A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> that contains the groups to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groups" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>Removes all groups from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>Determines whether the specified group is contained within the collection.</summary>
      <returns>true if the <paramref name="group" /> is in the collection; otherwise, false.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>Copies the groups in the collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- <paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.-or- The number of elements in the source <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="group" /> within the collection; otherwise, -1, if <paramref name="group" /> is not in the collection.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="group" />.</param>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.TemplateGroup" /> at <paramref name="index" /> in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.- or -<paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object from the collection. </summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove from the collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>false, if access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is not synchronized (thread safe); otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object to use to synchronize access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to use to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The index at which <paramref name="o" /> was added to the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true, if <paramref name="o" /> is in the collection; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="o" /> within the collection; otherwise, -1, if <paramref name="o" /> is not in the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="o" />.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> dynamically increases as new objects are added; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>false, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> can be added, modified, and removed; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see the <see cref="T:System.Collections.IList" /> class.</summary>
      <returns>The object at <paramref name="index" /> in the collection.</returns>
      <param name="index">The zero-based index of the object to get in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when the template mode changes for a control on the design surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> class with the specified template group.</summary>
      <param name="newTemplateGroup">A new template group that is used to initialize the <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>Gets the template group that was created when you entered template editing mode.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroup" /> if you entered template editing mode with a new template; otherwise, null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>Extends design-time behavior for Web server controls that have a Text property that is persisted as inner text.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the associated control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>Provides a data-binding handler for a data-bound control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Data-binds the specified control.</summary>
      <param name="designerHost">An object implementing <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data-bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>A delegate that refers to a method in a custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> object that is to be called by the <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> method for implementing property changes in the designer's associated control.</summary>
      <returns>true if the transaction completed successfully; false if the transaction should be rolled back.</returns>
      <param name="context">The method to call when the transaction is invoked.</param>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>Represents the structure, or schema, of an object type.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.TypeSchema" /> class using the provided <see cref="T:System.Type" /> object.</summary>
      <param name="type">A <see cref="T:System.Type" /> that describes an object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>Gets an array of schema descriptors for views into a data source.</summary>
      <returns>An array of instances of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />, or of instances of a class that implements the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> interface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>Starts a URL editor that allows a user to select or create a URL. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>Creates a UI to create or pick a URL.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window. </param>
      <param name="initialUrl">The initial URL to be shown in the picker window. </param>
      <param name="caption">The caption of the picker window. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window. </param>
      <param name="initialUrl">The initial URL to be shown in the picker window. </param>
      <param name="caption">The caption of the picker window. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection. </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window.</param>
      <param name="initialUrl">The initial URL to be shown in the picker window.</param>
      <param name="caption">The caption of the picker window.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window.</param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection.</param>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>Defines identifiers for settings of a <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>Use no additional options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>Build a URL that references a path relative to the current path, rather than one that references a fully qualified, absolute path.</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>Provides a user interface for selecting a URL.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UrlEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption to display on the selection dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style provided by the <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>Provides designer functionality for user controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>Gets the action list collection for the user control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the action list tags for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the user control can be resized.</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the user control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Control.ID" /> property of a child control is empty or null.</exception>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>Provides a dialog box for selecting files to edit at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>Gets the caption for the dialog box.</summary>
      <returns>The caption for the editor window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>Gets the file name filter string used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that filters the list of files available in the dialog box, such as "*.txt".</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>Represents the kind of event that has occurred on a view of a control at design time. This class cannot be inherited. </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>Indicates that a view event was raised for a click on a designer region.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>Indicates that a view event was raised for drawing a control on the design surface.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>Indicates that a view event was raised for changing the template mode of a control designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewEventArgs" /> class for the type of view event on the design surface. </summary>
      <param name="eventType">The type of action that raised the event; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />.</param>
      <param name="region">The designer region that the action applies to; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />.</param>
      <param name="eventArgs">The event arguments associated with <paramref name="eventType" />; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>Gets the event arguments that are associated with the action that raised the event.</summary>
      <returns>An <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> that contains additional event data that is specific to the type of event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>Gets the type of action that raised the event.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewEvent" /> that specifies the type of action that raised the event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>Gets the designer region that the event applies to.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the action applies to.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised by visual design tools, such as Visual Studio 2005, implementing the <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interface. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.Design.ViewEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>Indicates which features are enabled with the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method of a designer.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>Enables painting events for displaying a custom control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>Postpones all events until after the control is completely loaded.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>Enables template editing at design time.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>Contains the design-time markup for content and regions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content and regions.</summary>
      <param name="content">HTML markup.</param>
      <param name="regions">A collection that contains the regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content, regions, and visibility mode.</summary>
      <param name="content">The HTML markup.</param>
      <param name="regions">A collection of regions</param>
      <param name="visible">A value that indicates whether the control is rendered.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>Gets the design-time HTML markup.</summary>
      <returns>The HTML markup to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>Gets a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects at design time.</summary>
      <returns>A collection of regions.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>Gets a value that indicates whether the control is visible.</summary>
      <returns>true if the control is rendered; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>Provides a base class for a Web server control <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">A SerializationInfo object containing information needed to instantiate the Web control through deserialization.</param>
      <param name="context">A StreamingContext object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided type.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the tool for this toolbox item. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates objects from each type contained in this <see cref="T:System.Drawing.Design.ToolboxItem" />, and adds them to the specified designer.</summary>
      <returns>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
      <exception cref="T:System.Exception">The <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> method is only available in Windows Forms.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Loads the state of the toolbox item from the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that describes the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Gets the value of the specified type of attribute of the toolbox item.</summary>
      <returns>The value of the specified type of attribute.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
      <param name="attributeType">The type of attribute to retrieve the value of. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="attributeType" /> parameter is not a <see cref="T:System.Web.UI.PersistChildrenAttribute" />. </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the HTML for the Web control that the tool creates.</summary>
      <returns>The HTML for the Web control that the tool creates.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the type of this toolbox item.</summary>
      <returns>The <see cref="T:System.Type" /> of this toolbox item.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>Initializes this toolbox item.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the Web server control toolbox item. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the state of the toolbox item to the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used to save the state of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for a component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> class using the provided reference to the design host.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Gets the smart-tag item lists that are associated with a component.</summary>
      <param name="component">A reference to the control associated with the designer.</param>
      <param name="actionLists">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add the associated smart tags to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>Provides a base class for accessing the types, directives, and controls in the current Web project document. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project document.</summary>
      <returns>A collection of strings representing the register directives defined in the current document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified object type.</summary>
      <returns>The tag prefix for the specified object type, if found; otherwise, null.</returns>
      <param name="objectType">The type of the object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>Gets the object type with the specified tag prefix and tag name.</summary>
      <returns>The <see cref="T:System.Type" /> of the object with the specified tag prefix and name, if found; otherwise, null.</returns>
      <param name="tagPrefix">The tag prefix of the type to retrieve.</param>
      <param name="tagName">The tag name of the type to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>Gets the relative URL path for the user control with the specified tag prefix and tag name.</summary>
      <returns>A string representing the relative URL path for the specified user control, if found; otherwise, null.</returns>
      <param name="tagPrefix">The tag prefix of the user control to retrieve.</param>
      <param name="tagName">The tag name of the user control to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>Adds a tag prefix for the specified type.</summary>
      <returns>The tag prefix string.</returns>
      <param name="objectType">The type to add a tag prefix for in the current document.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>Provides a base class for the design-time functionality of a Web Forms page and allows access to and manipulation of components and controls that are contained within the Web Forms page at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>When overridden in a derived class, adds a client script element to the current Web Forms page.</summary>
      <param name="scriptItem">A <see cref="T:System.Web.UI.Design.ClientScriptItem" /> to add to the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>When overridden in a derived class, adds a Web server control to the Web Forms page.</summary>
      <returns>The ID of the control that was added.</returns>
      <param name="newControl">The control to add to the Web Forms page.</param>
      <param name="referenceControl">The control relative to which <paramref name="newControl" /> is added.</param>
      <param name="location">A <see cref="T:System.Web.UI.Design.ControlLocation" /> value that indicates the location for <paramref name="newControl" /> relative to <paramref name="referenceControl" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>Gets or sets the component that this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>Returns a design-time <see cref="T:System.ComponentModel.Design.DesignerActionService" /> object.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</returns>
      <param name="serviceProvider">A design host, such as Visual Studio 2005, cast as an <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>Returns an <see cref="T:System.Web.UI.IUrlResolutionService" /> that resolves relative URLs.</summary>
      <returns>An <see cref="T:System.Web.UI.IUrlResolutionService" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>Gets the culture information for the current thread.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>When overridden in a derived class, gets the URL at which the Web Forms page is located. </summary>
      <returns>The URL at which the Web Forms page is located; otherwise, null, if the Web Forms page has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>Frees the resources of the current <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object before it is reclaimed by the garbage collector.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>Generates empty HTML markup for a control at design time.</summary>
      <returns>HTML markup for an empty control.</returns>
      <param name="control">The control to generate HTML markup for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>Generates HTML markup that is used to display an error message at design time by using the specified control, exception, and message.</summary>
      <returns>HTML markup for a control and exception information.</returns>
      <param name="control">The control that raised the exception.-or- null.</param>
      <param name="e">The exception. -or-null.</param>
      <param name="errorMessage">A message to add to the exception message.-or- An empty string (“”).</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />  object that contains all client script items that are on the page.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>When overridden in a derived class, returns both the current design-time view and the HTML markup for the specified control.</summary>
      <param name="control">The control to provide the view and tag for.</param>
      <param name="view">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="view" /> contains an IControlDesignerView object that provides access to the visual representation and content of a control at design time. <paramref name="view" /> is passed uninitialized.</param>
      <param name="tag">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="tag" /> contains an IControlDesignerTag object that provides access to the HTML element for the control's control designer. <paramref name="tag" /> is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>Returns the requested service.</summary>
      <returns>The requested service; otherwise, null, if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Returns a view object that is determined by the provided <see cref="T:System.ComponentModel.Design.ViewTechnology" /> object.</summary>
      <returns>An object containing the current view of the component.</returns>
      <param name="viewTechnology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> obtained from the <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" /> property.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object using the specified component.</summary>
      <param name="component">The component that this designer is designing.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>When overridden in a derived class, gets a value indicating whether the designer view is locked.</summary>
      <returns>true, if the designer view is locked; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>When overridden in a derived class, gets a value indicating whether the Web Forms page is still loading.</summary>
      <returns>true, if the Web Forms page is loading; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>Occurs when the designer completes loading the Web Forms page.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> event when the Web Forms page is completely loaded.</summary>
      <param name="e">An <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>When overridden in a derived class, gets a <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> object that has information about the current Web Forms page.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> containing information about the current Web Forms page.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>Removes the specified client script from the document at design time.</summary>
      <param name="clientScriptId">The identifier for the previously registered client script.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>When overridden in a derived class, removes the specified control from the Web Forms page.</summary>
      <param name="control">The control to remove from the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>Converts a relative URL into a fully qualified URL.</summary>
      <returns>A fully qualified URL resolved from <paramref name="relativeUrl" />.</returns>
      <param name="relativeUrl">A relative URL for a resource on the site.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>Sets the ID property of the specified control with the specified string.</summary>
      <param name="control">The control on which to set the ID.</param>
      <param name="id">The string to set as the ID for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>Gets or sets the design-time verbs that are supported by the designer. For a description of this member, see <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />.</summary>
      <returns>The design-time verbs that are supported by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Gets a view object for the specified view technology. For a description of this member, see <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />.</summary>
      <returns>The view object for the specified view technology.</returns>
      <param name="viewTechnology"> The view technology.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display. For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of technologies that the designer component can support for its display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>Gets the design-time verbs that are supported by the designer.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects supported by the designer; otherwise, null, if the component has no verbs.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>Provides a design-time user interface for selecting an XML data file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>Represents the structure, or schema, of an <see cref="T:System.Xml.XmlDocument" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> class using a specified <see cref="T:System.Xml.XmlDocument" /> and an XPath string.</summary>
      <param name="xmlDocument">An instance of an <see cref="T:System.Xml.XmlDocument" /> object.</param>
      <param name="xPath">An XPath string identifying the child nodes of the document root.</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>Gets an array containing information about each child node starting at the node identified by the <paramref name="xPath" /> parameter in the constructor, or each child node starting at the document root if the <paramref name="xPath" /> parameter is empty.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>Provides a user interface for selecting an XML file using a standard <see cref="T:System.Windows.Forms.OpenFileDialog" /> box.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlFileEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>Provides a user interface for selecting a URL that indicates the location of an XML file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>Provides a design-time user interface for selecting an XML schema definition file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which are used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>Provides a design-time user interface for selecting an XML transform file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XslTransformFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>Provides a user interface for selecting an URL that indicates the location of an XSL file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XslUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>Implements a designer property to shadow the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name and path of the data file associated with the <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.String" /> that contains the design-time connection string for the associated <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control on the design surface.</summary>
      <returns>The markup that represents the control on the design surface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>Provides design-time support in a visual designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>When overridden in a derived class, typically unhooks events from the previous data source, and then attaches new events to the new data source. </summary>
      <returns>true if a connection to a new data source was performed, typically; false if the old and new data sources are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>When overridden in a derived class, creates a new data source for the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>When overridden in a derived class, performs the necessary actions to set up the associated control that is derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> with which this designer is associated.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property for the associated control.</summary>
      <returns>The data-binding expression used by the associated control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.DataSourceControl" /> associated with the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>When overridden in a derived class, unhooks events from the current data source. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> object, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control at design time. </summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Provides the markup that is used to render the control at design time if the control is empty or if the data source cannot be retrieved. </summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the control at design time when an error has occurred.</summary>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object changes. </summary>
      <param name="forceUpdateView">true to force the update of design-time markup; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object loads a new schema. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> containing the properties to filter.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>In a design host, such as Visual Studio 2005, displays a dialog box to assist the user in creating a data source.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> object.</returns>
      <param name="controlDesigner">A reference to this designer.</param>
      <param name="dataSourceType">The type of data source.</param>
      <param name="configure">true to enable editing of the configuration, or false to disable configuration editing.</param>
      <param name="dataSourceID">The ID of a <see cref="T:System.Web.UI.DataSourceControl" /> control on the page.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>Provides a component editor base class for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" /> class.</summary>
      <param name="initialPage">The index in the array of page control types, of the initial page to display. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Edits the specified component by using the specified context descriptor and parent window.</summary>
      <returns>true the component was successfully edited; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="obj">An <see cref="T:System.Object" /> implementing the <see cref="T:System.ComponentModel.IComponent" />, which represents the component to edit. </param>
      <param name="parent">The <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the parent window. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>Gets the index of the initial page to display in the component editor.</summary>
      <returns>The index of the initial page in the array.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>Provides a base class for components that provide design-time support in a designer host for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>Gets or sets the value of the data key field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>Gets or sets the value of the data member field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>Gets or sets the value of the data source property of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>Gets or sets the designer's version of the data source ID property and is used to shadow the corresponding property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that is the data source ID of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control. </summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> representing the default view of the data source. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the designer and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
      <param name="selectedDataSource">An object implementing an <see cref="T:System.Collections.IEnumerable" /> that is used as a template for the data format. </param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source data should contain. </param>
      <param name="dummyDataSource">true if the returned data source contains dummy data; false if the returned data source contains data from an actual data source. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
      <param name="dummyDataSource">true if the returned data source contains dummy data; false if the returned data source contains data from an actual data source. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> of the associated control, resolved to the <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> parameter; otherwise, null if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property of the associated control; otherwise, null if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface containing a design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property.</returns>
      <param name="templateName">A <see cref="T:System.String" /> that specifies the name of the template for which to get the data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" />, which implements an <see cref="T:System.ComponentModel.IComponent" />. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>Invokes a component editor for the associated control.</summary>
      <param name="initialPage">The index of the page with which to initialize the component editor. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Handles the AutoFormat event.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when an automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that is the source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>Represents the method that handles the property-builder event.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that is the source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>Can be overridden to implement functionality that should occur when a style of the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Can be overridden to implement functionality that should occur when the designer template-editing verbs have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control. </summary>
      <param name="properties">A collection implementing an <see cref="T:System.Collections.IDictionary" /> interface of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>true if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">true to disable data-binding events until after the schema has been refreshed; false to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>Provides design-time support in a visual designer for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control to render on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add properties in the properties grid, or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.BulletedList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows the designer to filter the set of events that the associated control will expose at design time.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the <see cref="T:System.ComponentModel.EventDescriptor" /> objects representing the events of the control. The keys in the <see cref="T:System.Collections.IDictionary" /> are event names. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Button" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Button" /> at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>Provides an Auto Format dialog box for a <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>Creates a new AutoFormatPage instance associated with a <see cref="T:System.Web.UI.WebControls.Calendar" /> instance for a designer host.</summary>
      <param name="calendar">The <see cref="T:System.Web.UI.WebControls.Calendar" />  instance for which the AutoFormatePage is displayed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>Executes any initialization that was delayed until the first idle time </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>Occurs when the <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> is activated.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>Handles changes in the pre-defined schema choices </summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>Handles changes in the predefined schema choices </summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>Saves any changes into the component </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>Gets all the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object containing the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object for this designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Called when an auto-format scheme has been applied to the control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>Gets the action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AllowResize">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control allows resizing.</summary>
      <returns>true if the control allows resizing; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>Gets the collection of automatic format schemes that will be displayed in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which a definition of the current view of the associated control has been added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the persisted form of the current template of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> containing the persisted form of the current template of the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that is not used by this <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> override.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the markup that renders to a placeholder containing information about the error that occurred while attempting to create or render the associated control at design time.</summary>
      <returns>The markup for the placeholder that contains information about the specified exception.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown while creating or rendering the associated control. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.ChangePassword" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the value of a template of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to set content for.</param>
      <param name="content">A <see cref="T:System.String" /> containing a persisted control or template.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>Extends design-time behavior for controls that implement the methods of the <see cref="T:System.Web.UI.WebControls.CompositeControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>Creates the child controls of this <see cref="T:System.Web.UI.WebControls.CompositeControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" />, which is the control associated with this designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Content" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized on the visual designer surface.</summary>
      <returns>true if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time from the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> associated with the design-time markup generated by <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <returns>The persistence string for the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> from which to get the content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>Gets the inner markup of the control.</summary>
      <returns>The inner markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in which to set the content.</param>
      <param name="content">The persistence string for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized.</summary>
      <returns>true if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the HTML that is used to represent the control at design time using the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to use for generating design-time HTML.</param>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <returns>The content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object from which to extract content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>Gets the persistable inner HTML of the control.</summary>
      <returns>The persistable inner HTML of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> instance to set.</param>
      <param name="content">The new content for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object for each step associated with the underlying wizard control, and then adds it to the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which regions associated with the wizard control are added. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Converts the child controls associated with the underlying wizard control to a custom navigation template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.</summary>
      <returns>The HTML for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Exposes the properties associated with each default step through the property grid on the designer tool.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the component's base class. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer uses the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control itself to generate the design-time HTML or uses a temporarily created copy. </summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>Provides an editor in a design host such as Visual Studio 2005 to edit the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> object of a <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the items in the collection associated with the collection editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Returns a value indicating whether a provided object can be removed from the collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WizardStep" /> can be removed from the collection; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WizardStep" /> object to determine whether it can be removed from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a modal dialog box for editing the contents of a collection of <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>Gets the Help keyword used to display the Help topic or topic list when users click the Help button or press the F1 key in the editor's dialog box.</summary>
      <returns>The Help keyword to display the Help topic or topic list when Help is requested from the editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>Provides a base class for design-time support for controls that derive from <see cref="T:System.Web.UI.WebControls.DataBoundControl" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>Disconnects events from the previous data source and connects them to the current data source.</summary>
      <returns>true if the data-bound control connected to a new data source; false if the data source did not change.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>Invokes the standard dialog box to create a new data source control, and sets the new data source control's ID to the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the data-bound control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to the data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to bind to the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>Gets the shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property of the underlying data-bound control.</summary>
      <returns>The shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source of the underlying data-bound control.</summary>
      <returns>The designer of the data source of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Disconnects the data-bound control from data source events.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets the design-time data source from either the associated DataSourceDesigner or the DataSource property.</summary>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface referencing the design-time data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>Gets dummy sample data to render the data-bound control on the design surface if sample data cannot be created from the DataSourceDesigner or DataSource properties.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface containing dummy sample data used to render the data-bound control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Overridden by the designer to shadow run-time properties of the data-bound control with corresponding properties implemented by the designer.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties to filter.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>Gets the number of rows that the data-bound control displays on the design surface.</summary>
      <returns>The number of rows that the data-bound control displays on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>true if the designer can refresh the data source; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />. </summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an IListSource object (such as a <see cref="T:System.Data.DataSet" /> object) for the data source, and provides a <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property to select a particular list (or <see cref="T:System.Data.DataTable" /> object) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property of the associated control, or null if a data source is not found.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value indicating whether the designer should include "Choose a data source" in its action list.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner">
      <summary>Provides design-time support in a visual designer for adding and editing data fields in a data-bound control, such as <see cref="T:System.Web.UI.WebControls.GridView" /> or <see cref="T:System.Web.UI.WebControls.DetailsView" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField">
      <summary>When overridden in a derived class, creates an empty field object.</summary>
      <returns>An empty field object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>When overridden in a derived class, creates a new field object using the specified data field information.</summary>
      <returns>A new field object.</returns>
      <param name="fieldSchema">Schema information that contains the structure of a data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, creates a <see cref="T:System.Web.UI.WebControls.TemplateField" /> field for the specified data field.</summary>
      <returns>The new template field.</returns>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.DefaultNodeText">
      <summary>When overridden in a derived class, gets the default text that is displayed for the data field in the fields editor.</summary>
      <returns>The default text that is displayed for the data field in the fields editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNewDataSourceName(System.Type,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Gets an unique ID for a control that is created when a data field is converted into a <see cref="T:System.Web.UI.WebControls.TemplateField" />.</summary>
      <returns>A unique ID for the control.</returns>
      <param name="controlType">The type of the control that will be created.</param>
      <param name="mode">The data entry mode for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>When overridden in a derived class, gets the name that is displayed for the data field in the fields editor.</summary>
      <returns>The name that is displayed for the data field in the fields editor.</returns>
      <param name="dataControlField">The data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <returns>The service object of the specified type.</returns>
      <param name="serviceType">The type of service object to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplate(System.Web.UI.WebControls.DataBoundControl,System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.ITemplate" /> object that contains the template markup for the specified data-bound control.</summary>
      <returns>An object that contains the template markup for the specified data-bound control.</returns>
      <param name="control">The data-bound control.</param>
      <param name="templateContent">The template markup.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object for the specified data field.</summary>
      <returns>The new template field.</returns>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, gets a value that indicates whether the data field is enabled in the fields editor.</summary>
      <returns>A value that indicates whether the data field is enabled in the fields editor.</returns>
      <param name="parent">The data-bound control that contains the data field.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the fields editor.</summary>
      <returns>The service provider implementation, typically provided by the design host, which can be used to obtain additional design-time services.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.UsesSchema">
      <summary>When overridden in a derived class, gets a value that indicates whether schema information is used to load the data fields.</summary>
      <returns>true if schema information is used to load the data fields; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>Provides an editing user interface (UI) for a data control field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> and <see cref="T:System.IServiceProvider" /> objects.</summary>
      <returns>The final value of the object after it has been edited.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that indicates the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> containing a reference to the associated designer.</param>
      <param name="value">The object to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default value is Modal.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>Provides an editing user interface (UI) for the column collection of a <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value using the specified context descriptor and service provider.</summary>
      <returns>The final value of the object after it has been edited.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> object containing a reference to the associated designer.</param>
      <param name="value">The object to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default is Modal.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to 0.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</summary>
      <returns>The HTML markup that is used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML markup used to represent an empty template-based control at design time.</summary>
      <returns>The HTML markup used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup displayed at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <returns>The HTML markup displayed at design time for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template container.</summary>
      <returns>The data item property of the container of the template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> from which to get the content. </param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the <see cref="T:System.Type" /> object corresponding to the parent of the specified template.</summary>
      <returns>The <see cref="T:System.Type" /> corresponding to the parent of the specified template.</returns>
      <param name="templateName">The name of the template.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>Called when the columns of the template change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to set the content for. </param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The new content for the template.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataList" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class, and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataList" /> control can be resized.</summary>
      <returns>true if the data list has templates; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> object.</returns>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</summary>
      <returns>The HTML that is used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML used to represent an empty template-based control at design time.</summary>
      <returns>The HTML used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML to display at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <returns>The HTML displayed at design time for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the template container.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the container of the template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance from which to get the content.</param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The control element being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>Called when the data source to which the underlying control is bound loads a new schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance for which to set the content.</param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The new content for the template. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>Gets a value indicating whether there are templates defined for the associated control.</summary>
      <returns>true if the associated control has templates defined; otherwise false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>Creates a user-selectable list of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the available ADO.NET providers.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names are an exclusive list of possible values.</summary>
      <returns>Always false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names that can be picked from a list.</summary>
      <returns>Always true.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>Creates a user-selectable list of data source names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the specified source type to the native type of the converter. </summary>
      <returns>true if <paramref name="sourceType" /> is a string; otherwise, false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="sourceType">The <see cref="T:System.Type" /> of the object for which conversion is being requested.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter. </summary>
      <returns>The <paramref name="value" /> parameter is returned as a string. </returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture of the <paramref name="value" /> parameter.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is other than a string or null. </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available data source names.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the controls that implement the <see cref="T:System.Web.UI.IDataSource" /> interface and are available for use in the given context.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned data source names are an exclusive list of possible values.</summary>
      <returns>Always false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of data source names that can be picked from a list.</summary>
      <returns>Always true.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value that indicates whether the specified component is a valid data source.</summary>
      <returns>true if <paramref name="component" /> is a valid data source; otherwise, false.</returns>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.DetailsView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which to add definitions of the selectable and clickable regions in the design-time view of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.DetailsView" />, control which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view for the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows to show.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control associated with the designer, to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>Provides a component editor for embedded mail object collections in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to gain additional context information. </param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">The object to edit the value for. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.FormView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes for display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.FormView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.FormView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds or removes properties in the properties grid in a design host at design time, or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.GridView" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.GridView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view of the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view for the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HiddenField" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.HiddenField" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.HiddenField" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>Provides design-time support in a designer host for the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>Performs the actions that are necessary to connect to the current data source.</summary>
      <returns>true if a connection to a new data source was performed; false if the old and new data source are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>Creates a new data source for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> to bind to the design-time data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>Provides access to the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />, which implements the <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control. </summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> representing the default view of the data source. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Performs the actions that are necessary to disconnect from the current data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets a data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the control should render its default action lists, which contain a data source ID drop-down list and related tasks.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>Creates a user-selectable list of hierarchical data source names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value indicating whether the specified component is a valid data source.</summary>
      <returns>true if <paramref name="component" /> is a valid data source; otherwise, false.</returns>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> objects in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.HotSpot" /> collection elements can be selected at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>Gets the multiple data types that the collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> can create.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> object.</summary>
      <returns>A string that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HyperLink" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the associated hyperlink control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Label" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LinkButton" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>Performs data binding of a <see cref="T:System.Web.UI.WebControls.ListControl" /> Web server control within a visual designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Performs data binding on the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>Serves as the base class for designers that provide design-time support in the Visual Web Designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for the designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the specified control to the design-time data source. </summary>
      <param name="dataBoundControl">The associated control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" />, or a copy of that control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>Gets or sets the data text field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> of the list control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>Gets or sets the data value field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> of the list control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />, resolved to the <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface and containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source for the associated control has changed.</summary>
      <param name="forceUpdateView">A <see cref="T:System.Boolean" /> that indicates whether the design-time markup is to be unconditionally updated. This parameter is ignored. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove additional properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties to expose for the associated control at design time. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the associated control should render its default action lists.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> objects in a control that is derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.ListItem" /> elements can be selected at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Literal" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Login" /> Web-server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>Gets the designer action-list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control allows resizing.</summary>
      <returns>true if the control allows resizing; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the template that is used to render the associated control at design time.</summary>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Login" />, that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginName" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginName" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control that is associated with the designer, to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginStatus" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the <see cref="T:System.Web.UI.WebControls.LoginView" /> are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the current template that is used to render the associated control at design time.</summary>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to obtain content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when the current template is not defined.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.LoginView" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.LoginView" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the control that is associated with this designer.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.LoginView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>Provides an editor for selecting message body files in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>Gets the caption to appear on the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> form.</summary>
      <returns>A string that is the caption to appear on the editor form.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>Gets the list of file types for the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> object to accept.</summary>
      <returns>A string specifying a user-friendly name for each accepted file type and file specifications for each type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>Provides a component editor for the <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the data bindings collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> interface, through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the provider can refresh the schema.</summary>
      <returns>true if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.Menu" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Menu" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when no markup is otherwise available.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Menu" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> object that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source to use at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> to use as a data source for the associated <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Menu" />, which implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
      <exception cref="T:System.ArgumentException">component is not a <see cref="T:System.Web.UI.WebControls.Menu" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Menu" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <param name="preferSilent">If true, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>Gets a schema that describes the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the structure of the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" /> property. </summary>
      <returns>true, if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see the <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" /> method.</summary>
      <param name="preferSilent">true to indicate that error messages should not be displayed when exceptions occur during processing; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>Gets the current schema object for the designer. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" /> property.</summary>
      <returns>The current schema object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a copy of the associated control or use the control itself to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>Provides a component editor for the collection that is specified by the <see cref="P:System.Web.UI.WebControls.Menu.Items" /> property of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the menu item collection of the associated control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> objects in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified type, <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of item to create. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.MultiView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called; false otherwise.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>Displays the Configure Data Source wizard on the visual designer surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>Returns a data source view with the specified name.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> with the name specified by <paramref name="viewName" />.</returns>
      <param name="viewName">A string containing the name of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>Returns a list of data source view names for the associated control.</summary>
      <returns>A string array containing the names of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> objects of the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Extracts the metadata for the Select method from the business object that is specified by the associated control.</summary>
      <param name="preferSilent">If true, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>Gets or sets the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> method of the associated control is called.</summary>
      <returns>A string containing the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> is called.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>Gets or sets the name of the type that contains the methods that are specified in the associated control.</summary>
      <returns>A string containing the name of the type that contains the methods that perform the Delete, Insert, Select, and Update database operations specified in the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>Provides the design-time view that is associated with the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> class. </summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> that owns this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
      <param name="viewName">A string containing the name of this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform a Delete operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform a Delete operation; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Insert operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Insert operation; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the associated data source control can perform server-based paging.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the associated data source control can return the total number of rows that are returned by a query.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the associated data source control can sort rows.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Update operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Update operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control.</summary>
      <returns>A sample of the data represented by the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> or null if the designer cannot generate any sample data.</returns>
      <param name="minimumRows">An integer containing the minimum number of rows to retrieve.</param>
      <param name="isSampleData">A value indicating whether the data returned is sample data or real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> that describes the view and the properties of the objects in the list or null if the schema is unavailable.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds string representations of style attributes to a collection to be used in the design-time rendering of the control.</summary>
      <param name="styleAttributes">A collection of style attributes implementing the <see cref="T:System.Collections.IDictionary" />. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>Gets the caption that appears on the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A string that contains the panel caption.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>Gets the styles of the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object that contains the design-time styles for the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Panel" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.Panel" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Panel" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a specified property and value to a specified markup style.</summary>
      <param name="propName">A string containing the property name. </param>
      <param name="varPropValue">An object that is the property value. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>Provides notification when a behavior is attached to the designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> object that is specified by the Parameters properties of the associated data source control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the elements of the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects of the associated data source control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used to acquire context information. </param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">The object to edit the value for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />. </returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>Provides a reusable <see cref="T:System.Windows.Forms.UserControl" /> object for editing <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class using the specified <see cref="T:System.IServiceProvider" />.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> interface to the current design host, such as Visual Studio 2005.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>Adds an array of existing parameters to the editor.</summary>
      <param name="parameters">A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of existing parameters to add to the editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>Removes all parameters from the editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>Gets all parameters from the editor.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of all parameters from the editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> event when the state of a parameter in the editor changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>Occurs when any parameter or one of the parameter's properties is changed.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>Returns a value indicating whether all the parameters in the editor are configured.</summary>
      <returns>true if all parameters in the editor are fully configured; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>Controls whether additions and deletions can be made to the values in the editor.</summary>
      <param name="allowChanges">A <see cref="T:System.Boolean" /> that indicates whether additions and deletions can be made to the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> being edited.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.TypeDescriptionProvider">
      <summary>Provides metadata for the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class. </summary>
      <returns>A type descriptor provider object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control allows resizing. </summary>
      <returns>true if the control allows resizing; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to display the associated control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display all regions at design time.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">A collection of control designer regions for the associated control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region for the design-time view of the associated control.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">The region to get content for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer class to add properties to, or remove properties from, the Properties grid at design time or to shadow properties of the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Establishes the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region that is contained within the control. </param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>Provides design-time support in a visual designer for a control where the design surface must use a preview of the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>Provides a dialog box for editing regular expressions used by the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> class.</summary>
      <param name="site">The site for this dialog box. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Help event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the OK event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TestValidate event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="args">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> and optionally releases the managed resources.</summary>
      <param name="disposing">A value indicating to all resources held by any managed objects that this <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> references.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the SelectedIndexChanged event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Activated event of dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>Gets or sets the name of the regular expression to edit.</summary>
      <returns>The name of the regular expression.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TextChanged event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>Provides a user interface for editing regular expressions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the given regular expression object using the given service provider and context.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this method returns the same object it received.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can provide additional context information.</param>
      <param name="provider">A service provider.</param>
      <param name="value">The regular expression object whose value is to be edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the editor style used by the method.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>Gets or sets the name of a specific table or view in the data source object to bind the <see cref="T:System.Web.UI.WebControls.Repeater" /> control to.</summary>
      <returns>The name of a table or view in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>A data-binding expression that identifies the source of data for the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>A data binding expression.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>Provides access to the associated designer component for the data source.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> property of the associated control.</summary>
      <returns>The ID of the associated control's data source control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>Called by a design host such as Visual Studio 2005 after a user selects a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>Returns design-time sample data based on the provided data and using the specified number of rows.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
      <param name="selectedDataSource">An <see cref="T:System.Collections.IEnumerable" /> object containing data to use in creating similar sample data at design time.</param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>Returns design-time sample data based on the <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> method and using the specified number of rows.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup to be used for the design-time representation of the control.</summary>
      <returns>Design-time HTML markup.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> that contains a collection of values used to supply design-time data. The default value is null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>Retrieves the selected data source component from the container of the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>The selected data source; null if a data source is not found or if a data source with the selected name does not exist.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the provided <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="source">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>Handles changes made to the data source </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Filters the properties to replace the runtime data source property descriptor with the designer's property descriptor.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>Gets a value indicating whether the associated control has any templates defined.</summary>
      <returns>A value that indicates whether any templates are defined for the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>Provides a design-time editor for the <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" /> class.</summary>
      <param name="type">The type of objects in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>Provides a value indicating whether the editor allows selection of multiple items in the collection.</summary>
      <returns>false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the schema can be refreshed.</summary>
      <returns>This implementation always returns true.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> for the specified view.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
      <param name="viewPath">The XPath query for the part of the data source to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>Gets an array of names representing named views in the data source.</summary>
      <returns>This implementation always returns an empty string array.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated component changes.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object containing information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Called by the designer host to refresh the schema of the underlying data source.</summary>
      <param name="preferSilent">true to suppress data source events until the refresh operation has completed; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with the Configure method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />.</summary>
      <returns>A designer data-source view that contains information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of the view to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>The names of the views in the underlying data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">true suppresses data source events until the refresh is finished.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /></summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> and <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> classes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> class using the provided <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> object and view name.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view for which the data source provides data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" />.</returns>
      <param name="minimumRows">The minimum number of rows to retrieve or create.</param>
      <param name="isSampleData">true to indicate sample data; false to indicate real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data that is represented by this <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> or an object that derives from <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>Provides a design-time view of hierarchical data for the <see cref="T:System.Web.SiteMap" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> that is the designer for the associated <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />.</param>
      <param name="viewPath">An XPath query that defines the block of data to use for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample data or real data.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" />.</returns>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e"> The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.SiteMapPath" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>Provides a user interface for selecting and editing a connection string property of a <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, if the <paramref name="instance" /> is not null; otherwise, an empty string ("").</returns>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
      <param name="connection">The <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" /> method can be called by the design host.</summary>
      <returns>true if the design host supports the <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" /> interface; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called by the design host.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> and <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> properties are not empty; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>The string used to open a database connection at runtime.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>Creates a new <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> instance using the specified name.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> object.</returns>
      <param name="viewName">The name of the view to create.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports delete queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Delete" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>Derives the parameters from the specified SQL command and adds corresponding <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the command's parameters collection.</summary>
      <param name="providerName">The name of the data provider.</param>
      <param name="command">A <see cref="T:System.Data.Common.DbCommand" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object if found in the data source; otherwise null.</returns>
      <param name="viewName">The name of the view to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>Gets a list of available views.</summary>
      <returns>A string array containing the names of the available views.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>Returns an array of parameters using the specified connection, command text, and command type.</summary>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects.</returns>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />  object</param>
      <param name="commandText">The text of the command.</param>
      <param name="commandType">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> indicating the type of command.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports insert queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Insert" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The properties to be filtered.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>Gets or sets the name of the .NET Framework data provider that the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</summary>
      <returns>A string containing the name of the data provider.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the underlying data source.</summary>
      <param name="preferSilent">true suppresses all data source events until the schema is refreshed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>Gets or sets the SQL query in the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> for selecting data from the underlying database.</summary>
      <returns>An SQL query.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports select queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Select" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports update queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Update" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> class using the provided data source designer and name of the view.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>true if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, instead of the data.</summary>
      <returns>true if retrieving the total number of data rows is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the underlying data source.</summary>
      <returns>true if a sorted view on the underlying data source is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a value indicating whether the data is sample or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" /> class.</summary>
      <param name="type">The type to create an instance of.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A collection of the specified type.</returns>
      <param name="itemType">The type to create an instance of.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> object in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified type, which should be <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>Provides a user interface for editing the collection of cells in a table row.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple table cells can be selected at the same time.</summary>
      <returns>true if multiple cells can be selected at the same time; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the editor for use with the specified type.</summary>
      <returns>An object of the specified type.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Table" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>Provides a user interface for editing rows of a table.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>true if multiple items can be selected at once; otherwise, false. This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the specified type.</summary>
      <returns>An object of the specified type.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>Provides a type converter to convert the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> property to and from other representations.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the type of this converter using the provided context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the object to the specified type using the provided context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the provided <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object and the design host as represented by the <see cref="T:System.IServiceProvider" /> interface.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">The type descriptor context.</param>
      <param name="provider">The provider.</param>
      <param name="value">The value to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">The context.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" /> class.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection edits.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>Provides a design-time data bindings editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">The type descriptor context.</param>
      <param name="provider">The service provider.</param>
      <param name="value">The value to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" /> method.</summary>
      <param name="context">The type descriptor context.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>Displays a dialog box to edit the line images for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The data bound control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>Displays a dialog box to edit the data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>Displays a dialog box to edit the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
      <param name="e">The exception.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>When overridden in a derived class, provides for custom initialization of the given <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true, if the control designer uses a temporary copy of the control for design-time preview; otherwise, false, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements a dictionary of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.View" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <param name="regions">The current control designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> object.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Adds the provided designer region collection to the current designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to add.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Creates a navigation template from the active step and saves it in the <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> property of the active step.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>Converts a selection of controls to a template in the associated control.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The wizard control associated with this designer.</param>
      <param name="templateName">The name of the template to convert to.</param>
      <param name="keys">An array of IDs for the controls that are to be included in the template.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>Creates the child controls of the associated control.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>Gets or sets a property in the associated wizard control indicating whether to display a sidebar.</summary>
      <returns>true to display the sidebar; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the HTML markup to display the control at design time and populates the collection with the current control designer regions.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the editable region of the control at design time.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host, or provides new design-time settings or properties that correspond to properties on the associated control.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>Resets the specified template to its default value.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.Wizard" /> control associated with this designer.</param>
      <param name="templateName">The name of the template to reset.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the design host should use a preview control.</summary>
      <returns>true to use a preview control; false to use the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>Provides a design-time editor in a design host such as Visual Studio 2005 for a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of items in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>true if multiple items can be selected at once; otherwise, false. This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the collection of the specified <see cref="T:System.Type" />.</summary>
      <returns>A collection of the specified <paramref name="itemType" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of collection to create.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>Retrieves the data types this collection can contain.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> class using the given designer and step.</summary>
      <param name="designer">A <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> that is the parent designer for the wizard.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that defines the step.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a template in a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" /> class.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object that defines a template element in a wizard step at design time.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object that represents a step displayed in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called, otherwise false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>Gets or sets a block of XML that the associated data source control binds to.</summary>
      <returns>A string of XML data.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>Gets or sets the file name of an XML file that the associated data source control binds to.</summary>
      <returns>An XML file name.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves the design-time data source view object for the associated <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
      <param name="viewPath">The path to the view to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by a designer component to add properties to or remove properties from, the Properties grid in a design host at design time or to provide new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">An IDictionary of properties.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">true to suppress schema UI events; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />. </summary>
      <returns>true if the data source can be configured; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />. </summary>
      <returns>true if the schema can be refreshed; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />. </summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object containing information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of a view in the underlying data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>An array of names of the views in the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">Specifies whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>Gets or sets a block of Extensible Stylesheet Language (XSL) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XSL data string.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>Gets or sets the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>The XSLT file name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>Gets or sets an XPath query to apply to the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XPath query.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Xml" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> control and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML that is used to fill an empty control.</summary>
      <returns>The HTML used to fill an empty control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the control that this instance of the designer is associated with.</summary>
      <param name="component">The associated control. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" /> class.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows"> The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>Provides a hierarchical design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> class using the provided designer and XPath.</summary>
      <param name="owner">An <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewPath">An XPath string that identifies the data for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data represented by this view object.</summary>
      <returns>This implementation always returns null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />, and <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" /> class</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default CatalogZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time by calling the <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method with a null argument.</summary>
      <returns>A method call to <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null argument as the parameter.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates an <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in the designer before generating the design-time HTML of the control.</summary>
      <returns>A <see cref="T:System.String" /> representing the design-time HTML of the control.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions. </summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for a CatalogZone environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A predefined <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default ConnectionZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> that is the markup to represent the control at design time. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the specified <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Hides a preset group of properties at design time.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the set of properties associated with the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Overrides the parent method to prevent rendering of the control.</summary>
      <returns>Either an empty string ("") or the value of <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control on the design surface.</summary>
      <returns>An empty markup string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control and sets the <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> view flag to true.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>The appended <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> associated with this class.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default EditorZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>Invokes <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null parameter.</summary>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for an EditorZone environment. </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>Provides design-time support in a visual designer for a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to initialize.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>Extends design-time behavior for controls that implement the <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Creates an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control associated with this designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>Provides minimal design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>Gets an empty string (""), which indicates that the visual design environment should revert to default control rendering.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>Provides design-time support in a visual designer for a Web Parts zone.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>Gets the action list collection for the zone designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the Web Parts zone.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to initialize.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ViewInBrowseMode">
      <summary>Gets or sets a value indicating whether the Web Parts zone is displayed when the user is in the browse display mode. </summary>
      <returns>true if the Web Parts zone is displayed when the user is in the browse display mode; otherwise, false. </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner">
      <summary>Provides design-time visual support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to a control and validates that the control is a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control associated with this designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner">
      <summary>Provides minimal design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.GetDesignTimeHtml">
      <summary>Returns an empty string (""), which indicates that the visual design environment should revert to default control rendering.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> control associated with this designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Hides the <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" /> property at design time.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the set of properties associated with the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default WebPartZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time by calling the <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method with a null argument.</summary>
      <returns>A method call to <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null argument as the parameter.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates an <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in the designer before generating the design-time HTML of the control.</summary>
      <returns>A <see cref="T:System.String" /> representing the design-time HTML of the control.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region content.</returns>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Provides an empty string ("") if there is no design-time HTML for the associated control.</summary>
      <returns>An empty string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Attaches the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content for the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object with default settings for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner">
      <summary>Provides design-time visual support for <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Creates an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>Provides a user interface for configuring an <see cref="P:System.Windows.Forms.Control.Anchor" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>Imports ActiveX controls and generates a wrapper that can be accessed by a designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxImporter" /> class.</summary>
      <param name="options">An <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> that indicates the options for the ActiveX control importer to use. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedAssemblies">
      <summary>Gets the names of the assemblies that are generated for the control.</summary>
      <returns>An array of names of the generated assemblies, or an empty string array if no assemblies have been generated.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedSources">
      <summary>Gets the names of the source files that were generated.</summary>
      <returns>An array of file names of the generated source files, or null if none exist.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedTypeLibAttributes">
      <summary>Gets the attributes for the generated type library.</summary>
      <returns>An array of type <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> that indicates the attributes for the generated type library.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromFile(System.IO.FileInfo)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <param name="file">A <see cref="T:System.IO.FileInfo" /> indicating the file that contains the control. </param>
      <exception cref="T:System.Exception">A type library could not be loaded from <paramref name="file" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> that indicates the type library to generate the control from. </param>
      <exception cref="T:System.Exception">No registered ActiveX control was found in <paramref name="typeLib" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib,System.Guid)">
      <summary>Generates a wrapper for an ActiveX control for use in the design-time environment.</summary>
      <returns>An assembly qualified name for the type of ActiveX control for which a wrapper was generated.</returns>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> that indicates the type library to generate the control from. </param>
      <param name="clsid">The <see cref="T:System.Guid" /> for the control wrapper. </param>
      <exception cref="T:System.Exception">No registered ActiveX control was found in <paramref name="typeLib" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GetFileOfTypeLib(System.Runtime.InteropServices.TYPELIBATTR@)">
      <summary>Gets the path and file name to the specified type library.</summary>
      <returns>The path and file name to the specified type library, or null if the library could not be located.</returns>
      <param name="tlibattr">A <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> that indicates the type library to retrieve the file name of. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolves a reference to the specified type library that contains an ActiveX control.</summary>
      <returns>A fully qualified path to an assembly.</returns>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> to resolve a reference to. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>Resolves a reference to the specified assembly that contains a COM component.</summary>
      <returns>A fully qualified path to an assembly.</returns>
      <param name="name">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly to resolve a reference to. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>Resolves a reference to the specified type library that contains an COM component.</summary>
      <returns>A fully qualified path to an assembly.</returns>
      <param name="typeLib">A <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> to resolve a reference to. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>Resolves a reference to the specified assembly.</summary>
      <returns>A fully qualified path to an assembly.</returns>
      <param name="assemName">The name of the assembly to resolve a reference to. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>Represents a set of options for an <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> class. </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>Specifies whether the generated assembly is strongly named and will be signed later.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>Specifies whether sources for the type library wrapper should be generated.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>Specifies the path to the file that contains the strong name key container for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>Specifies the path to the file that contains the strong name key for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>Specifies the strong name used for the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>Specifies the path to the directory that the generated assemblies will be created in.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>Specifies the filename to generate the ActiveX control wrapper to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>Specifies whether to overwrite existing files when generating assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>Specifies the public key used to sign the generated assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>Specifies the <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> to use to resolve types and references when generating assemblies.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>Specifies whether to compile in silent mode, which generates less displayed information at compile time.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>Specifies whether to compile in verbose mode, which generates more displayed information at compile time.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxParameterData">
      <summary>Represents a parameter of a method of a hosted ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified parameter information.</summary>
      <param name="info">A <see cref="T:System.Reflection.ParameterInfo" /> indicating the parameter information to use. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified parameter information and whether to ignore by reference parameters.</summary>
      <param name="info">A <see cref="T:System.Reflection.ParameterInfo" /> indicating the parameter information to use. </param>
      <param name="ignoreByRefs">A value indicating whether to ignore parameters passed by reference. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified name and type name.</summary>
      <param name="inname">The name of the parameter. </param>
      <param name="typeName">The name of the type of the parameter. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.AxParameterData" /> class using the specified name and type.</summary>
      <param name="inname">The name of the parameter. </param>
      <param name="type">The type of the parameter. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[])">
      <summary>Converts the specified parameter information to an <see cref="T:System.Windows.Forms.Design.AxParameterData" /> object.</summary>
      <returns>An array of <see cref="T:System.Windows.Forms.Design.AxParameterData" /> objects representing the specified array of <see cref="T:System.Reflection.ParameterInfo" /> objects.</returns>
      <param name="infos">An array of <see cref="T:System.Reflection.ParameterInfo" /> objects to convert. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[],System.Boolean)">
      <summary>Converts the specified parameter information to an <see cref="T:System.Windows.Forms.Design.AxParameterData" /> object, according to the specified value indicating whether to ignore by reference parameters.</summary>
      <returns>An array of <see cref="T:System.Windows.Forms.Design.AxParameterData" /> objects representing the specified array of <see cref="T:System.Reflection.ParameterInfo" /> objects.</returns>
      <param name="infos">An array of <see cref="T:System.Reflection.ParameterInfo" /> objects to convert. </param>
      <param name="ignoreByRefs">A value indicating whether to ignore parameters passed by reference. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Direction">
      <summary>Indicates the direction of assignment fields.</summary>
      <returns>A <see cref="T:System.CodeDom.FieldDirection" /> indicating the direction of assignment fields.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsByRef">
      <summary>Indicates whether the parameter data is passed by reference.</summary>
      <returns>true if the parameter data is by reference; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsIn">
      <summary>Indicates whether the parameter data is in.</summary>
      <returns>true if the parameter data is in; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOptional">
      <summary>Indicates whether the parameter data is optional.</summary>
      <returns>true if the parameter data is optional; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOut">
      <summary>Indicates whether the parameter data is out.</summary>
      <returns>true if the parameter data is out; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Name">
      <summary>Gets or sets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.ParameterType">
      <summary>Gets the type expected by the parameter.</summary>
      <returns>The type expected by the parameter.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.TypeName">
      <summary>Gets the name of the type expected by the parameter.</summary>
      <returns>The name of the type expected by the parameter.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxWrapperGen">
      <summary>Generates a wrapper for ActiveX controls for use in the design-time environment.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxWrapperGen.#ctor(System.Type)">
      <summary>Generates an ActiveX wrapper for design-time hosting of an ActiveX control.</summary>
      <param name="axType">The type of ActiveX control to generate a wrapper for. </param>
    </member>
    <member name="F:System.Windows.Forms.Design.AxWrapperGen.GeneratedSources">
      <summary>This field initializes a local <see cref="T:System.Collections.ArrayList" /> variable named GeneratedSources.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>Provides an editor for setting the <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <returns>The edited object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> providing information about the control or component.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> providing custom support to other objects.</param>
      <param name="value">The object value to edit.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the EditValue method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values. If the method is not supported, this method returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> providing information about the control or component.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>Base designer class for extending the design mode behavior of a root design document that supports nested components.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>Gets the control for the designer.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> the designer is editing.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a value indicating whether the specified tool is supported by the designer.</summary>
      <returns>true if the tool should be enabled on the toolbox; false if the document designer doesn't know how to use the tool.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test for toolbox support. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>For a description of this member, see <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <returns>An object that represents the view for this designer.</returns>
      <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> that indicates a particular view technology.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <returns>true if the set of filtered attributes is to be cached; false if the filter service must query again.</returns>
      <param name="component">The component to filter the attributes of.</param>
      <param name="attributes">A dictionary of attributes that can be modified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <returns>true if the set of filtered events is to be cached; false if the filter service must query again.</returns>
      <param name="component">The component to filter events for.</param>
      <param name="events">A dictionary of events that can be modified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <returns>true if the set of filtered properties is to be cached; false if the filter service must query again.</returns>
      <param name="component">The component to filter properties for.</param>
      <param name="properties">A dictionary of properties that can be modified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <returns>true if the tool is supported by the toolbox and can be enabled; false if the document designer does not know how to use the tool.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.</summary>
      <returns>true if the component tray for the designer is in auto-arrange mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>Gets or sets a value indicating whether the component tray for the designer is in large icon mode.</summary>
      <returns>true if the component tray for the designer is in large icon mode; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>Provides behavior for the component tray of a designer. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentTray" /> class using the specified designer and service provider.</summary>
      <param name="mainDesigner">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that is the main or document designer for the current project. </param>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> that can be used to obtain design-time services. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>Adds a component to the tray.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to add to the tray. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>Gets or sets a value indicating whether the tray items are automatically aligned.</summary>
      <returns>true if the tray items are automatically arranged; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a value indicating whether the specified tool can be used to create a new component.</summary>
      <returns>true if the specified tool can be used to create a component; otherwise, false.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>Gets a value indicating whether the specified component can be displayed.</summary>
      <returns>true if the component can be displayed; otherwise, false.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to test. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>Gets the number of components contained in the tray.</summary>
      <returns>The number of components in the tray.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>Displays an error message to the user with information about the specified exception.</summary>
      <param name="e">The exception about which to display information. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ComponentTray" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>Gets the location of the specified component, relative to the upper-left corner of the component tray.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> indicating the coordinates of the specified component, or an empty <see cref="T:System.Drawing.Point" /> if the specified component could not be found in the component tray. An empty <see cref="T:System.Drawing.Point" /> has an <see cref="P:System.Drawing.Point.IsEmpty" /> property equal to true and typically has <see cref="P:System.Drawing.Point.X" /> and <see cref="P:System.Drawing.Point.Y" /> properties that are each equal to zero.</returns>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> to retrieve the location of. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Similar to <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, this method returns the next component in the tray, given a starting component.</summary>
      <returns>The next component in the component tray, or null, if the end of the list is encountered (or the beginning, if <paramref name="forward" /> is false).</returns>
      <param name="component">The component from which to start enumerating.</param>
      <param name="forward">true to enumerate forward through the list; otherwise, false to enumerate backward.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>Gets the requested service type.</summary>
      <returns>An instance of the requested service, or null if the service could not be found.</returns>
      <param name="serviceType">The type of the service to retrieve. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>Gets the value of the Location extender property.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> representing the location of <paramref name="receiver" />. </returns>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> that receives the location extender property.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>Tests a component for presence in the component tray.</summary>
      <returns>true if <paramref name="comp" /> is being shown on the tray; otherwise, false.</returns>
      <param name="comp">The component to test for presence in the component tray.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object that has been dragged is dropped on the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object is dragged over, and has entered the area over, the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>Called when an object is dragged out of the area over the component tray.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Called when an object is dragged over the component tray.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.</summary>
      <param name="gfevent">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>Called when a mouse drag selection operation is canceled.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse is double clicked over the component tray.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse button is pressed.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse cursor position has changed.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Called when the mouse button has been released.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the view for the component tray should be refreshed.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>Called to set the mouse cursor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>Removes the specified component from the tray.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to remove from the tray. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Sets the location of the specified component to the specified location.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> to set the location of. </param>
      <param name="location">A <see cref="T:System.Drawing.Point" /> indicating the new location for the specified component. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>Sets the value of the Location extender property.</summary>
      <param name="receiver">The <see cref="T:System.ComponentModel.IComponent" /> that receives the location extender property.</param>
      <param name="location">A <see cref="T:System.Drawing.Point" /> representing the location of <paramref name="receiver" />. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.</summary>
      <returns>true if large icons are displayed; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
      <param name="component">The <see cref="T:System.Object" /> to receive the extender properties.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class. </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>Specifies the accessibility object for the designer.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>Gets the collection of components associated with the component managed by the designer.</summary>
      <returns>The components that are associated with the component managed by the designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property. </summary>
      <returns>true if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and AutoSizeMode properties; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or null if the service is unavailable.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>Indicates if this designer's control can be parented by the control of the specified designer.</summary>
      <returns>true if the control managed by the specified designer can parent the control managed by this designer; otherwise, false.</returns>
      <param name="parentDesigner">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>Gets the control that the designer is designing.</summary>
      <returns>The control that the designer is designing.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>Provides default processing for Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>Displays information about the specified exception to the user.</summary>
      <param name="e">The <see cref="T:System.Exception" /> to display. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>Enables design time functionality for a child control.</summary>
      <returns>true if the child control could be enabled for design time; false if the hosting infrastructure does not support it.</returns>
      <param name="child">The child control for which design mode will be enabled.</param>
      <param name="name">The name of <paramref name="child" /> as exposed to the end user.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> or <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>Enables or disables drag-and-drop support for the control being designed.</summary>
      <param name="value">true to enable drag-and-drop support for the control; false if the control should not have drag-and-drop support. The default is false. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>Gets a value indicating whether drag rectangles can be drawn on this designer component.</summary>
      <returns>true if drag rectangles can be drawn; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</returns>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</summary>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the control.</summary>
      <returns>true if a click at the specified point is to be handled by the control; otherwise, false.</returns>
      <param name="point">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>Routes messages from the child controls of the specified control to the designer.</summary>
      <param name="firstChild">The first child <see cref="T:System.Windows.Forms.Control" /> to process. This method may recursively call itself for children of the control. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</summary>
      <returns>
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with. This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Re-initializes an existing component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</returns>
      <param name="internalControlIndex">A specified index to select the internal control designer. This index is zero-based.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</summary>
      <param name="x">The x coordinate at which to display the context menu. </param>
      <param name="y">The y coordinate at which to display the context menu. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>Provides an opportunity to perform additional processing immediately after the control handle has been created.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call to clean up a drag-and-drop operation.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop object is dropped onto the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop operation enters the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Receives a call when a drag-and-drop operation leaves the control designer view.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Receives a call when a drag-and-drop object is dragged over the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Receives a call in response to the left mouse button being pressed and held while over the component.</summary>
      <param name="x">The x position of the mouse in screen coordinates. </param>
      <param name="y">The y position of the mouse in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</summary>
      <param name="cancel">true to cancel the drag; false to commit it. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Receives a call for each movement of the mouse during a drag-and-drop operation.</summary>
      <param name="x">The x position of the mouse in screen coordinates. </param>
      <param name="y">The y position of the mouse in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>Receives a call when the mouse first enters the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>Receives a call after the mouse hovers over the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>Receives a call when the mouse first enters the control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>Called when the designer is intialized.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>Receives a call each time the cursor needs to be set.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns>The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, null if there is no parent component.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>Gets the selection rules that indicate the movement capabilities of a component.</summary>
      <returns>A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</summary>
      <returns>A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>Routes messages for the children of the specified control to each control rather than to a parent designer.</summary>
      <param name="firstChild">The first child <see cref="T:System.Windows.Forms.Control" /> to process. This method may recursively call itself for children of the control. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages and optionally routes them to the control.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>Provides an <see cref="T:System.Windows.Forms.AccessibleObject" /> for <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> class using the specified designer and control.</summary>
      <param name="designer">The <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> for the accessible object. </param>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> for the accessible object. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>Gets the points that define the boundaries of the accessible object for the designer.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that indicates the boundaries of the accessible object for the designer.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>Gets a string that describes the default action of the specified object.</summary>
      <returns>A description of the default action for a specified object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>Gets a string that describes the visual appearance of the specified object.</summary>
      <returns>A description of the object's visual appearance to the user, or null if the object does not have a description.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>Retrieves the accessible child corresponding to the specified index.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the accessible child corresponding to the specified index.</returns>
      <param name="index">The zero-based index of the accessible child.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>Retrieves the number of children belonging to an accessible object.</summary>
      <returns>The number of children belonging to an accessible object.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>Retrieves the object that has the keyboard focus.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns null if no object has focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>Retrieves the currently selected child.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns null if is no child is currently selected and the object itself does not have focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>Retrieves the child object at the specified screen coordinates.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns null if no object is at the tested location.</returns>
      <param name="x">The horizontal screen coordinate.</param>
      <param name="y">The vertical screen coordinate.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>Gets or sets the object name.</summary>
      <returns>The object name, or null if the property has not been set.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>Gets the parent of an accessible object.</summary>
      <returns>An <see cref="T:System.Windows.Forms.AccessibleObject" /> that represents the parent of an accessible object, or null if there is no parent object.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>Gets the role of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None" /> if no role has been specified.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>Gets the state of this accessible object.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.AccessibleStates" /> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None" />, if no state has been set.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>Gets or sets the value of an accessible object.</summary>
      <returns>The value of an accessible object, or null if the object has no value set.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>Provides access to get and set option values for a designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>Gets or sets a value that enables or disables in-place editing for <see cref="T:System.Windows.Forms.ToolStrip" /> controls.</summary>
      <returns>true if in-place editing for <see cref="T:System.Windows.Forms.ToolStrip" /> controls is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>Gets or sets a <see cref="T:System.Drawing.Size" /> representing the dimensions of a grid unit. </summary>
      <returns>A <see cref="T:System.Drawing.Size" /> representing the dimensions of a grid unit.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation. </summary>
      <returns>true to allow a component's smart tag panel to open automatically upon creation; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>Gets or sets a value that enables or disables the grid in the designer. </summary>
      <returns>true if the grid is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates. </summary>
      <returns>true if snapping is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>Gets or sets a value that enables or disables the component cache. </summary>
      <returns>true if the component cache is enabled; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>Gets or sets a value that enables or disables smart tags in the designer.</summary>
      <returns>true if smart tags in the designer are enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>Gets or sets a value that enables or disables snaplines in the designer.</summary>
      <returns>true if snaplines in the designer are enabled; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>Provides a user interface for specifying a <see cref="P:System.Windows.Forms.Control.Dock" /> property.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DockEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a <see cref="T:System.Windows.Forms.Control" /> that supports nested controls and should receive scroll messages.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Checks for the existence of a menu editor service and creates one if one does not already exist.</summary>
      <param name="c">The <see cref="T:System.ComponentModel.IComponent" /> to ensure has a context menu service. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> representing the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</summary>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  value that specifies the selection state.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>Indicates whether the specified tool is supported by the designer.</summary>
      <returns>true if the tool should be enabled on the toolbox; false if the document designer doesn't know how to use the tool.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to test for toolbox support. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer. </param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>Initializes the menuEditorService variable to null.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>Called when the context menu should be displayed.</summary>
      <param name="x">The horizontal screen coordinate to display the context menu at. </param>
      <param name="y">The vertical screen coordinate to display the context menu at. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>Called immediately after the handle for the designer has been created.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.SelectionRules" /> for the designer.</summary>
      <returns>A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>For a description of this member, see <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <returns>An object that represents the view for this designer.</returns>
      <param name="technology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> that indicates a particular view technology.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <returns>true if the tool is supported by the toolbox and can be enabled; false if the document designer does not know how to use the tool.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>Selects the specified tool.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component for. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>Provides a systematic way to manage event handlers for the current document.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> class. </summary>
      <param name="focusWnd">The <see cref="T:System.Windows.Forms.Control" /> which is being designed.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>Fires an OnEventHandlerChanged event.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>Gets the control to which event handlers are attached.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> which was attached through the constructor.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>Gets the currently active event handler of the specified type.</summary>
      <returns>An instance of the handler, or null if there is no handler of the requested type.</returns>
      <param name="handlerType">The type of the handler to get. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>Pops the given handler off of the stack.</summary>
      <param name="handler">The handler to remove from the stack. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>Pushes a new event handler on the stack.</summary>
      <param name="handler">The handler to add to the stack. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>Provides a user interface for selecting a file name.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style used by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>Initializes the open file dialog when it is created.</summary>
      <param name="openFileDialog">The <see cref="T:System.Windows.Forms.OpenFileDialog" /> to use to select a file name. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>Provides a user interface for choosing a folder from the file system.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object using the editor style provided by <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <returns>The new value of the object, or the old value if the object couldn't be updated.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service object provider. </param>
      <param name="value">The value to set. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style used by the <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>Initializes the folder browser dialog.</summary>
      <param name="folderBrowser">A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> to choose a folder. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>Gets or sets a description to show above the folders.</summary>
      <returns>The description to show above the folders.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>Gets the directory path to the object the user picked.</summary>
      <returns>The directory path to the object the user picked.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>Shows the folder browser dialog.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DialogResult" /> from the form.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>Shows the folder browser dialog with the specified owner.</summary>
      <returns>The <see cref="T:System.Windows.Forms.DialogResult" /> from the form.</returns>
      <param name="owner">Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form). </param>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>Gets or sets the start location of the root node.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> that indicates the location for the folder browser to initially browse to.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>The styles the folder browser will use when browsing folders. This should be a combination of flags from the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> enumeration.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> enumeration member that indicates behavior for the <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> to use.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>Defines identifiers used to indicate the root folder for a folder browser to initially browse to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>The user's desktop.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>The user's favorites list.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>The contents of the My Computer icon.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>The user's My Documents folder.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>User's location to store pictures.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>Network and dial-up connections.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>The network neighborhood.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>A folder containing installed printers.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>A folder containing shortcuts to recently opened files.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>A folder containing shortcuts to applications to send documents to.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>The user's start menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>The user's file templates.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>Defines identifiers used to specify behavior of a <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>The folder browser can return any object that it can return.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>The folder browser will only return obejcts of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>The folder browser includes a <see cref="T:System.Windows.Forms.TextBox" /> control in the browse dialog box that allows the user to type the name of an item.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>Serializes string dictionaries.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.</summary>
      <returns>The deserialized CodeDOM object.</returns>
      <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
      <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="codeObject" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a Code Document Object Model (CodeDOM) object.</summary>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
      <param name="manager">The serialization manager to use during serialization.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>Provides an editor that can perform default file searching for bitmap (.bmp) files.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by the <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>An <see cref="T:System.Object" /> representing the new value. If the value of the object has not changed, the <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method returns the object that was passed to it.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">An <see cref="T:System.Object" /> being edited. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>Gets the description for the default file-list filter provided by this editor.</summary>
      <returns>The description for the default file-list filter.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>Gets an array of supported image types.</summary>
      <returns>An array of <see cref="T:System.Type" /> representing supported image types.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <returns>true if <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a value indicated by the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
      <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> indicating what to paint and where to paint it.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>Provides access to the menu editing service.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>Gets the current menu.</summary>
      <returns>The current <see cref="T:System.Windows.Forms.Menu" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>Indicates whether the current menu is active.</summary>
      <returns>true if the current menu is currently active; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>Allows the editor service to intercept Win32 messages.</summary>
      <returns>true if the message is for the control; otherwise, false.</returns>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>Sets the specified menu visible on the form.</summary>
      <param name="menu">The <see cref="T:System.Windows.Forms.Menu" /> to render. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>Sets the selected menu item of the current menu.</summary>
      <param name="item">A <see cref="T:System.Windows.Forms.MenuItem" /> to set as the currently selected menu item. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>Defines a set of members for derived classes to provide options for the masked text box UI type editor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>Gets the <see cref="T:System.Globalization.CultureInfo" /> representing the locale the mask is authored for.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> representing the locale the mask is authored for.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> is equal to the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />; otherwise, false. </returns>
      <param name="maskDescriptor">The <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> to compare with the current <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode"></member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.</summary>
      <returns>true if <paramref name="maskDescriptor" /> is valid; otherwise, false. </returns>
      <param name="maskDescriptor">The mask descriptor to test for validity.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.</summary>
      <returns>true if <paramref name="maskDescriptor" /> is valid; otherwise, false. </returns>
      <param name="maskDescriptor">The mask descriptor to test for validity.</param>
      <param name="validationErrorDescription">A string representing a validation error. If no validation error occurred, the <paramref name="validationErrorDescription" /> is <see cref="F:System.String.Empty" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>Gets the mask being defined.</summary>
      <returns>A <see cref="T:System.String" /> containing the mask being defined.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>Gets the user-friendly name of the mask.</summary>
      <returns>A <see cref="T:System.String" /> containing the name or brief description of the <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>Gets a sample of a formatted string for the mask.</summary>
      <returns>A <see cref="T:System.String" /> containing text that is formatted by using the <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString"></member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>Gets the type providing validation associated with the mask.</summary>
      <returns>The <see cref="T:System.Type" /> that the formatted string is validated against.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>Defines a set of <see cref="T:System.ComponentModel.Design.CommandID" /> fields that each correspond to a command function provided by the host environment.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.MenuCommands" /> class. </summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the component tray menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the container menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the properties page for the designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the edit label handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the cancel key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the default key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the end key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the home key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the smart tag invocation handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move down key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move left key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move right key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the move up key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge down key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge height decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge height increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge left key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge right key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge up key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge width decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the nudge width increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the reverse cancel key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the select next key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the select previous key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the SHIFT-END key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the SHIFT-HOME key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size height decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size height increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size width decrease key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the size width increase key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the tab order select key handler.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the selection menu.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to set the status rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to set the status rectangle text.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>A <see cref="T:System.ComponentModel.Design.CommandID" /> that can be used to access the tray selection menu.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" /> that supports nested controls.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>Adds padding snaplines.</summary>
      <param name="snapLines">An <see cref="T:System.Collections.ArrayList" /> that contains <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>Gets a value indicating whether selected controls will be re-parented.</summary>
      <returns>true if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.</summary>
      <returns>true if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns>true if the z-order of dragged controls should be maintained when dropped on a <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>Called when a component is added to the parent container.</summary>
      <returns>true if <paramref name="component" /> can be added; otherwise, false. </returns>
      <param name="component">The component to test for errors. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>Indicates whether the specified control can be a child of the control managed by this designer.</summary>
      <returns>true if the specified control can be a child of the control managed by this designer; otherwise, false.</returns>
      <param name="control">The <see cref="T:System.Windows.Forms.Control" /> to test. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.</summary>
      <returns>true if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, false.</returns>
      <param name="controlDesigner">The designer for the control to test. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document at the specified location.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from. </param>
      <param name="location">The <see cref="T:System.Drawing.Point" />, in design-time view screen coordinates, at which to center the component. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.</summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from. </param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> indicating the location and size for the component created from the tool. The <see cref="P:System.Drawing.Rectangle.X" /> and <see cref="P:System.Drawing.Rectangle.Y" /> values of the <see cref="T:System.Drawing.Rectangle" /> indicate the design-time view screen coordinates of the upper-left corner of the component. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Provides core functionality for all the <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> methods.</summary>
      <returns>An array of components created from the tool.</returns>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a component from. </param>
      <param name="x">The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified. </param>
      <param name="y">The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified. </param>
      <param name="width">The width of the tool. This parameter is ignored if the <paramref name="hasSize" /> parameter is set to false. </param>
      <param name="height">The height of the tool. This parameter is ignored if the <paramref name="hasSize" /> parameter is set to false. </param>
      <param name="hasLocation">true if a location for the component is specified; false if the component is to be positioned in the center of the currently selected control. </param>
      <param name="hasSize">true if a size for the component is specified; false if the default height and width values for the component are to be used. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>Gets the default location for a control added to the designer.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that indicates the default location for a control added to the designer.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>Gets or sets a value indicating whether a grid should be drawn on the control for this designer.</summary>
      <returns>true if a grid should be drawn on the control in the designer; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>Gets a value indicating whether drag rectangles are drawn by the designer.</summary>
      <returns>true if drag rectangles are drawn; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>Gets the control from the designer of the specified component.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that the specified component belongs to.</returns>
      <param name="component">The component to retrieve the control for. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a body glyph that represents the bounds of the control. </summary>
      <returns>A body glyph that represents the bounds of the control.</returns>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  value that specifies the selection state.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</summary>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
      <param name="selectionType">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" />  value that specifies the selection state.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>Used by deriving classes to determine if it returns the control being designed or some other <see cref="T:System.ComponentModel.Container" /> while adding a component to it.</summary>
      <returns>The parent <see cref="T:System.Windows.Forms.Control" /> for the component.</returns>
      <param name="component">The component for which to retrieve the parent <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.</summary>
      <returns>A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.</returns>
      <param name="originalRect">A <see cref="T:System.Drawing.Rectangle" /> indicating the initial position of the component being updated. </param>
      <param name="dragRect">A <see cref="T:System.Drawing.Rectangle" /> indicating the new position of the component. </param>
      <param name="updateSize">true to update the size of the rectangle, if there has been any change; otherwise, false. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the size of each square of the grid drawn on a form or user control.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> is outside the allowed range for <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. The default minimum value is 2, and the default maximum value is 200. </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to associate with the designer. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>Creates a tool from the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="toInvoke">The <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> that the tool is to be used with. </param>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to create a tool from. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>Gets a value indicating whether the designer has a valid tool during a drag operation. </summary>
      <returns>The tool being dragged, if creating a component, or null if there is no tool.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>Called in order to clean up a drag-and-drop operation.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop object is dropped onto the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop operation enters the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>Called when a drag-and-drop operation leaves the control designer view.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Called when a drag-and-drop object is dragged over the control designer view.</summary>
      <param name="de">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>Called in response to the left mouse button being pressed and held while over the component.</summary>
      <param name="x">The x-coordinate of the mouse in screen coordinates. </param>
      <param name="y">The y-coordinate of the mouse in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>Called at the end of a drag-and-drop operation to complete or cancel the operation.</summary>
      <param name="cancel">true to cancel the drag operation; false to commit it. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>Called for each movement of the mouse during a drag-and-drop operation.</summary>
      <param name="x">The x-coordinate of the mouse in screen coordinates. </param>
      <param name="y">The y-coordinate of the mouse in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>Provides an opportunity to change the current mouse cursor.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component will expose through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the properties for the class of the component. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control. </summary>
      <returns>A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>Base designer class for extending the design mode behavior of a <see cref="T:System.Windows.Forms.Control" /> which should receive scroll messages.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the control.</summary>
      <returns>true if a click at the specified point is to be handled by the control; otherwise, false.</returns>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.</summary>
      <param name="m">The <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>Defines identifiers that are used to indicate selection rules for a component.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>Indicates no special selection attributes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>Indicates the component supports a location property that allows it to be moved on the screen.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements <see cref="T:System.ComponentModel.IComponent" /> and that it is associated with a corresponding designer instance.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>Indicates the component is locked to its container. Overrides the <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" />, and <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> bit flags of this enumeration.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>Indicates the component supports resize from the top.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>Indicates the component supports resize from the bottom.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>Indicates the component supports resize from the left.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>Indicates the component supports resize from the right.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>Indicates the component supports sizing in all directions.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>Provides an editor for picking shortcut keys.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the <see cref="T:System.Object" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The <see cref="T:System.Object" /> to edit.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> method.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>Provides access to get and set option values for a Windows Forms designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposed by the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposed by the <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>Populates a <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options">The collection to populate.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>Manages a collection of user-interface related <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />. </summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>Gets or sets a value indicating if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is enabled.</summary>
      <returns>true, if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> collection.</summary>
      <returns>A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window within the given <see cref="T:System.Drawing.Rectangle" />.</summary>
      <param name="rectangle">The area to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>Forces the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> to refresh its adorner window within the given <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region">The <see cref="T:System.Drawing.Region" /> to invalidate.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>Represents the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> objects that are managed by a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="callParentBehavior">true if the parent behavior should be called if it exists; otherwise, false.</param>
      <param name="behaviorService">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />  to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> is true, and <paramref name="behaviorService" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>Gets the cursor that should be displayed for this behavior.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor that should be displayed for this behavior.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>Gets a value indicating whether <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects should be disabled.</summary>
      <returns>true if all <see cref="T:System.ComponentModel.Design.MenuCommand" /> objects the designer receives should have states set to Enabled = false when this <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> is active; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Intercepts commands.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" />. By default, <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> returns null.</returns>
      <param name="commandId">A <see cref="T:System.ComponentModel.Design.CommandID" /> object.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-and-drop behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> object on which to invoke drag-and-drop behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-enter behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-enter behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Permits custom drag-leave behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-leave behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>Permits custom drag-over behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-over behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>Permits custom drag-and-drop feedback behavior.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>Called by the adorner window when it loses mouse capture.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> on which to invoke drag-and-drop behavior.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any double-click message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the click occurred. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any mouse-down message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the click occurred. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Called when any mouse-enter message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>Called when any mouse-hover message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
      <param name="mouseLoc">The location at which the hover occurred. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Called when any mouse-leave message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>Called when any mouse-move message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
      <param name="mouseLoc">The location at which the move occurred. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>Called when any mouse-up message enters the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
      <param name="button">A <see cref="T:System.Windows.Forms.MouseButtons" /> value indicating which button was clicked.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>Sends this drag-and-drop event from the adorner window to the appropriate <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> or hit-tested <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="g">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> and <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> events.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> class.</summary>
      <param name="dragComponents">The <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>Gets the list of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</summary>
      <returns>The <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.ComponentModel.IComponent" /> objects currently being dragged.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>Represents the methods that will handle the <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> and <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> events of a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />  that contains the event data.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>Manages user interface in the designer. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> for the adorner window.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> for the adorner window.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>Translates a <see cref="T:System.Drawing.Point" /> in the adorner window to screen coordinates.</summary>
      <returns>The transformed <see cref="T:System.Drawing.Point" /> value, in screen coordinates.</returns>
      <param name="p">The <see cref="T:System.Drawing.Point" /> value to transform.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>Gets the location of the adorner window in screen coordinates.</summary>
      <returns>The location, from the upper-left corner of the adorner window, in screen coordinates.</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> starts a drag-and-drop operation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>Returns the bounding <see cref="T:System.Drawing.Rectangle" /> of a <see cref="T:System.Windows.Forms.Control" />.</summary>
      <returns>The bounding <see cref="T:System.Drawing.Rectangle" /> of a <see cref="T:System.Windows.Forms.Control" /> translated to the adorner window coordinates.</returns>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to translate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>Returns the location of a <see cref="T:System.Windows.Forms.Control" /> translated to adorner window coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> value indicating the location of <paramref name="c" /> in adorner window coordinates.</returns>
      <param name="c">The <see cref="T:System.Windows.Forms.Control" /> to translate.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the behavior stack without removing it.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the behavior stack.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. </summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> completes a drag operation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Returns the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> immediately after the given <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> in the behavior stack.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> immediately after <paramref name="behavior" /> in the behavior stack, or null if there is no following behavior.</returns>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> preceding the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to be returned.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>Invalidates the adorner window of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates, within the adorner window, the specified area of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect">The rectangular area to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>Invalidates, within the adorner window, the specified area of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r">The region to invalidate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>Converts a point in a handle's coordinate system to the adorner window coordinates.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> in the adorner window coordinates.</returns>
      <param name="handle">An adorner window's handle.</param>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> in a handle's coordinate system.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Removes and returns the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> at the top of the stack.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> that was removed from the stack.</returns>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to remove from the stack.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> stack is empty.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Pushes a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> onto the behavior stack.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Pushes a <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> onto the behavior stack and assigns mouse capture to the behavior.</summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to push.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>Translates a point in screen coordinates into the adorner window coordinates of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <returns>The transformed <see cref="T:System.Drawing.Point" /> value, in adorner window coordinates.</returns>
      <param name="p">The <see cref="T:System.Drawing.Point" /> value to transform.</param>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>Occurs when the current selection should be refreshed.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>Synchronizes all selection glyphs.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>Stores <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> objects in a strongly typed collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class with the given array.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />  to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> reference.</summary>
      <param name="behaviorService">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> reference. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> class from an existing <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> from which to populate the collection. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Adds an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> with the specified value to the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">An <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>Copies the elements of an array to the end of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to copy to the end of the collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Adds the contents of another <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contains the specified <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> is contained in the collection; otherwise, false</returns>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to locate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> instance.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Returns the index of an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> of <paramref name="value" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to locate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Inserts an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> into the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to insert.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> element specified by <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>Removes a specific <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> from the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> to remove from the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>Supports iteration over a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> class. </summary>
      <param name="mappings">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> for which to create the enumerator. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>Gets the current element in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>The current element in the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator was past the end of the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this member, see the <see cref="P:System.Collections.IEnumerator.Current" /> property.</summary>
      <returns>The current <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerator.MoveNext" /> method.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator was past the end of the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerator.Reset" /> method.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>Associates a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with its component.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> class.</summary>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> class. </summary>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, null.</returns>
      <param name="p">A point to hit-test.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Provides paint logic.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> containing the <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />  of the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>Gets the component that is associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> .</summary>
      <returns>An <see cref="T:System.ComponentModel.IComponent" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>Associates a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with its control.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> class.</summary>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> class.</summary>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent">The component with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
      <param name="designer">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> with which the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>Gets the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>Indicates whether a mouse click at the specified point should be handled by the <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, null.</returns>
      <param name="p">A point to hit test.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>Represents a single user interface (UI) entity managed by an <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> class. </summary>
      <param name="behavior">The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Can be null.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>Gets the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, or null if there is no behavior.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>Gets the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the bounds of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>Provides hit test logic.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Cursor" /> if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is associated with <paramref name="p" />; otherwise, null.</returns>
      <param name="p">A point to hit-test.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>Provides paint logic.</summary>
      <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>Changes the <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associated with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior">A <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> to associate with the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>Stores <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects in a strongly typed collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class with the given <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> array.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> class based on another <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to populate the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Adds a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> with the specified value to the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <returns>The index at which the new element was inserted.</returns>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>Copies the elements of an array to the end of the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">An array of type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to copy to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>Adds the contents of another <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to the end of the collection.</summary>
      <param name="value">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contains the specified <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to locate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Returns the index of a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <returns>The index of the <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> of <paramref name="value" /> in the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to locate.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Inserts a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> into the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to insert.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> element at the specified index.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>Removes a specific <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> from the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> to remove from the <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>Describes the designer selection state of a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is not selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>The <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> is the primary selection. </summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type and offset.</summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, and filter name. </summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="filter">A <see cref="T:System.String" /> used to specify a programmer-defined category of snaplines.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, filter name, and priority. </summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="filter">A <see cref="T:System.String" /> used to specify a programmer-defined category of snaplines.</param>
      <param name="priority">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> of the snapline.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> class using the specified snapline type, offset, and priority. </summary>
      <param name="type">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> to create. Describes the relative position and orientation of the snapline.</param>
      <param name="offset">The position of the snapline, in pixels, relative to the upper-left origin of the owning control.</param>
      <param name="priority">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> of the snapline.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>Adjusts the <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> property of the snapline.</summary>
      <param name="adjustment">The number of pixels to change the snapline offset by.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>Gets the programmer-defined filter category associated with this snapline.</summary>
      <returns>A <see cref="T:System.String" /> that defines the filter category. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>Gets a value indicating whether the snapline has a horizontal orientation.</summary>
      <returns>true if the snapline is horizontal; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>Gets a value indicating whether the snapline has a vertical orientation.</summary>
      <returns>true if the snapline is vertical; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>Gets the number of pixels that the snapline is offset from the origin of the associated control.</summary>
      <returns>The offset, in pixels, of the snapline. </returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>Gets a value indicating the relative importance of the snapline.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> that represents the priority category of a snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> should snap to another <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <returns>true if <paramref name="line1" /> should snap to <paramref name="line2" />; otherwise, false.</returns>
      <param name="line1">The specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
      <param name="line2">The <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> to which the specified <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> is expected to snap.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>Gets the type of a snapline, which indicates the general location and orientation.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> that represents the orientation and general location, relative to control edges, of a snapline.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>Returns a string representation of the current snapline.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>Specifies the relative importance of a snapline.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>The lowest priority category.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>The middle priority category.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>The highest priority category.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>Specifies the orientation and relative location of a snapline.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>A horizontal snapline typically aligned to the top edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>A horizontal snapline typically aligned to the bottom edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>A vertical snapline typically aligned to the left edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>A vertical snapline typically aligned to the right edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>A horizontal snapline typically not associated with an edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>A vertical snapline typically not associated with an edge of a control.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a <see cref="T:System.Windows.Forms.Label" /> control.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Data.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.DataAccessKind">
      <summary>Describes the type of access to user data for a user-defined method or function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.None">
      <summary>The method or function does not access user data.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.DataAccessKind.Read">
      <summary>The method or function reads user data.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.Format">
      <summary>Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Unknown">
      <summary>The serialization format is unknown.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.Native">
      <summary>The Native serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk. Types marked for Native serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members. Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.Format.UserDefined">
      <summary>The UserDefined serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" />.Write and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" />.Read methods.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.IBinarySerialize">
      <summary>Provides custom implementation for user-defined type (UDT) and user-defined aggregate serialization and deserialization.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)">
      <summary>Generates a user-defined type (UDT) or user-defined aggregate from its binary form.</summary>
      <param name="r">The <see cref="T:System.IO.BinaryReader" /> stream from which the object is deserialized.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)">
      <summary>Converts a user-defined type (UDT) or user-defined aggregate into its binary format so that it may be persisted.</summary>
      <param name="w">The <see cref="T:System.IO.BinaryWriter" /> stream to which the UDT or user-defined aggregate is serialized.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.InvalidUdtException">
      <summary>Thrown when SQL Server or the ADO.NET <see cref="N:System.Data.SqlClient" /> provider detects an invalid user-defined type (UDT). </summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.InvalidUdtException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Streams all the <see cref="T:Microsoft.SqlServer.Server.InvalidUdtException" /> properties into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlContext">
      <summary>Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable">
      <summary>Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</summary>
      <returns>True if the context connection is available and the other <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> members can be accessed.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.Pipe">
      <summary>Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</summary>
      <returns>An instance of <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> if a pipe is available, or null if called in a context where pipe is not available (for example, in a user-defined function).</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext">
      <summary>Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</summary>
      <returns>An instance of <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> if a trigger context is available, or null if called outside of a trigger invocation.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity">
      <summary>The Microsoft Windows identity of the caller.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> instance representing the Windows identity of the caller, or null if the client was authenticated using SQL Server Authentication. </returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>Represents a single row of data and its metadata. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>Inititializes a new <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance with the schema based on the array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects passed as an argument.</summary>
      <param name="metaData">An array of <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> objects that describe each column in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="metaData" /> is null. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>Gets the number of columns in the data row. This property is read-only.</summary>
      <returns>The number of columns in the data row as an integer.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Boolean" />.</summary>
      <returns>The column value as a <see cref="T:System.Boolean" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Byte" />.</summary>
      <returns>The column value as a <see cref="T:System.Byte" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Byte" /> objects.</summary>
      <returns>The number of bytes copied.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start retrieving bytes.</param>
      <param name="buffer">The target buffer to which to copy bytes.</param>
      <param name="bufferOffset">The offset into the buffer to which to start copying bytes.</param>
      <param name="length">The number of bytes to copy to the buffer.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Char" />.</summary>
      <returns>The column value as a <see cref="T:System.Char" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as an array of <see cref="T:System.Char" /> objects.</summary>
      <returns>The number of characters copied.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start retrieving characters.</param>
      <param name="buffer">The target buffer to copy chars to.</param>
      <param name="bufferOffset">The offset into the buffer to start copying chars to.</param>
      <param name="length">The number of chars to copy to the buffer.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>Returns the name of the data type for the column specified by the ordinal argument.</summary>
      <returns>A <see cref="T:System.String" /> that contains the data type of the column.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.DateTime" />.</summary>
      <returns>The column value as a <see cref="T:System.DateTime" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>Returns the specified column’s data as a <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>The value of the specified column as a <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Decimal" />.</summary>
      <returns>The column value as a <see cref="T:System.Decimal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Double" />.</summary>
      <returns>The column value as a <see cref="T:System.Double" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object representing the common language runtime (CLR) type that maps to the SQL Server type of the column specified by the <paramref name="ordinal" /> argument.</summary>
      <returns>The column type as a <see cref="T:System.Type" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.TypeLoadException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a float.</summary>
      <returns>The column value as a float.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Guid" />.</summary>
      <returns>The column value as a <see cref="T:System.Guid" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int16" />.</summary>
      <returns>The column value as a <see cref="T:System.Int16" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int32" />.</summary>
      <returns>The column value as a <see cref="T:System.Int32" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Int64" />.</summary>
      <returns>The column value as a <see cref="T:System.Int64" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">The column specified by <paramref name="ordinal" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>Returns the name of the column specified by the ordinal argument.</summary>
      <returns>A <see cref="T:System.String" /> containing the column name.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>Returns the column ordinal specified by the column name.</summary>
      <returns>The zero-based ordinal of the column as an integer.</returns>
      <param name="name">The name of the column to look up.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The column name could not be found.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents the type (as a SQL Server type, defined in <see cref="N:System.Data.SqlTypes" />) that maps to the SQL Server type of the column.</summary>
      <returns>The column type as a <see cref="T:System.Type" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />). </exception>
      <exception cref="T:System.TypeLoadException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The column is of a user-defined type that is not available to the calling application domain.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>Returns a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> object, describing the metadata of the column specified by the column ordinal.</summary>
      <returns>The column metadata as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> object.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>Returns the data value stored in the column, expressed as a SQL Server type, specified by the column ordinal.</summary>
      <returns>The value of the column, expressed as a SQL Server type, as a <see cref="T:System.Object" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>Returns the values for all the columns in the record, expressed as SQL Server types, in an array.</summary>
      <returns>An <see cref="T:System.Int32" /> that indicates the number of columns copied.</returns>
      <param name="values">The array into which to copy the values column values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns>The column value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>Gets the value for the column specified by the ordinal as a <see cref="T:System.String" />.</summary>
      <returns>The column value as a <see cref="T:System.String" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>Returns the specified column’s data as a <see cref="T:System.TimeSpan" />.</summary>
      <returns>The value of the specified column as a <see cref="T:System.TimeSpan" />.</returns>
      <param name="ordinal">The zero-based column ordinal.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>Returns the common language runtime (CLR) type value for the column specified by the ordinal argument.</summary>
      <returns>The CLR type value of the column specified by the ordinal.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>Returns the values for all the columns in the record, expressed as common language runtime (CLR) types, in an array.</summary>
      <returns>An <see cref="T:System.Int32" /> that indicates the number of columns copied.</returns>
      <param name="values">The array into which to copy the values column values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.InvalidCastException">There is a type mismatch.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>Returns true if the column specified by the column ordinal parameter is null.</summary>
      <returns>true if the column is null; false otherwise.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="ordinal" /> argument.</summary>
      <returns>The CLR type value of the column specified by the <paramref name="ordinal" />.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>Gets the common language runtime (CLR) type value for the column specified by the column <paramref name="name" /> argument.</summary>
      <returns>The CLR type value of the column specified by the <paramref name="name" />.</returns>
      <param name="name">The name of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Boolean" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Byte" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified array of <see cref="T:System.Byte" /> values.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start copying bytes.</param>
      <param name="buffer">The target buffer from which to copy bytes.</param>
      <param name="bufferOffset">The offset into the buffer from which to start copying bytes.</param>
      <param name="length">The number of bytes to copy from the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Char" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified array of <see cref="T:System.Char" /> values.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="fieldOffset">The offset into the field value to start copying characters.</param>
      <param name="buffer">The target buffer from which to copy chars.</param>
      <param name="bufferOffset">The offset into the buffer from which to start copying chars.</param>
      <param name="length">The number of chars to copy from the buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.DateTime" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>Sets the value of the column specified to the <see cref="T:System.DateTimeOffset" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>Sets the value in the specified column to <see cref="T:System.DBNull" />.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Decimal" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Double" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>Sets the data stored in the column to the specified float value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Guid" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int16" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int32" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Int64" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>Sets the data stored in the column to the specified <see cref="T:System.String" /> value.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>Sets the value of the column specified to the <see cref="T:System.TimeSpan" />.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> passed in is a negative number.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.TimeSpan" /> value passed in is greater than 24 hours in length.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>Sets a new value, expressed as a common language runtime (CLR) type, for the column specified by the column ordinal.</summary>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <param name="value">The new value for the specified column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>Sets new values for all of the columns in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />. These values are expressed as common language runtime (CLR) types.</summary>
      <returns>The number of column values set as an integer.</returns>
      <param name="values">The array of new values, expressed as CLR types boxed as <see cref="T:System.Object" /> references, for the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The size of values does not match the number of columns in the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> instance.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
      <summary>Not supported in this release.</summary>
      <returns>
        <see cref="T:System.Data.IDataReader" />Always throws an exception.</returns>
      <param name="ordinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="ordinal" /> is less than 0 or greater than the number of columns (that is, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />).</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFacetAttribute">
      <summary>Annotates the returned result of a user-defined type (UDT) with additional information that can be used in Transact-SQL.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFacetAttribute.#ctor">
      <summary>An optional attribute on a user-defined type (UDT) return type, used to annotate the returned result with additional information that can be used in Transact-SQL.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsFixedLength">
      <summary>Indicates whether the return type of the user-defined type is of a fixed length.</summary>
      <returns>true if the return type is of a fixed length; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.IsNullable">
      <summary>Indicates whether the return type of the user-defined type can be null.</summary>
      <returns>true if the return type of the user-defined type can be null; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.MaxSize">
      <summary>The maximum size, in logical units, of the underlying field type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the maximum size, in logical units, of the underlying field type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Precision">
      <summary>The precision of the return type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the precision of the return type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFacetAttribute.Scale">
      <summary>The scale of the return type of the user-defined type.</summary>
      <returns>An <see cref="T:System.Int32" /> representing the scale of the return type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlFunctionAttribute">
      <summary>Used to mark a method definition of a user-defined aggregate as a function in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlFunctionAttribute.#ctor">
      <summary>An optional attribute on a user-defined aggregate, used to indicate that the method should be registered in SQL Server as a function. Also used to set the <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name" />, <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess" />, and <see cref="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition" /> properties of the function attribute.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess">
      <summary>Indicates whether the function involves access to user data stored in the local instance of SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.None: Does not access data. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.Read: Only reads user data.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName">
      <summary>The name of a method in the same class as the table-valued function (TVF) that is used by the TVF contract.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of a method used by the TVF contract.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic">
      <summary>Indicates whether the user-defined function is deterministic.</summary>
      <returns>true if the function is deterministic; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise">
      <summary>Indicates whether the function involves imprecise computations, such as floating point operations.</summary>
      <returns>true if the function involves precise computations; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.Name">
      <summary>The name under which the function should be registered in SQL Server.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name under which the function should be registered.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess">
      <summary>Indicates whether the function requires access to data stored in the system catalogs or virtual system tables of SQL Server.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.None: Does not access system data. <see cref="T:Microsoft.SqlServer.Server.DataAccessKind" />.Read: Only reads system data.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition">
      <summary>A string that represents the table definition of the results, if the method is used as a table-valued function (TVF).</summary>
      <returns>A <see cref="T:System.String" /> value representing the table definition of the results.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>Specifies and retrieves metadata information from parameters and columns of <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name and type.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, precision, and scale.</summary>
      <param name="name">The name of the parameter or column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="scale" /> was greater than <paramref name="precision" />. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, precision, scale, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, and maximum length.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT).</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> declared.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, precision, scale, locale ID, compare options, and user-defined type (UDT). This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="precision">The precision of the parameter or column.</param>
      <param name="scale">The scale of the parameter or column.</param>
      <param name="localeId">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, and compare options.</summary>
      <param name="name">The name of the parameter or column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type. </param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, maximum length, locale, compare options, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="maxLength">The maximum length of the specified type.</param>
      <param name="locale">The locale ID of the parameter or column.</param>
      <param name="compareOptions">The comparison rules of the parameter or column.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, database name, owning schema, and object name.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="database">The database name of the XML schema collection of a typed XML instance.</param>
      <param name="owningSchema">The relational schema name of the XML schema collection of a typed XML instance.</param>
      <param name="objectName">The name of the XML schema collection of a typed XML instance.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null, or <paramref name="objectName" /> is null when <paramref name="database" /> and <paramref name="owningSchema" /> are non-null.</exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, database name, owning schema, object name, and default server. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="database">The database name of the XML schema collection of a typed XML instance.</param>
      <param name="owningSchema">The relational schema name of the XML schema collection of a typed XML instance.</param>
      <param name="objectName">The name of the XML schema collection of a typed XML instance.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, and user-defined type (UDT).</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="Name" /> is null. </exception>
      <exception cref="T:System.ArgumentException">A SqlDbType that is not allowed was passed to the constructor as <paramref name="dbType" />, or <paramref name="userDefinedType" /> points to a type that does not have <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> declared. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, user-defined type (UDT), and SQLServer type.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="serverTypeName">The SQL Server type name for <paramref name="userDefinedType" />.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Type,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> class with the specified column name, type, user-defined type, SQL Server type, and server default. This form of the constructor supports table-valued parameters by allowing you to specify if the column is unique in the table-valued parameter, the sort order for the column, and the ordinal of the sort column.</summary>
      <param name="name">The name of the column.</param>
      <param name="dbType">The SQL Server type of the parameter or column.</param>
      <param name="userDefinedType">A <see cref="T:System.Type" /> instance that points to the UDT.</param>
      <param name="serverTypeName">The SQL Server type name for <paramref name="userDefinedType" />.</param>
      <param name="useServerDefault">Specifes whether this column should use the default server value.</param>
      <param name="isUniqueKey">Specifies if the column in the table-valued parameter is unique.</param>
      <param name="columnSortOrder">Specifies the sort order for a column.</param>
      <param name="sortOrdinal">Specifies the ordinal of the sort column.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>Validates the specified <see cref="T:System.Boolean" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Boolean" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>Validates the specified <see cref="T:System.Byte" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Byte" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>Validates the specified array of <see cref="T:System.Byte" /> values against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.Byte" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>Validates the specified <see cref="T:System.Char" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Char" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>Validates the specified array of <see cref="T:System.Char" /> values against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array <see cref="T:System.Char" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBinary" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlByte" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlBytes" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlChars" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlGuid" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt16" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlInt64" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlString" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>Validates the specified <see cref="T:System.Data.SqlTypes.SqlXml" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>Validates the specified <see cref="T:System.DateTime" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.DateTime" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>Validates the specified <see cref="T:System.DateTimeOffset" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.DateTimeOffset" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>Validates the specified <see cref="T:System.Decimal" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Decimal" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>Validates the specified <see cref="T:System.Double" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Double" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>Validates the specified <see cref="T:System.Guid" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Guid" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>Validates the specified <see cref="T:System.Int16" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int16" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>Validates the specified <see cref="T:System.Int32" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int32" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>Validates the specified <see cref="T:System.Int64" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Int64" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>Validates the specified <see cref="T:System.Object" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Object" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>Validates the specified <see cref="T:System.Single" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.Single" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>Validates the specified <see cref="T:System.String" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as a <see cref="T:System.String" />.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>Validates the specified <see cref="T:System.TimeSpan" /> value against the metadata, and adjusts the value if necessary.</summary>
      <returns>The adjusted value as an array of <see cref="T:System.TimeSpan" /> values.</returns>
      <param name="value">The value to validate against the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> does not match the <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> type, or <paramref name="value" /> could not be adjusted. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>Gets the comparison rules used for the column or parameter.</summary>
      <returns>The comparison rules used for the column or parameter as a <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.DbType">
      <summary>Gets the data type of the column or parameter.</summary>
      <returns>The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>Infers the metadata from the specified object and returns it as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</summary>
      <returns>The inferred metadata as a <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</returns>
      <param name="value">The object used from which the metadata is inferred.</param>
      <param name="name">The name assigned to the returned <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> instance.</param>
      <exception cref="T:System.ArgumentNullException">The v<paramref name="alue" /> is null. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>Indicates if the column in the table-valued parameter is unique.</summary>
      <returns>A Boolean value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>Gets the locale ID of the column or parameter.</summary>
      <returns>The locale ID of the column or parameter as a <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>Gets the length of text, ntext, and image data types. </summary>
      <returns>The length of text, ntext, and image data types.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>Gets the maximum length of the column or parameter.</summary>
      <returns>The maximum length of the column or parameter as a <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>Gets the name of the column or parameter.</summary>
      <returns>The name of the column or parameter as a <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <paramref name="Name" /> specified in the constructor is longer than 128 characters. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>Gets the precision of the column or parameter.</summary>
      <returns>The precision of the column or parameter as a <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>Gets the scale of the column or parameter.</summary>
      <returns>The scale of the column or parameter.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>Returns the sort order for a column.</summary>
      <returns>A <see cref="T:System.Data.SqlClient.SortOrder" /> object.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>Returns the ordinal of the sort column.</summary>
      <returns>The ordinal of the sort column.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>Gets the data type of the column or parameter.</summary>
      <returns>The data type of the column or parameter as a <see cref="T:System.Data.DbType" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Type">
      <summary>Gets the common language runtime (CLR) type of a user-defined type (UDT).</summary>
      <returns>The CLR type name of a user-defined type as a <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>Gets the three-part name of the user-defined type (UDT) or the SQL Server type represented by the instance.</summary>
      <returns>The name of the UDT or SQL Server type as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>Reports whether this column should use the default server value.</summary>
      <returns>A Boolean value.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>Gets the name of the database where the schema collection for this XML instance is located.</summary>
      <returns>The name of the database where the schema collection for this XML instance is located as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>Gets the name of the schema collection for this XML instance.</summary>
      <returns>The name of the schema collection for this XML instance as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>Gets the owning relational schema where the schema collection for this XML instance is located.</summary>
      <returns>The owning relational schema where the schema collection for this XML instance is located as a <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMethodAttribute">
      <summary>Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor">
      <summary>An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull">
      <summary>Indicates whether SQL Server should invoke the method on null instances.</summary>
      <returns>true if SQL Server should invoke the method on null instances; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator">
      <summary>Indicates whether a method on a user-defined type (UDT) is a mutator.</summary>
      <returns>true if the method is a mutator; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall">
      <summary>Indicates whether the method on a user-defined type (UDT) is called when null input arguments are specified in the method invocation.</summary>
      <returns>true if the method is called when null input arguments are specified in the method invocation; false if the method returns a null value when any of its input parameters are null.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlPipe">
      <summary>Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)">
      <summary>Executes the command passed as a parameter and sends the results to the client.</summary>
      <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="command" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">This method is not supported on commands bound to out-of-process connections.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client. This property is read-only.</summary>
      <returns>true if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise false.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Sends a single-row result set directly to the client or current output consumer.</summary>
      <param name="record">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)">
      <summary>Sends a multirow result set directly to the client or current output consumer.</summary>
      <param name="reader">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reader" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)">
      <summary>Sends a string message directly to the client or current output consumer.</summary>
      <param name="message">The message string to be sent to the client.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> is null. </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd">
      <summary>Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Sends a single row of data back to the client.</summary>
      <param name="record">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client. The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)">
      <summary>Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</summary>
      <param name="record">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="record" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="record" /> has no columns or has not been initialized.</exception>
      <exception cref="T:System.InvalidOperationException">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlProcedureAttribute">
      <summary>Used to mark a method definition in an assembly as a stored procedure. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlProcedureAttribute.#ctor">
      <summary>An attribute on a method definition in an assembly, used to indicate that the given method should be registered as a stored procedure in SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlProcedureAttribute.Name">
      <summary>The name of the stored procedure.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the stored procedure.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerAttribute">
      <summary>Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor">
      <summary>An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event">
      <summary>The type of trigger and what data manipulation language (DML) action activates the trigger.</summary>
      <returns>A <see cref="T:System.String" /> value representing the type of trigger and what data manipulation language (DML) action activates the trigger.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Name">
      <summary>The name of the trigger.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of the trigger.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target">
      <summary>The table to which the trigger applies.</summary>
      <returns>A <see cref="T:System.String" /> value representing the table name.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlTriggerContext">
      <summary>Provides contextual information about the trigger that was fired. </summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount">
      <summary>Gets the number of columns contained by the data table bound to the trigger. This property is read-only.</summary>
      <returns>The number of columns contained by the data table bound to the trigger, as an integer. </returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData">
      <summary>Gets the event data specific to the action that fired the trigger.</summary>
      <returns>The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; null otherwise.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)">
      <summary>Returns true if a column was affected by an INSERT or UPDATE statement.</summary>
      <returns>true if the column was affected by an INSERT or UPDATE operation.</returns>
      <param name="columnOrdinal">The zero-based ordinal of the column.</param>
      <exception cref="T:System.InvalidOperationException">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not Insert or Update.</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction">
      <summary>Indicates what action fired the trigger.</summary>
      <returns>The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute">
      <summary>Indicates that the type should be registered as a user-defined aggregate. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>A required attribute on a user-defined aggregate, used to indicate that the given type is a user-defined aggregate and the storage format of the user-defined aggregate.</summary>
      <param name="format">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the aggregate.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Format">
      <summary>The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Server.Format" /> representing the serialization format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToDuplicates">
      <summary>Indicates whether the aggregate is invariant to duplicates.</summary>
      <returns>true if the aggregate is invariant to duplicates; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToNulls">
      <summary>Indicates whether the aggregate is invariant to nulls.</summary>
      <returns>true if the aggregate is invariant to nulls; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsInvariantToOrder">
      <summary>Indicates whether the aggregate is invariant to order.</summary>
      <returns>true if the aggregate is invariant to order; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.IsNullIfEmpty">
      <summary>Indicates whether the aggregate returns null if no values have been accumulated.</summary>
      <returns>true if the aggregate returns null if no values have been accumulated; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSize">
      <summary>The maximum size, in bytes, of the aggregate instance.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the maximum size of the aggregate instance.</returns>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.MaxByteSizeValue">
      <summary>The maximum size, in bytes, required to store the state of this aggregate instance during computation.</summary>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute.Name">
      <summary>The name of the aggregate.</summary>
      <returns>A <see cref="T:System.String" /> value representing the name of the aggregate.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
      <summary>Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server. The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)">
      <summary>A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</summary>
      <param name="format">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</param>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format">
      <summary>The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
      <returns>A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered">
      <summary>Indicates whether the user-defined type is byte ordered.</summary>
      <returns>true if the user-defined type is byte ordered; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength">
      <summary>Indicates whether all instances of this user-defined type are the same length.</summary>
      <returns>true if all instances of this type are the same length; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize">
      <summary>The maximum size of the instance, in bytes.</summary>
      <returns>An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name">
      <summary>The SQL Server name of the user-defined type.</summary>
      <returns>A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName">
      <summary>The name of the method used to validate instances of the user-defined type.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</returns>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SystemDataAccessKind">
      <summary>Describes the type of access to system data for a user-defined method or function.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.None">
      <summary>The method or function does not access system data. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.SystemDataAccessKind.Read">
      <summary>The method or function reads system data.</summary>
    </member>
    <member name="T:Microsoft.SqlServer.Server.TriggerAction">
      <summary>The <see cref="T:Microsoft.SqlServer.Server.TriggerAction" /> enumeration is used by the <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> class to indicate what action fired the trigger. </summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Invalid">
      <summary>An invalid trigger action, one that is not exposed to the user, occurred.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Insert">
      <summary>An INSERT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Update">
      <summary>An UPDATE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.Delete">
      <summary>A DELETE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTable">
      <summary>A CREATE TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTable">
      <summary>An ALTER TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTable">
      <summary>A DROP TABLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateIndex">
      <summary>A CREATE INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterIndex">
      <summary>An ALTER INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropIndex">
      <summary>A DROP INDEX Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSynonym">
      <summary>A CREATE SYNONYM Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSynonym">
      <summary>A DROP SYNONYM Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSecurityExpression">
      <summary>unused</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSecurityExpression">
      <summary>unused</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateView">
      <summary>A CREATE VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterView">
      <summary>An ALTER VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropView">
      <summary>A DROP VIEW Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateProcedure">
      <summary>A CREATE PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterProcedure">
      <summary>An ALTER PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropProcedure">
      <summary>A DROP PROCEDURE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateFunction">
      <summary>A CREATE FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterFunction">
      <summary>An ALTER FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropFunction">
      <summary>A DROP FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateTrigger">
      <summary>A CREATE TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterTrigger">
      <summary>An ALTER TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropTrigger">
      <summary>A DROP TRIGGER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateEventNotification">
      <summary>A CREATE EVENT NOTIFICATION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropEventNotification">
      <summary>A DROP EVENT NOTIFICATION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateType">
      <summary>A CREATE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropType">
      <summary>A DROP TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAssembly">
      <summary>A CREATE ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAssembly">
      <summary>An ALTER ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAssembly">
      <summary>A DROP ASSEMBLY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateUser">
      <summary>A CREATE USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterUser">
      <summary>An ALTER USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropUser">
      <summary>A DROP USER Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRole">
      <summary>A CREATE ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRole">
      <summary>An ALTER ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRole">
      <summary>A DROP ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateAppRole">
      <summary>A CREATE APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterAppRole">
      <summary>An ALTER APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropAppRole">
      <summary>A DROP APPLICATION ROLE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateSchema">
      <summary>A CREATE SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterSchema">
      <summary>An ALTER SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropSchema">
      <summary>A DROP SCHEMA Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateLogin">
      <summary>A CREATE LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterLogin">
      <summary>An ALTER LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropLogin">
      <summary>A DROP LOGIN Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateMsgType">
      <summary>A CREATE MESSAGE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropMsgType">
      <summary>A DROP MESSAGE TYPE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateContract">
      <summary>A CREATE CONTRACT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropContract">
      <summary>A DROP CONTRACT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateQueue">
      <summary>A CREATE QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterQueue">
      <summary>An ALTER QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropQueue">
      <summary>A DROP QUEUE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateService">
      <summary>A CREATE SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterService">
      <summary>An ALTER SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropService">
      <summary>A DROP SERVICE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateRoute">
      <summary>A CREATE ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterRoute">
      <summary>An ALTER ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropRoute">
      <summary>A DROP ROUTE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantStatement">
      <summary>A GRANT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyStatement">
      <summary>A DENY Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeStatement">
      <summary>A REVOKE Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.GrantObject">
      <summary>A GRANT OBJECT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DenyObject">
      <summary>A DENY Object Permissions Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.RevokeObject">
      <summary>A REVOKE OBJECT Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreateBinding">
      <summary>A CREATE_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterBinding">
      <summary>An ALTER_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropBinding">
      <summary>A DROP_REMOTE_SERVICE_BINDING event type was specified when an event notification was created on the database or server instance.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionFunction">
      <summary>A CREATE PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionFunction">
      <summary>An ALTER PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionFunction">
      <summary>A DROP PARTITION FUNCTION Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.CreatePartitionScheme">
      <summary>A CREATE PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.AlterPartitionScheme">
      <summary>An ALTER PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="F:Microsoft.SqlServer.Server.TriggerAction.DropPartitionScheme">
      <summary>A DROP PARTITION SCHEME Transact-SQL statement was executed.</summary>
    </member>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>Determines the action that occurs when the <see cref="M:System.Data.DataSet.AcceptChanges" /> or <see cref="M:System.Data.DataTable.RejectChanges" /> method is invoked on a <see cref="T:System.Data.DataTable" /> with a <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>No action occurs (default).</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>Changes are cascaded across the relationship.</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>Provides a description of the results of the query and its effect on the database.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>The query may return multiple result sets. Execution of the query may affect the database state. Default sets no <see cref="T:System.Data.CommandBehavior" /> flags, so calling ExecuteReader(CommandBehavior.Default) is functionally equivalent to calling ExecuteReader().</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>The query returns a single result set.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>The query returns column information only. When using <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>The query returns column and primary key information. </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>The query is expected to return a single row. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify <see cref="F:System.Data.CommandBehavior.SingleRow" /> with the <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> method of the <see cref="T:System.Data.OleDb.OleDbCommand" /> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB IRow interface if it is available. Otherwise, it uses the IRowset interface. If your SQL statement is expected to return only a single row, specifying <see cref="F:System.Data.CommandBehavior.SingleRow" /> can also improve application performance. It is possible to specify SingleRow when executing queries that return multiple result sets. In that case, multiple result sets are still returned, but each result set has a single row.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>Provides a way for the DataReader to handle rows that contain columns with large binary values. Rather than loading the entire row, SequentialAccess enables the DataReader to load data as a stream. You can then use the GetBytes or GetChars method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>When the command is executed, the associated Connection object is closed when the associated DataReader object is closed.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>Specifies how a command string is interpreted.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>An SQL text command. (Default.) </summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>The name of a stored procedure.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>The name of a table.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary>Specifies how conflicting changes to the data source will be detected and resolved.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary>Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying CompareAllValuesUpdate | CompareAllValuesDelete.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary>If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying CompareRowVersionUpdate | CompareRowVersionDelete.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary>All update and delete statements include only <see cref="P:System.Data.DataTable.PrimaryKey" /> columns in the WHERE clause. If no <see cref="P:System.Data.DataTable.PrimaryKey" /> is defined, all searchable columns are included in the WHERE clause. This is equivalent to OverwriteChangesUpdate | OverwriteChangesDelete.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>Describes the current state of the connection to a data source.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>The connection is closed.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>The connection is open.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>The connection object is connecting to the data source. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>The connection object is executing a command. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>The connection object is retrieving data. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.) </summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>Represents a constraint that can be enforced on one or more <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Constraint" /> class.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
      <returns>The <see cref="T:System.Data.DataSet" /> to which the constraint belongs.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which this constraint belongs.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>The name of a constraint in the <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns>The name of the <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.Constraint" /> name is a null value or empty string. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The <see cref="T:System.Data.ConstraintCollection" /> already contains a <see cref="T:System.Data.Constraint" /> with the same name (The comparison is not case-sensitive.). </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>Gets the collection of user-defined constraint properties.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> of custom information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary>Sets the constraint's <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to which this constraint will belong. </param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the constraint applies.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> to which the constraint applies.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>Gets the <see cref="P:System.Data.Constraint.ConstraintName" />, if there is one, as a string.</summary>
      <returns>The string value of the <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>Represents a collection of constraints for a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>Adds the specified <see cref="T:System.Data.Constraint" /> object to the collection.</summary>
      <param name="constraint">The Constraint to add. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="constraint" /> argument is null. </exception>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection, or belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the same name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, <see cref="T:System.Data.DataColumn" />, and value that indicates whether the column is a primary key, and adds it to the collection.</summary>
      <returns>A new UniqueConstraint.</returns>
      <param name="name">The name of the UniqueConstraint. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to which the constraint applies. </param>
      <param name="primaryKey">Specifies whether the column should be the primary key. If true, the column will be a primary key column. </param>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection.-Or- The constraint belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" /> with the specified name, parent column, and child column, and adds the constraint to the collection.</summary>
      <returns>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. </param>
      <param name="primaryKeyColumn">The primary key, or parent, <see cref="T:System.Data.DataColumn" />. </param>
      <param name="foreignKeyColumn">The foreign key, or child, <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, array of <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether the column is a primary key, and adds it to the collection.</summary>
      <returns>A new <see cref="T:System.Data.UniqueConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.UniqueConstraint" />. </param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to which the constraint applies. </param>
      <param name="primaryKey">Specifies whether the column should be the primary key. If true, the column will be a primary key column.</param>
      <exception cref="T:System.ArgumentException">The constraint already belongs to this collection.-Or- The constraint belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a constraint with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" />, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.</summary>
      <returns>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. </param>
      <param name="primaryKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the primary key, or parent, columns. </param>
      <param name="foreignKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the foreign key, or child, columns. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.ConstraintCollection" /> array to the end of the collection.</summary>
      <param name="constraints">An array of <see cref="T:System.Data.ConstraintCollection" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>Indicates whether a <see cref="T:System.Data.Constraint" /> can be removed.</summary>
      <returns>true if the <see cref="T:System.Data.Constraint" /> can be removed from collection; otherwise, false.</returns>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to be tested for removal from the collection. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>Clears the collection of any <see cref="T:System.Data.Constraint" /> objects.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>Occurs whenever the <see cref="T:System.Data.ConstraintCollection" /> is changed because of <see cref="T:System.Data.Constraint" /> objects being added or removed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>Indicates whether the <see cref="T:System.Data.Constraint" /> object specified by name exists in the collection.</summary>
      <returns>true if the collection contains the specified constraint; otherwise, false.</returns>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary>Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance starting at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection.</param>
      <param name="index">The index of the array at which to start inserting. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>Gets the index of the specified <see cref="T:System.Data.Constraint" />.</summary>
      <returns>The zero-based index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</returns>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to search for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>Gets the index of the <see cref="T:System.Data.Constraint" /> specified by name.</summary>
      <returns>The index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</returns>
      <param name="constraintName">The name of the <see cref="T:System.Data.Constraint" />. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.Constraint" /> from the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Data.Constraint" /> at the specified index.</returns>
      <param name="index">The index of the constraint to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.Constraint" /> from the collection with the specified name.</summary>
      <returns>The <see cref="T:System.Data.Constraint" /> with the specified name; otherwise a null value if the <see cref="T:System.Data.Constraint" /> does not exist.</returns>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint to return. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>Removes the specified <see cref="T:System.Data.Constraint" /> from the collection.</summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="constraint" /> argument is null. </exception>
      <exception cref="T:System.ArgumentException">The constraint does not belong to the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Data.Constraint" /> object specified by name from the collection.</summary>
      <param name="name">The name of the <see cref="T:System.Data.Constraint" /> to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.Constraint" /> object at the specified index from the collection.</summary>
      <param name="index">The index of the <see cref="T:System.Data.Constraint" /> to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">The collection does not have a constraint at this index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>Represents the exception that is thrown when attempting an action that violates a constraint.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the specified serialization and stream context.</summary>
      <param name="info">The data necessary to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the specified string and inner exception.</summary>
      <param name="message">The string to display when the exception is thrown. </param>
      <param name="innerException">Gets the Exception instance that caused the current exception.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <param name="expr">The expression used to create this column. For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" />. </param>
      <param name="expr">The expression used to create this column. For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <param name="type">One of the <see cref="T:System.Data.MappingType" /> values. </param>
      <exception cref="T:System.ArgumentNullException">No <paramref name="dataType" /> was specified. </exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</summary>
      <returns>true if null values values are allowed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</summary>
      <returns>true if the value of the column increments automatically; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The column is a computed column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to true.</summary>
      <returns>The number by which the value of the column is automatically incremented. The default is 1.</returns>
      <exception cref="T:System.ArgumentException">The value set is zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>Gets or sets the caption for the column.</summary>
      <returns>The caption of the column. If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</summary>
      <returns>One of the <see cref="T:System.Data.MappingType" /> values.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The name of the column.</returns>
      <exception cref="T:System.ArgumentException">The property is set to null or an empty string and the column belongs to a collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">A column with the same name already exists in the collection. The name comparison is not case sensitive. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>Gets or sets the type of data stored in the column.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the column data type.</returns>
      <exception cref="T:System.ArgumentException">The column already has data stored. - or -<see cref="P:System.Data.DataColumn.AutoIncrement" /> is true, but the value is set to a type a unsupported by <see cref="P:System.Data.DataColumn.AutoIncrement" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary>Gets or sets the DateTimeMode for the column.</summary>
      <returns>The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>Gets or sets the default value for the column when you are creating new rows.</summary>
      <returns>A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</returns>
      <exception cref="T:System.InvalidCastException">When you are adding a row, the default value is not an instance of the column's data type. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</summary>
      <returns>An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to true. </exception>
      <exception cref="T:System.FormatException">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter. </exception>
      <exception cref="T:System.InvalidCastException">When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">When you use the SUBSTRING function, the start argument is out of range.-Or- When you use the SUBSTRING function, the length argument is out of range. </exception>
      <exception cref="T:System.Exception">When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to <see cref="T:System.Char" />. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> of custom information.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>Gets or sets the maximum length of a text column.</summary>
      <returns>The maximum length of the column in characters. If the column has no maximum length, the value is –1 (default).</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>The namespace of the <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException">The namespace already has data. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="pcevent">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>Gets the position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</summary>
      <returns>The position of the column. Gets -1 if the column is not a member of a collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</summary>
      <returns>The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="name">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</summary>
      <returns>true if the column is read only; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The property is set to false on a computed column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary>Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</summary>
      <param name="ordinal">The specified ordinal.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</summary>
      <returns>The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</summary>
      <returns>The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>Gets or sets a value that indicates whether the values in each row of the column must be unique.</summary>
      <returns>true if the value must be unique; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ArgumentException">The column is a calculated column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataColumnChangeEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> of the column with the changing value. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> with the changing value. </param>
      <param name="value">The new value. </param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> with a changing value.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> with a changing value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>Gets or sets the proposed new value for the column.</summary>
      <returns>The proposed value, of type <see cref="T:System.Object" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>Gets the <see cref="T:System.Data.DataRow" /> of the column with a changing value.</summary>
      <returns>The <see cref="T:System.Data.DataRow" /> of the column with a changing value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>Represents a collection of <see cref="T:System.Data.DataColumn" /> objects for a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>Creates and adds the specified <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to add. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column already belongs to this collection, or to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The name of the column. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name and type to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The <see cref="P:System.Data.DataColumn.ColumnName" /> to use when you create the column. </param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>Creates and adds a <see cref="T:System.Data.DataColumn" /> object that has the specified name, type, and expression to the <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns>The newly created <see cref="T:System.Data.DataColumn" />.</returns>
      <param name="columnName">The name to use when you create the column. </param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column. </param>
      <param name="expression">The expression to assign to the <see cref="P:System.Data.DataColumn.Expression" /> property. </param>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception>
      <exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression" /> property for more information about how to create expressions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.DataColumn" /> array to the end of the collection.</summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>Checks whether a specific column can be removed from the collection.</summary>
      <returns>true if the column can be removed; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> in the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column does not belong to this collection.-Or- The column is part of a relationship.-Or- Another column's expression depends on this column. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>Clears the collection of any columns.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>Occurs when the columns collection changes, either by adding or removing a column.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>Checks whether the collection contains a column with the specified name.</summary>
      <returns>true if a column exists with this name; otherwise, false.</returns>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to look for. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary>Copies the entire collection into an existing array, starting at a specified index within the array.</summary>
      <param name="array">An array of <see cref="T:System.Data.DataColumn" /> objects to copy the collection into. </param>
      <param name="index">The index to start from.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>Gets the index of a column specified by name.</summary>
      <returns>The index of the column specified by <paramref name="column" /> if it is found; otherwise, -1.</returns>
      <param name="column">The name of the column to return. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>Gets the index of the column with the specific name (the name is not case sensitive).</summary>
      <returns>The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.</returns>
      <param name="columnName">The name of the column to find. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> from the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> at the specified index.</returns>
      <param name="index">The zero-based index of the column to return. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataColumn" /> from the collection with the specified name.</summary>
      <returns>The <see cref="T:System.Data.DataColumn" /> in the collection with the specified <see cref="P:System.Data.DataColumn.ColumnName" />; otherwise a null value if the <see cref="T:System.Data.DataColumn" /> does not exist.</returns>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to return. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>Removes the specified <see cref="T:System.Data.DataColumn" /> object from the collection.</summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to remove. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The column does not belong to this collection.-Or- The column is part of a relationship.-Or- Another column's expression depends on this column. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>Removes the <see cref="T:System.Data.DataColumn" /> object that has the specified name from the collection.</summary>
      <param name="name">The name of the column to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a column with the specified name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>Removes the column at the specified index from the collection.</summary>
      <param name="index">The index of the column to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a column at the specified index. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataException">
      <summary>Represents the exception that is thrown when errors are generated using ADO.NET components.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified serialization information and context.</summary>
      <param name="info">The data necessary to serialize or deserialize an object. </param>
      <param name="context">Description of the source and destination of the specified serialized stream. </param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string and inner exception.</summary>
      <param name="s">The string to display when the exception is thrown. </param>
      <param name="innerException">A reference to an inner exception. </param>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>Represents a parent/child relationship between two <see cref="T:System.Data.DataTable" /> objects.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name, and parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, parent and child <see cref="T:System.Data.DataColumn" /> objects, and a value that indicates whether to create constraints.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="createConstraints">A value that indicates whether constraints are created. true, if constraints are created. Otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name and matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects contains null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The <see cref="T:System.Data.DataColumn" /> objects have different data types -Or- One or both of the arrays are not composed of distinct columns from the same table.-Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether to create constraints.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="createConstraints">A value that indicates whether to create constraints. true, if constraints are created. Otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">One or both of the <see cref="T:System.Data.DataColumn" /> objects is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The columns have different data types -Or- The tables do not belong to the same <see cref="T:System.Data.DataSet" />. </exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>This constructor is provided for design time support in the Visual Studio environment.</summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation.</param>
      <param name="parentTableNamespace">The name of the parent table namespace.</param>
      <param name="childTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
      <param name="childTableNamespace">The name of the child table namespace.</param>
      <param name="parentColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation.</param>
      <param name="childColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation.</param>
      <param name="nested">A value that indicates whether relationships are nested.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>This constructor is provided for design time support in the Visual Studio environment.</summary>
      <param name="relationName">The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
      <param name="parentTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation. </param>
      <param name="childTableName">The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
      <param name="parentColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation. </param>
      <param name="childColumnNames">An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation. </param>
      <param name="nested">A value that indicates whether relationships are nested. </param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <exception cref="T:System.Data.DataException">The parent and child tables belong to different <see cref="T:System.Data.DataSet" /> objects.-Or- One or more pairs of parent and child <see cref="T:System.Data.DataColumn" /> objects have mismatched data types.-Or- The parent and child <see cref="T:System.Data.DataColumn" /> objects are identical. </exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>Gets the child <see cref="T:System.Data.DataColumn" /> objects of this relation.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>Gets the <see cref="T:System.Data.ForeignKeyConstraint" /> for the relation.</summary>
      <returns>A <see cref="T:System.Data.ForeignKeyConstraint" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>Gets the child table of this relation.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that is the child table of the relation.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>Gets the <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</summary>
      <returns>A <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>Gets the collection that stores customized properties.</summary>
      <returns>A <see cref="T:System.Data.PropertyCollection" /> that contains customized properties.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>Gets or sets a value that indicates whether <see cref="T:System.Data.DataRelation" /> objects are nested.</summary>
      <returns>true, if <see cref="T:System.Data.DataRelation" /> objects are nested; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="pcevent">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>Gets an array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of this <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of this <see cref="T:System.Data.DataRelation" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>Gets the <see cref="T:System.Data.UniqueConstraint" /> that guarantees that values in the parent column of a <see cref="T:System.Data.DataRelation" /> are unique.</summary>
      <returns>A <see cref="T:System.Data.UniqueConstraint" /> that makes sure that values in a parent column are unique.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>Gets the parent <see cref="T:System.Data.DataTable" /> of this <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> that is the parent table of this relation.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="name">Parameter reference.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>Gets or sets the name used to retrieve a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns>The name of the a <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException">null or empty string ("") was passed into a <see cref="T:System.Data.DataColumn" /> that is a <see cref="T:System.Data.DataRelation" />. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The <see cref="T:System.Data.DataRelation" /> belongs to a collection that already contains a <see cref="T:System.Data.DataRelation" /> with the same name. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>Gets the <see cref="P:System.Data.DataRelation.RelationName" />, if one exists.</summary>
      <returns>The value of the <see cref="P:System.Data.DataRelation.RelationName" /> property.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>Represents the collection of <see cref="T:System.Data.DataRelation" /> objects for this <see cref="T:System.Data.DataSet" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.DataRelationCollection" /> class. </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with a specified parent and child column, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified parent and child columns, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="parentColumns">The parent columns of the relation. </param>
      <param name="childColumns">The child columns of the relation. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> argument is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation">The DataRelation to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> parameter is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the specified name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, and parent and child columns, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the relation. </param>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, parent and child columns, with optional constraints according to the value of the <paramref name="createConstraints" /> parameter, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the relation. </param>
      <param name="parentColumn">The parent column of the relation. </param>
      <param name="childColumn">The child column of the relation. </param>
      <param name="createConstraints">true to create constraints; otherwise false. (The default is true). </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name and arrays of parent and child columns, and adds it to the collection.</summary>
      <returns>The created DataRelation.</returns>
      <param name="name">The name of the DataRelation to create. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child DataColumn objects. </param>
      <exception cref="T:System.ArgumentNullException">The relation name is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.</summary>
      <returns>The created relation.</returns>
      <param name="name">The name of the DataRelation to create. </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child DataColumn objects. </param>
      <param name="createConstraints">true to create a constraint; otherwise false. </param>
      <exception cref="T:System.ArgumentNullException">The relation name is a null value. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation has entered an invalid state since it was created. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>Performs verification on the table.</summary>
      <param name="relation">The relation to check.</param>
      <exception cref="T:System.ArgumentNullException">The relation is null. </exception>
      <exception cref="T:System.ArgumentException">The relation already belongs to this collection, or it belongs to another collection. </exception>
      <exception cref="T:System.Data.DuplicateNameException">The collection already has a relation with the same name. (The comparison is not case sensitive.) </exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>Copies the elements of the specified <see cref="T:System.Data.DataRelation" /> array to the end of the collection.</summary>
      <param name="relations">The array of <see cref="T:System.Data.DataRelation" /> objects to add to the collection. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>Verifies whether the specified <see cref="T:System.Data.DataRelation" /> can be removed from the collection.</summary>
      <returns>true if the <see cref="T:System.Data.DataRelation" /> can be removed; otherwise, false.</returns>
      <param name="relation">The relation to perform the check against. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>Clears the collection of any relations.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>Occurs when the collection has changed.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>Verifies whether a <see cref="T:System.Data.DataRelation" /> with the specific name (case insensitive) exists in the collection.</summary>
      <returns>true, if a relation with the specified name exists; otherwise false.</returns>
      <param name="name">The name of the relation to find. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary>Copies the collection of <see cref="T:System.Data.DataRelation" /> objects starting at the specified index.</summary>
      <param name="array">The array of <see cref="T:System.Data.DataRelation" /> objects to copy the collection to.</param>
      <param name="index">The index to start from.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <returns>The referenced DataSet.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>Gets the index of the specified <see cref="T:System.Data.DataRelation" /> object.</summary>
      <returns>The 0-based index of the relation, or -1 if the relation is not found in the collection.</returns>
      <param name="relation">The relation to search for. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>Gets the index of the <see cref="T:System.Data.DataRelation" /> specified by name.</summary>
      <returns>The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.</returns>
      <param name="relationName">The name of the relation to find. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Data.DataRelation" /> object at the specified index.</summary>
      <returns>The <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</returns>
      <param name="index">The zero-based index to find. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Data.DataRelation" /> object specified by name.</summary>
      <returns>The named <see cref="T:System.Data.DataRelation" />, or a null value if the specified <see cref="T:System.Data.DataRelation" /> does not exist.</returns>
      <param name="name">The name of the relation to find. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>Raises the <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event.</summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>Removes the specified relation from the collection.</summary>
      <param name="relation">The relation to remove. </param>
      <exception cref="T:System.ArgumentNullException">The relation is a null value.</exception>
      <exception cref="T:System.ArgumentException">The relation does not belong to the collection.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>Removes the relation with the specified name from the collection.</summary>
      <param name="name">The name of the relation to remove. </param>
      <exception cref="T:System.IndexOutOfRangeException">The collection does not have a relation with the specified name.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>Removes the relation at the specified index from the collection.</summary>
      <param name="index">The index of the relation to remove. </param>
      <exception cref="T:System.ArgumentException">The collection does not have a relation at the specified index. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>Performs a verification on the specified <see cref="T:System.Data.DataRelation" /> object.</summary>
      <param name="relation">The DataRelation object to verify. </param>
      <exception cref="T:System.ArgumentNullException">The collection does not have a relation at the specified index. </exception>
      <exception cref="T:System.ArgumentException">The specified relation does not belong to this collection, or it belongs to another collection. </exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary>Represents a row of data in a <see cref="T:System.Data.DataTable" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary>Initializes a new instance of the DataRow. Constructs a row from the builder. Only for internal usage..</summary>
      <param name="builder">builder </param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>Commits all the changes made to this row since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</summary>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>Starts an edit operation on a <see cref="T:System.Data.DataRow" /> object.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The method was called upon a deleted row. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>Cancels the current edit on the row.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>Clears the errors for the row. This includes the <see cref="P:System.Data.DataRow.RowError" /> and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>Deletes the <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException">The <see cref="T:System.Data.DataRow" /> has already been deleted. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>Ends the edit occurring on the row.</summary>
      <exception cref="T:System.Data.InRowChangingEventException">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event. </exception>
      <exception cref="T:System.Data.ConstraintException">The edit broke a constraint. </exception>
      <exception cref="T:System.Data.ReadOnlyException">The row belongs to the table and the edit tried to change the value of a read-only column. </exception>
      <exception cref="T:System.Data.NoNullAllowedException">The edit tried to put a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The relation is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>Gets the error description of the specified <see cref="T:System.Data.DataColumn" />.</summary>
      <returns>The text of the error description.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>Gets the error description for the column specified by index.</summary>
      <returns>The text of the error description.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex" /> argument is out of range. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>Gets the error description for a column, specified by name.</summary>
      <returns>The text of the error description.</returns>
      <param name="columnName">The name of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>Gets an array of columns that have errors.</summary>
      <returns>An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> does not belong to the <see cref="T:System.Data.DataTable" />.The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">This row does not belong to the child table of the <see cref="T:System.Data.DataRelation" /> object. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      <exception cref="T:System.ArgumentNullException">The row is null.The <paramref name="relation" /> does not belong to this table's parent relations. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>The parent <see cref="T:System.Data.DataRow" /> of the current row.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />. </exception>
      <exception cref="T:System.ArgumentNullException">The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a <see cref="T:System.Data.DataTable" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />. </exception>
      <exception cref="T:System.ArgumentNullException">The row is null. </exception>
      <exception cref="T:System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to a <see cref="T:System.Data.DataTable" />. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</summary>
      <returns>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</returns>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      <exception cref="T:System.ArgumentException">The relation and row do not belong to the same table. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="relation" /> is null. </exception>
      <exception cref="T:System.Data.RowNotInTableException">The row does not belong to the table. </exception>
      <exception cref="T:System.Data.VersionNotFoundException">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>Gets a value that indicates whether there are errors in a row.</summary>
      <returns>true if the row contains an error; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>Gets a value that indicates whether a specified version exists.</summary>
      <returns>true if the version exists; otherwise, false.</returns>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> and <see cref="T:System.Data.DataRowVersion" /> contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are Default, Original, Current, and Proposed. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>Gets a value that indicates whether the column at the specified index contains a null value.</summary>
      <returns>true if the column contains a null value; otherwise, false.</returns>
      <param name="columnIndex">The zero-based index of the column. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*