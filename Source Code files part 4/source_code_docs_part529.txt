 </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>Specifies a line consisting of a repeating pattern of dash-dot-dot.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>Specifies a user-defined custom dash style.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>Specifies how the interior of a closed path is filled.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>Specifies the alternate fill mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>Specifies the winding fill mode.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>Specifies whether commands in the graphics stack are terminated (flushed) immediately or executed as soon as possible.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>Specifies that the stack of all graphics operations is flushed immediately.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>Specifies that all graphics operations on the stack are executed as soon as possible. This synchronizes the graphics state.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>Represents the internal data of a graphics container. This class is used when saving the state of a <see cref="T:System.Drawing.Graphics" /> object using the <see cref="M:System.Drawing.Graphics.BeginContainer" /> and <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> methods. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>Represents a series of connected lines and curves. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</summary>
      <param name="fillMode">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. </param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. </param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array. </param>
      <param name="fillMode">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. </param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. </param>
      <param name="types">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array. </param>
      <param name="fillMode">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken. </param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken. </param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="width">The width of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="height">The height of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Appends an elliptical arc to the current figure.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="width">The width of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="height">The height of the rectangular region that defines the ellipse from which the arc is drawn. </param>
      <param name="startAngle">The starting angle of the arc, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the arc. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve. </param>
      <param name="pt2">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve. </param>
      <param name="pt3">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve. </param>
      <param name="pt4">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve. </param>
      <param name="pt2">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve. </param>
      <param name="pt3">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve. </param>
      <param name="pt4">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the curve. </param>
      <param name="y1">The y-coordinate of the starting point of the curve. </param>
      <param name="x2">The x-coordinate of the first control point for the curve. </param>
      <param name="y2">The y-coordinate of the first control point for the curve. </param>
      <param name="x3">The x-coordinate of the second control point for the curve. </param>
      <param name="y3">The y-coordinate of the second control point for the curve. </param>
      <param name="x4">The x-coordinate of the endpoint of the curve. </param>
      <param name="y4">The y-coordinate of the endpoint of the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the curve. </param>
      <param name="y1">The y-coordinate of the starting point of the curve. </param>
      <param name="x2">The x-coordinate of the first control point for the curve. </param>
      <param name="y2">The y-coordinate of the first control point for the curve. </param>
      <param name="x3">The x-coordinate of the second control point for the curve. </param>
      <param name="y3">The y-coordinate of the second control point for the curve. </param>
      <param name="x4">The x-coordinate of the endpoint of the curve. </param>
      <param name="y4">The y-coordinate of the endpoint of the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>Adds a sequence of connected cubic Bézier curves to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>Adds a sequence of connected cubic Bézier curves to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve. </param>
      <param name="tension">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve. </param>
      <param name="tension">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve. </param>
      <param name="offset">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve. </param>
      <param name="numberOfSegments">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results. </param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve. </param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve. </param>
      <param name="offset">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve. </param>
      <param name="numberOfSegments">The number of segments used to draw the curve. A segment can be thought of as a line connecting two points. </param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>Adds a spline curve to the current figure.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve. </param>
      <param name="tension">A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse. </param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse. </param>
      <param name="width">The width of the bounding rectangle that defines the ellipse. </param>
      <param name="height">The height of the bounding rectangle that defines the ellipse. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds an ellipse to the current path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse. </param>
      <param name="y">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse. </param>
      <param name="width">The width of the bounding rectangle that defines the ellipse. </param>
      <param name="height">The height of the bounding rectangle that defines the ellipse. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line. </param>
      <param name="pt2">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pt1">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line. </param>
      <param name="pt2">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Appends a line segment to the current figure.</summary>
      <param name="x1">The x-coordinate of the starting point of the line. </param>
      <param name="y1">The y-coordinate of the starting point of the line. </param>
      <param name="x2">The x-coordinate of the endpoint of the line. </param>
      <param name="y2">The y-coordinate of the endpoint of the line. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="x1">The x-coordinate of the starting point of the line. </param>
      <param name="y1">The y-coordinate of the starting point of the line. </param>
      <param name="x2">The x-coordinate of the endpoint of the line. </param>
      <param name="y2">The y-coordinate of the endpoint of the line. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</summary>
      <param name="addingPath">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add. </param>
      <param name="connect">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of true specifies that (if possible) the first figure in the added path is part of the last figure in this path. A value of false specifies that the first figure in the added path is separate from the last figure in this path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="width">The width of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="height">The height of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Adds the outline of a pie shape to this path.</summary>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="width">The width of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="height">The height of the bounding rectangle that defines the ellipse from which the pie is drawn. </param>
      <param name="startAngle">The starting angle for the pie section, measured in degrees clockwise from the x-axis. </param>
      <param name="sweepAngle">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>Adds a polygon to this path.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>Adds a polygon to this path.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>Adds a rectangle to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>Adds a rectangle to this path.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>Adds a series of rectangles to this path.</summary>
      <param name="rects">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>Adds a series of rectangles to this path.</summary>
      <param name="rects">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add. </param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn. </param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section). </param>
      <param name="emSize">The height of the em square box that bounds the character. </param>
      <param name="origin">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts. </param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add. </param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn. </param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section). </param>
      <param name="emSize">The height of the em square box that bounds the character. </param>
      <param name="origin">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts. </param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add. </param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn. </param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section). </param>
      <param name="emSize">The height of the em square box that bounds the character. </param>
      <param name="layoutRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text. </param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>Adds a text string to this path.</summary>
      <param name="s">The <see cref="T:System.String" /> to add. </param>
      <param name="family">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn. </param>
      <param name="style">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section). </param>
      <param name="emSize">The height of the em square box that bounds the character. </param>
      <param name="layoutRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text. </param>
      <param name="format">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>Clears all markers from this path.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>Creates an exact copy of this path.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>Converts each curve in this path into a sequence of connected line segments.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening. </param>
      <param name="flatness">Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that specifies the location to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that specifies the location to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="pt">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
      <returns>This method returns true if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="pen">The <see cref="T:System.Drawing.Pen" /> to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="point">A <see cref="T:System.Drawing.Point" /> that represents the point to test. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="pt">A <see cref="T:System.Drawing.Point" /> that represents the point to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the point to test. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this; otherwise, false.</returns>
      <param name="pt">A <see cref="T:System.Drawing.PointF" /> that represents the point to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</summary>
      <returns>This method returns true if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, false.</returns>
      <param name="x">The x-coordinate of the point to test. </param>
      <param name="y">The y-coordinate of the point to test. </param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>Gets the points in the path.</summary>
      <returns>An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</summary>
      <returns>An array of bytes that specifies the types of the corresponding points in the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</summary>
      <returns>An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points. </param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points. </param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />. </param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points. </param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />. </param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path. </param>
      <param name="warpMode">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="destPoints">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points. </param>
      <param name="srcRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />. </param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path. </param>
      <param name="warpMode">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode. </param>
      <param name="flatness">A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>Adds an additional outline to the path.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates. </param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</summary>
      <param name="pen">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates. </param>
      <param name="matrix">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening. </param>
      <param name="flatness">A value that specifies the flatness for curves. </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> and test the types of shapes contained in each subpath. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</summary>
      <returns>The number of points copied.</returns>
      <param name="points">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path. </param>
      <param name="types">Upon return, contains an array of bytes that represents the types of points in the path. </param>
      <param name="startIndex">Specifies the starting index of the arrays. </param>
      <param name="endIndex">Specifies the ending index of the arrays. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>Gets the number of points in the path.</summary>
      <returns>The number of points in the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into the two specified arrays.</summary>
      <returns>The number of points copied.</returns>
      <param name="points">Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path. </param>
      <param name="types">Upon return, contains an array of bytes that represents the types of points in the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> contains a curve.</summary>
      <returns>This method returns true if the current subpath contains a curve; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it. The <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</summary>
      <returns>The number of points between this marker and the next.</returns>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</summary>
      <returns>The number of points between this marker and the next.</returns>
      <param name="startIndex">[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath. </param>
      <param name="endIndex">[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <paramref name="startIndex" /> points. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>Gets the starting index and the ending index of the next group of data points that all have the same type.</summary>
      <returns>This method returns the number of data points in the group. If there are no more groups in the path, this method returns 0.</returns>
      <param name="pathType">[out] Receives the point type shared by all points in the group. Possible types can be retrieved from the <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration. </param>
      <param name="startIndex">[out] Receives the starting index of the group of points. </param>
      <param name="endIndex">[out] Receives the ending index of the group of points. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>Gets the next figure (subpath) from the associated path of this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</summary>
      <returns>The number of data points in the retrieved figure (subpath). If there are no more figures to retrieve, zero is returned.</returns>
      <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator. </param>
      <param name="isClosed">[out] Indicates whether the current subpath is closed. It is true if the if the figure is closed, otherwise it is false. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>Moves the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the next subpath in the path. The start index and end index of the next subpath are contained in the [out] parameters.</summary>
      <returns>The number of subpaths in the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</returns>
      <param name="startIndex">[out] Receives the starting index of the next subpath. </param>
      <param name="endIndex">[out] Receives the ending index of the next subpath. </param>
      <param name="isClosed">[out] Indicates whether the subpath is closed. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>Rewinds this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> to the beginning of its associated path.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>Gets the number of subpaths in the path.</summary>
      <returns>The number of subpaths in the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>Represents the state of a <see cref="T:System.Drawing.Graphics" /> object. This object is returned by a call to the <see cref="M:System.Drawing.Graphics.Save" /> methods. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> enumeration and foreground color.</summary>
      <param name="hatchstyle">One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />. </param>
      <param name="foreColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> enumeration, foreground color, and background color.</summary>
      <param name="hatchstyle">One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />. </param>
      <param name="foreColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />. </param>
      <param name="backColor">The <see cref="T:System.Drawing.Color" /> structure that represents the color of spaces between the lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>Gets the color of spaces between the hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the background color for this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> this method creates, cast as an object.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>Gets the color of hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> structure that represents the foreground color for this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>Gets the hatch style of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</summary>
      <returns>One of the <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> values that represents the pattern of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>Specifies the different patterns available for <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>A pattern of horizontal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>A pattern of vertical lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>A pattern of lines on a diagonal from upper left to lower right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>A pattern of lines on a diagonal from upper right to lower left.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>Specifies horizontal and vertical lines that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>A pattern of crisscross diagonal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points and are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, but they are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />. This hatch pattern is not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, and are twice its width, but the lines are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" />, and are triple its width, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" />, and are triple its width, but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>Specifies vertical lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>Specifies horizontal lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>Specifies vertical lines that are spaced 75 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> (or 25 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" />).</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>Specifies horizontal lines that are spaced 75 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> (or 25 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" />).</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>Specifies vertical lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> and are twice its width.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>Specifies horizontal lines that are spaced 50 percent closer together than <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> and are twice the width of <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>Specifies dashed diagonal lines, that slant to the right from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>Specifies dashed diagonal lines, that slant to the left from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>Specifies dashed horizontal lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>Specifies dashed vertical lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>Specifies a hatch that has the appearance of confetti.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>Specifies horizontal lines that are composed of zigzags.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>Specifies horizontal lines that are composed of tildes.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>Specifies a hatch that has the appearance of horizontally layered bricks.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>Specifies a hatch that has the appearance of a woven material.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>Specifies a hatch that has the appearance of a plaid material.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>Specifies a hatch that has the appearance of divots.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>Specifies horizontal and vertical lines, each of which is composed of dots, that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>Specifies a hatch that has the appearance of diagonally layered shingles that slant to the right from top points to bottom points.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>Specifies a hatch that has the appearance of a trellis.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>Specifies a hatch that has the appearance of spheres laid adjacent to one another.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>Specifies a hatch that has the appearance of a checkerboard.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>Specifies a hatch that has the appearance of a checkerboard placed diagonally.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>Specifies the hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>Specifies hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" />.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>Specifies hatch style <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" />.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>The <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> enumeration specifies the algorithm that is used when images are scaled or rotated. </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>Equivalent to the <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> element of the <see cref="T:System.Drawing.Drawing2D.QualityMode" /> enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>Specifies default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>Specifies low quality interpolation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>Specifies high quality interpolation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>Specifies bilinear interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 50 percent of its original size. </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>Specifies bicubic interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 25 percent of its original size.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>Specifies nearest-neighbor interpolation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>Specifies high-quality, bilinear interpolation. Prefiltering is performed to ensure high-quality shrinking. </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>Specifies high-quality, bicubic interpolation. Prefiltering is performed to ensure high-quality shrinking. This mode produces the highest quality transformed images.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</summary>
      <param name="point1">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient. </param>
      <param name="point2">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</summary>
      <param name="point1">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient. </param>
      <param name="point2">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="linearGradientMode">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, LinearGradientMode.ForwardDiagonal specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line. </param>
      <param name="isAngleScaleable">Set to true to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, false. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="linearGradientMode">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient. The orientation determines the starting and ending points of the gradient. For example, LinearGradientMode.ForwardDiagonal specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient. </param>
      <param name="color1">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient. </param>
      <param name="color2">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient. </param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line. </param>
      <param name="isAngleScaleable">Set to true to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, false. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>The value is true if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>Gets or sets the starting and ending colors of the gradient.</summary>
      <returns>An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>Gets a rectangular region that defines the starting and ending points of the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</summary>
      <param name="angle">The angle of rotation. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transform by the specified amount in the specified order.</summary>
      <param name="angle">The angle of rotation. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction. </param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transform by the specified amounts in the specified order.</summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction. </param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color). </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color). </param>
      <param name="scale">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color) </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>Creates a gradient falloff based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally). </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>Creates a gradient falloff based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color). </param>
      <param name="scale">A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</summary>
      <param name="dx">The value of the translation in x. </param>
      <param name="dy">The value of the translation in y. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Translates the local geometric transform by the specified dimensions in the specified order.</summary>
      <param name="dx">The value of the translation in x. </param>
      <param name="dy">The value of the translation in y. </param>
      <param name="order">The order (prepend or append) in which to apply the translation. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>Specifies the direction of a linear gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>Specifies a gradient from left to right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>Specifies a gradient from top to bottom.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>Specifies a gradient from upper left to lower right.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>Specifies a gradient from upper right to lower left.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>Specifies the available cap styles with which a <see cref="T:System.Drawing.Pen" /> object can end a line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>Specifies a flat line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>Specifies a square line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>Specifies a round line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>Specifies a triangular line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>Specifies no anchor.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>Specifies a square anchor line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>Specifies a round anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>Specifies a diamond anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>Specifies an arrow-shaped anchor cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>Specifies a custom line cap.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>Specifies a mask used to check whether a line cap is an anchor cap.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>Specifies a beveled join. This produces a diagonal corner.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>Specifies a circular join. This produces a smooth, circular arc between the lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</summary>
      <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed. </param>
      <param name="plgpts">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</summary>
      <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed. </param>
      <param name="plgpts">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</summary>
      <param name="m11">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="m12">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="m21">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="m22">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="dx">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="dy">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>This method returns true if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, false.</returns>
      <param name="obj">The object to test. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>Returns a hash code.</summary>
      <returns>The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</summary>
      <returns>This property is true if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</summary>
      <returns>This property is true if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied. </param>
      <param name="order">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <returns>The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</summary>
      <param name="angle">The angle of the rotation, in degrees. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      <param name="angle">The angle (extent) of the rotation, in degrees. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</summary>
      <param name="angle">The angle (extent) of the rotation, in degrees. </param>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="angle">The angle of the rotation, in degrees. </param>
      <param name="point">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</summary>
      <param name="scaleX">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction. </param>
      <param name="scaleY">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</summary>
      <param name="scaleX">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction. </param>
      <param name="scaleY">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</summary>
      <param name="shearX">The horizontal shear factor. </param>
      <param name="shearY">The vertical shear factor. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="shearX">The horizontal shear factor. </param>
      <param name="shearY">The vertical shear factor. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</summary>
      <param name="offsetX">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="offsetY">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</summary>
      <param name="offsetX">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="offsetY">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</summary>
      <param name="pts">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</param>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>Specifies the order for matrix transform operations.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>The new operation is applied before the old operation.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>The new operation is applied after the old operation.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>Contains the graphical data that makes up a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathData" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>Gets or sets an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points through which the path is constructed.</summary>
      <returns>An array of <see cref="T:System.Drawing.PointF" /> objects that represents the points through which the path is constructed.</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>Gets or sets the types of the corresponding points in the path.</summary>
      <returns>An array of bytes that specify the types of the corresponding points in the path.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>Encapsulates a <see cref="T:System.Drawing.Brush" /> object that fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with a gradient. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified path.</summary>
      <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that defines the area filled by this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path. </param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</summary>
      <param name="points">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path. </param>
      <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>Gets or sets the color at the center of the path gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the color at the center of the path gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>Gets or sets the center point of the path gradient.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the center point of the path gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>The <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> this method creates, cast as an object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>Gets or sets the focus point for the gradient falloff.</summary>
      <returns>A <see cref="T:System.Drawing.PointF" /> that represents the focus point for the gradient falloff.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that will be multiplied by the brush's current transformation matrix. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Updates the brush's transformation matrix with the product of the brush's transformation matrix multiplied by another matrix.</summary>
      <param name="matrix">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that will be multiplied by the brush's current transformation matrix. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>Gets a bounding rectangle for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangular region that bounds the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>Resets the <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> property to identity.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</summary>
      <param name="angle">The angle (extent) of rotation. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Rotates the local geometric transform by the specified amount in the specified order.</summary>
      <param name="angle">The angle (extent) of rotation. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
      <param name="sx">The transform scale factor in the x-axis direction. </param>
      <param name="sy">The transform scale factor in the y-axis direction. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Scales the local geometric transform by the specified amounts in the specified order.</summary>
      <param name="sx">The transform scale factor in the x-axis direction. </param>
      <param name="sy">The transform scale factor in the y-axis direction. </param>
      <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>Creates a gradient with a center color and a linear falloff to one surrounding color.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>Creates a gradient with a center color and a linear falloff to each surrounding color.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path. </param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path. </param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>Gets or sets an array of colors that correspond to the points in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</summary>
      <returns>An array of <see cref="T:System.Drawing.Color" /> structures that represents the colors associated with each point in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> fills.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>Gets or sets a copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.</summary>
      <param name="dx">The value of the translation in x. </param>
      <param name="dy">The value of the translation in y. </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>Applies the specified translation to the local geometric transform in the specified order.</summary>
      <param name="dx">The value of the translation in x. </param>
      <param name="dy">The value of the translation in y. </param>
      <param name="order">The order (prepend or append) in which to apply the translation. </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
      <returns>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> are tiled.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>Specifies the type of point in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>The starting point of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>A line segment.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>A default Bézier curve.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>A mask point.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>The corresponding segment is dashed.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>A path marker.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>The endpoint of a subpath.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>A cubic Bézier curve.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>Specifies the alignment of a <see cref="T:System.Drawing.Pen" /> object in relation to the theoretical, zero-width line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>Specifies that the <see cref="T:System.Drawing.Pen" /> object is centered over the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned on the inside of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned on the outside of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned to the left of the theoretical line.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>Specifies the <see cref="T:System.Drawing.Pen" /> is positioned to the right of the theoretical line.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>Specifies the type of fill a <see cref="T:System.Drawing.Pen" /> object uses to fill lines.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>Specifies a solid fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>Specifies a hatch fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>Specifies a bitmap texture fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>Specifies a path gradient fill.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>Specifies a linear gradient fill.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>Specifies how pixels are offset during rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>Specifies the default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>Specifies high speed, low quality rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>Specifies high quality, low speed rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>Specifies no pixel offset.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>Specifies that pixels are offset by -.5 units, both horizontally and vertically, for high speed antialiasing.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>Specifies the overall quality when rendering GDI+ objects.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>Specifies the default mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>Specifies low quality, high speed rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>Specifies high quality, low speed rendering.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>Encapsulates the data that makes up a <see cref="T:System.Drawing.Region" /> object. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>Gets or sets an array of bytes that specify the <see cref="T:System.Drawing.Region" /> object.</summary>
      <returns>An array of bytes that specify the <see cref="T:System.Drawing.Region" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>Specifies whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>Specifies an invalid mode.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>Specifies antialiased rendering.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>Specifies no antialiasing.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>Specifies antialiased rendering.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>Specifies the type of warp transformation applied in a <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> method.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>Specifies a perspective warp.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>Specifies a bilinear warp.</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>Specifies how a texture or gradient is tiled when it is smaller than the area being filled.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>Tiles the gradient or texture.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>Reverses the texture or gradient horizontally and then tiles the texture or gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>Reverses the texture or gradient vertically and then tiles the texture or gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>The texture or gradient is not tiled.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>Specifies the attributes of a bitmap image. The <see cref="T:System.Drawing.Imaging.BitmapData" /> class is used by the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> and <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> methods of the <see cref="T:System.Drawing.Bitmap" /> class. Not inheritable. </summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.BitmapData" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>Gets or sets the pixel height of the <see cref="T:System.Drawing.Bitmap" /> object. Also sometimes referred to as the number of scan lines.</summary>
      <returns>The pixel height of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>Gets or sets the format of the pixel information in the <see cref="T:System.Drawing.Bitmap" /> object that returned this <see cref="T:System.Drawing.Imaging.BitmapData" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.PixelFormat" /> that specifies the format of the pixel information in the associated <see cref="T:System.Drawing.Bitmap" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>Reserved. Do not use.</summary>
      <returns>Reserved. Do not use.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.</summary>
      <returns>The address of the first pixel data in the bitmap.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>Gets or sets the stride width (also called scan width) of the <see cref="T:System.Drawing.Bitmap" /> object.</summary>
      <returns>The stride width, in bytes, of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>Gets or sets the pixel width of the <see cref="T:System.Drawing.Bitmap" /> object. This can also be thought of as the number of pixels in one scan line.</summary>
      <returns>The pixel width of the <see cref="T:System.Drawing.Bitmap" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>Specifies which GDI+ objects use color adjustment information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>Color adjustment information that is used by all GDI+ objects that do not have their own color adjustment information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Bitmap" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Brush" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>Color adjustment information for <see cref="T:System.Drawing.Pen" /> objects.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>Color adjustment information for text.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>The number of types specified.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>The number of types specified.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>Specifies individual channels in the CMYK (cyan, magenta, yellow, black) color space. This enumeration is used by the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>The cyan color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>The magenta color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>The yellow color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>The black color channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>The last selected channel should be used.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>Defines a map for converting colors. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color-remap table, which is an array of <see cref="T:System.Drawing.Imaging.ColorMap" /> structures. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMap" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>Gets or sets the new <see cref="T:System.Drawing.Color" /> structure to which to convert.</summary>
      <returns>The new <see cref="T:System.Drawing.Color" /> structure to which to convert.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>Gets or sets the existing <see cref="T:System.Drawing.Color" /> structure to be converted.</summary>
      <returns>The existing <see cref="T:System.Drawing.Color" /> structure to be converted.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>Specifies the types of color maps.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>A default color map.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>Specifies a color map for a <see cref="T:System.Drawing.Brush" />.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>Defines a 5 x 5 matrix that contains the coordinates for the RGBAW space. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color matrix. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class using the elements in the specified matrix <paramref name="newColorMatrix" />.</summary>
      <param name="newColorMatrix">The values of the elements for the new <see cref="T:System.Drawing.Imaging.ColorMatrix" />. </param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>Gets or sets the element at the specified row and column in the <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the specified row and column.</returns>
      <param name="row">The row of the element.</param>
      <param name="column">The column of the element.</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>Gets or sets the element at the 0 (zero) row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>Gets or sets the element at the 0 (zero) row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> .</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>Gets or sets the element at the 0 (zero) row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>Gets or sets the element at the 0 (zero) row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the 0 row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>Gets or sets the element at the 0 (zero) row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the 0 row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>Gets or sets the element at the first row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>Gets or sets the element at the first row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>Gets or sets the element at the first row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>Gets or sets the element at the first row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the first row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>Gets or sets the element at the first row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the first row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>Gets or sets the element at the second row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>Gets or sets the element at the second row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>Gets or sets the element at the second row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>Gets or sets the element at the second row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>Gets or sets the element at the second row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the second row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>Gets or sets the element at the third row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>Gets or sets the element at the third row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>Gets or sets the element at the third row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>Gets or sets the element at the third row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the third row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>Gets or sets the element at the third row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the third row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>Gets or sets the element at the fourth row and 0 (zero) column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and 0 column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>Gets or sets the element at the fourth row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and first column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>Gets or sets the element at the fourth row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and second column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>Gets or sets the element at the fourth row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />. Represents the alpha component.</summary>
      <returns>The element at the fourth row and third column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>Gets or sets the element at the fourth row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</summary>
      <returns>The element at the fourth row and fourth column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>Specifies the types of images and colors that will be affected by the color and grayscale adjustment settings of an <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>All color values, including gray shades, are adjusted by the same color-adjustment matrix.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>All colors are adjusted, but gray shades are not adjusted. A gray shade is any color that has the same value for its red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>Only gray shades are adjusted.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>Specifies two modes for color component values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>The integer values supplied are 32-bit values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>The integer values supplied are 64-bit values.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>Gets an array of <see cref="T:System.Drawing.Color" /> structures.</summary>
      <returns>The array of <see cref="T:System.Drawing.Color" /> structure that make up this <see cref="T:System.Drawing.Imaging.ColorPalette" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>Gets a value that specifies how to interpret the color information in the array of colors.</summary>
      <returns>The following flag values are valid: 0x00000001The color values in the array contain alpha information. 0x00000002The colors in the array are grayscale values. 0x00000004The colors in the array are halftone values. </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>Specifies the methods available for use with a metafile to read and write graphic commands. </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>Increases or decreases the size of a logical palette based on the specified value.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>Copies the color data for a rectangle of pixels in a DIB to the specified destination rectangle.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>See "Windows-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>See "Enhanced-Format Metafiles" in the GDI section of the MSDN Library.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>Indicates invalid data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>Identifies a record that is the EMF+ header.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>Identifies a record that marks the last EMF+ record of a metafile.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>See <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>See <see cref="M:System.Drawing.Graphics.GetHdc" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>Marks the start of a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>Marks a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>Marks the end of a multiple-format section.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>Marks an object.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>See <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawLines" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillPie" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawPie" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawArc" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>See <see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>See <see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>See <see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawImage" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawImage" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>See <see cref="Overload:System.Drawing.Graphics.DrawString" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>See <see cref="P:System.Drawing.Graphics.RenderingOrigin" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>See <see cref="P:System.Drawing.Graphics.SmoothingMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>See <see cref="P:System.Drawing.Graphics.TextRenderingHint" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>See <see cref="P:System.Drawing.Graphics.TextContrast" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>See <see cref="P:System.Drawing.Graphics.InterpolationMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>See <see cref="P:System.Drawing.Graphics.PixelOffsetMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>See <see cref="P:System.Drawing.Graphics.CompositingMode" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>See <see cref="P:System.Drawing.Graphics.CompositingQuality" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>See <see cref="M:System.Drawing.Graphics.Save" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>See <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>See <see cref="M:System.Drawing.Graphics.BeginContainer" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>See <see cref="M:System.Drawing.Graphics.BeginContainer" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>See <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>See <see cref="M:System.Drawing.Graphics.ResetTransform" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>See <see cref="M:System.Drawing.Graphics.ResetClip" />.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>See <see cref="Overload:System.Drawing.Graphics.SetClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>See <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>Specifies a character string, a location, and formatting information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>Used internally.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>The maximum value for this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>The minimum value for this enumeration.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>Specifies the nature of the records that are placed in an Enhanced Metafile (EMF) file. This enumeration is used by several constructors in the <see cref="T:System.Drawing.Imaging.Metafile" /> class.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>Specifies that all the records in the metafile are EMF records, which can be displayed by GDI or GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>Specifies that all the records in the metafile are EMF+ records, which can be displayed by GDI+ but not by GDI.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>Specifies that all EMF+ records in the metafile are associated with an alternate EMF record. Metafiles of type <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> can be displayed by GDI or by GDI+.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates a globally unique identifier (GUID) that identifies the category of an image encoder parameter.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Encoder" /> class from the specified globally unique identifier (GUID). The GUID specifies an image encoder parameter category.</summary>
      <param name="guid">A globally unique identifier that identifies an image encoder parameter category. </param>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the chrominance table parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the color depth parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the compression parameter category.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>Gets a globally unique identifier (GUID) that identifies an image encoder parameter category.</summary>
      <returns>The GUID that identifies an image encoder parameter category.</returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the luminance table parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>Gets an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the quality parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the render method parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the save flag parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the scan method parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the transformation parameter category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>Represents an <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the version parameter category.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>Used to pass a value, or an array of values, to an image encoder. </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one unsigned 8-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">An 8-bit unsigned integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 8-bit value. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> or <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">A byte that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
      <param name="undefined">If true, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; otherwise, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of unsigned 8-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">An array of 8-bit unsigned integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of bytes. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> or <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">An array of bytes that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
      <param name="undefined">If true, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />; otherwise, the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property is set to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one, 16-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">A 16-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 16-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">An array of 16-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 32-bit integers. The pair of integers represents a fraction, the first integer being the numerator, and the second integer being the denominator. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="numerator">A 32-bit integer that represents the numerator of a fraction. Must be nonnegative. </param>
      <param name="demoninator">A 32-bit integer that represents the denominator of a fraction. Must be nonnegative. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and three integers that specify the number of values, the data type of the values, and a pointer to the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="NumberOfValues">An integer that specifies the number of values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property is set to this value. </param>
      <param name="Type">A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that specifies the data type of the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Type" /> and <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> properties are set to this value. </param>
      <param name="Value">A pointer to an array of values of the type specified by the <paramref name="Type" /> parameter.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four, 32-bit integers. The four integers represent a range of fractions. The first two integers represent the smallest fraction in the range, and the remaining two integers represent the largest fraction in the range. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="numerator1">A 32-bit integer that represents the numerator of the smallest fraction in the range. Must be nonnegative. </param>
      <param name="demoninator1">A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative. </param>
      <param name="numerator2">A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative. </param>
      <param name="demoninator2">A 32-bit integer that represents the numerator of the largest fraction in the range. Must be nonnegative. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 32-bit integers. The two arrays represent an array of fractions. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="numerator" /> array, which must be the same as the number of elements in the <paramref name="denominator" /> array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="numerator">An array of 32-bit integers that specifies the numerators of the fractions. The integers in the array must be nonnegative. </param>
      <param name="denominator">An array of 32-bit integers that specifies the denominators of the fractions. The integers in the array must be nonnegative. A denominator of a given index is paired with the numerator of the same index. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four arrays of 32-bit integers. The four arrays represent an array rational ranges. A rational range is the set of all fractions from a minimum fractional value through a maximum fractional value. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="numerator1" /> array, which must be the same as the number of elements in the other three arrays.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="numerator1">An array of 32-bit integers that specifies the numerators of the minimum values for the ranges. The integers in the array must be nonnegative. </param>
      <param name="denominator1">An array of 32-bit integers that specifies the denominators of the minimum values for the ranges. The integers in the array must be nonnegative. </param>
      <param name="numerator2">An array of 32-bit integers that specifies the numerators of the maximum values for the ranges. The integers in the array must be nonnegative. </param>
      <param name="denominator2">An array of 32-bit integers that specifies the denominators of the maximum values for the ranges. The integers in the array must be nonnegative. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 64-bit integer. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 bits), and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">A 64-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a pair of 64-bit integers. The pair of integers represents a range of integers, the first integer being the smallest number in the range, and the second integer being the largest number in the range. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to 1.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="rangebegin">A 64-bit integer that represents the smallest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
      <param name="rangeend">A 64-bit integer that represents the largest number in a range of integers. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 64-bit integers. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32-bit), and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">An array of 64-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 64-bit integers. The two arrays represent an array integer ranges. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the number of elements in the <paramref name="rangebegin" /> array, which must be the same as the number of elements in the <paramref name="rangeend" /> array.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="rangebegin">An array of 64-bit integers that specifies the minimum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
      <param name="rangeend">An array of 64-bit integers that specifies the maximum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object. A maximum value of a given index is paired with the minimum value of the same index. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a character string. The string is converted to a null-terminated ASCII string before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> property to <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />, and sets the <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> property to the length of the ASCII string including the NULL terminator.</summary>
      <param name="encoder">An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category. </param>
      <param name="value">A <see cref="T:System.String" /> that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>Gets or sets the <see cref="T:System.Drawing.Imaging.Encoder" /> object associated with this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates the globally unique identifier (GUID) that specifies the category (for example <see cref="F:System.Drawing.Imaging.Encoder.Quality" />, <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />, or <see cref="F:System.Drawing.Imaging.Encoder.Compression" />) of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the GUID that specifies the category of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>Gets the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>An integer that indicates the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that indicates the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
      <returns>A member of the <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> enumeration that indicates the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>Encapsulates an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain one <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain the specified number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
      <param name="count">An integer that specifies the number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects that the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object can contain. </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>Gets or sets an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</summary>
      <returns>The array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>Used to specify the data type of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> used with the <see cref="Overload:System.Drawing.Image.Save" /> or <see cref="Overload:System.Drawing.Image.SaveAdd" /> method of an image. </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>Specifies that each value in the array is an 8-bit unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>Specifies that the array of values is a null-terminated ASCII character string. Note that the NumberOfValues data member of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object indicates the length of the character string including the NULL terminator.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>Specifies that each value in the array is a 16-bit, unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>Specifies that each value in the array is a 32-bit unsigned integer.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a fraction, the first integer being the numerator and the second integer being the denominator.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a range of numbers.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>Specifies that the array of values is an array of bytes that has no data type defined.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>Specifies that each value in the array is a set of four, 32-bit unsigned integers. The first two integers represent one fraction, and the second two integers represent a second fraction. The two fractions represent a range of rational numbers. The first fraction is the smallest rational number in the range, and the second fraction is the largest rational number in the range.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>Used to specify the parameter value passed to a JPEG or TIFF image encoder when using the <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> or <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> methods.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>Specifies the LZW compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the Compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>Specifies the CCITT3 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>Specifies the CCITT4 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>Specifies the RLE compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>Specifies no compression. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>Specifies that the image is to be rotated clockwise 90 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>Specifies that the image is to be rotated 180 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>Specifies that the image is to be rotated clockwise 270 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>Specifies that the image is to be flipped horizontally (about the vertical axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>Specifies that the image is to be flipped vertically (about the horizontal axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>Specifies that the image has more than one frame (page). Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>Specifies the last frame in a multiple-frame image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>Specifies that a multiple-frame file or stream should be closed. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>Not used in GDI+ version 1.0.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>Specifies that a frame is to be added to the page dimension of an image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>Provides properties that get the frame dimensions of an image. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.FrameDimension" /> class using the specified Guid structure.</summary>
      <param name="guid">A Guid structure that contains a GUID for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object. </param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <returns>Returns true if <paramref name="o" /> is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object; otherwise, false.</returns>
      <param name="o">The object to test. </param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>Returns a hash code for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <returns>Returns an int value that is the hash code of this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>Gets a globally unique identifier (GUID) that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</summary>
      <returns>A Guid structure that contains a GUID that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>Gets the page dimension.</summary>
      <returns>The page dimension.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>Gets the resolution dimension.</summary>
      <returns>The resolution dimension.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>Gets the time dimension.</summary>
      <returns>The time dimension.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>Converts this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object to a human-readable string.</summary>
      <returns>A string that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>Contains information about how bitmap and metafile colors are manipulated during rendering. </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>Clears the brush color-remap table of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>Clears the color key (transparency range) for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color key (transparency range) for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>Clears the color-adjustment matrix for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color-adjustment matrix for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>Disables gamma correction for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Disables gamma correction for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which gamma correction is disabled. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>Clears the NoOp setting for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the NoOp setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the NoOp setting is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>Clears the CMYK (cyan-magenta-yellow-black) output channel setting for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the (cyan-magenta-yellow-black) output channel setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel setting is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>Clears the output channel color profile setting for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the output channel color profile setting for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel profile setting is cleared. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>Clears the color-remap table for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the color-remap table for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the remap table is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>Clears the threshold value for the default category.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Clears the threshold value for a specified category.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the threshold is cleared. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>Creates an exact copy of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object this class creates, cast as an object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Adjusts the colors in a palette according to the adjustment settings of a specified category.</summary>
      <param name="palette">A <see cref="T:System.Drawing.Imaging.ColorPalette" /> that on input contains the palette to be adjusted, and on output contains the adjusted palette. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category whose adjustment settings will be applied to the palette. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>Sets the color-remap table for the brush category.</summary>
      <param name="map">An array of <see cref="T:System.Drawing.Imaging.ColorMap" /> objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>Sets the color key for the default category.</summary>
      <param name="colorLow">The low color-key value. </param>
      <param name="colorHigh">The high color-key value. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color key (transparency range) for a specified category.</summary>
      <param name="colorLow">The low color-key value. </param>
      <param name="colorHigh">The high color-key value. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color key is set. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <param name="grayMatrix">The grayscale-adjustment matrix. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <param name="grayMatrix">The grayscale-adjustment matrix. </param>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix for a specified category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <param name="grayMatrix">The grayscale-adjustment matrix. </param>
      <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment and grayscale-adjustment matrices. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment and grayscale-adjustment matrices are set. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>Sets the color-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>Sets the color-adjustment matrix for the default category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-adjustment matrix for a specified category.</summary>
      <param name="newColorMatrix">The color-adjustment matrix. </param>
      <param name="mode">An element of <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> that specifies the type of image and color that will be affected by the color-adjustment matrix. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-adjustment matrix is set. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>Sets the gamma value for the default category.</summary>
      <param name="gamma">The gamma correction value. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the gamma value for a specified category.</summary>
      <param name="gamma">The gamma correction value. </param>
      <param name="type">An element of the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration that specifies the category for which the gamma value is set. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>Turns off color adjustment for the default category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>Turns off color adjustment for a specified category. You can call the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> method to reinstate the color-adjustment settings that were in place before the call to the <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> method.</summary>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which color correction is turned off. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for the default category.</summary>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel for a specified category.</summary>
      <param name="flags">An element of <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> that specifies the output channel. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel is set. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>Sets the output channel color-profile file for the default category.</summary>
      <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the output channel color-profile file for a specified category.</summary>
      <param name="colorProfileFilename">The path name of a color-profile file. If the color-profile file is in the %SystemRoot%\System32\Spool\Drivers\Color directory, this parameter can be the file name. Otherwise, this parameter must be the fully qualified path name. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the output channel color-profile file is set. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>Sets the color-remap table for the default category.</summary>
      <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value). </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the color-remap table for a specified category.</summary>
      <param name="map">An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value). </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color-remap table is set. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>Sets the threshold (transparency range) for the default category.</summary>
      <param name="threshold">A real number that specifies the threshold value. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>Sets the threshold (transparency range) for a specified category.</summary>
      <param name="threshold">A threshold value from 0.0 to 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value. </param>
      <param name="type">An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the category for which the color threshold is set. </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>Sets the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area. </param>
      <param name="color">An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>Sets the wrap mode and color used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling.</summary>
      <param name="mode">An element of <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how repeated copies of an image are used to tile an area. </param>
      <param name="color">A color object that specifies the color of pixels outside of a rendered image. This color is visible if the mode parameter is set to <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> and the source rectangle passed to <see cref="Overload:System.Drawing.Graphics.DrawImage" /> is larger than the image itself. </param>
      <param name="clamp">This parameter has no effect. Set it to false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>Provides attributes of an image encoder/decoder (codec).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>The codec supports encoding (saving).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>The codec supports decoding (reading).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>The codec supports raster images (bitmaps).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>The codec supports vector images (metafiles).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>The encoder requires a seekable output stream.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>The decoder has blocking behavior during the decoding process.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>The codec is built into GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>Not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>Not used.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable. </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>Gets or sets a <see cref="T:System.Guid" /> structure that contains a GUID that identifies a specific codec.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that contains a GUID that identifies a specific codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>Gets or sets a string that contains the name of the codec.</summary>
      <returns>A string that contains the name of the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is null.</summary>
      <returns>A string that contains the path name of the DLL that holds the codec.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</summary>
      <returns>A string that contains the file name extension(s) used in the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> enumeration.</summary>
      <returns>A 32-bit value used to store additional information about the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>Gets or sets a string that describes the codec's file format.</summary>
      <returns>A string that describes the codec's file format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>Gets or sets a <see cref="T:System.Guid" /> structure that contains a GUID that identifies the codec's format.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that contains a GUID that identifies the codec's format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image decoders built into GDI+.</summary>
      <returns>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image decoders.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image encoders built into GDI+.</summary>
      <returns>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image encoders.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>Gets or sets a string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</summary>
      <returns>A string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>Gets or sets a two dimensional array of bytes that can be used as a filter.</summary>
      <returns>A two dimensional array of bytes that can be used as a filter.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</summary>
      <returns>A two dimensional array of bytes that represents the signature of the codec.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>Gets or sets the version number of the codec.</summary>
      <returns>The version number of the codec.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>Specifies the attributes of the pixel data contained in an <see cref="T:System.Drawing.Image" /> object. The <see cref="P:System.Drawing.Image.Flags" /> property returns a member of this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>There is no format information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>The pixel data is scalable.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>The pixel data contains alpha information.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>Specifies that the pixel data has alpha values other than 0 (transparent) and 255 (opaque).</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>The pixel data is partially scalable, but there are some limitations.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>The pixel data uses an RGB color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>The pixel data uses a CMYK color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>The pixel data is grayscale.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>Specifies that the image is stored using a YCBCR color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>Specifies that the image is stored using a YCCK color space.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>Specifies that dots per inch information is stored in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>Specifies that the pixel size is stored in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>The pixel data is read-only.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>The pixel data can be cached for faster access.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>Specifies the file format of the image. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageFormat" /> class by using the specified <see cref="T:System.Guid" /> structure.</summary>
      <param name="guid">The <see cref="T:System.Guid" /> structure that specifies a particular image format. </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>Gets the bitmap (BMP) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the bitmap image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>Gets the enhanced metafile (EMF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the enhanced metafile image format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>Returns a value that indicates whether the specified object is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</summary>
      <returns>true if <paramref name="o" /> is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object; otherwise, false.</returns>
      <param name="o">The object to test. </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>Gets the Exchangeable Image File (Exif) format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Exif format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>Returns a hash code value that represents this object.</summary>
      <returns>A hash code that represents this object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>Gets the Graphics Interchange Format (GIF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the GIF image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>Gets a <see cref="T:System.Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</summary>
      <returns>A <see cref="T:System.Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>Gets the Windows icon image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Windows icon image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>Gets the Joint Photographic Experts Group (JPEG) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the JPEG image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>Gets the format of a bitmap in memory.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the format of a bitmap in memory.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>Gets the W3C Portable Network Graphics (PNG) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the PNG image format.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>Gets the Tagged Image File Format (TIFF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the TIFF image format.</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>Converts this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object to a human-readable string.</summary>
      <returns>A string that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>Gets the Windows metafile (WMF) image format.</summary>
      <returns>An <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that indicates the Windows metafile image format.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>Specifies flags that are passed to the flags parameter of the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method. The <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method locks a portion of an image so that you can read or write the pixel data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>Specifies that a portion of the image is locked for reading.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>Specifies that a portion of the image is locked for writing.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>Specifies that a portion of the image is locked for reading or writing.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>Specifies that the buffer used for reading or writing pixel data is allocated by the user. If this flag is set, the <paramref name="flags" /> parameter of the <see cref="Overload:System.Drawing.Bitmap.LockBits" /> method serves as an input parameter (and possibly as an output parameter). If this flag is cleared, then the <paramref name="flags" /> parameter serves only as an output parameter.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>Defines a graphic metafile. A metafile contains records that describe a sequence of graphics operations that can be recorded (constructed) and played back (displayed). This class is not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle.</summary>
      <param name="henhmetafile">A handle to an enhanced metafile. </param>
      <param name="deleteEmf">true to delete the enhanced metafile handle when the <see cref="T:System.Drawing.Imaging.Metafile" /> is deleted; otherwise, false. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="emfType">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be supplied to name the file.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="emfType">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />.</summary>
      <param name="hmetafile">A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />. Also, the <paramref name="deleteWmf" /> parameter can be used to delete the handle when the metafile is deleted.</summary>
      <param name="hmetafile">A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />. </param>
      <param name="deleteWmf">true to delete the handle to the new <see cref="T:System.Drawing.Imaging.Metafile" /> when the <see cref="T:System.Drawing.Imaging.Metafile" /> is deleted; otherwise, false. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be provided to name the file.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="desc">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string can be provided to name the file.</summary>
      <param name="referenceHdc">The handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. Also, a string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> can be added.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified file name.</summary>
      <param name="filename">A <see cref="T:System.String" /> that represents the file name from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can be added, as well.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, the supplied unit of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="type">An <see cref="T:System.Drawing.Imaging.EmfType" /> that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="description">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />, and the supplied unit of measure. A descriptive string can also be added.</summary>
      <param name="fileName">A <see cref="T:System.String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="referenceHdc">A Windows handle to a device context. </param>
      <param name="frameRect">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
      <param name="frameUnit">A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> that specifies the unit of measure for <paramref name="frameRect" />. </param>
      <param name="desc">A <see cref="T:System.String" /> that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" />. </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>Returns a Windows handle to an enhanced <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A Windows handle to this enhanced <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with this <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with this <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <param name="henhmetafile">The handle to the enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is returned. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <param name="hmetafile">The handle to the <see cref="T:System.Drawing.Imaging.Metafile" /> for which to return a header. </param>
      <param name="wmfHeader">A <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> containing the <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is retrieved. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <param name="fileName">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.Drawing.Imaging.Metafile" /> for which a header is retrieved. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>Plays an individual metafile record.</summary>
      <param name="recordType">Element of the <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> that specifies the type of metafile record being played. </param>
      <param name="flags">A set of flags that specify attributes of the record. </param>
      <param name="dataSize">The number of bytes in the record data. </param>
      <param name="data">An array of bytes that contains the record data. </param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>Specifies the unit of measurement for the rectangle used to size and position a metafile. This is specified during the creation of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>The unit of measurement is 1 pixel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>The unit of measurement is 1 printer's point.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>The unit of measurement is 1 inch.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>The unit of measurement is 1/300 of an inch.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>The unit of measurement is 1 millimeter.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>The unit of measurement is 0.01 millimeter. Provided for compatibility with GDI.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>Contains attributes of an associated <see cref="T:System.Drawing.Imaging.Metafile" />. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>Gets a <see cref="T:System.Drawing.Rectangle" /> that bounds the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that bounds the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>Gets the horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>Gets the vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>Gets the size, in bytes, of the enhanced metafile plus header file.</summary>
      <returns>The size, in bytes, of the enhanced metafile plus header file.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is device dependent.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is device dependent; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format or the Windows enhanced metafile plus format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile format or the Windows enhanced metafile plus format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile plus format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows enhanced metafile plus format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Dual enhanced metafile format. This format supports both the enhanced and the enhanced plus format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Dual enhanced metafile format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> supports only the Windows enhanced metafile plus format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> supports only the Windows enhanced metafile plus format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows metafile format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows metafile format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows placeable metafile format.</summary>
      <returns>true if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> is in the Windows placeable metafile format; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>Gets the logical horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The logical horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>Gets the logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>Gets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>Gets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.MetafileType" /> enumeration that represents the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>Gets the version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>The version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>Gets the Windows metafile (WMF) header file for the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
      <returns>A <see cref="T:System.Drawing.Imaging.MetaHeader" /> that contains the WMF header file for the associated <see cref="T:System.Drawing.Imaging.Metafile" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>Specifies types of metafiles. The <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> property returns a member of this enumeration.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>Specifies a metafile format that is not recognized in GDI+.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>Specifies a WMF (Windows Metafile) file. Such a file contains only GDI records.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>Specifies a WMF (Windows Metafile) file that has a placeable metafile header in front of it.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>Specifies an Enhanced Metafile (EMF) file. Such a file contains only GDI records.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>Specifies an EMF+ file. Such a file contains only GDI+ records and must be displayed by using GDI+. Displaying the records using GDI may cause unpredictable results.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>Specifies an EMF+ Dual file. Such a file contains GDI+ records along with alternative GDI records and can be displayed by using either GDI or GDI+. Displaying the records using GDI may cause some quality degradation.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>Contains information about a windows-format (WMF) metafile.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>Initializes a new instance of the MetaHeader class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>Gets or sets the size, in bytes, of the header file.</summary>
      <returns>The size, in bytes, of the header file.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>Gets or sets the size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>Gets or sets the maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</summary>
      <returns>The maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>Not used. Always returns 0.</summary>
      <returns>Always 0.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>Gets or sets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>Gets or sets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</summary>
      <returns>The type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>Gets or sets the version number of the header format.</summary>
      <returns>The version number of the header format.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>Specifies the type of color data in the system palette. The data can be color data with alpha, grayscale data only, or halftone data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>Alpha data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>Grayscale data.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>Halftone data.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>Specifies the format of the color data for each pixel in the image.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>The pixel data contains color-indexed values, which means the values are an index to colors in the system color table, as opposed to individual color values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>The pixel data contains GDI colors.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>The pixel data contains alpha values that are not premultiplied.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>The pixel format contains premultiplied alpha values.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>Reserved.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>The default pixel format of 32 bits per pixel. The format specifies 24-bit color depth and an 8-bit alpha channel.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>The pixel format is undefined.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>No pixel format is specified.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>Specifies that the pixel format is 1 bit per pixel and that it uses indexed color. The color table therefore has two colors in it.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>Specifies that the format is 4 bits per pixel, indexed.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>Specifies that the format is 8 bits per pixel, indexed. The color table therefore has 256 colors in it.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>The pixel format is 16 bits per pixel. The color information specifies 65536 shades of gray.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>Specifies that the format is 16 bits per pixel; 5 bits each are used for the red, green, and blue components. The remaining bit is not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>Specifies that the format is 16 bits per pixel; 5 bits are used for the red component, 6 bits are used for the green component, and 5 bits are used for the blue component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>The pixel format is 16 bits per pixel. The color information specifies 32,768 shades of color, of which 5 bits are red, 5 bits are green, 5 bits are blue, and 1 bit is alpha.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>Specifies that the format is 24 bits per pixel; 8 bits each are used for the red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the red, green, and blue components. The remaining 8 bits are not used.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied, according to the alpha component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>Specifies that the format is 48 bits per pixel; 16 bits each are used for the red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component.</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>The maximum value for this enumeration.</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>This delegate is not used. For an example of enumerating the records of a metafile, see <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />.</summary>
      <param name="recordType">Not used. </param>
      <param name="flags">Not used. </param>
      <param name="dataSize">Not used. </param>
      <param name="recordData">Not used. </param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>Encapsulates a metadata property to be included in an image file. Not inheritable.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>Gets or sets the ID of the property.</summary>
      <returns>The integer that represents the ID of the property.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>Gets or sets the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
      <returns>An integer that represents the length (in bytes) of the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> byte array.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>Gets or sets an integer that defines the type of data contained in the <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> property.</summary>
      <returns>An integer that defines the type of data contained in <see cref="P:System.Drawing.Imaging.PropertyItem.Value" />.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>Gets or sets the value of the property item.</summary>
      <returns>A byte array that represents the value of the property item.</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>Defines a placeable metafile. Not inheritable.</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>Initializes a new instance of the WmfPlaceableFileHeader class.</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>Gets or sets the y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>Gets or sets the x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>Gets or sets the x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>Gets or sets the y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</summary>
      <returns>The y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>Gets or sets the checksum value for the previous ten WORD s in the header.</summary>
      <returns>The checksum value for the previous ten WORD s in the header.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>Gets or sets the handle of the metafile in memory.</summary>
      <returns>The handle of the metafile in memory.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>Gets or sets the number of twips per inch.</summary>
      <returns>The number of twips per inch.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>Gets or sets a value indicating the presence of a placeable metafile header.</summary>
      <returns>A value indicating presence of a placeable metafile header.</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>Reserved. Do not use.</summary>
      <returns>Reserved. Do not use.</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>Specifies the printer's duplex setting.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>The printer's default duplex setting.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>Single-sided printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>Double-sided, horizontal printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>Double-sided, vertical printing.</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>Represents the exception that is thrown when you try to access a printer using printer settings that are not valid.</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class.</summary>
      <param name="settings">A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that specifies the settings for a printer. </param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is 0. </exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Overridden. Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>Specifies the dimensions of the margins of a printed page.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with 1-inch wide margins.</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with the specified left, right, top, and bottom margins.</summary>
      <param name="left">The left margin, in hundredths of an inch. </param>
      <param name="right">The right margin, in hundredths of an inch. </param>
      <param name="top">The top margin, in hundredths of an inch. </param>
      <param name="bottom">The bottom margin, in hundredths of an inch. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="left" /> parameter value is less than 0.-or- The <paramref name="right" /> parameter value is less than 0.-or- The <paramref name="top" /> parameter value is less than 0.-or- The <paramref name="bottom" /> parameter value is less than 0. </exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>Gets or sets the bottom margin, in hundredths of an inch.</summary>
      <returns>The bottom margin, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Bottom" /> property is set to a value that is less than 0. </exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>Retrieves a duplicate of this object, member by member.</summary>
      <returns>A duplicate of this object.</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>Compares this <see cref="T:System.Drawing.Printing.Margins" /> to the specified <see cref="T:System.Object" /> to determine whether they have the same dimensions.</summary>
      <returns>true if the specified object is a <see cref="T:System.Drawing.Printing.Margins" /> and has the same <see cref="P:System.Drawing.Printing.Margins.Top" />, <see cref="P:System.Drawing.Printing.Margins.Bottom" />, <see cref="P:System.Drawing.Printing.Margins.Right" /> and <see cref="P:System.Drawing.Printing.Margins.Left" /> values as this <see cref="T:System.Drawing.Printing.Margins" />; otherwise, false.</returns>
      <param name="obj">The object to which to compare this <see cref="T:System.Drawing.Printing.Margins" />. </param>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>Calculates and retrieves a hash code based on the width of the left, right, top, and bottom margins.</summary>
      <returns>A hash code based on the left, right, top, and bottom margins.</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>Gets or sets the left margin width, in hundredths of an inch.</summary>
      <returns>The left margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Left" /> property is set to a value that is less than 0. </exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine if they have the same dimensions.</summary>
      <returns>true to indicate the <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" />, and <see cref="P:System.Drawing.Printing.Margins.Bottom" /> properties of both margins have the same value; otherwise, false.</returns>
      <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
      <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for equality.</param>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine whether they are of unequal width.</summary>
      <returns>true to indicate if the <see cref="P:System.Drawing.Printing.Margins.Left" />, <see cref="P:System.Drawing.Printing.Margins.Right" />, <see cref="P:System.Drawing.Printing.Margins.Top" />, or <see cref="P:System.Drawing.Printing.Margins.Bottom" /> properties of both margins are not equal; otherwise, false.</returns>
      <param name="m1">The first <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
      <param name="m2">The second <see cref="T:System.Drawing.Printing.Margins" /> to compare for inequality.</param>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>Gets or sets the right margin width, in hundredths of an inch.</summary>
      <returns>The right margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Right" /> property is set to a value that is less than 0. </exception>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>Gets or sets the top margin width, in hundredths of an inch.</summary>
      <returns>The top margin width, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.Margins.Top" /> property is set to a value that is less than 0. </exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>Converts the <see cref="T:System.Drawing.Printing.Margins" /> to a string.</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:System.Drawing.Printing.Margins" />. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>Provides a <see cref="T:System.Drawing.Printing.MarginsConverter" /> for <see cref="T:System.Drawing.Printing.Margins" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.MarginsConverter" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of the specified source type to the native type of the converter using the specified context.</summary>
      <returns>true if an object can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type from which you want to convert. </param>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object to the given destination type using the context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to which you want to convert. </param>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the converter's native type.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> does not contain values for all four margins. For example, "100,100,100,100" specifies 1 inch for the left, right, top, and bottom margins. </exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified destination type using the specified context and arguments.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to which to convert the value. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Creates an <see cref="T:System.Object" /> given a set of property values for the object.</summary>
      <returns>An <see cref="T:System.Object" /> representing the specified <see cref="T:System.Collections.IDictionary" />, or null if the object cannot be created.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether changing a value on this object requires a call to the <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> method to create a new value, using the specified context.</summary>
      <returns>true if changing a property on this object requires a call to <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new value; otherwise, false. This method always returns true.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>Specifies settings that apply to a single, printed page.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using the default printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using a specified printer.</summary>
      <param name="printerSettings">The <see cref="T:System.Drawing.Printing.PrinterSettings" /> that describes the printer to use. </param>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>Gets the size of the page, taking into account the page orientation specified by the <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> property.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the length and width, in hundredths of an inch, of the page.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>Creates a copy of this <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
      <returns>A copy of this object.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>Gets or sets a value indicating whether the page should be printed in color.</summary>
      <returns>true if the page should be printed in color; otherwise, false. The default is determined by the printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>Copies the relevant information from the <see cref="T:System.Drawing.Printing.PageSettings" /> to the specified DEVMODE structure.</summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure. </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>Gets the x-coordinate, in hundredths of an inch, of the hard margin at the left of the page.</summary>
      <returns>The x-coordinate, in hundredths of an inch, of the left-hand hard margin.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>Gets the y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</summary>
      <returns>The y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</summary>
      <returns>true if the page should be printed in landscape orientation; otherwise, false. The default is determined by the printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>Gets or sets the margins for this page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the margins, in hundredths of an inch, for the page. The default is 1-inch margins on all sides.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>Gets or sets the paper size for the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PaperSize" /> that represents the size of the paper. The default is the printer's default paper size.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>Gets or sets the page's paper source; for example, the printer's upper tray.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PaperSource" /> that specifies the source of the paper. The default is the printer's default paper source.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>Gets the bounds of the printable area of the page for the printer.</summary>
      <returns>A <see cref="T:System.Drawing.RectangleF" /> representing the length and width, in hundredths of an inch, of the area the printer is capable of printing in.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>Gets or sets the printer resolution for the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterResolution" /> that specifies the printer resolution for the page. The default is the printer's default resolution.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>Gets or sets the printer settings associated with the page.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that represents the printer settings associated with the page.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>Copies relevant information to the <see cref="T:System.Drawing.Printing.PageSettings" /> from the specified DEVMODE structure.</summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure. </param>
      <exception cref="T:System.ArgumentException">The printer handle is not valid. </exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist or there is no default printer installed. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>Converts the <see cref="T:System.Drawing.Printing.PageSettings" /> to string form.</summary>
      <returns>A string showing the various property settings for the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>Specifies the standard paper sizes.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>The paper size is defined by the user.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>Letter paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Legal paper (8.5 in. by 14 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C paper (17 in. by 22 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D paper (22 in. by 34 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E paper (34 in. by 44 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter small paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid paper (11 in. by 17 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger paper (17 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>Statement paper (5.5 in. by 8.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive paper (7.25 in. by 10.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 paper (297 mm by 420 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 small paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 paper (148 mm by 210 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 paper (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 paper (176 mm by 250 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>Folio paper (8.5 in. by 13 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>Quarto paper (215 mm by 275 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>Standard paper (10 in. by 14 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>Standard paper (11 in. by 17 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>Note paper (8.5 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 envelope (3.875 in. by 8.875 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 envelope (4.125 in. by 9.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 envelope (4.5 in. by 10.375 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 envelope (4.75 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 envelope (5 in. by 11.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL envelope (110 mm by 220 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 envelope (162 mm by 229 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 envelope (324 mm by 458 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 envelope (229 mm by 324 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 envelope (114 mm by 162 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 envelope (114 mm by 229 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 envelope (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 envelope (176 mm by 250 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 envelope (176 mm by 125 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>Italy envelope (110 mm by 230 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>Monarch envelope (3.875 in. by 7.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 envelope (3.625 in. by 6.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>US standard fanfold (14.875 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>German standard fanfold (8.5 in. by 12 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>German legal fanfold (8.5 in. by 13 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4 (250 mm by 353 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>Japanese postcard (100 mm by 148 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>Standard paper (9 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>Standard paper (10 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>Standard paper (15 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>Invitation envelope (220 mm by 220 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript driver and is used only by Linotronic printers to help save paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter transverse paper (8.275 in. by 11 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 transverse paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter extra transverse paper (9.275 in. by 12 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 paper (227 mm by 356 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 paper (305 mm by 487 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter plus paper (8.5 in. by 12.69 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 plus paper (210 mm by 330 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 transverse paper (148 mm by 210 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 transverse paper (182 mm by 257 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 extra paper (322 mm by 445 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 extra paper (174 mm by 235 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 extra paper (201 mm by 276 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 paper (420 mm by 594 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 transverse paper (297 mm by 420 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 extra transverse paper (322 mm by 445 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>Japanese double postcard (200 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 paper (105 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>Japanese Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>Japanese Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>Japanese Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter rotated paper (11 in. by 8.5 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 rotated paper (420 mm by 297 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 rotated paper (297 mm by 210 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 rotated paper (210 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 rotated paper (364 mm by 257 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 rotated paper (257 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>Japanese rotated postcard (148 mm by 100 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>Japanese rotated double postcard (148 mm by 200 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 rotated paper (148 mm by 105 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>Japanese rotated Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>Japanese rotated Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>Japanese rotated Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>Japanese rotated Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 paper (128 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 rotated paper (182 mm by 128 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>Standard paper (12 in. by 11 in.). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>Japanese You #4 envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>Japanese You #4 rotated envelope. Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>People's Republic of China 16K paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>People's Republic of China 32K paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>People's Republic of China 32K big paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>People's Republic of China #1 envelope (102 mm by 165 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>People's Republic of China #2 envelope (102 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>People's Republic of China #3 envelope (125 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>People's Republic of China #4 envelope (110 mm by 208 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>People's Republic of China #7 envelope (160 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>People's Republic of China #8 envelope (120 mm by 309 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>People's Republic of China #10 envelope (324 mm by 458 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>People's Republic of China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>People's Republic of China 32K rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>People's Republic of China 32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>People's Republic of China #2 rotated envelope (176 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>People's Republic of China #3 rotated envelope (176 mm by 125 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>People's Republic of China #8 rotated envelope (309 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>People's Republic of China #10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>Specifies the size of a piece of paper.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSize" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSize" /> class.</summary>
      <param name="name">The name of the paper. </param>
      <param name="width">The width of the paper, in hundredths of an inch. </param>
      <param name="height">The height of the paper, in hundredths of an inch. </param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>Gets or sets the height of the paper, in hundredths of an inch.</summary>
      <returns>The height of the paper, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>Gets the type of paper.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PaperKind" /> values.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>Gets or sets the name of the type of paper.</summary>
      <returns>The name of the type of paper.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>Gets or sets an integer representing one of the <see cref="T:System.Drawing.Printing.PaperSize" /> values or a custom value.</summary>
      <returns>An integer representing one of the <see cref="T:System.Drawing.Printing.PaperSize" /> values, or a custom value.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PaperSize" /> in string form.</summary>
      <returns>A string.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>Gets or sets the width of the paper, in hundredths of an inch.</summary>
      <returns>The width of the paper, in hundredths of an inch.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> property is not set to <see cref="F:System.Drawing.Printing.PaperKind.Custom" />. </exception>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>Specifies the paper tray from which the printer gets paper.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PaperSource" /> class. </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>Gets the paper source.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>Gets or sets the integer representing one of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values or a custom value.</summary>
      <returns>The integer value representing one of the <see cref="T:System.Drawing.Printing.PaperSourceKind" /> values or a custom value. </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>Gets or sets the name of the paper source.</summary>
      <returns>The name of the paper source.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PaperSource" /> in string form.</summary>
      <returns>A string.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>Standard paper sources.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>The upper bin of a printer (or the default bin, if the printer only has one bin).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>The lower bin of a printer.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>The middle bin of a printer.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>Manually fed paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>An envelope.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>Manually fed envelope.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>Automatically fed paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>A tractor feed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>Small-format paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>Large-format paper.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>The printer's large-capacity bin.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>A paper cassette.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>The printer's default input bin.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>A printer-specific paper source.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>Specifies print preview information for a single page. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> class.</summary>
      <param name="image">The image of the printed page. </param>
      <param name="physicalSize">The size of the printed page, in hundredths of an inch. </param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>Gets the image of the printed page.</summary>
      <returns>An <see cref="T:System.Drawing.Image" /> representing the printed page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>Gets the size of the printed page, in hundredths of an inch.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that specifies the size of the printed page, in hundredths of an inch.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>Specifies a print controller that displays a document on a screen as a series of images.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPrintController" /> class.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>Captures the pages of a document as a series of images.</summary>
      <returns>An array of type <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> that contains the pages of a <see cref="T:System.Drawing.Printing.PrintDocument" /> as a series of images.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>Gets a value indicating whether this controller is used for print preview. </summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Completes the control sequence that determines when and how to preview a page in a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document. </param>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Completes the control sequence that determines when and how to preview a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to preview the print document. </param>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Begins the control sequence that determines when and how to preview a page in a print document.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> property of this parameter will be null. The value returned from this method will be used to set this property. </param>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Begins the control sequence that determines when and how to preview a print document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document. </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>Gets or sets a value indicating whether to use anti-aliasing when displaying the print preview.</summary>
      <returns>true if the print preview uses anti-aliasing; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>Specifies the type of print operation occurring.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>The print operation is printing to a file.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>The print operation is a print preview.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>The print operation is printing to a printer.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>Controls how a document is printed, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintController" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>Gets a value indicating whether the <see cref="T:System.Drawing.Printing.PrintController" /> is used for print preview.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>When overridden in a derived class, completes the control sequence that determines when and how to print a page of a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>When overridden in a derived class, completes the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>When overridden in a derived class, begins the control sequence that determines when and how to print a page of a document.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>When overridden in a derived class, begins the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data. </param>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>Defines a reusable object that sends output to a printer, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintDocument" /> class.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>Occurs when the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>Gets or sets page settings that are used as defaults for all pages to be printed.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PageSettings" /> that specifies the default page settings for the document.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>Gets or sets the document name to display (for example, in a print status dialog box or printer queue) while printing the document.</summary>
      <returns>The document name to display while printing the document. The default is "document".</returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>Occurs when the last page of the document has printed.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> event. It is called after the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and before the first page of the document prints.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event. It is called when the last page of the document has printed.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event. It is called before a page prints.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event. It is called immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>Gets or sets a value indicating whether the position of a graphics object associated with a page is located just inside the user-specified margins or at the top-left corner of the printable area of the page.</summary>
      <returns>true if the graphics origin starts at the page margins; false if the graphics origin is at the top-left corner of the printable page. The default is false.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>Starts the document's printing process.</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>Gets or sets the print controller that guides the printing process.</summary>
      <returns>The <see cref="T:System.Drawing.Printing.PrintController" /> that guides the printing process. The default is a new instance of the <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> class.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>Gets or sets the printer that prints the document.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> that specifies where and how the document is printed. The default is a <see cref="T:System.Drawing.Printing.PrinterSettings" /> with its properties set to their default values.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>Occurs when the output to print for the current page is needed.</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>Occurs immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>Provides information about the print document, in string form.</summary>
      <returns>A string.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>Represents the resolution supported by a printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> class. </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>Gets or sets the printer resolution.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not a member of the <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> enumeration.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>This member overrides the <see cref="M:System.Object.ToString" /> method.</summary>
      <returns>A <see cref="T:System.String" /> that contains information about the <see cref="T:System.Drawing.Printing.PrinterResolution" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>Gets the horizontal printer resolution, in dots per inch.</summary>
      <returns>The horizontal printer resolution, in dots per inch, if <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> is set to <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />; otherwise, a dmPrintQuality value.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>Gets the vertical printer resolution, in dots per inch.</summary>
      <returns>The vertical printer resolution, in dots per inch.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>Specifies a printer resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>High resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>Medium resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>Low resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>Draft-quality resolution.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>Custom resolution.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>Specifies information about how a document is printed, including the printer that prints it, when printing from a Windows Forms application.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>Gets a value indicating whether the printer supports double-sided printing.</summary>
      <returns>true if the printer supports double-sided printing; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>Creates a copy of this <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <returns>A copy of this object.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>Gets or sets a value indicating whether the printed document is collated.</summary>
      <returns>true if the printed document is collated; otherwise, false. The default is false.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>Gets or sets the number of copies of the document to print.</summary>
      <returns>The number of copies to print. The default is 1.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> property is less than zero. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information that is useful when creating a <see cref="T:System.Drawing.Printing.PrintDocument" />. </summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains information from a printer.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information, optionally specifying the origin at the margins.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
      <param name="honorOriginAtMargins">true to indicate the origin at the margins; otherwise, false. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information associated with the specified <see cref="T:System.Drawing.Printing.PageSettings" />.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> to retrieve a graphics object for.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>Creates a <see cref="T:System.Drawing.Graphics" /> associated with the specified page settings and optionally specifying the origin at the margins.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> that contains printer information from the <see cref="T:System.Drawing.Printing.PageSettings" />.</returns>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> to retrieve a <see cref="T:System.Drawing.Graphics" /> object for.</param>
      <param name="honorOriginAtMargins">true to specify the origin at the margins; otherwise, false. </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>Gets the default page settings for this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PageSettings" /> that represents the default page settings for this printer.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>Gets or sets the printer setting for double-sided printing.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.Duplex" /> values. The default is determined by the printer.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> property is not one of the <see cref="T:System.Drawing.Printing.Duplex" /> values. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>Gets or sets the page number of the first page to print.</summary>
      <returns>The page number of the first page to print.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> property's value is less than zero. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>Creates a handle to a DEVMODE structure that corresponds to the printer settings.</summary>
      <returns>A handle to a DEVMODE structure.</returns>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The printer's initialization information could not be retrieved. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>Creates a handle to a DEVMODE structure that corresponds to the printer and the page settings specified through the <paramref name="pageSettings" /> parameter.</summary>
      <returns>A handle to a DEVMODE structure.</returns>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> object that the DEVMODE structure's handle corresponds to. </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property does not exist. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The printer's initialization information could not be retrieved. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>Creates a handle to a DEVNAMES structure that corresponds to the printer settings.</summary>
      <returns>A handle to a DEVNAMES structure.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>Gets the names of all printers installed on the computer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> that represents the names of all printers installed on the computer.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">The available printers could not be enumerated. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates the default printer, except when the user explicitly sets <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />.</summary>
      <returns>true if <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> designates the default printer; otherwise, false.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>Gets a value indicating whether the printer supports printing the specified image file.</summary>
      <returns>true if the printer supports printing the specified image; otherwise, false.</returns>
      <param name="image">The image to print.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>Returns a value indicating whether the printer supports printing the specified image format.</summary>
      <returns>true if the printer supports printing the specified image format; otherwise, false.</returns>
      <param name="imageFormat">An <see cref="T:System.Drawing.Imaging.ImageFormat" /> to print.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>Gets a value indicating whether the printer is a plotter.</summary>
      <returns>true if the printer is a plotter; false if the printer is a raster.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates a valid printer.</summary>
      <returns>true if the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates a valid printer; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>Gets the angle, in degrees, that the portrait orientation is rotated to produce the landscape orientation.</summary>
      <returns>The angle, in degrees, that the portrait orientation is rotated to produce the landscape orientation.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>Gets the maximum number of copies that the printer enables the user to print at a time.</summary>
      <returns>The maximum number of copies that the printer enables the user to print at a time.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>Gets or sets the maximum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
      <returns>The maximum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> property is less than zero. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>Gets or sets the minimum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</summary>
      <returns>The minimum <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> or <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> that can be selected in a <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> property is less than zero. </exception>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>Gets the paper sizes that are supported by this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> that represents the paper sizes that are supported by this printer.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>Gets the paper source trays that are available on the printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> that represents the paper source trays that are available on this printer.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>Gets or sets the name of the printer to use.</summary>
      <returns>The name of the printer to use.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>Gets all the resolutions that are supported by this printer.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> that represents the resolutions that are supported by this printer.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>Gets or sets the file name, when printing to a file.</summary>
      <returns>The file name, when printing to a file.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>Gets or sets the page numbers that the user has specified to be printed.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrintRange" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> property is not one of the <see cref="T:System.Drawing.Printing.PrintRange" /> values. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>Gets or sets a value indicating whether the printing output is sent to a file instead of a port.</summary>
      <returns>true if the printing output is sent to a file; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>Copies the relevant information out of the given handle and into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure. </param>
      <exception cref="T:System.ArgumentException">The printer handle is not valid. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>Copies the relevant information out of the given handle and into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</summary>
      <param name="hdevnames">The handle to a Win32 DEVNAMES structure. </param>
      <exception cref="T:System.ArgumentException">The printer handle is invalid. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>Gets a value indicating whether this printer supports color printing.</summary>
      <returns>true if this printer supports color; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>Gets or sets the number of the last page to print.</summary>
      <returns>The number of the last page to print.</returns>
      <exception cref="T:System.ArgumentException">The value of the <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> property is less than zero. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>Provides information about the <see cref="T:System.Drawing.Printing.PrinterSettings" /> in string form.</summary>
      <returns>A string.</returns>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PaperSize" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSize" />. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>Adds a <see cref="T:System.Drawing.Printing.PrinterResolution" /> to the end of the collection.</summary>
      <returns>The zero-based index of the newly added item.</returns>
      <param name="paperSize">The <see cref="T:System.Drawing.Printing.PaperSize" /> to add to the collection.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="paperSizes">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>Gets the number of different paper sizes in the collection.</summary>
      <returns>The number of different paper sizes in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PaperSize" /> at a specified index.</summary>
      <returns>The <see cref="T:System.Drawing.Printing.PaperSize" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSize" /> to get. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based array that receives the items copied from the collection.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An enumerator associated with the collection.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PaperSource" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSource" />. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>Adds the specified <see cref="T:System.Drawing.Printing.PaperSource" /> to end of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</summary>
      <returns>The zero-based index where the <see cref="T:System.Drawing.Printing.PaperSource" /> was added.</returns>
      <param name="paperSource">The <see cref="T:System.Drawing.Printing.PaperSource" /> to add to the collection.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="paperSources">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>Gets the number of different paper sources in the collection.</summary>
      <returns>The number of different paper sources in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PaperSource" /> at a specified index.</summary>
      <returns>The <see cref="T:System.Drawing.Printing.PaperSource" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSource" /> to get. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The destination array for the contents of the collection.</param>
      <param name="index">The index at which to start the copy operation.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>Contains a collection of <see cref="T:System.Drawing.Printing.PrinterResolution" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PrinterResolution" />. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>Adds a <see cref="T:System.Drawing.Printing.PrinterResolution" /> to the end of the collection.</summary>
      <returns>The zero-based index of the newly added item.</returns>
      <param name="printerResolution">The <see cref="T:System.Drawing.Printing.PrinterResolution" /> to add to the collection.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> to the specified array, starting at the specified index.</summary>
      <param name="printerResolutions">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>Gets the number of available printer resolutions in the collection.</summary>
      <returns>The number of available printer resolutions in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Drawing.Printing.PrinterResolution" /> at a specified index.</summary>
      <returns>The <see cref="T:System.Drawing.Printing.PrinterResolution" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> to get. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The index at which to start the copy operation.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>Contains a collection of <see cref="T:System.String" /> objects.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> class.</summary>
      <param name="array">An array of type <see cref="T:System.String" />. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>Adds a string to the end of the collection.</summary>
      <returns>The zero-based index of the newly added item.</returns>
      <param name="value">The string to add to the collection.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the contents of the current <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> to the specified array, starting at the specified index</summary>
      <param name="strings">A zero-based array that receives the items copied from the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</param>
      <param name="index">The index at which to start copying items.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>Gets the number of strings in the collection.</summary>
      <returns>The number of strings in the collection.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.String" /> at a specified index.</summary>
      <returns>The <see cref="T:System.String" /> at the specified index.</returns>
      <param name="index">The index of the <see cref="T:System.String" /> to get. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The array for items to be copied to.</param>
      <param name="index">The starting index.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>Specifies several of the units of measure used for printing.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>The default unit (0.01 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>One-thousandth of an inch (0.001 in.).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>One-hundredth of a millimeter (0.01 mm).</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>One-tenth of a millimeter (0.1 mm).</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>Specifies a series of conversion methods that are useful when interoperating with the Win32 printing API. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a double-precision floating-point number from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A double-precision floating-point number that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Point" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Printing.Margins" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Printing.Margins" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Rectangle" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Rectangle" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a <see cref="T:System.Drawing.Size" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Size" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>Converts a 32-bit signed integer from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</summary>
      <returns>A 32-bit signed integer that represents the converted <see cref="T:System.Drawing.Printing.PrinterUnit" />.</returns>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted. </param>
      <param name="fromUnit">The unit to convert from. </param>
      <param name="toUnit">The unit to convert to. </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> and <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> events.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintEventArgs" /> class.</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>Returns <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> in all cases.</summary>
      <returns>
        <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" /> in all cases.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> or <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>Controls access to printers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with the level of printing access specified.</summary>
      <param name="printingLevel">One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with either fully restricted or unrestricted access, as specified.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" />. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="esd">The XML encoding to use to reconstruct the security object. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>Creates and returns a permission that is the intersection of the current permission object and a target permission object.</summary>
      <returns>A new permission object that represents the intersection of the current object and the specified target. This object is null if the intersection is empty.</returns>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is an object that is not of the same type as the current permission object. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determines whether the current permission object is a subset of the specified permission.</summary>
      <returns>true if the current permission object is a subset of <paramref name="target" />; otherwise, false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is an object that is not of the same type as the current permission object. </exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>Gets a value indicating whether the permission is unrestricted.</summary>
      <returns>true if permission is unrestricted; otherwise, false.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>Gets or sets the code's level of printing access.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>Creates a permission that combines the permission object and the target permission object.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is an object that is not of the same type as the current permission object. </exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>Allows declarative printing permission checks.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>Creates the permission based on the requested access levels, which are set through the <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> property on the attribute.</summary>
      <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>Gets or sets the type of printing allowed.</summary>
      <returns>One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</returns>
      <exception cref="T:System.ArgumentException">The value is not one of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values. </exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>Specifies the type of printing that code is allowed to do.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>Prevents access to printers. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>Provides printing only from a restricted dialog box. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>Provides printing programmatically to the default printer, along with safe printing through semirestricted dialog box. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>Provides full access to all printers.</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> class.</summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the item. </param>
      <param name="marginBounds">The area between the margins. </param>
      <param name="pageBounds">The total area of the paper. </param>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> for the page. </param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the print job should be canceled.</summary>
      <returns>true if the print job should be canceled; otherwise, false.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>Gets the <see cref="T:System.Drawing.Graphics" /> used to paint the page.</summary>
      <returns>The <see cref="T:System.Drawing.Graphics" /> used to paint the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>Gets or sets a value indicating whether an additional page should be printed.</summary>
      <returns>true if an additional page should be printed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>Gets the rectangular area that represents the portion of the page inside the margins.</summary>
      <returns>The rectangular area, measured in hundredths of an inch, that represents the portion of the page inside the margins. </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>Gets the rectangular area that represents the total area of the page.</summary>
      <returns>The rectangular area that represents the total area of the page.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>Gets the page settings for the current page.</summary>
      <returns>The page settings for the current page.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>Specifies the part of the document to print.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>All pages are printed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>The pages between <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> and <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> are printed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>The selected pages are printed.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>The currently displayed page is printed</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event.</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> class.</summary>
      <param name="pageSettings">The page settings for the page to be printed. </param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>Gets or sets the page settings for the page to be printed.</summary>
      <returns>The page settings for the page to be printed.</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>Specifies a print controller that sends information to a printer.</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.StandardPrintController" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Completes the control sequence that determines when and how to print a page of a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not finish writing to a page. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Completes the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not complete the print job.-or- The native Win32 API could not delete the specified device context (DC). </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Begins the control sequence that determines when and how to print a page in a document.</summary>
      <returns>A <see cref="T:System.Drawing.Graphics" /> object that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</returns>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to print a page in the document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> property of this parameter will be null. The value returned from the <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> method will be used to set this property. </param>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not prepare the printer driver to accept data.-or- The native Win32 API could not update the specified printer or plotter device context (DC) using the specified information. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>Begins the control sequence that determines when and how to print a document.</summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed. </param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document. </param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer settings are not valid. </exception>
      <exception cref="T:System.ComponentModel.Win32Exception">The native Win32 Application Programming Interface (API) could not start a print job. </exception>
      <PermissionSet>
        <IPermission class="System.Drawing.Printing.PrintingPermission, System.Drawing, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>Provides a base class for installed and private font collections. </summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Text.FontCollection" />.</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Drawing.Text.FontCollection" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>Gets the array of <see cref="T:System.Drawing.FontFamily" /> objects associated with this <see cref="T:System.Drawing.Text.FontCollection" />. </summary>
      <returns>An array of <see cref="T:System.Drawing.FontFamily" /> objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize"></member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>Specifies a generic <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>A generic Serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>A generic Sans Serif <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>A generic Monospace <see cref="T:System.Drawing.FontFamily" /> object.</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>Specifies the type of display for hot-key prefixes that relate to text.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>No hot-key prefix.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>Display the hot-key prefix.</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>Do not display the hot-key prefix.</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>Represents the fonts installed on the system. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Text.InstalledFontCollection" /> class. </summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>Provides a collection of font families built from font files that are provided by the client application.</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Text.PrivateFontCollection" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>Adds a font from the specified file to this <see cref="T:System.Drawing.Text.PrivateFontCollection" />. </summary>
      <param name="filename">A <see cref="T:System.String" /> that contains the file name of the font to add. </param>
      <exception cref="T:System.IO.FileNotFoundException">The specified font is not supported or the font file cannot be found.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>Adds a font contained in system memory to this <see cref="T:System.Drawing.Text.PrivateFontCollection" />.</summary>
      <param name="memory">The memory address of the font to add. </param>
      <param name="length">The memory length of the font to add. </param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>Specifies the quality of text rendering.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>Each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font-smoothing settings the user has selected for the system.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>Each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>Each character is drawn using its glyph bitmap. Hinting is not used.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>Each character is drawn using its antialiased glyph bitmap with hinting. Much better quality due to antialiasing, but at a higher performance cost.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>Each character is drawn using its antialiased glyph bitmap without hinting. Better quality due to antialiasing. Stem width differences may be noticeable because hinting is turned off.</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>Each character is drawn using its glyph ClearType bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Management.Instrumentation.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management.Instrumentation</name>
  </assembly>
  <members>
    <member name="T:System.Management.Instrumentation.DefaultManagementInstaller">
      <summary>Installs an instrumented assembly. To use this default project installer, simply derive a class from <see cref="T:System.Management.Instrumentation.DefaultManagementInstaller" /> inside the assembly. No methods need to be overridden.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.DefaultManagementInstaller" /> class. This is the default constructor.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationManager">
      <summary>Provides methods that manage the lifetime and the model used for decoupled providers.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.Publish(System.Object)">
      <summary>Makes an instance of a provider available within the WMI infrastructure.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Registers an assembly with the WMI infrastructure.</summary>
      <param name="managementAssembly"> The assembly to register.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.RegisterType(System.Type)">
      <summary>Registers a class with the WMI infrastructure.</summary>
      <param name="managementType">The type of the class.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.Revoke(System.Object)">
      <summary>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</summary>
      <param name="value"></param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly(System.Reflection.Assembly)">
      <summary>Unregisters an assembly currently registered with the WMI infrastructure.</summary>
      <param name="managementAssembly">The registered assembly to unregister.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationManager.UnregisterType(System.Type)">
      <summary>Unregisters a class registered with the WMI infrastructure.</summary>
      <param name="managementType">The registered type to unregister.</param>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedCommonProvider">
      <summary>The class is used internally by the WMI.NET Provider Extensions infrastructure.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor">
      <summary>This is the default constructor for <see cref="T:System.Management.Instrumentation.ManagedCommonProvider" /> which is used internally by the WMI.NET Provider Extensions infrastructure.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementQualifierAttribute">
      <summary>The ManagementQualifier attribute contains additional WMI provider-related information about an associated WMI class, instance, property, field or method.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementQualifierAttribute.#ctor(System.String)">
      <summary>Creates an instance of the ManagementQualifierAttribute.</summary>
      <param name="name"> Name of the qualifier.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor">
      <summary>Flavor of the attribute.</summary>
      <returns>Returns a ManagementQualifierFlavor that indicates the flavor of the qualifier.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name">
      <summary>Name of the qualifier.</summary>
      <returns>Returns a string containing the name of the qualifier.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value">
      <summary>Value associated with the qualifier.</summary>
      <returns>Returns an object that represents the value of the qualifier.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementQualifierFlavors">
      <summary>Qualifier flavors that can be used with WMI provider extensions.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.Amended">
      <summary>The qualifier is not required in the basic class definition and can be moved to the amendment to be localized.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.DisableOverride">
      <summary>The qualifier cannot be overridden in a derived class or instance. Note that being able to override a propagated qualifier is the default.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.ClassOnly">
      <summary>The qualifier is propagated to instances.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.ManagementQualifierFlavors.ThisClassOnly">
      <summary>The qualifier is not propagated to derived classes.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.WmiProviderInstallationException">
      <summary>Represents an exception to throw when WMI provider installation fails.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor">
      <summary>Initializes a new instance of the class. This is the default constructor.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the class with serialization information.</summary>
      <param name="info">The data that is required to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String)">
      <summary>Initializes a new instance of the class with a message that describes the exception.</summary>
      <param name="message"> Message that describes the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new class with the specified string and exception.</summary>
      <param name="message">Message that describes the exception.</param>
      <param name="innerException">The Exception instance that caused the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.IO.Log.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Log</name>
  </assembly>
  <members>
    <member name="T:System.IO.Log.FileRecordSequence">
      <summary>Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file. </summary>
      <param name="path">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate. </param>
      <exception cref="T:System.ArgumentException">The file specified by <paramref name="path" /> is not valid.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by <paramref name="path" /> cannot be found.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</summary>
      <param name="path">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</param>
      <param name="access">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</param>
      <exception cref="T:System.ArgumentException">The file specified by <paramref name="path" /> is not valid.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by <paramref name="path" /> cannot be found.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</summary>
      <param name="path">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</param>
      <param name="access">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</param>
      <param name="size">The size of the log file to be opened.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the parameters are out of the valid range.</exception>
      <exception cref="T:System.ArgumentException">The file specified by <paramref name="path" /> is not valid.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by <paramref name="path" /> cannot be found.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <summary>Moves the base sequence number of the log forward. This method cannot be inherited.</summary>
      <param name="newBaseSequenceNumber">The new base sequence number of the record sequence.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSequenceNumber" /> is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while modifying the sequence. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence..</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence..</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber">
      <summary>Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />. </summary>
      <returns>The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete.</param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous flush operation, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <param name="callback">An optional asynchronous callback, to be called when the flush is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous flush request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid.<paramref name="sequenceNumber" /> is not valid for this sequence. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous restart area write operation, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.-or-<paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous restart area write operation, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.-or-<paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.CreateReservationCollection">
      <summary>Creates a new <see cref="T:System.IO.Log.ReservationCollection" />. This method cannot be inherited.</summary>
      <returns>The newly created <see cref="T:System.IO.Log.ReservationCollection" />. </returns>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Dispose">
      <summary>Immediately releases the unmanaged resources used by an object.</summary>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)">
      <summary>Ends an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)">
      <summary>Ends an asynchronous flush operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <summary>Ends an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <summary>Ends an asynchronous restart area write operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the written log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Flush">
      <summary>Ensures that all appended records have been written. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <summary>Ensures that all appended records have been written. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sequenceNumber" /> is not valid for this sequence.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.LastSequenceNumber">
      <summary>Gets the sequence number which is greater than the last record appended.</summary>
      <returns>A sequence number which is greater than the last record appended. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.MaximumRecordLength">
      <summary>Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</summary>
      <returns>The size of the largest record that can be appended to or read from this sequence, in bytes. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <summary>Returns an enumerable collection of records in the sequence. This method cannot be inherited.</summary>
      <returns>An enumerable collection of records in the sequence. </returns>
      <param name="start">The sequence number of the first record where the reading starts.</param>
      <param name="logRecordEnum">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with write-only access.</exception>
      <exception cref="T:System.IO.IOException">The record sequence is corrupted.-or-The record was written with an incompatible version of the record sequence.</exception>
      <exception cref="T:System.InvalidOperationException">The enumeration has ended.-or-The enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.ReadRestartAreas">
      <summary>Returns an enumerable collection of the restart areas in the sequence. This method cannot be inherited.</summary>
      <returns>An enumerable collection of the restart areas in the sequence. </returns>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with write-only access.</exception>
      <exception cref="T:System.IO.IOException">The record sequence is corrupted.-or-The record was written with an incompatible version of the record sequence.</exception>
      <exception cref="T:System.InvalidOperationException">The enumeration has ended.-or-The enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>Automatically makes a single reservation and appends a record to the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservationCollection">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</param>
      <param name="reservations">The reservations to make, in bytes.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence..</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>Automatically makes a single reservation and appends a record to the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence..</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.ReservedBytes">
      <summary>Gets the total number of bytes that have been reserved. </summary>
      <returns>The total size of all reservations made in this record sequence.</returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber">
      <summary>Gets the sequence number of the most recently written restart area. </summary>
      <returns>The sequence number of the most recently written restart area. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.FileRecordSequence.RetryAppend">
      <summary>Gets or sets a value indicating whether or not appends are automatically retried if the log is full. </summary>
      <returns>true if appends are automatically retried if the log is full; otherwise, false. The default is true. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="E:System.IO.Log.FileRecordSequence.TailPinned">
      <summary>Occurs when the record sequence determines that the tail must be moved forward. This method cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.-or-<paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</param>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.-or-A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reservations" /> was not created by this record sequence.-or-<paramref name="newBaseSeqNum" /> is not valid for this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.IO.IOException">The request cannot be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="T:System.IO.Log.FileRegion">
      <summary>Represents a region of a file to be archived. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.IO.Log.FileRegion.FileLength">
      <summary>Gets the length of the file in bytes.</summary>
      <returns>The length of the file in bytes. </returns>
    </member>
    <member name="M:System.IO.Log.FileRegion.GetStream">
      <summary>Returns a stream that can be used to read the data to be archived.</summary>
      <returns>A stream that contains the data to be archived. </returns>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.NotSupportedException">The operation is not supported. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.FileRegion.Offset">
      <summary>Gets the offset into the file where the data begins.</summary>
      <returns>The offset into the file where the data begins.</returns>
    </member>
    <member name="P:System.IO.Log.FileRegion.Path">
      <summary>Gets the fully qualified location of the file containing this region.</summary>
      <returns>The fully qualified location of the file containing this region. </returns>
    </member>
    <member name="T:System.IO.Log.IRecordSequence">
      <summary>Provides a generic interface to a sequence of records. </summary>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <summary>Moves the base sequence number of the log forward. </summary>
      <param name="newBaseSequenceNumber">The new base sequence number of the record sequence.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSequenceNumber" /> is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newBaseSequenceNumber" /> is not active in the log.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while modifying the sequence. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.BaseSequenceNumber">
      <summary>When overridden in a derived class, gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.IRecordSequence" />. </summary>
      <returns>The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.IRecordSequence" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous append operation. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete.</param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousUndoRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <param name="callback">An optional asynchronous callback, to be called when the flush is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous flush request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous reserve and append operation. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous reserve and append operation. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.CreateReservationCollection">
      <summary>When overridden in a derived class, creates a new <see cref="T:System.IO.Log.ReservationCollection" />. </summary>
      <returns>The newly created <see cref="T:System.IO.Log.ReservationCollection" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)">
      <summary>When overridden in a derived class, ends an asynchronous append operation. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)">
      <summary>When overridden in a derived class, ends an asynchronous flush operation. </summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <summary>When overridden in a derived class, ends an asynchronous reserve and append operation. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <summary>When overridden in a derived class, ends an asynchronous restart area write operation. </summary>
      <returns>The sequence number of the written log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Flush">
      <summary>When overridden in a derived class, ensures that all appended records have been written. </summary>
      <returns>The sequence number of the last record written. </returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <summary>When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written. </summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.LastSequenceNumber">
      <summary>When overridden in a derived class, gets the sequence number which is greater than the last record appended. </summary>
      <returns>A sequence number which is greater than the last record appended. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.MaximumRecordLength">
      <summary>When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes. </summary>
      <returns>The size of the largest record that can be appended to or read from this sequence, in bytes. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <summary>When overridden in a derived class, returns an enumerable collection of records in the sequence. </summary>
      <returns>An enumerable collection of records in the sequence. </returns>
      <param name="start">The sequence number of the first record where the reading starts.</param>
      <param name="logRecordEnum">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while reading the record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.ReadRestartAreas">
      <summary>When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence. </summary>
      <returns>An enumerable collection of the restart areas in the sequence. </returns>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while reading the record. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservationCollection">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</param>
      <param name="reservations">The reservations to make, in bytes.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence. </summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.ReservedBytes">
      <summary>When overridden in a derived class, gets the total number of bytes that have been reserved. </summary>
      <returns>The total size of all reservations made in this record sequence.</returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.RestartSequenceNumber">
      <summary>When overridden in a derived class, gets the sequence number of the most recently written restart area. </summary>
      <returns>The sequence number of the most recently written restart area. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.IRecordSequence.RetryAppend">
      <summary>Gets or sets a value indicating whether appends are automatically retried if the log is full. </summary>
      <returns>true if appends are automatically retried if the log is full; otherwise, false. The default is true. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="E:System.IO.Log.IRecordSequence.TailPinned">
      <summary>Occurs when the record sequence determines that the tail must be moved forward. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />. </summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number.</param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />. </summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number. </summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number. </summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSequenceNumber">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="T:System.IO.Log.LogArchiveSnapshot">
      <summary>Represents a snapshot of the <see cref="T:System.IO.Log.LogStore" /> instance that can be used to generate an archive. </summary>
    </member>
    <member name="P:System.IO.Log.LogArchiveSnapshot.ArchiveRegions">
      <summary>Gets an enumerable collection of <see cref="T:System.IO.Log.FileRegion" /> instances containing the actual archival data.</summary>
      <returns>An enumerable collection of <see cref="T:System.IO.Log.FileRegion" /> instances containing the actual archival data.</returns>
    </member>
    <member name="P:System.IO.Log.LogArchiveSnapshot.ArchiveTail">
      <summary>Gets the sequence number of the <see cref="T:System.IO.Log.LogStore" /> archive tail at the time the snapshot was taken. </summary>
      <returns>The sequence number of the <see cref="T:System.IO.Log.LogStore" /> archive tail at the time the snapshot was taken. </returns>
    </member>
    <member name="P:System.IO.Log.LogArchiveSnapshot.BaseSequenceNumber">
      <summary>Gets the base sequence number of the <see cref="T:System.IO.Log.LogStore" /> at the time the snapshot was taken. </summary>
      <returns>The base sequence number of the <see cref="T:System.IO.Log.LogStore" /> at the time the snapshot was taken. </returns>
    </member>
    <member name="P:System.IO.Log.LogArchiveSnapshot.LastSequenceNumber">
      <summary>Gets the last sequence number of the <see cref="T:System.IO.Log.LogStore" /> at the time the snapshot was taken. </summary>
      <returns>The last sequence number of the <see cref="T:System.IO.Log.LogStore" /> at the time the snapshot was taken. </returns>
    </member>
    <member name="T:System.IO.Log.LogExtent">
      <summary>Represents a disk extent that contains log data. </summary>
    </member>
    <member name="P:System.IO.Log.LogExtent.Path">
      <summary>Gets the fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance. </summary>
      <returns>The fully qualified path of this <see cref="T:System.IO.Log.LogExtent" /> instance. </returns>
    </member>
    <member name="P:System.IO.Log.LogExtent.Size">
      <summary>Gets the size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes. </summary>
      <returns>The size of this <see cref="T:System.IO.Log.LogExtent" /> instance, in bytes. </returns>
    </member>
    <member name="P:System.IO.Log.LogExtent.State">
      <summary>Gets the state of this <see cref="T:System.IO.Log.LogExtent" /> instance.  </summary>
      <returns>The state of this <see cref="T:System.IO.Log.LogExtent" /> instance.</returns>
    </member>
    <member name="T:System.IO.Log.LogExtentCollection">
      <summary>Represents the collection of <see cref="T:System.IO.Log.LogExtent" /> objects associated with a <see cref="T:System.IO.Log.LogStore" />.</summary>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.Add(System.String)">
      <summary>Adds a <see cref="T:System.IO.Log.LogExtent" /> instance to the collection. </summary>
      <param name="path">The path to the log extent to be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path " />is null.</exception>
      <exception cref="T:System.ArgumentException">The log store file name specified by <paramref name="path " />is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">A size must be specified for the first extent.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.-or-The storage disk or medium is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)">
      <summary>Creates a new <see cref="T:System.IO.Log.LogExtent" /> with the specified size and adds it to the collection. </summary>
      <param name="path">The path to the log extent. </param>
      <param name="size">The size of the log extent. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path " />or <paramref name="size" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="archiveTail" /> is not within a valid range.</exception>
      <exception cref="T:System.ArgumentException">The log store file name specified by <paramref name="path " />is not valid.<paramref name="size" /> is smaller than the size of the other extents in the store.</exception>
      <exception cref="T:System.InvalidOperationException">A size must be specified for the first extent.-or-A duplicate extent name cannot be used.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.-or-The storage disk or medium is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.LogExtentCollection.Count">
      <summary>Gets the number of log extents in the collection. </summary>
      <returns>The number of log extents in the collection. </returns>
      <exception cref="T:System.ObjectDisposedException">The log store has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogExtentCollection.FreeCount">
      <summary>Gets the number of free <see cref="T:System.IO.Log.LogExtent" /> instances in the collection, that is, the number of <see cref="T:System.IO.Log.LogExtent" /> instances that do not contain any data. </summary>
      <returns>The number of free <see cref="T:System.IO.Log.LogExtent" /> instances in the collection. </returns>
      <exception cref="T:System.ObjectDisposedException">The log store has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.GetEnumerator">
      <summary>Gets an enumerator for the <see cref="T:System.IO.Log.LogExtent" /> instances in this collection. This method cannot be inherited.</summary>
      <returns>An enumerator for the <see cref="T:System.IO.Log.LogExtent" /> instances in this collection. </returns>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is invalid for one of the following reasons:The enumeration has ended.The collection has been modified.The enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)">
      <summary>Removes the specified <see cref="T:System.IO.Log.LogExtent" /> instance from the collection. </summary>
      <param name="extent">The <see cref="T:System.IO.Log.LogExtent" /> instance to remove. </param>
      <param name="force">true if the extent should be removed immediately; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extent" /> or <paramref name="force" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="extent" /> cannot be found in the collection.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="extent" /> cannot be removed. It is either still part of the active region, or access is denied.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-<paramref name="extent" /> cannot be deleted.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)">
      <summary>Removes the <see cref="T:System.IO.Log.LogExtent" /> instance with the specified path from the collection. </summary>
      <param name="path">The path of the <see cref="T:System.IO.Log.LogExtent" /> instance to remove. </param>
      <param name="force">true if the extent should be removed immediately; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> or <paramref name="force" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The extent specified by <paramref name="path" /> cannot be found in the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The extent specified by <paramref name="path" /> cannot be removed. It is either still part of the active region, or access is denied.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The extent specified by <paramref name="path" /> cannot be deleted.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator for the <see cref="T:System.IO.Log.LogExtent" /> instances in this collection. This method cannot be inherited.</summary>
      <returns>An enumerator for the <see cref="T:System.IO.Log.LogExtent" /> instances in this collection. </returns>
    </member>
    <member name="T:System.IO.Log.LogExtentState">
      <summary>Describes the current state of a <see cref="T:System.IO.Log.LogExtent" /> instance. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IO.Log.LogExtentState.Unknown">
      <summary>The status of the <see cref="T:System.IO.Log.LogExtent" /> instance is unknown.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.Initializing">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance has not yet been allocated to the <see cref="T:System.IO.Log.LogStore" />.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.Inactive">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance has been allocated to the <see cref="T:System.IO.Log.LogStore" /> but does not contain any active data.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.Active">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance is being used as storage for the <see cref="T:System.IO.Log.LogStore" />.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.ActivePendingDelete">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance is marked for deletion but still contains some active data.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.PendingArchive">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance does not contain any active data, but contains data that has not yet been archived.</summary>
    </member>
    <member name="F:System.IO.Log.LogExtentState.PendingArchiveAndDelete">
      <summary>The <see cref="T:System.IO.Log.LogExtent" /> instance is marked for deletion but still contains data that has not been archived. </summary>
    </member>
    <member name="T:System.IO.Log.LogPolicy">
      <summary>Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />. </summary>
    </member>
    <member name="P:System.IO.Log.LogPolicy.AutoGrow">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</summary>
      <returns>true if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, false.</returns>
    </member>
    <member name="P:System.IO.Log.LogPolicy.AutoShrinkPercentage">
      <summary>Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink. </summary>
      <returns>The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink. </returns>
    </member>
    <member name="M:System.IO.Log.LogPolicy.Commit">
      <summary>Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />. </summary>
      <exception cref="T:System.InvalidOperationException">The set of policies installed on the log is invalid.-or-A policy of the log prevented this operation from completing.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.NotSupportedException">Setting this policy is not supported on the current platform.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.PathTooLongException">The new extent prefix is invalid or too long. A valid prefix must be provided.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.LogPolicy.GrowthRate">
      <summary>Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />. </summary>
      <returns>The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />. </returns>
    </member>
    <member name="P:System.IO.Log.LogPolicy.MaximumExtentCount">
      <summary>Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain. </summary>
      <returns>The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain. </returns>
    </member>
    <member name="P:System.IO.Log.LogPolicy.MinimumExtentCount">
      <summary>Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain. </summary>
      <returns>An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain. Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</returns>
    </member>
    <member name="P:System.IO.Log.LogPolicy.NewExtentPrefix">
      <summary>Gets or sets the prefix string for automatically created extents. </summary>
      <returns>The prefix string for automatically created extents. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogPolicy.NextExtentSuffix">
      <summary>Gets or sets the suffix number for new extents. </summary>
      <returns>The suffix number for new extents. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogPolicy.PinnedTailThreshold">
      <summary>Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log. </summary>
      <returns>The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogPolicy.Refresh">
      <summary>Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made. </summary>
      <exception cref="T:System.InvalidOperationException">The set of policies installed on the log is invalid.-or-A policy of the log prevented this operation from completing.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.NotSupportedException">Setting this policy is not supported on the current platform.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="T:System.IO.Log.LogRecord">
      <summary>Represents a log record that has been appended to a sequence. </summary>
    </member>
    <member name="M:System.IO.Log.LogRecord.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecord" /> class. </summary>
    </member>
    <member name="P:System.IO.Log.LogRecord.Data">
      <summary>When overridden in a derived class, gets a stream that contains the record data. </summary>
      <returns>A stream that contains the record data. </returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Log.LogRecord" /> has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecord.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Log.LogRecord" />. </summary>
    </member>
    <member name="P:System.IO.Log.LogRecord.Previous">
      <summary>When overridden in a derived class, gets the sequence number of the previous record. </summary>
      <returns>The sequence number of the previous record. </returns>
    </member>
    <member name="P:System.IO.Log.LogRecord.SequenceNumber">
      <summary>When overridden in a derived class, gets the sequence number of this record. </summary>
      <returns>The sequence number of this record. </returns>
    </member>
    <member name="P:System.IO.Log.LogRecord.User">
      <summary>When overridden in a derived class, gets the sequence number of the next record.</summary>
      <returns>The sequence number of the next record in the user-specified chain. </returns>
    </member>
    <member name="T:System.IO.Log.LogRecordEnumeratorType">
      <summary>Specifies the manner in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />. </summary>
    </member>
    <member name="F:System.IO.Log.LogRecordEnumeratorType.User">
      <summary>Records should be read in the order specified by the User sequence number of the log record.</summary>
    </member>
    <member name="F:System.IO.Log.LogRecordEnumeratorType.Previous">
      <summary>Records should be read in the order specified by the Previous sequence number of the log record.</summary>
    </member>
    <member name="F:System.IO.Log.LogRecordEnumeratorType.Next">
      <summary>Records should be read in the order in which they were appended to the sequence.</summary>
    </member>
    <member name="T:System.IO.Log.LogRecordSequence">
      <summary>Represents a record sequence stored in a <see cref="T:System.IO.Log.LogStore" />. </summary>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store.</summary>
      <param name="logStore">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logStore" /> is invalid. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.IO.Log.LogStore,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with the specified log store, buffer size for each record, and buffer number.</summary>
      <param name="logStore">The <see cref="T:System.IO.Log.LogStore" /> that this record sequence should use. </param>
      <param name="bufferSize">The desired buffer size in bytes. The buffer size determines the maximum size of the record that can be appended or read. </param>
      <param name="bufferCount">The desired number of buffers. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="logStore" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize " />is negative or zero.-or-<paramref name="bufferCount" /> is negative or zero. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system. </exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access and share modes.</summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system. </exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store and the access mode. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <param name="share">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system. </exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class with a specified path to the log store, file permission, access and share modes, and the buffer size and count for records. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <param name="share">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes. </param>
      <param name="bufferSize">The desired buffer size in bytes. The buffer size determines the maximum size of the record that can be appended or read. </param>
      <param name="bufferCount">The desired number of buffers. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system. </exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Int32,System.Security.AccessControl.FileSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogRecordSequence" /> class. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">A valid <see cref="T:System.IO.FileMode" /> value that determines how to open or create the store. </param>
      <param name="access">A valid <see cref="T:System.IO.FileAccess" /> value that determines how the log store can be accessed. </param>
      <param name="share">A valid <see cref="T:System.IO.FileShare" /> value that determines how the log store will be shared among processes. </param>
      <param name="bufferSize">The desired buffer size in bytes. The buffer size determines the maximum size of the record that can be appended or read. </param>
      <param name="bufferCount">The desired number of buffers. </param>
      <param name="fileSecurity">A valid <see cref="T:System.Security.AccessControl.FileSecurity" /> value that specifies the security to set on the newly created store if the store must be created.</param>
      <exception cref="T:System.ArgumentException">The file specified by <paramref name="path" /> is not valid.-or-The specified log store file name is not valid. -or-<paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.CreateNew" />, and cannot be used without write access.-or-<paramref name="mode" /> has a value of <see cref="F:System.IO.FileMode.OpenOrCreate" />, and cannot be used without write access.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the arguments are out of range.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The file specified by <paramref name="path" /> cannot be found.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The file specified by <paramref name="path" /> cannot be accessed because it is in use by another process.-or-The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.-or-The log handle could not be bound to the thread pool.-or-The specified log file format or version is invalid.</exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogRecordSequence" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform, or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)">
      <summary>Moves the base sequence number of the log forward. This method cannot be inherited.</summary>
      <param name="newBaseSequenceNumber">Specifies the new base <see cref="T:System.IO.Log.SequenceNumber" /> for the log. This must lie in the range between the current base sequence number and the last sequence number of the log inclusively.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSequenceNumber" /> is not valid for this sequence.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.-or-<paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.InvalidOperationException">The specified log does not have any extents. One or more extents must be created before a record sequence may be used.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>Writes a log record to the <see cref="T:System.IO.Log.LogRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)">
      <summary>Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)">
      <summary>Appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.BaseSequenceNumber">
      <summary>Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.LogRecordSequence" />. </summary>
      <returns>The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.LogRecordSequence" />. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete.</param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete.</param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous flush operation, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <param name="callback">An optional asynchronous callback, to be called when the flush is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous flush request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sequenceNumber" /> is not valid for this sequence.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.InvalidOperationException">The specified log does not have any extents. One or more extents must be created before a record sequence can be used.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <param name="callback">An optional asynchronous callback, to be called when the append is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous append request from other requests. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous restart area write operation, using space previously reserved in the sequence. This method cannot be inherited.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">Byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservation">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSeqNum" /> is not valid for this sequence.-or-The specified log enumeration start sequence number is invalid.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservation" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the parameters is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.-or-<paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous restart area write operation, using space previously reserved in the sequence. This method cannot be inherited. </summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservationCollection">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <param name="callback">An optional asynchronous callback, to be called when the restart area write is complete. </param>
      <param name="state">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSeqNum" /> is not valid for this sequence.-or-The specified log enumeration start sequence number is invalid.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservationCollection" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the parameters is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.-or-<paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.CreateReservationCollection">
      <summary>Creates a new <see cref="T:System.IO.Log.ReservationCollection" />. This method cannot be inherited. </summary>
      <returns>The newly created <see cref="T:System.IO.Log.ReservationCollection" />. </returns>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Dispose">
      <summary>Releases the resources used by the component. </summary>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.EndAppend(System.IAsyncResult)">
      <summary>Ends an asynchronous append operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.EndFlush(System.IAsyncResult)">
      <summary>Ends an asynchronous flush operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.EndReserveAndAppend(System.IAsyncResult)">
      <summary>Ends an asynchronous reserve and append operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is invalid.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.EndWriteRestartArea(System.IAsyncResult)">
      <summary>Ends an asynchronous restart area write operation. This method cannot be inherited.</summary>
      <returns>The sequence number of the written log record. </returns>
      <param name="result">A reference to the outstanding asynchronous I/O request.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="result" /> is not valid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.InvalidOperationException">End has already been called for this asynchronous operation.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Flush">
      <summary>Ensures that all appended records have been written. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <exception cref="T:System.IO.IOException">An I/O error occurred while flushing the data. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.NotSupportedException">This operation is not supported. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.InvalidOperationException">The specified log does not have any extents. One or more extents must be created before a record sequence can be used.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.Flush(System.IO.Log.SequenceNumber)">
      <summary>Ensures that all appended records up to and including the record with the specified sequence number have been durably written. This method cannot be inherited.</summary>
      <returns>The sequence number of the last record written. </returns>
      <param name="sequenceNumber">The sequence number of the latest record that must be written. If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sequenceNumber" /> is not valid for this sequence.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
      <exception cref="T:System.InvalidOperationException">The specified log does not have any extents. One or more extents must be created before a record sequence can be used.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.LastSequenceNumber">
      <summary>Gets the sequence number which is greater than the last record appended</summary>
      <returns>A sequence number which is greater than the last record appended. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.LogStore">
      <summary>Gets the <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence. This method cannot be inherited. </summary>
      <returns>The <see cref="T:System.IO.Log.LogStore" /> that contains the data for this record sequence. </returns>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.MaximumRecordLength">
      <summary>Gets the maximum size of a record that can be added to this record sequence.</summary>
      <returns>The maximum size of a record that can be added to this record sequence.</returns>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)">
      <summary>Returns an enumerable collection of records in the sequence. This method cannot be inherited.</summary>
      <returns>An enumerable collection of records in the sequence. </returns>
      <param name="start">The sequence number of the first record where the reading starts.</param>
      <param name="logRecordEnum">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="start" /> is not valid for this sequence.-or-<paramref name="logRecordEnum" /> is invalid.-or-The specified element was not found in the collection.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.-orThe buffer size used to write the log record is larger than the buffer size being used to read it.-or-The record sequence is corrupted.-or-The specified log file format or version is invalid.-or-The record was written with an incompatible version of the record sequence.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is invalid because the enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.ReadRestartAreas">
      <summary>Returns an enumerable collection of the restart areas in the sequence. This method cannot be inherited.</summary>
      <returns>An enumerable collection of the restart areas in the sequence. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.-orThe buffer size used to write the log record is larger than the buffer size being used to read it.-or-The record sequence is corrupted.-or-The specified log file format or version is invalid.-or-The record was written with an incompatible version of the record sequence.</exception>
      <exception cref="T:System.InvalidOperationException">The operation is invalid because the enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.-orThe enumeration has ended.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>Automatically makes a single reservation and appends a record to the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="nextUndoRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written. </param>
      <param name="reservationCollection">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</param>
      <param name="reservations">The reservations to make, in bytes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not valid for this sequence.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservations" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="nextUndoRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])">
      <summary>Automatically makes a single reservation and appends a record to the sequence. This method cannot be inherited.</summary>
      <returns>The sequence number of the appended log record. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="userRecord">The sequence number of the next record in the user-specified order. </param>
      <param name="previousRecord">The sequence number of the next record in Previous order. </param>
      <param name="recordAppendOptions">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</param>
      <param name="reservationCollection">The reservation collection to make reservations in. </param>
      <param name="reservations">The reservations to make, in bytes. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while appending the record. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new record, or to make the reservation. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="userRecord" /> or <paramref name="previousRecord" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.NotSupportedException">The operation cannot be performed because the record sequence was opened with read-only access.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.ReservationNotFoundException">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.ReservedBytes">
      <summary>Gets the total number of bytes that have been reserved. </summary>
      <returns>The total size of all reservations made in this record sequence.</returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.RestartSequenceNumber">
      <summary>Gets the sequence number of the restart area closest to the end of the log. </summary>
      <returns>The sequence number of the restart area closest to the end of the log. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogRecordSequence.RetryAppend">
      <summary>Gets or sets a value indicating whether or not appends are automatically retried if the log is full. </summary>
      <returns>true if appends are automatically retried if the log is full; otherwise, false. The default is true. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.SetLastRecord(System.IO.Log.SequenceNumber)">
      <summary>Sets the last record in the <see cref="T:System.IO.Log.LogRecordSequence" />. </summary>
      <param name="sequenceNumber">The new last sequence number in the <see cref="T:System.IO.Log.LogRecordSequence" />. This should refer to a current valid record   currently in the log.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sequenceNumber" /> is not valid for this sequence.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.-or-<paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The end of the log has been reached.-or-The specified log file format or version is invalid.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.IO.Log.LogRecordSequence.TailPinned">
      <summary>Signals the need to move the tail of the sequence.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">An array segment that will be concatenated and appended as the record.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservations">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" />. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record.</param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.ArgumentNullException">One or more of the arguments are null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> and updates the base sequence number. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred while writing the restart area. </exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence could not make enough free space to contain the new restart area. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)">
      <summary>Writes a restart area to the <see cref="T:System.IO.Log.LogRecordSequence" /> using a reservation, and updates the base sequence number. This method cannot be inherited.</summary>
      <returns>The sequence number of the written restart area. </returns>
      <param name="data">A list of byte array segments that will be concatenated and appended as the record. </param>
      <param name="newBaseSeqNum">The new base sequence number. The specified sequence number must be greater than or equal to the current base sequence number. </param>
      <param name="reservationCollection">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newBaseSeqNum" /> is not valid for this sequence.-or-The specified log enumeration start sequence number is invalid.-or-<paramref name="data" /> cannot be appended because it is larger than the maximum record size.-or-<paramref name="reservationCollection" /> was not created by this record sequence.</exception>
      <exception cref="T:System.ArgumentNullException">One or more of the parameters is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A new or existing archive tail or base of the active log is invalid.-or-<paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.-or-The request could not be performed because of an I/O device error.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log sequence is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="T:System.IO.Log.LogStore">
      <summary>Represents a log-structured storage. </summary>
    </member>
    <member name="M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class for the specified handle. </summary>
      <param name="handle">A file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> object encapsulates. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> is null.  </exception>
      <exception cref="T:System.IO.IOException">The log handle could not be bound to the thread pool.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
    </member>
    <member name="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class with the specified path and mode. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system. </exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
    </member>
    <member name="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class with the specified path, mode, and access.</summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. -or<paramref name="access" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
    </member>
    <member name="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <param name="share">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. -or<paramref name="access" /> contains an invalid value. -or-<paramref name="share" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
    </member>
    <member name="M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.LogStore" /> class. </summary>
      <param name="path">A relative or absolute path for the base file of the log store to open. </param>
      <param name="mode">One of the <see cref="T:System.IO.FileMode" /> values that determines how to open or create the store.</param>
      <param name="access">One of the <see cref="T:System.IO.FileAccess" /> values that determines how the file can be accessed by the <see cref="T:System.IO.Log.LogStore" />.</param>
      <param name="share">One of the <see cref="T:System.IO.FileShare" /> values that determines how the log store will be shared among processes. </param>
      <param name="fileSecurity">One of the <see cref="T:System.Security.AccessControl.FileSecurity" /> value that specifies the security to set on the newly created store if the store must be created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The log store file name specified by <paramref name="path" /> is not valid.-or-<paramref name="Mode" /> is CreateNew, which cannot be used without write access.-or-<paramref name="Mode" /> is OpenOrCreate, which cannot be used without write access.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> contains an invalid value. -or<paramref name="access" /> contains an invalid value. -or-<paramref name="share" /> contains an invalid value. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. The file specified by <paramref name="path" /> cannot be accessed because it is in use by another process.-or-The file specified by <paramref name="path" /> cannot be created because the file or directory already exists.-or-The log handle could not be bound to the thread pool.-or-The specified log file format or version is invalid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.IO.Log.LogStore" /> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <see cref="T:System.IO.Log.FileRecordSequence" /> class instead.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.LogStore.Archivable">
      <summary>Gets a value indicating whether this <see cref="T:System.IO.Log.LogStore" /> instance can be archived. </summary>
      <returns>true if this <see cref="T:System.IO.Log.LogStore" /> instance can be archived; otherwise, false. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogStore.BaseSequenceNumber">
      <summary>Gets the lowest sequence number that corresponds to a valid record in this <see cref="T:System.IO.Log.LogStore" /> instance.</summary>
      <returns>The lowest sequence number that corresponds to a valid record in this <see cref="T:System.IO.Log.LogStore" /> instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot">
      <summary>Takes a snapshot of the log store state for making a backup. </summary>
      <returns>A <see cref="T:System.IO.Log.LogArchiveSnapshot" /> object that contains the state necessary to make an archive. </returns>
      <exception cref="T:System.NotSupportedException">The log store is not archivable. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.ArgumentException">An argument is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid operation has been executed.</exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Takes a snapshot of the log store state between the specified sequence numbers for making a backup. </summary>
      <returns>A <see cref="T:System.IO.Log.LogArchiveSnapshot" /> object that contains the state necessary to make an archive. </returns>
      <param name="first">The starting sequence number in the range to archive. </param>
      <param name="last">The ending sequence number in the range to archive. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="first" /> or <paramref name="last" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="first" /> is larger than <paramref name="last" />.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid operation has been executed.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.NotSupportedException">The log store is not archivable. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.LogStore.Delete(System.String)">
      <summary>Removes the log store.</summary>
      <param name="path">A relative or absolute path for the base file of the log store to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string ("").-or-<paramref name="path" /> contains only white space.-or-<paramref name="path" /> contains one or more invalid characters. </exception>
      <exception cref="T:System.IO.FileNotFoundException">The file cannot be found. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when opening the log store. </exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system. </exception>
    </member>
    <member name="M:System.IO.Log.LogStore.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Log.LogStore" />. </summary>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogStore.Extents">
      <summary>Gets the collection of log extents that contain the data for this log store. </summary>
      <returns>A <see cref="T:System.IO.Log.LogExtentCollection" /> instance containing the collection of log extents that encapsulates data for this log store. </returns>
    </member>
    <member name="P:System.IO.Log.LogStore.FreeBytes">
      <summary>Gets the number of bytes available in the log store. </summary>
      <returns>The number of bytes available in the log store. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogStore.Handle">
      <summary>Gets the operating system file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> instance encapsulates. </summary>
      <returns>The operating system file handle for the log file that the current <see cref="T:System.IO.Log.LogStore" /> instance encapsulates. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogStore.LastSequenceNumber">
      <summary>When overridden in a derived class, gets the sequence number of the next record to be appended to the log store. </summary>
      <returns>The sequence number of the next record to be appended to the log store. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogStore.Length">
      <summary>Gets the size of the log store, in bytes. </summary>
      <returns>The size of the log store, in bytes. </returns>
      <exception cref="T:System.ObjectDisposedException">The property was accessed after the sequence has been disposed of. </exception>
    </member>
    <member name="P:System.IO.Log.LogStore.Policy">
      <summary>Gets the policy associated with this log store. </summary>
      <returns>A <see cref="T:System.IO.Log.LogPolicy" /> instance representing the policy associated with this log store. </returns>
    </member>
    <member name="M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)">
      <summary>Sets the sequence number of the archive tail. </summary>
      <param name="archiveTail">The sequence number of the archive tail. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="archiveTail" /> is not valid for this sequence.</exception>
      <exception cref="T:System.InvalidOperationException">An invalid operation has been executed.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.NotSupportedException">The log store is not archivable. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of a program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.LogStore.StreamCount">
      <summary>Gets the number of log streams in this log store.</summary>
      <returns>The number of log streams in this log store.</returns>
    </member>
    <member name="T:System.IO.Log.PolicyUnit">
      <summary>Represents a size measurement in a log store policy. </summary>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.#ctor(System.Int64,System.IO.Log.PolicyUnitType)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.PolicyUnit" /> structure with the specified value and type. </summary>
      <param name="value">The size of the <see cref="T:System.IO.Log.PolicyUnit" />. </param>
      <param name="type">One of the <see cref="T:System.IO.Log.PolicyUnitType" /> values. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> or <paramref name="type" /> is not a valid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal. </summary>
      <returns>true if this instance and a specified object are equal; otherwise, false. </returns>
      <param name="obj">The specified object to be checked.</param>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.Extents(System.Int64)">
      <summary>Creates a <see cref="T:System.IO.Log.PolicyUnit" /> of type <see cref="F:System.IO.Log.PolicyUnitType.Extents" /> from the specified number. </summary>
      <returns>A <see cref="T:System.IO.Log.PolicyUnit" /> of type <see cref="F:System.IO.Log.PolicyUnitType.Extents" /> from the specified number. </returns>
      <param name="value">A number that represents the number of containers. </param>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.GetHashCode">
      <summary>Provides a unique hash code for this object.</summary>
      <returns>An integer with the hash code value.</returns>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.op_Equality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)">
      <summary>Compares two <see cref="T:System.IO.Log.PolicyUnit" /> instances to determine whether they are equal. </summary>
      <returns>true if both <see cref="T:System.IO.Log.PolicyUnit" /> instances are equal; otherwise, false. </returns>
      <param name="left">The <see cref="T:System.IO.Log.PolicyUnit" /> on the left side of the operator. </param>
      <param name="right">The <see cref="T:System.IO.Log.PolicyUnit" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.op_Inequality(System.IO.Log.PolicyUnit,System.IO.Log.PolicyUnit)">
      <summary>Compares two <see cref="T:System.IO.Log.PolicyUnit" /> instances to determine whether they are not equal. </summary>
      <returns>true if both <see cref="T:System.IO.Log.PolicyUnit" /> instances are not equal; otherwise, false. </returns>
      <param name="left">The <see cref="T:System.IO.Log.PolicyUnit" /> on the left side of the operator. </param>
      <param name="right">The <see cref="T:System.IO.Log.PolicyUnit" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.Percentage(System.Int64)">
      <summary>Creates a <see cref="T:System.IO.Log.PolicyUnit" /> of type <see cref="F:System.IO.Log.PolicyUnitType.Percentage" /> from the specified number. </summary>
      <returns>A <see cref="T:System.IO.Log.PolicyUnit" /> of type <see cref="F:System.IO.Log.PolicyUnitType.Percentage" /> from the specified number. </returns>
      <param name="value">A number that represents the percentage. </param>
    </member>
    <member name="M:System.IO.Log.PolicyUnit.ToString">
      <summary>Returns a string representation of this object.</summary>
      <returns>A string representing this object.</returns>
    </member>
    <member name="P:System.IO.Log.PolicyUnit.Type">
      <summary>Gets the unit type of the <see cref="T:System.IO.Log.PolicyUnit" />. </summary>
      <returns>One of the <see cref="T:System.IO.Log.PolicyUnitType" /> values. The default is <see cref="F:System.IO.Log.PolicyUnitType.Extents" />. </returns>
    </member>
    <member name="P:System.IO.Log.PolicyUnit.Value">
      <summary>Gets the value of the <see cref="T:System.IO.Log.PolicyUnit" />. </summary>
      <returns>The value of the <see cref="T:System.IO.Log.PolicyUnit" />. </returns>
    </member>
    <member name="T:System.IO.Log.PolicyUnitType">
      <summary>Specifies the unit of measurement of a <see cref="T:System.IO.Log.PolicyUnit" /> instance. </summary>
    </member>
    <member name="F:System.IO.Log.PolicyUnitType.Extents">
      <summary>The measurement is in containers.</summary>
    </member>
    <member name="F:System.IO.Log.PolicyUnitType.Percentage">
      <summary>The measurement is a percentage of the size of the <see cref="T:System.IO.Log.LogStore" />.</summary>
    </member>
    <member name="T:System.IO.Log.RecordAppendOptions">
      <summary>Specifies how records are appended. </summary>
    </member>
    <member name="F:System.IO.Log.RecordAppendOptions.None">
      <summary>Data is written lazily.</summary>
    </member>
    <member name="F:System.IO.Log.RecordAppendOptions.ForceAppend">
      <summary>The record sequence should begin the process of flushing internal buffers after this record is appended. This does not indicate that the record should be durably written before the Append operation completes. To get that behavior, specify the <see cref="F:System.IO.Log.RecordAppendOptions.ForceFlush" /> flag. </summary>
    </member>
    <member name="F:System.IO.Log.RecordAppendOptions.ForceFlush">
      <summary>The record sequence should flush any internal buffers after this record is appended. When the Append operation completes, the specified record has been durably written. </summary>
    </member>
    <member name="T:System.IO.Log.ReservationCollection">
      <summary>Manages the collection of space reservations made in a record sequence. </summary>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class. </summary>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.Add(System.Int64)">
      <summary>Allocates a reservation and adds it to the collection. This method cannot be inherited.</summary>
      <param name="size">The size of the requested reservation, in bytes. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="size" /> is invalid or exceeds maximum reservation size.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.Clear">
      <summary>Releases all of the reservations in the collection. This method cannot be inherited.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="size" /> is invalid or exceeds maximum reservation size.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.Contains(System.Int64)">
      <summary>Determines whether a reservation of the specified size has been made. This method cannot be inherited.</summary>
      <returns>true if at least one reservation of the specified size has been made; otherwise, false. </returns>
      <param name="size">The size to locate in the collection. </param>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)">
      <summary>Copies the entire collection to a one-dimensional array, starting at the specified index of the target array. This method cannot be inherited. </summary>
      <param name="array">The array that is the destination of the copy. </param>
      <param name="arrayIndex">The zero-based index in the array at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> or <paramref name="arrayIndex" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentException">There is not enough space in the specified array to copy the data.-or-<paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.ReservationCollection.Count">
      <summary>Gets the number of reservations in the collection. </summary>
      <returns>The number of reservations in the collection. </returns>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.Finalize">
      <summary>Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</summary>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)">
      <summary>When overridden in a derived class, releases a reservation of the specified size. </summary>
      <param name="size">The size of the reservation to release. </param>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)">
      <summary>When overridden in a derived class, gets the best matching reservation for a given size. </summary>
      <returns>A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists. </returns>
      <param name="size">The size of the reservation that must be fit. </param>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />. This method cannot be inherited.</summary>
      <returns>An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The operation is invalid for one of the following reasons:The enumeration has ended.The collection has been modified.The enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="P:System.IO.Log.ReservationCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read-only.</summary>
      <returns>This property always returns false. </returns>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)">
      <summary>When overridden in a derived class, allocates a reservation of the specified size. </summary>
      <param name="size">The size of the reservation to allocate. </param>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.Remove(System.Int64)">
      <summary>Releases a reservation of the specified size, if one has been made. This method cannot be inherited.</summary>
      <returns>true if a reservation of the specified size was found and removed; otherwise, false. </returns>
      <param name="item">The size of the reservation to release. </param>
      <exception cref="T:System.ArgumentException">No reservation large enough to fit the provided record can be found in the specified reservation collection.</exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs when creating the archive snapshot. </exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.IO.Log.SequenceFullException">The record sequence is full.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)">
      <summary>When overridden in a derived class, indicates that a reservation has been released. </summary>
      <param name="size">The size of the reservation that has been released. </param>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)">
      <summary>When overridden in a derived class, indicates that a reservation has been made. </summary>
      <param name="size">The size of the reservation that has been made. </param>
    </member>
    <member name="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />. This method cannot be inherited.</summary>
      <returns>An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The operation is invalid for one of the following reasons:The enumeration has ended.The collection has been modified.The enumeration has not been started. A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</exception>
      <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of. </exception>
      <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
    </member>
    <member name="T:System.IO.Log.ReservationNotFoundException">
      <summary>Represents the exception that is thrown when a specific space reservation in a <see cref="T:System.IO.Log.LogRecordSequence" /> is not found.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.ReservationNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.ReservationNotFoundException" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.ReservationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.ReservationNotFoundException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.ReservationNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.ReservationNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.ReservationNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IO.Log.SequenceFullException">
      <summary>Represents the exception that is thrown when a sequence of log records is full.</summary>
    </member>
    <member name="M:System.IO.Log.SequenceFullException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.SequenceFullException" /> class. </summary>
    </member>
    <member name="M:System.IO.Log.SequenceFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.SequenceFullException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.IO.Log.SequenceFullException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.SequenceFullException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.IO.Log.SequenceFullException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.SequenceFullException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:System.IO.Log.SequenceNumber">
      <summary>Represents a sequence number assigned to a log record in a record sequence. </summary>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.SequenceNumber" /> class. </summary>
      <param name="sequenceNumber">Bytes that make up the sequence number.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sequenceNumber" /> is of the wrong length, or does not represent a valid sequence number.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)">
      <summary>Compares this sequence number with a specified object.</summary>
      <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.ValueConditionLess than zeroThis instance is less than <paramref name="other" />.ZeroThis instance is equal to <paramref name="other" />.Greater than zeroThis instance is greater than <paramref name="other" />. </returns>
      <param name="other">An object that evaluates to the current sequence number.</param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)">
      <summary>Indicates whether this instance and a specified sequence number are equal.</summary>
      <returns>true if <paramref name="other" /> and this instance represent the same value; otherwise, false.</returns>
      <param name="other">Another <see cref="T:System.IO.Log.SequenceNumber" /> to compare to.</param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.Equals(System.Object)">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
      <returns>true if <paramref name="other" /> and this instance are the same type and represent the same value; otherwise, false.</returns>
      <param name="other">Another object to compare to.</param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.GetBytes">
      <summary>Encodes all or part of the current sequence number into a byte array.</summary>
      <returns>A byte array containing all or part of the current sequence number.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.SequenceNumber.Invalid">
      <summary>Gets a sequence number that serves as a default value for representing an invalid sequence number.</summary>
      <returns>A <see cref="T:System.IO.Log.SequenceNumber" /> initialized to UInt64.<see cref="F:System.UInt64.MaxValue" /> that serves as a default value for representing an invalid sequence number.</returns>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Compares two <see cref="T:System.IO.Log.SequenceNumber" /> instances to determine whether they are equal. </summary>
      <returns>true if both <see cref="T:System.IO.Log.SequenceNumber" /> instances are equal; otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.IO.Log.SequenceNumber" /> instances to determine whether the first is greater than the second.</summary>
      <returns>true if the first instance is greater than the second instance, otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.IO.Log.SequenceNumber" /> instances to determine whether the first is greater than or equal to the second.</summary>
      <returns>true if the first instance is greater than or equal to the second instance, otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Compares two <see cref="T:System.IO.Log.SequenceNumber" /> instances to determine whether they are not equal. </summary>
      <returns>true if both <see cref="T:System.IO.Log.SequenceNumber" /> instances are not equal, otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.IO.Log.SequenceNumber" /> parameters to determine whether the first is less than the second.</summary>
      <returns>true if the first instance is less than the second instance, otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="M:System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.IO.Log.SequenceNumber" /> parameters to determine whether the first is less than or equal to the second.</summary>
      <returns>true if the first instance is less than or equal to the second instance, otherwise, false. </returns>
      <param name="c1">The <see cref="T:System.IO.Log.SequenceNumber" /> on the left side of the operator. </param>
      <param name="c2">The <see cref="T:System.IO.Log.SequenceNumber" /> on the right side of the operator. </param>
    </member>
    <member name="T:System.IO.Log.TailPinnedEventArgs">
      <summary>Provides data for the <see cref="E:System.IO.Log.IRecordSequence.TailPinned" /> event. This class cannot be inherited.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IO.Log.TailPinnedEventArgs.#ctor(System.IO.Log.SequenceNumber)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.Log.TailPinnedEventArgs" /> class. </summary>
      <param name="sequenceNumber">The target sequence number. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber">
      <summary>Gets the sequence number that the tail should be moved past. </summary>
      <returns>The sequence number that the tail should be moved past.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Management.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>Describes the authentication level to be used to connect to WMI. This is used for the COM connection to WMI.          </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>The default COM authentication level. WMI uses the default Windows Authentication setting.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>No COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>Connect-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>Call-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>Packet-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>Packet Integrity-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>Packet Privacy-level COM authentication.</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>Authentication level should remain as it was before.</summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>Describes the possible CIM types for properties, qualifiers, or method parameters.          </summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>A null value.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>A signed 8-bit integer. This value maps to the <see cref="T:System.SByte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>An unsigned 8-bit integer. This value maps to the <see cref="T:System.Byte" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>A signed 16-bit integer. This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>An unsigned 16-bit integer. This value maps to the <see cref="T:System.UInt16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>A signed 32-bit integer. This value maps to the <see cref="T:System.Int32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>An unsigned 32-bit integer. This value maps to the <see cref="T:System.UInt32" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>A signed 64-bit integer. This value maps to the <see cref="T:System.Int64" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>An unsigned 64-bit integer. This value maps to the <see cref="T:System.UInt64" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>A floating-point 32-bit number. This value maps to the <see cref="T:System.Single" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>A floating point 64-bit number. This value maps to the <see cref="T:System.Double" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>A Boolean. This value maps to the <see cref="T:System.Boolean" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>A string. This value maps to the <see cref="T:System.String" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>A date or time value, represented in a string in DMTF date/time format: yyyymmddHHMMSS.mmmmmmsUUU, where yyyymmdd is the date in year/month/day; HHMMSS is the time in hours/minutes/seconds; mmmmmm is the number of microseconds in 6 digits; and sUUU is a sign (+ or -) and a 3-digit UTC offset. This value maps to the <see cref="T:System.DateTime" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>A reference to another object. This is represented by a string containing the path to the referenced object. This value maps to the <see cref="T:System.Int16" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>A 16-bit character. This value maps to the <see cref="T:System.Char" /> type.</summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>An embedded object. Note that embedded objects differ from references in that the embedded object does not have a path and its lifetime is identical to the lifetime of the containing object. This value maps to the <see cref="T:System.Object" /> type.</summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>Defines the languages supported by the code generator.          </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>A value for generating C# code.             </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>A value for generating JScript code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>A value for generating Visual Basic code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>A value for generating Visual J# code.</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>A value for generating managed C++ code.             </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>Describes the object comparison modes that can be used with <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />. Note that these values may be combined.          </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>A mode that compares all elements of the compared objects. Value: 0. </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>A mode that compares the objects, ignoring qualifiers. Value: 1.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>A mode that ignores the source of the objects, namely the server and the namespace they came from, in comparison to other objects. Value: 2.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>A mode that ignores the default values of properties. This value is only meaningful when comparing classes. Value: 4.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>A mode that assumes that the objects being compared are instances of                    the same class. Consequently, this value causes comparison of instance-related information only. Use this flag to optimize performance. If the objects are not of the same class, the results are undefined. Value: 8.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>A mode that compares string values in a case-insensitive manner. This applies to strings and to qualifier values. Property and qualifier names are always compared in a case-insensitive manner whether this flag is specified or not. Value: 16.</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>A mode that ignores qualifier flavors. This flag still takes qualifier values into account, but ignores flavor distinctions such as propagation rules and override restrictions. Value: 32.</summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.Completed" /> event.          </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>Gets the completion status of the operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> enumeration value.</returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>Gets additional status information within a WMI object. This may be null.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains status information about the completion of an operation.</returns>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.Completed" /> event.     </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.CompletedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>Specifies all settings required to make a WMI connection.</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class for the connection operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Creates a new ConnectionOption.</summary>
      <param name="locale">The locale to be used for the connection.</param>
      <param name="username">The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</param>
      <param name="password">The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</param>
      <param name="authority">The authority to be used to authenticate the specified user.</param>
      <param name="impersonation">The COM impersonation level to be used for the connection.</param>
      <param name="authentication">The COM authentication level to be used for the connection.  </param>
      <param name="enablePrivileges">true to enable special user privileges; otherwise, false. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</param>
      <param name="context">A provider-specific, named value pairs object to be passed through to the provider.</param>
      <param name="timeout">Reserved for future use.</param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class to be used for a WMI connection, using the specified values.</summary>
      <param name="locale">The locale to be used for the connection.</param>
      <param name="username">The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</param>
      <param name="password">The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</param>
      <param name="authority">The authority to be used to authenticate the specified user. </param>
      <param name="impersonation">The COM impersonation level to be used for the connection. </param>
      <param name="authentication">The COM authentication level to be used for the connection.  </param>
      <param name="enablePrivileges">true to enable special user privileges; otherwise, false. This parameter should only be used when performing an operation that requires special Windows NT user privileges.</param>
      <param name="context">A provider-specific, named value pairs object to be passed through to the provider. </param>
      <param name="timeout">Reserved for future use. </param>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>Gets or sets the COM authentication level to be used for operations in this connection.</summary>
      <returns>Returns an <see cref="T:System.Management.AuthenticationLevel" /> enumeration value indicating the COM authentication level used for a connection to the local or a remote computer. </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>Gets or sets the authority to be used to authenticate the specified user.          </summary>
      <returns>Returns a <see cref="T:System.String" /> that defines the authority used to authenticate the specified user.</returns>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>Gets or sets a value indicating whether user privileges need to be enabled for the connection operation. This property should only be used when the operation performed requires a certain user privilege to be enabled (for example, a machine restart).          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether user privileges need to be enabled for the connection operation.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>Gets or sets the COM impersonation level to be used for operations in this connection.</summary>
      <returns>Returns an <see cref="T:System.Management.ImpersonationLevel" /> enumeration value indicating the impersonation level used to connect to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>Gets or sets the locale to be used for the connection operation.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used for the locale in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>Sets the password for the specified user.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used for the password in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>Sets the password for the specified user.</summary>
      <returns>Returns a SecureString value used for the password in a connection to WMI.</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>Gets or sets the user name to be used for the connection operation.</summary>
      <returns>Returns a <see cref="T:System.String" /> value used as the user name in a connection to WMI.</returns>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>Specifies options for deleting a management object.          </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for the delete operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for a delete operation, using the specified values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.TimeSpan.MaxValue" />. Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>A cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>Provides a base class for query and enumeration-related options objects.          </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class with default values (see the individual property descriptions for what the default values are). This is the default constructor.           </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class to be used for queries or enumerations, allowing the user to specify values for the different options.          </summary>
      <param name="context">The options context object containing provider-specific information that can be passed through to the provider.</param>
      <param name="timeout">The time-out value for enumerating through the results.</param>
      <param name="blockSize">The number of items to retrieve at one time from WMI.</param>
      <param name="rewindable">true to show that the result set is rewindable (allows multiple traversal); otherwise, false.</param>
      <param name="returnImmediatley">true to show that the operation should return immediately (semi-sync) or block until all results are available; otherwise, false.</param>
      <param name="useAmendedQualifiers">true to show that the returned objects should contain amended (locale-aware) qualifiers; otherwise, false.</param>
      <param name="ensureLocatable">true to ensure all returned objects have valid paths; otherwise, false.</param>
      <param name="prototypeOnly">true to return a prototype of the result set instead of the actual results; otherwise, false.</param>
      <param name="directRead">true to retrieve objects of only the specified class or from derived classes as well; otherwise, false.</param>
      <param name="enumerateDeep">true to use recursive enumeration in subclasses; otherwise, false.</param>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>Gets or sets the block size for block operations. When enumerating through a collection, WMI will return results in groups of the specified size.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value used for the block size in block operations.</returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>Gets or sets a value indicating whether direct access to the WMI provider is requested for the specified class, without any regard to its super class or derived classes.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether direct access to the WMI provider is requested for the specified class.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>Gets or sets a value indicating whether to the objects returned should have locatable information in them. This ensures that the system properties, such as __PATH, __RELPATH, and __SERVER, are non-NULL. This flag can only be used in queries, and is ignored in enumerations.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned should have locatable information in them.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>Gets or sets a value indicating whether recursive enumeration is requested into all classes derived from the specified superclass. If false, only immediate derived class members are returned.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether recursive enumeration is requested into all classes derived from the specified superclass.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>Gets or sets a value indicating whether the query should return a prototype of the result set instead of the actual results. This flag is used for prototyping.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the query should return a prototype of the result set instead of the actual results.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>Gets or sets a value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion. If this property is set to true, the enumeration is invoked and the call returns immediately. The actual retrieval of the results will occur when the resulting collection is walked.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the invoked operation should be performed in a synchronous or semisynchronous fashion.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>Gets or sets a value indicating whether the collection is assumed to be rewindable. If true, the objects in the collection will be kept available for multiple enumerations. If false, the collection can only be enumerated one time.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the collection is assumed to be rewindable.</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.  </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>Gets the WMI event that was delivered.      </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains the delivered WMI event.</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.EventArrivedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>Represents a WMI event query.          </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class for the specified query.          </summary>
      <param name="query">A textual representation of the event query.</param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> class for the specified language and query.           </summary>
      <param name="language">The language in which the query string is specified. </param>
      <param name="query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>Specifies options for management event watching.          </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class with the given values.          </summary>
      <param name="context">The options context object containing provider-specific information to be passed through to the provider. </param>
      <param name="timeout">The time-out to wait for the next events.</param>
      <param name="blockSize">The number of events to wait for in each block.  </param>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>Gets or sets the block size for block operations. When waiting for events, this value specifies how many events to wait for before returning.      </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value indicating the block size for a block of operations.</returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>Describes the impersonation level to be used to connect to WMI.          </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>Default impersonation.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>Anonymous COM impersonation level that hides the identity of the caller. Calls to WMI may fail with this impersonation level.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>Identify-level COM impersonation level that allows objects to query the credentials of the caller. Calls to WMI may fail with this impersonation level.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>Impersonate-level COM impersonation level that allows objects to use the credentials of the caller. This is the recommended impersonation level for WMI calls.</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>Delegate-level COM impersonation level that allows objects to permit other objects to use the credentials of the caller. This level, which will work with WMI calls but may constitute an unnecessary security risk, is supported only under Windows 2000.</summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>Specifies options for invoking a management method.          </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for the <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> operation, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for an invoke operation using the specified values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider.</param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.TimeSpan.MaxValue" />. Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>Contains the basic elements of a management object. It serves as a base class to more specific management object classes.</summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementBaseObject" /> class that is serializable.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>Gets the path to the management object's class.</summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> that contains the class path to the management object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The new cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>Compares this object to another, based on specified options.</summary>
      <returns>true if the objects compared are equal according to the given options; otherwise, false.</returns>
      <param name="otherObject">The object to which to compare this object. </param>
      <param name="settings">Options on how to compare the objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose"></member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>Compares two management objects.</summary>
      <returns>true if this is an instance of <see cref="T:System.Management.ManagementBaseObject" /> and represents the same object as this instance; otherwise, false.             </returns>
      <param name="obj">An object to compare with this instance.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>Returns the value of the specified property qualifier.</summary>
      <returns>The value of the specified qualifier.</returns>
      <param name="propertyName">The name of the property to which the qualifier belongs. </param>
      <param name="qualifierName">The name of the property qualifier of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>Gets an equivalent accessor to a property's value.</summary>
      <returns>The value of the specified property.</returns>
      <param name="propertyName">The name of the property of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>Gets the value of the specified qualifier.          </summary>
      <returns>The value of the specified qualifier.</returns>
      <param name="qualifierName">The name of the qualifier of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>Returns a textual representation of the object in the specified format.          </summary>
      <returns>The textual representation of the object in the specified format.</returns>
      <param name="format">The requested textual format. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>Gets access to property values through [] notation. This property is the indexer for the <see cref="T:System.Management.ManagementBaseObject" /> class. You can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is String.</summary>
      <returns>Returns an <see cref="T:System.Object" /> value that contains the management object for a specific class property.</returns>
      <param name="propertyName">The name of the property of interest. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>Provides the internal WMI object represented by a <see cref="T:System.Management.ManagementObject" />.  </summary>
      <returns>An <see cref="T:System.IntPtr" /> representing the internal WMI object.  </returns>
      <param name="managementObject">The <see cref="T:System.Management.ManagementBaseObject" /> that references the requested WMI object.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>Gets a collection of <see cref="T:System.Management.PropertyData" /> objects describing the properties of the management object.</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyDataCollection" /> that holds the properties for the management object.</returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>Gets the collection of <see cref="T:System.Management.QualifierData" /> objects defined on the management object. Each element in the collection holds information such as the qualifier name, value, and flavor.</summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> that holds the qualifiers for the management object.</returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>Sets the value of the specified property qualifier.</summary>
      <param name="propertyName">The name of the property to which the qualifier belongs.</param>
      <param name="qualifierName">The name of the property qualifier of interest.</param>
      <param name="qualifierValue">The new value for the qualifier.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>Sets the value of the named property.</summary>
      <param name="propertyName">The name of the property to be changed.</param>
      <param name="propertyValue">The new value for this property.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>Sets the value of the named qualifier.</summary>
      <param name="qualifierName">The name of the qualifier to set. This parameter cannot be null.</param>
      <param name="qualifierValue">The value to set.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Management.ManagementBaseObject" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> containing the information required to serialize the <see cref="T:System.Management.ManagementBaseObject" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> containing the source and destination of the serialized stream associated with the <see cref="T:System.Management.ManagementBaseObject" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>Gets  the collection of WMI system properties of the management object (for example, the class name, server, and namespace). WMI system property names begin with "__".</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyDataCollection" /> that contains the system properties for a management object.</returns>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>Represents a Common Information Model (CIM) management class. A management class is a WMI class such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. The members of this class enable you to access WMI data using a specific WMI class path. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying the WMI class to which to bind. The parameter must specify a WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> instance representing the WMI class path. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving this class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified WMI class in the specified scope and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> that specifies the scope (server and namespace) where the WMI class resides. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> that represents the path to the WMI class in the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> that specifies the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</summary>
      <param name="info">An instance of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class containing the information required to serialize the new <see cref="T:System.Management.ManagementClass" />.</param>
      <param name="context">An instance of the <see cref="T:System.Runtime.Serialization.StreamingContext" /> class containing the source of the serialized stream associated with the new <see cref="T:System.Management.ManagementClass" />.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given path. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given WMI class path using the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="path">The path to the WMI class. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified WMI class, in the specified scope, and with the specified options. The class represents a Common Information Model (CIM) management class from WMI such as Win32_LogicalDisk, which can represent a disk drive, and Win32_Process, which represents a process such as Notepad.exe. For more information, see "Win32 Classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <param name="scope">The scope in which the WMI class resides. </param>
      <param name="path">The path to the WMI class within the specified scope. The class represents a CIM management class from WMI. CIM classes represent management information including hardware, software, processes, and so on. For more information about the CIM classes available in Windows, see "Win32 classes" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> that specifies the options to use when retrieving the WMI class. </param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>Returns a copy of the object.</summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>Initializes a new instance of the WMI class.</summary>
      <returns>A <see cref="T:System.Management.ManagementObject" /> that represents a new instance of the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>Gets an array containing all WMI classes in the inheritance hierarchy from this class to the top of the hierarchy.</summary>
      <returns>A string collection containing the names of all WMI classes in the inheritance hierarchy of this class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>Derives a new class from this class.</summary>
      <returns>A new <see cref="T:System.Management.ManagementClass" /> that represents a new WMI class derived from the original class.</returns>
      <param name="newClassName">The name of the new class to be derived. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>Returns the collection of all instances of the class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the instances of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>Returns the collection of all instances of the class using the specified options.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the instances of the class, according to the specified options.</returns>
      <param name="options">The additional operation options. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>Returns the collection of all instances of the class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Returns the collection of all instances of the class, asynchronously, using the specified options.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="options">The specified additional options for getting the instances. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.          </summary>
      <param name="info">The object to be populated with serialization information.</param>
      <param name="context">The location where serialized data will be stored and retrieved.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>Retrieves classes related to the WMI class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementClass" /> or <see cref="T:System.Management.ManagementObject" /> objects that represents WMI classes or instances related to the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>Retrieves classes related to the WMI class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Retrieves classes related to the WMI class, asynchronously, given the related class name.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="relatedClass">The name of the related class. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves classes related to the WMI class, asynchronously, using the specified options.</summary>
      <param name="watcher">Handler for progress and results of the asynchronous operation. </param>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <param name="relationshipClass">The relationship type which resulting classes must have with the source class. </param>
      <param name="relationshipQualifier">This qualifier must be present on the relationship. </param>
      <param name="relatedQualifier">This qualifier must be present on the resulting classes. </param>
      <param name="relatedRole">The resulting classes must have this role in the relationship. </param>
      <param name="thisRole">The source class must have this role in the relationship. </param>
      <param name="options">The options for retrieving the resulting classes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>Retrieves classes related to the WMI class.</summary>
      <returns>A collection of classes related to this class.</returns>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves classes related to the WMI class based on the specified options.</summary>
      <returns>A collection of classes related to this class.</returns>
      <param name="relatedClass">The class from which resulting classes have to be derived. </param>
      <param name="relationshipClass">The relationship type which resulting classes must have with the source class. </param>
      <param name="relationshipQualifier">This qualifier must be present on the relationship. </param>
      <param name="relatedQualifier">This qualifier must be present on the resulting classes. </param>
      <param name="relatedRole">The resulting classes must have this role in the relationship. </param>
      <param name="thisRole">The source class must have this role in the relationship. </param>
      <param name="options">The options for retrieving the resulting classes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>Retrieves relationship classes that relate the class to others.</summary>
      <returns>A collection of association classes that relate the class to any other class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>Retrieves relationship classes that relate the class to others, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>Retrieves relationship classes that relate the class to the specified WMI class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="relationshipClass">The WMI class to which all returned relationships should point. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves relationship classes that relate the class according to the specified options, asynchronously.</summary>
      <param name="watcher">The handler for progress and results of the asynchronous operation. </param>
      <param name="relationshipClass">The class from which all resulting relationship classes must derive. </param>
      <param name="relationshipQualifier">The qualifier which the resulting relationship classes must have. </param>
      <param name="thisRole">The role which the source class must have in the resulting relationship classes. </param>
      <param name="options">The options for retrieving the results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>Retrieves relationship classes that relate the class to others, where the endpoint class is the specified class.</summary>
      <returns>A collection of association classes that relate the class to the specified class. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">The endpoint class for all relationship classes returned. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Retrieves relationship classes that relate this class to others, according to specified options.</summary>
      <returns>A collection of association classes that relate this class to others, according to the specified options. For more information about relationship classes, see "ASSOCIATORS OF Statement" in the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <param name="relationshipClass">All resulting relationship classes must derive from this class. </param>
      <param name="relationshipQualifier">Resulting relationship classes must have this qualifier. </param>
      <param name="thisRole">The source class must have this role in the resulting relationship classes. </param>
      <param name="options">Specifies options for retrieving the results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>Generates a strongly-typed class for a given WMI class.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> representing the declaration for the strongly-typed class.</returns>
      <param name="includeSystemClassInClassDef">true to include the class for managing system properties; otherwise, false. </param>
      <param name="systemPropertyClass">true to have the generated class manage system properties; otherwise, false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>Generates a strongly-typed class for a given WMI class. This function generates code for Visual Basic, C#, JScript, J#, or C++ depending on the input parameters.</summary>
      <returns>true, if the method succeeded; otherwise, false.</returns>
      <param name="lang">The language of the code to be generated. This code language comes from the <see cref="T:System.Management.CodeLanguage" /> enumeration.</param>
      <param name="filePath">The path of the file where the code is to be written. </param>
      <param name="classNamespace">The.NET namespace into which the class should be generated. If this is empty, the namespace will be generated from the WMI namespace. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>Returns the collection of all subclasses for the class.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects that represent the subclasses of the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>Retrieves the subclasses of the class using the specified options.</summary>
      <returns>A collection of the <see cref="T:System.Management.ManagementObject" /> objects representing the subclasses of the WMI class, according to the specified options.</returns>
      <param name="options">The specified additional options for retrieving subclasses of the class. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>Returns the collection of all classes derived from this class, asynchronously.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>Retrieves all classes derived from this class, asynchronously, using the specified options.</summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="options">The specified additional options to use in the derived class retrieval. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>Gets or sets a collection of <see cref="T:System.Management.MethodData" /> objects that represent the methods defined in the WMI class.</summary>
      <returns>A <see cref="T:System.Management.MethodDataCollection" /> representing the methods defined in the WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>Gets or sets the path of the WMI class to which the <see cref="T:System.Management.ManagementClass" /> object is bound.</summary>
      <returns>The path of the object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>Provides methods to convert DMTF datetime and time intervals to CLR-compliant <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" /> format and vice versa.                           </summary>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>Converts a given DMTF datetime to <see cref="T:System.DateTime" />. The returned <see cref="T:System.DateTime" /> will be in the current time zone of the system.          </summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the given DMTF datetime.</returns>
      <param name="dmtfDate">A string representing the datetime in DMTF format.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>Converts a given <see cref="T:System.DateTime" /> to DMTF datetime format.          </summary>
      <returns>A string that represents the DMTF datetime for the given <see cref="T:System.DateTime" />.</returns>
      <param name="date">A <see cref="T:System.DateTime" /> representing the datetime to be converted to DMTF datetime.</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>Converts a given <see cref="T:System.TimeSpan" /> to DMTF time interval.          </summary>
      <returns>A string that represents the DMTF time interval for the given <see cref="T:System.TimeSpan" />.</returns>
      <param name="timespan">A <see cref="T:System.TimeSpan" /> representing the datetime to be converted to DMTF time interval.             </param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>Converts a given DMTF time interval to a <see cref="T:System.TimeSpan" />.          </summary>
      <returns>A <see cref="T:System.TimeSpan" /> that represents the given DMTF time interval.</returns>
      <param name="dmtfTimespan">A string representation of the DMTF time interval.</param>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>Represents the virtual base class to hold event data for WMI events.          </summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>Gets the operation context echoed back                   from the operation that triggered the event.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value for an operation context.</returns>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>Subscribes to temporary event notifications based on a specified event query.          </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class. For further initialization, set the properties on the object. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query.          </summary>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" />              class that listens for events conforming to the given WMI event query.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.  </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified objects. The options object can specify options such as time-out and context information.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen. </param>
      <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query in the form of a string.          </summary>
      <param name="query"> A WMI event query, which defines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query. For this variant, the query and the scope are specified as strings.          </summary>
      <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">The query that defines the events for which the watcher will listen. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options. For this variant, the query and the scope are specified as strings. The options object can specify options such as a time-out and context information.          </summary>
      <param name="scope">The management scope (namespace) in which the watcher will listen for events.</param>
      <param name="query">The query that defines the events for which the watcher will listen.  </param>
      <param name="options">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events. </param>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>Occurs when a new event arrives.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>Ensures that outstanding calls are cleared. This is the destructor for the object. In C#, finalizers are expressed using destructor syntax. </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>Gets or sets the options used to watch for events. </summary>
      <returns>Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>Gets or sets the criteria to apply to events.      </summary>
      <returns>Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>Gets or sets the scope in which to watch for events (namespace or scope).      </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>Cancels the subscription whether it is synchronous or asynchronous.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>Occurs when a subscription is canceled.</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>Waits for the next event that matches the specified query to arrive, and then returns it.          </summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>Represents management exceptions.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class.          </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class that is serializable.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> destination for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementException" />              class with a specified error message.          </summary>
      <param name="message">The message that describes the error. </param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>Initializes an empty new instance of the <see cref="T:System.Management.ManagementException" /> class. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</summary>
      <param name="message">The message that describes the error. </param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>Gets the error code reported by WMI, which caused this exception.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> enumeration value that contains the error code.</returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>Gets the extended error object provided by WMI.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> that contains extended error information.</returns>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:System.Management.ManagementException" />.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> destination for this serialization.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>Represents a collection of named values suitable for use as context information to WMI operations. The names are case-insensitive.          </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class, which is empty. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class that is serializable                 and uses the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.          </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>Adds a single-named value to the collection.          </summary>
      <param name="name">The name of the new value.</param>
      <param name="value">The value to be associated with the name.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>Creates a clone of the collection. Individual values are cloned. If a value does not support cloning, then a <see cref="T:System.NotSupportedException" /> is thrown.           </summary>
      <returns>The new copy of the collection.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>Gets the value associated with the specified name from this collection. In C#, this property is the indexer for the <see cref="T:System.Management.ManagementNamedValueCollection" /> class.  </summary>
      <returns>Returns an <see cref="T:System.Object" /> value that is associated with the specified name from this collection.</returns>
      <param name="name">The name of the value to be returned. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>Removes a single-named value from the collection. If the collection does not contain an element with the specified name, the collection remains unchanged and no exception is thrown.          </summary>
      <param name="name">The name of the value to be removed. </param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>Removes all entries from the collection.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>Represents a WMI instance. </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class. This is the default constructor.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI object path. The path is provided as a <see cref="T:System.Management.ManagementPath" />.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> that contains a path to a WMI object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, including the specified additional options.</summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the WMI path. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> containing additional options for binding to the WMI object. This parameter could be null if default options are to be used. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path that includes the specified options.</summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which the WMI object resides. In this version, scopes can only be WMI namespaces. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> representing the WMI path to the manageable object. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> specifying additional options for getting the object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class that is serializable.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI object path. The path is provided as a string.</summary>
      <param name="path">A WMI path. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, including the specified additional options. In this variant, the path can be specified as a string.</summary>
      <param name="path">The WMI path to the object. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing options to get the specified WMI object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, and includes the specified options. The scope and the path are specified as strings.</summary>
      <param name="scopeString">The scope for the WMI object. </param>
      <param name="pathString">The WMI object path. </param>
      <param name="options">An <see cref="T:System.Management.ObjectGetOptions" /> representing additional options for getting the WMI object. </param>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>Gets or sets the path to the object's class.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> representing the path to the object's class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>Creates a copy of the object.</summary>
      <returns>The copied object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying the path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>Copies the object to a different location, asynchronously.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The path to which the object should be copied. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>Copies the object to a different location.</summary>
      <returns>The new path of the copied object.</returns>
      <param name="path">The path to which the object should be copied. </param>
      <param name="options">The options for how the object should be put. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>Deletes the object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>Deletes the object.</summary>
      <param name="options">The options for how to delete the object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>Deletes the object.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>Deletes the object.</summary>
      <param name="watcher">The object that will receive the results of the operation. </param>
      <param name="options">The options for how to delete the object. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>Releases all resources used by the Component.</summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>Binds WMI class information to the management object.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>Binds to the management object asynchronously.</summary>
      <param name="watcher">The object to receive the results of the operation as events. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>Returns a <see cref="T:System.Management.ManagementBaseObject" /> representing the list of input parameters for a method.</summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters to the method.</returns>
      <param name="methodName">The name of the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data necessary to deserialize the field represented by this instance.          </summary>
      <param name="info">The object to be populated with serialization information.</param>
      <param name="context">The location where serialized data will be stored and retrieved.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>Gets a collection of objects related to the object (associators) asynchronously. This call returns immediately, and a delegate is called when the results are available.</summary>
      <param name="watcher">The object to use to return results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of related objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">Return only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <param name="relatedClass">A class of related objects. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of objects related to the object (associators).</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.</returns>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The associations to include. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of associations to the object.</summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <param name="relationshipClass">The associations to include. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>Gets a collection of associations to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</returns>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Invokes a method on the object, asynchronously.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the asynchronous execution's progress and results. </param>
      <param name="methodName">The name of the method to be executed. </param>
      <param name="inParameters">A <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters for the method. </param>
      <param name="options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options used to execute the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>Invokes a method on the object, asynchronously.</summary>
      <param name="watcher">The object to receive the results of the operation. </param>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>Invokes a method on the WMI object. The input and output parameters are represented as <see cref="T:System.Management.ManagementBaseObject" /> objects.</summary>
      <returns>A <see cref="T:System.Management.ManagementBaseObject" /> containing the output parameters and return value of the executed method.</returns>
      <param name="methodName">The name of the method to execute. </param>
      <param name="inParameters">A <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method. </param>
      <param name="options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options for the execution of the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>Invokes a method on the object.</summary>
      <returns>The object value returned by the method.</returns>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>Gets or sets additional information to use when retrieving the object.</summary>
      <returns>An <see cref="T:System.Management.ObjectGetOptions" /> to use when retrieving the object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>Gets or sets the object's WMI path.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> representing the object's path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>Commits the changes to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>Commits the changes to the object, asynchronously.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>Commits the changes to the object asynchronously and using the specified options.</summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation. </param>
      <param name="options">A <see cref="T:System.Management.PutOptions" /> used to specify additional options for the commit operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>Commits the changes to the object.</summary>
      <returns>A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed object.</returns>
      <param name="options">The options for how to commit the changes. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>Gets or sets the scope in which this object resides.</summary>
      <returns>A <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>Returns the full path of the object. This is an override of the default object implementation.</summary>
      <returns>The full path of the object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>Represents different collections of management objects retrieved through WMI. The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />. The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type. In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />. The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the collection to an array.          </summary>
      <param name="array">An array to copy to. </param>
      <param name="index">The index to start from. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.          </summary>
      <param name="objectCollection">The target array.</param>
      <param name="index">The index to start from. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>Gets a value indicating the number of objects in the collection.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value indicating the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>Releases resources associated with this object. After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.                       </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>Disposes of resources the object is holding. This is the destructor for the object. Finalizers are expressed using destructor syntax. </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>Returns the enumerator for the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.</summary>
      <returns>Returns an <see cref="T:System.Object" /> value that represents the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</returns>
    </member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>Represents the enumerator on the collection. </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Management.ManagementBaseObject" /> that this enumerator points to.</summary>
      <returns>The current object in the enumeration.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>Releases resources associated with this object. After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> exception being thrown.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>Disposes of resources the object is holding. This is the destructor for the object. Finalizers are expressed using destructor syntax.</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>Indicates whether the enumerator has moved to the next object in the enumeration.</summary>
      <returns>true, if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the collection.</summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>Retrieves a collection of management objects based on a specified query. This class is one of the more commonly used entry points to retrieving management information. For example, it can be used to enumerate all disk drives, network adapters, processes and many more management objects on a system, or to query for all network connections that are up, services that are paused, and so on.  When instantiated, an instance of this class takes as input a WMI query represented in an <see cref="T:System.Management.ObjectQuery" /> or its derivatives, and optionally a <see cref="T:System.Management.ManagementScope" /> representing the WMI namespace to execute the query in. It can also take additional advanced options in an <see cref="T:System.Management.EnumerationOptions" />. When the <see cref="M:System.Management.ManagementObjectSearcher.Get" /> method on this object                   is invoked, the <see cref="T:System.Management.ManagementObjectSearcher" /> executes the given query in the specified scope and returns a collection of management objects that match the query in a <see cref="T:System.Management.ManagementObjectCollection" />. </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class. After some properties on this object are set, the object can be used to invoke a query for management information. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query in the specified scope.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which to invoke the query.</param>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class to be used to invoke the specified query in the specified scope, with the specified options.          </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> specifying the scope of the query.</param>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> specifying the query to be invoked. </param>
      <param name="options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options to be used for the query. </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query for management information.          </summary>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked by the searcher.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query for management information.          </summary>
      <param name="queryString">The WMI query to be invoked by the object.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query in the specified scope.          </summary>
      <param name="scope">The scope in which to query.</param>
      <param name="queryString">The query to be invoked.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified query, in the specified scope, and with the specified options.          </summary>
      <param name="scope">The scope in which the query should be invoked.</param>
      <param name="queryString">The query to be invoked. </param>
      <param name="options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options for the query.  </param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>Invokes the specified WMI query and returns the resulting collection.          </summary>
      <returns>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the objects that match the specified query.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>Invokes the WMI query asynchronously, and binds to a watcher to deliver the results.          </summary>
      <param name="watcher">The watcher that raises events triggered by the operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>Gets or sets the options for how to search for objects.          </summary>
      <returns>Returns an <see cref="T:System.Management.EnumerationOptions" /> that contains the options for searching for WMI objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>Gets or sets the query to be invoked in the searcher (that is, the criteria to be applied to the search for management objects).          </summary>
      <returns>Returns an <see cref="T:System.Management.ObjectQuery" /> that contains the query to be invoked in the searcher.</returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>Gets or sets the scope in which to look for objects (the scope represents a WMI namespace).          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope (namespace) in which to look for the WMI objects.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>Manages asynchronous operations and handles management information and events received asynchronously.          </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementOperationObserver" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>Cancels all outstanding operations.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>Occurs when an operation has completed.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>Occurs when an object has been successfully committed.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>Occurs when a new object is available.</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>Occurs to indicate the progress of an ongoing operation.</summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>Provides an abstract base class for all options objects.</summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>Gets or sets a WMI context object. This is a name-value pairs list to be passed through to a WMI provider that supports context information for customized operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementNamedValueCollection" /> that contains WMI context information. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>Indicates that no timeout should occur.</summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>Gets or sets the time-out to apply to the operation. Note that for operations that return collections, this time-out applies to the enumeration through the resulting collection, not the operation itself (the <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />                   property is used for the latter). This property is used to indicate that the operation should be performed semisynchronously.                       </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> that defines the time-out time to apply to the operation.</returns>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>Provides a wrapper for parsing and building paths to WMI objects.          </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class that is empty. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class for the given path.          </summary>
      <param name="path"> The object path. </param>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>Gets or sets the class portion of the path.                       </summary>
      <returns>Returns a <see cref="T:System.String" /> value that holds the class portion of the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>Returns a copy of the <see cref="T:System.Management.ManagementPath" />.          </summary>
      <returns>The cloned object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>Gets or sets the default scope path used when no scope is specified. The default scope is \\.\root\cimv2, and can be changed by setting this property.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> that contains the default scope (namespace) path used when no scope is specified.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>Gets or sets a value indicating whether this is a class path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a class path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>Gets or sets a value indicating whether this is an instance path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is an instance path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>Gets or sets a value indicating whether this is a singleton instance path.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a singleton instance path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>Gets or sets the namespace part of the path. Note that this does not include the server name, which can be retrieved separately.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the namespace part of the path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>Gets or sets the string representation of the full path in the object.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the full path.</returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>Gets or sets the relative path: class name and keys only.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relative path.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>Gets or sets the server part of the path.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the server name.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>Sets the path as a new class path. This means that the path must have a class name but not key values.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>Sets the path as a new singleton object path. This means that it is a path to an instance but there are no key values.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.  </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>Returns the full object path as the string representation.          </summary>
      <returns>A string containing the full object path represented by this object. This value is equivalent to the value of the <see cref="P:System.Management.ManagementPath.Path" /> property.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>Provides an abstract base class for all management query objects.           </summary>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly. If the query is valid, the class name property and condition property of the query will be parsed.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>Gets or sets the query language used in the query string, defining the format of the query string.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the format of the query string.</returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>Gets or sets the query in text format.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>Represents a scope (namespace) for management operations.           </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class, with default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path.          </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to a server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, with the specified options.          </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to the server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">The <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection. </param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path.          </summary>
      <param name="path">The server and namespace path for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, with the specified options.          </summary>
      <param name="path">The server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name="options">A <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection. </param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>A new copy of the <see cref="T:System.Management.ManagementScope" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>Connects this <see cref="T:System.Management.ManagementScope" /> to the actual WMI scope.          </summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>Gets a value indicating whether the <see cref="T:System.Management.ManagementScope" /> is currently bound to a WMI server and namespace.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the scope is currently bound to a WMI server and namespace.</returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>Gets or sets options for making the WMI connection.          </summary>
      <returns>Returns a <see cref="T:System.Management.ConnectionOptions" /> that contains the options for making a WMI connection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>Gets or sets the path for the <see cref="T:System.Management.ManagementScope" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> containing the path to the scope (namespace).</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>Creates a new object that is a copy of the current instance.  </summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>Describes the enumeration of all WMI error codes that are currently defined. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>The operation was successful. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>This value is returned when no more objects are available, the number of objects returned is less than the number requested, or at the end of an enumeration. It is also returned when the method is called with a value of 0 for the parameter.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>An overridden property was deleted. This value is returned to signal that the original, non-overridden value has been restored as a result of the deletion.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>The compared items (such as objects and classes) are not identical.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>A call timed out. This is not an error condition; therefore, some results may have been returned.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>No more data is available from the enumeration; the user should terminate the enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>The operation was canceled.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>A request is still in progress; however, the results are not yet available.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>More than one copy of the same object was detected in the result set of an enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>The user did not receive all of the requested objects because of inaccessible resources (other than security violations).</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>The call failed.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>The object could not be found. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>The current user does not have permission to perform the action. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>The provider failed after initialization. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>A type mismatch occurred. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>There was not enough memory for the operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>The context object is not valid.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>One of the parameters to the call is not correct. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>The resource, typically a remote server, is not currently available. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>An internal, critical, and unexpected error occurred. Report this error to Microsoft Technical Support.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>One or more network packets were corrupted during a remote session.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>The feature or operation is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>The specified superclass is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>The specified namespace could not be found. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>The specified instance is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>The specified class is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>A provider referenced in the schema does not have a corresponding registration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>A provider referenced in the schema has an incorrect or incomplete registration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>COM cannot locate a provider referenced in the schema. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>A component, such as a provider, failed to initialize for internal reasons. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary> A networking error that prevents normal operation has occurred. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>The requested operation is not valid. This error usually applies to invalid attempts to delete classes or properties. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>The query was not syntactically valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>The requested query language is not supported.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>In a put operation, the wbemChangeFlagCreateOnly flag was specified, but the instance already exists.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>The add operation cannot be performed on the qualifier because the owning object does not permit overrides.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>The user attempted to delete a qualifier that was not owned. The qualifier was inherited from a parent class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>The user attempted to delete a property that was not owned. The property was inherited from a parent class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>The client made an unexpected and illegal sequence of calls. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>The user requested an illegal operation, such as spawning a class from an instance.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>There was an illegal attempt to specify a key qualifier on a property that cannot be a key. The keys are specified in the class definition for an object and cannot be altered on a per-instance basis.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>The current object is not a valid class definition. Either it is incomplete, or it has not been registered with WMI using <see cref="M:System.Management.ManagementObject.Put" />().</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>The property that you are attempting to modify is read-only.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>The provider cannot perform the requested operation, such as requesting a query that is too complex, retrieving an instance, creating or updating a class, deleting a class, or enumerating a class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>An attempt was made to make a change that would invalidate a derived class.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>An attempt has been made to delete or modify a class that has instances. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>A value of null was specified for a property that may not be null, such as one that is marked by a Key, Indexed, or Not_Null qualifier.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>The value provided for a qualifier was not a legal qualifier type.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>The CIM type specified for a property is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>The request was made with an out-of-range value, or is incompatible with the type. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>An illegal attempt was made to make a class singleton, such as when the class is derived from a non-singleton class.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>The CIM type specified is not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>The requested method is not available. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>The parameters provided for the method are not valid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>There was an attempt to get qualifiers on a system property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>The property type is not recognized. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>An asynchronous process has been canceled internally or by the user. Note that because of the timing and nature of the asynchronous operation, the operation may not have been truly canceled. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>The user has requested an operation while WMI is in the process of closing.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>An attempt was made to reuse an existing method name from a superclass, and the signatures did not match. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>One or more parameter values, such as a query text, is too complex or unsupported. WMI is requested to retry the operation with simpler parameters. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>A parameter was missing from the method call. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>A method parameter has an invalid ID qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>One or more of the method parameters have ID qualifiers that are out of sequence. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>The return value for a method has an ID qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>The specified object path was invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>There is not enough free disk space to continue the operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>The supplied buffer was too small to hold all the objects in the enumerator or to read a string property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>The provider does not support the requested put operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>An object with an incorrect type or version was encountered during marshaling. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>A packet with an incorrect type or version was encountered during marshaling. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>The packet has an unsupported version. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>The packet is corrupted.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>An attempt has been made to mismatch qualifiers, such as putting [ManagementKey] on an object instead of a property. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>A duplicate parameter has been declared in a CIM method. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>Reserved for future use. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>The delivery of an event has failed. The provider may choose to re-raise the event.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>The specified flavor was invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>An attempt has been made to create a reference that is circular (for example, deriving a class from itself). </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>The specified class is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>An attempt was made to change a key when instances or derived classes are already using the key. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>An attempt was made to change an index when instances or derived classes are already using the index. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>An attempt was made to create more properties than the current version of the class supports. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>A property was redefined with a conflicting type in a derived class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>An attempt was made in a derived class to override a non-overrideable qualifier. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>A method was redeclared with a conflicting signature in a derived class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>An attempt was made to execute a method not marked with [implemented] in any relevant class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>An attempt was made to execute a method marked with [disabled]. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>The refresher is busy with another operation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>The filtering query is syntactically invalid. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>The FROM clause of a filtering query references a class that is not an event class. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>A GROUP BY clause was used without the corresponding GROUP WITHIN clause. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>A GROUP BY clause was used. Aggregation on all properties is not supported. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>Dot notation was used on a property that is not an embedded object. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>A GROUP BY clause references a property that is an embedded object without using dot notation. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>An event provider registration query (__EventProviderRegistration) did not specify the classes for which events were provided. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>An request was made to back up or restore the repository while WinMgmt.exe was using it. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>The asynchronous delivery queue overflowed from the event consumer being too slow. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>The operation failed because the client did not have the necessary security privilege. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>The operator is not valid for this property type.</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>The user specified a user name, password, or authority on a local connection. The user must use an empty user name and password and rely on default security. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>The class was made abstract when its superclass is not abstract. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>An amended object was used in a put operation without the WBEM_FLAG_USE_AMENDED_QUALIFIERS flag being specified. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>The client was not retrieving objects quickly enough from an enumeration. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>The provider registration overlaps with the system event domain. </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>A WITHIN clause was not used in this query. </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>Contains information about a WMI method.          </summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>Gets the input parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it appears in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" /> properties.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters to the method.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>Gets the name of the method.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the method.</returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>Gets the name of the management class in which the method was first introduced in the class inheritance hierarchy.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the class in which the method was first introduced in the class inheritance hierarchy.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>Gets the output parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it will appear in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" /> properties.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the output parameters for the method.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>Gets a collection of qualifiers defined in the method. Each element is of type <see cref="T:System.Management.QualifierData" /> and contains information such as the qualifier name, value, and flavor.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> containing the qualifiers for the method.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>Represents the set of methods available in the collection.          </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will add a new method with no parameters to the collection.          </summary>
      <param name="methodName">The name of the method to add.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will add a new method with the specified parameter objects to the collection.          </summary>
      <param name="methodName">The name of the method to add.</param>
      <param name="inParameters">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method. </param>
      <param name="outParameters">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the collection. </param>
      <param name="index">The index from which to start. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.          </summary>
      <param name="methodArray">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</param>
      <param name="index">The index in the destination array from which to start the copy.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.         </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</returns>
      <param name="methodName">The name of the method requested.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.          </summary>
      <param name="methodName">The name of the method to remove from the collection.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.MethodData" /> objects in the <see cref="T:System.Management.MethodDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>Returns the current <see cref="T:System.Management.MethodData" /> in the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.MethodData" /> item in the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next method; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>Specifies options for getting a management object.          </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using the specified provider-specific context.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using the given options values.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.TimeSpan.MaxValue" />.  </param>
      <param name="useAmendedQualifiers">true if the returned objects should contain amended (locale-aware) qualifiers; otherwise, false. </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> event.          </summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>Gets the identity of the object that has been put.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementPath" /> containing the path of the object that has been put.</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> event.  </summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ObjectPutEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>Represents a management query that returns instances or classes.          </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class with no initialized values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class for a specific query string.          </summary>
      <param name="query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> class for a specific query string and language.          </summary>
      <param name="language">The query language in which this query is specified.</param>
      <param name="query">The string representation of the query. </param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.             </returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> event.          </summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>Gets the newly-returned object.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementBaseObject" /> containing the newly-returned object.</returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ObjectReadyEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementOperationObserver.Progress" /> event.          </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>Gets the current amount of work done by the operation. This is always less than or equal to <see cref="P:System.Management.ProgressEventArgs.UpperBound" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the current amount of work already completed by the operation.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>Gets or sets optional additional information regarding the operation's progress.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing information regarding the operation's progress.</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>Gets the total amount of work required to be done by the operation.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the total amount of work to be done by the operation.</returns>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementOperationObserver.Progress" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.ProgressEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>Represents information about a WMI property.          </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>Gets a value indicating whether the property is an array.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the property is an array.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>Gets a value indicating whether the property has been defined in the current WMI class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the property has been defined in the current WMI class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>Gets the name of the property.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the property name.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>Gets the name of the WMI class in the hierarchy in which the property was introduced.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the WMI class in the hierarchy in which the property was introduced.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>Gets the set of qualifiers defined on the property.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierDataCollection" /> containing the set of qualifiers defined on the property.</returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>Gets the CIM type of the property.          </summary>
      <returns>Returns a <see cref="T:System.Management.CimType" /> enumeration value representing the CIM type of the property.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>Gets or sets the current value of the property.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value representing the value of the property.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>Represents the set of properties of a WMI object.</summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.          </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyType">The Common Information Model (CIM) type of the property.</param>
      <param name="isArray">true to specify that the property is an array type; otherwise, false.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value. The value cannot be null and must be convertible to a Common Information Model (CIM) type.          </summary>
      <param name="propertyName">The name of the new property.</param>
      <param name="propertyValue">The value of the property (cannot be null).</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and Common Information Model (CIM) type.          </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyValue">The value of the property (which can be null).</param>
      <param name="propertyType">The CIM type of the property.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object array.          </summary>
      <param name="propertyArray">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</param>
      <param name="index">The index in the destination array from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>Gets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>Gets the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax. This property is the indexer for the <see cref="T:System.Management.PropertyDataCollection" /> class.</summary>
      <returns>Returns a <see cref="T:System.Management.PropertyData" /> containing the data for a specified property in the collection.</returns>
      <param name="propertyName">The name of the property to retrieve.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.          </summary>
      <param name="propertyName">The name of the property to be removed.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value containing the object to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.PropertyDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.PropertyDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.PropertyData" /> objects in the <see cref="T:System.Management.PropertyDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Management.PropertyData" /> in the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.PropertyData" /> element in the collection.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>Specifies options for committing management object changes.          </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for put operations, using default values. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using the specified provider-specific context.          </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using the specified option values.          </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.TimeSpan.MaxValue" />. </param>
      <param name="useAmendedQualifiers">true if the returned objects should contain amended (locale-aware) qualifiers; otherwise, false. </param>
      <param name="putType">The type of commit to be performed (update or create). </param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>Returns a copy of the object.          </summary>
      <returns>The cloned object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>Gets or sets the type of commit to be performed for the object.          </summary>
      <returns>Returns a <see cref="T:System.Management.PutType" /> enumeration value representing the type of commit to be performed for the object.</returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>Gets or sets a value indicating whether the objects returned from WMI should                   contain amended information. Typically, amended information is localizable information attached to the WMI object, such as object and property descriptions.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the objects returned from WMI should contain amended information.</returns>
    </member>
    <member name="T:System.Management.PutType">
      <summary>Describes the possible effects of saving an object to WMI when using <see cref="M:System.Management.ManagementObject.Put" />.          </summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>No change.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>Updates an existing object only; does not create a new object.</summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>Creates an object only; does not update an existing object.</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>Saves the object, whether updating an existing object or creating a new object.</summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>Contains information about a WMI qualifier.          </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>Gets or sets a value indicating whether the qualifier is amended.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier is amended.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>Gets a value indicating whether the qualifier has been defined locally on this class or has been propagated from a base class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier has been defined locally on this class or has been propagated from a base class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>Gets or sets a value indicating whether the value of the qualifier can be overridden when propagated.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the value of the qualifier can be overridden when propagated.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>Represents the name of the qualifier.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier.</returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>Gets or sets a value indicating whether the qualifier should be propagated to instances of the class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier should be propagated to instances of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>Gets or sets a value indicating whether the qualifier should be propagated to                    subclasses of the class.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the qualifier should be propagated to subclasses of the class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>Gets or sets the value of the qualifier.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value containing the value of the qualifier.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.          </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload specifies the qualifier name and value.          </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="qualifierValue">The value for the new qualifier. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload specifies all property values for a <see cref="T:System.Management.QualifierData" />.          </summary>
      <param name="qualifierName">The qualifier name. </param>
      <param name="qualifierValue">The qualifier value. </param>
      <param name="isAmended">true to specify that this qualifier is amended (flavor); otherwise, false. </param>
      <param name="propagatesToInstance">true to propagate this qualifier to instances; otherwise, false. </param>
      <param name="propagatesToSubclass">true to propagate this qualifier to subclasses; otherwise, false. </param>
      <param name="isOverridable">true to specify that this qualifier's value is overridable in instances of subclasses; otherwise, false. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.          </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized              <see cref="T:System.Management.QualifierData" /> array.          </summary>
      <param name="qualifierArray">The specialized array of <see cref="T:System.Management.QualifierData" /> objects to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</param>
      <param name="index">The index from which to start copying. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>Gets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />. This method is strongly typed.          </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>Gets a value indicating whether the object is synchronized.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.          </summary>
      <returns>Returns a <see cref="T:System.Management.QualifierData" /> containing the data for a specified qualifier in the collection.</returns>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.          </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to remove. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>Gets the object to be used for synchronization.          </summary>
      <returns>Returns an <see cref="T:System.Object" /> value to be used for synchronization.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.QualifierDataCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.QualifierDataCollection" />.</returns>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>Represents the enumerator for <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />. </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>Gets or sets the current <see cref="T:System.Management.QualifierData" /> in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
      <returns>The current <see cref="T:System.Management.QualifierData" /> element in the collection.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>Moves to the next element in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>Resets the enumerator to the beginning of the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current object in the collection.</summary>
      <returns>Returns the current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>Represents a WQL ASSOCIATORS OF data query. It can be used for both instances and schema queries.           </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for a schema query using the given set of parameters. This constructor is used for schema queries only: the first parameter must be set to true                .          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false .</param>
      <param name="sourceObject">The path of the source class.</param>
      <param name="relatedClass">The related objects' required base class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class. If the specified string can be successfully parsed as a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source object for the query. In this case, the query is assumed to be an instance query.           </summary>
      <param name="queryOrSourceObject">The query string or the path of the source object.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given source object and related class. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object for this query.</param>
      <param name="relatedClass">The related objects' class.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given set of parameters. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object.</param>
      <param name="relatedClass">The related objects' required class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">true to return only the class definitions of the related objects; otherwise, false .</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>Gets or sets a value indicating that for all instances that adhere to the query, only their class definitions be returned. This parameter is only valid for instance queries.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating that for all instances that adhere to the query, only their class definitions are to be returned.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this is a schema query or an instance query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this is a schema query.</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>Gets or sets the class of the endpoint objects (the related class).          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the related class name.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>Gets or sets a qualifier required to be defined on the related objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the related object.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>Gets or sets the role that the related objects returned should be playing in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of the related objects.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>Gets or sets the type of relationship (association).          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relationship class name. </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>Gets or sets a qualifier required to be defined on the relationship objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the relationship objects.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>Gets or sets the source object to be used for the query. For instance queries, this is typically an instance path. For schema queries, this is typically a class name.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the path of the object to be used for the query.</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>Gets or sets the role that the source object should be playing in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of this object.</returns>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>Represents a WQL REFERENCES OF data query.           </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for a schema query using the given set of parameters. This constructor is used for schema queries only, so the first parameter must be true.          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false.</param>
      <param name="sourceObject">The path of the source class for this query.</param>
      <param name="relationshipClass">The type of relationship for which to query.</param>
      <param name="relationshipQualifier">A qualifier required to be present on the relationship class.</param>
      <param name="thisRole">The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class. If the specified string can be successfully parsed as a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source object for the query. In this case, the query is assumed to be an instances query.           </summary>
      <param name="queryOrSourceObject">The query string or the class name for this query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given source object and relationship class. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject"> The path of the source object for this query.</param>
      <param name="relationshipClass"> The type of relationship for which to query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given set of parameters. The query is assumed to be an instance query (as opposed to a schema query).          </summary>
      <param name="sourceObject">The path of the source object for this query.</param>
      <param name="relationshipClass">The type of relationship for which to query.</param>
      <param name="relationshipQualifier">A qualifier required to be present on the relationship object.</param>
      <param name="thisRole">The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">When this method returns, it contains a Boolean that indicates that only class definitions for the resulting objects are returned.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>Gets or sets a value indicating that only the class definitions of the relevant relationship objects be returned.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating that only the class definitions of the relevant relationship objects be returned.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this query is a schema query or an instance query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether this query is a schema query.</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>Gets or sets the class of the relationship objects wanted in the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the relationship class name.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>Gets or sets a qualifier required on the relationship objects.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the qualifier required on the relationship objects.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>Gets or sets the source object for this query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the path of the object to be used for the query.</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>Gets or sets the role of the source object in the relationship.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the role of this object.</returns>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>Represents a WQL SELECT data query.          </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class for a schema query, optionally specifying a condition.          </summary>
      <param name="isSchemaQuery">true to indicate that this is a schema query; otherwise, false. A false value is invalid in this constructor.</param>
      <param name="condition">The condition to be applied to form the result set of classes. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class for the specified query or the specified class name.          </summary>
      <param name="queryOrClassName">The entire query or the class name to use in the query. The parser in this class attempts to parse the string as a valid WQL SELECT query. If the parser is unsuccessful, it assumes the string is a class name.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class with the specified class name and condition.          </summary>
      <param name="className">The name of the class to select in the query.</param>
      <param name="condition">The condition to be applied in the query. </param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class with the specified class name and condition, selecting only the specified properties.          </summary>
      <param name="className">The name of the class from which to select.</param>
      <param name="condition">The condition to be applied to instances of the selected class. </param>
      <param name="selectedProperties">An array of property names to be returned in the query results. </param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>Gets or sets the class name to be selected from in the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the class in the query.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>Gets or sets the condition to be applied in the SELECT query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition to be applied to the SELECT query.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>Gets or sets a value indicating whether this query is a schema query or an instances query.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether the query is a schema query.</returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>Gets or sets the query in the <see cref="T:System.Management.SelectQuery" /> object, in string form.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>Ggets or sets an array of property names to be selected in the query.          </summary>
      <returns>Returns a <see cref="T:System.Collections.Specialized.StringCollection" /> containing the names of the properties to be selected in the query.</returns>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>Holds event data for the <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> event.          </summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>Gets the completion status of the operation.          </summary>
      <returns>Returns a <see cref="T:System.Management.ManagementStatus" /> containing the status of the operation.</returns>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> event.</summary>
      <param name="sender">The instance of the object for which to invoke this method.</param>
      <param name="e">The <see cref="T:System.Management.StoppedEventArgs" /> that specifies the reason the event was invoked.</param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>Describes the possible text formats that can be used with <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" />.          </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>Managed Object Format</summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>XML DTD that corresponds to CIM DTD version 2.0.             </summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>XML WMI DTD that corresponds to CIM DTD version 2.0. Using this value enables a few WMI-specific extensions, like embedded objects.             </summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>Represents a WMI event query in WQL format.          </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class based on the given query string or event class name.          </summary>
      <param name="queryOrEventClassName">The string representing either the entire event query or the name of the event class to query. The object will try to parse the string as a valid event query. If unsuccessful, the parser will assume that the parameter represents an event class name.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class for the specified event class name, with the specified condition.          </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name="condition">The condition to apply to events of the specified class. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, and grouping interval.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, grouping interval, and grouping properties.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events.</param>
      <param name="groupByPropertyList">The properties in the event class by which the events should be grouped.  </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class for the specified event class, with the specified latency time.          </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered.  </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, polling interval, and condition.          </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered. </param>
      <param name="condition">The condition to apply to events of the specified class. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> class with the specified event class name, condition, grouping interval, grouping properties, and specified number of events.          </summary>
      <param name="eventClassName">The name of the event class on which to be queried.</param>
      <param name="withinInterval">A <see cref="T:System.TimeSpan" /> value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered.</param>
      <param name="condition">The condition to apply to events of the specified class. </param>
      <param name="groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
      <param name="groupByPropertyList">The properties in the event class by which the events should be grouped. </param>
      <param name="havingCondition">The condition to apply to the number of events. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>Builds the query string according to the current property values.                       </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>Gets or sets the condition to be applied to events of the specified class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition or conditions in the event query.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>Gets or sets the event class to query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the event class in the event query.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>Gets or sets properties in the event to be used for grouping events of the same type.          </summary>
      <returns>Returns a <see cref="T:System.Collections.Specialized.StringCollection" /> containing the properties in the event to be used for grouping events of the same type.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>Gets or sets the interval to be used for grouping events of the same type.          </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> value containing the interval used for grouping events of the same type.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>Gets or sets the condition to be applied to the aggregation of events, based on the number of events received.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the condition applied to the aggregation of events, based on the number of events received.</returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>Parses the query string and sets the property values accordingly.                       </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>Gets  the language of the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value that contains the query language that the query is written in.</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>Gets or sets the string representing the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the query.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>Gets or sets the polling interval to be used in this query.          </summary>
      <returns>Returns a <see cref="T:System.TimeSpan" /> value containing the polling interval used in the event query.</returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>Represents a WMI data query in WQL format.          </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class initialized to the specified query.          </summary>
      <param name="query"> The representation of the data query.</param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>Creates a copy of the object.          </summary>
      <returns>The copied object.             </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>Gets the language of the query.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the language of the query.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>Represents classes derived from <see cref="T:System.Management.Instrumentation.BaseEvent" /> that are known to be management event classes. These derived classes inherit an implementation of <see cref="T:System.Management.Instrumentation.IEvent" /> that allows events to be fired through the <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" /> method.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.BaseEvent" /> class.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>Raises a management event.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>Installs an instrumented assembly. To use this default project installer, derive a class from <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> inside the assembly. No methods need to be overridden.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> class. This is the default constructor.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>Specifies a source of a management instrumentation event. Objects that implement this interface are known to be sources of management instrumentation events. Classes that do not derive from <see cref="T:System.Management.Instrumentation.BaseEvent" /> should implement this interface instead.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>Raises a management event.          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>Causes the associated member of an instrumented class to be ignored by management instrumentation.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" /> class          </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>Specifies a source of a management instrumentation instance. Objects that implement this interface are known to be sources of management instrumentation instances. Classes that do not derive from <see cref="T:System.Management.Instrumentation.Instance" /> should implement this interface instead.          </summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>Gets or sets a value indicating whether instances of classes that implement this interface are visible through management instrumentation.                       </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether instances of classes that implement this interface are visible through management instrumentation.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>Represents derived classes known to be management instrumentation instance classes. These derived classes inherit an implementation of <see cref="T:System.Management.Instrumentation.IInstance" /> that allows instances to be published through the <see cref="P:System.Management.Instrumentation.IInstance.Published" /> property.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.Instance" /> class.            </summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>Gets or sets a value indicating whether instances of classes that implement this interface are visible through management instrumentation.          </summary>
      <returns>Returns a <see cref="T:System.Boolean" /> value indicating whether instances of classes that implement this interface are visible through management instrumentation.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>Provides helper functions for exposing events and data for management. There is a single instance of this class per application domain.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.Instrumentation" /> class.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>Raises a management event.          </summary>
      <param name="eventData">The object that determines the class, properties, and values of the event.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>Determines if the instrumentation schema of the specified assembly has already been correctly registered with WMI.          </summary>
      <returns>true if the instrumentation schema in the specified assembly is registered with WMI; otherwise, false.</returns>
      <param name="assemblyToRegister">The <see cref="T:System.Reflection.Assembly" /> containing instrumentation instance or event types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>Makes an instance visible through management instrumentation.          </summary>
      <param name="instanceData">The object that is to be visible through management instrumentation.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Registers the management instance or event classes in the specified assembly with WMI. This ensures that the instrumentation schema is accessible to <see cref="N:System.Management" /> client applications.          </summary>
      <param name="assemblyToRegister">The <see cref="T:System.Reflection.Assembly" /> containing instrumentation instance or event types.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>Makes an instance that was previously published through the <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />             method no longer visible through management instrumentation.          </summary>
      <param name="instanceData">The object to remove from visibility for management instrumentation.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>Specifies the maximum number of objects of the specified type to be provided at a time.                       </summary>
      <param name="instrumentationClass">The class for which the batch size is being set.</param>
      <param name="batchSize">The maximum number of objects to be provided at a time.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>Specifies that a class provides event or instance instrumentation.                       </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that is used if this type is derived from another type that has the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> attribute, or if this is a top-level instrumentation class (for example, an instance or abstract class                without a base class, or an event derived from __ExtrinsicEvent).          </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that has schema for an existing base class. The class must contain proper member definitions for the properties of the existing WMI base class.          </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
      <param name="managedBaseClassName">The name of the base class.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>Gets or sets the type of instrumentation provided by this class.          </summary>
      <returns>Returns an <see cref="T:System.Management.Instrumentation.InstrumentationType" /> enumeration value containing the type of instrumentation provided by this class.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>Gets or sets the name of the base class of this instrumentation class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the base class of this instrumentation class.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>Specifies the type of instrumentation provided by a class.           </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>The class provides instances for management instrumentation.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>The class provides events for management instrumentation.</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>The class defines an abstract class for management instrumentation.</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set for the root\default namespace. This is the default constructor.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace for instrumentation within this assembly.          </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace and security settings for instrumentation within this assembly.          </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
      <param name="securityDescriptor"> A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>Gets or sets the namespace for instrumentation instances and events in this assembly.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the name of the namespace for instrumentation instances and events in this assembly.</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>Gets or sets a security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>Allows an instrumented class, or member of an instrumented class, to present an alternate name through management instrumentation.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> class that allows the alternate name to be specified for the type, field, property, method, or parameter to which this attribute is applied.          </summary>
      <param name="name">The alternate name for the type, field, property, method, or parameter to which this attribute is applied.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>Gets the name of the managed entity.          </summary>
      <returns>Returns a T:System.String value containing the name of the managed entity.</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>Installs instrumented assemblies. Include an instance of this installer class in the project installer for an assembly that includes instrumentation.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementInstaller" /> class.          </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>Commits the assembly to the operation.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>Gets or sets installer options for this class.          </summary>
      <returns>Returns a <see cref="T:System.String" /> value containing the installer options for this class.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>Installs the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Rolls back the state of the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Uninstalls the assembly.          </summary>
      <param name="savedState">The state of the assembly.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.IdentityModel.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IdentityModel</name>
  </assembly>
  <members>
    <member name="T:System.IdentityModel.Claims.Claim">
      <summary>Represents a claim that is associated with an entity. </summary>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.#ctor(System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.Claim" /> class with the specified type, resource, and right.</summary>
      <param name="claimType">A uniform resource identifier (URI) that represents a claim type. </param>
      <param name="resource">The object with which the new claim is associated.</param>
      <param name="right">The URI of the right associated with the claim.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claimType" /> is null.-or-<paramref name="right" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="claimType" /> is zero length.-or-<paramref name="right" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.ClaimType">
      <summary>Gets the type of the claim. </summary>
      <returns>A URI that represents the type of the claim.</returns>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateDenyOnlyWindowsSidClaim(System.Security.Principal.SecurityIdentifier)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents a deny-only specified security identifier (SID).</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the SID specified in the <paramref name="sid" /> parameter.</returns>
      <param name="sid">A <see cref="T:System.Security.Principal.SecurityIdentifier" />  that represents the deny-only SID.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sid" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateDnsClaim(System.String)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified Domain Name System (DNS) name.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="dns">The DNS name of the entity associated with the claim. This parameter must not be null. If this parameter is null, this method throws a <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="dns" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateHashClaim(System.Byte[])">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified hash value.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="hash">An array of byte values that specifies a hash value. This parameter must not be null. If this parameter is null, this method throws a <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="hash" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateMailAddressClaim(System.Net.Mail.MailAddress)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified email address.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="mailAddress">A <see cref="T:System.Net.Mail.MailAddress" /> that specifies the email address this claim represents. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="mailAddress" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateNameClaim(System.String)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified name.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="name">The name of the entity associated with the claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateRsaClaim(System.Security.Cryptography.RSA)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified RSA key.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> object that represents an RSA cryptographic key. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="rsa" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateSpnClaim(System.String)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified Service Principal Name (SPN).</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="spn">The SPN of the entity associated with this claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="spn" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateThumbprintClaim(System.Byte[])">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified thumbprint.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="thumbprint">An array of byte values that specifies the thumbprint of the entity associated with the claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="thumbprint" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateUpnClaim(System.String)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified Universal Principal Name (UPN).</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="upn">The UPN of the entity associated with this claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="upn" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateUriClaim(System.Uri)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified Uniform Resource Locator (URL).</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="uri">A <see cref="T:System.Uri" /> that represents the URL of the entity associated with this claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="uri" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateWindowsSidClaim(System.Security.Principal.SecurityIdentifier)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified security identifier (SID).</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the SID specified in the <paramref name="sid" /> parameter.</returns>
      <param name="sid">A <see cref="T:System.Security.Principal.SecurityIdentifier" />  that represents the SID.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sid" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.CreateX500DistinguishedNameClaim(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
      <summary>Creates a <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the specified X.500 distinguished name.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> object this method creates.</returns>
      <param name="x500DistinguishedName">A <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> that specifies the X.500 distinguished name of the entity associated with the claim. This parameter must not be null. If this parameter is null, this method throws an <see cref="T:System.ArgumentNullException" /> exception.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="x500DistinguishedName" /> parameter is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.DefaultComparer">
      <summary>Gets an object that can compare two <see cref="T:System.IdentityModel.Claims.Claim" /> objects for equality.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interface implementation that compares two <see cref="T:System.IdentityModel.Claims.Claim" /> objects.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same claim as the current <see cref="T:System.IdentityModel.Claims.Claim" /> object.</summary>
      <returns>true if <paramref name="obj" /> represents the same claim as the current <see cref="T:System.IdentityModel.Claims.Claim" />; otherwise false.</returns>
      <param name="obj">The object to compare with the current <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.GetHashCode">
      <summary>Returns a hash code for the current claim.</summary>
      <returns>The hash code for the claim.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.Resource">
      <summary>Gets the resource with which this <see cref="T:System.IdentityModel.Claims.Claim" /> object is associated.</summary>
      <returns>The resource with which this <see cref="T:System.IdentityModel.Claims.Claim" /> object is associated. </returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.Right">
      <summary>A string representation of a uniform resource identifier (URI) that specifies the right associated with this <see cref="T:System.IdentityModel.Claims.Claim" /> object. Pre-defined rights are available as static properties of the <see cref="T:System.IdentityModel.Claims.Rights" /> class.</summary>
      <returns>A URI that specifies the right associated with this <see cref="T:System.IdentityModel.Claims.Claim" /> object.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Claim.System">
      <summary>A pre-defined claim that represents the system entity.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.Claim" /> object that represents the system entity. This <see cref="T:System.IdentityModel.Claims.Claim" /> object has the property values shown in the following table.PropertyValue<see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /><see cref="P:System.IdentityModel.Claims.ClaimTypes.System" /><see cref="P:System.IdentityModel.Claims.Claim.Resource" />System<see cref="P:System.IdentityModel.Claims.Claim.Right" /><see cref="P:System.IdentityModel.Claims.Rights.Identity" /></returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.Claim.ToString">
      <summary>Returns a string representation of this <see cref="T:System.IdentityModel.Claims.Claim" /> object.</summary>
      <returns>This <see cref="T:System.IdentityModel.Claims.Claim" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.ClaimSet">
      <summary>Represents the collection of claims that are associated with an entity.</summary>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> class.</summary>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)">
      <summary>Determines whether the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> contains the specified <see cref="T:System.IdentityModel.Claims.Claim" />.</summary>
      <returns>true if the specified claim is contained in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />; otherwise false.</returns>
      <param name="claim">The <see cref="T:System.IdentityModel.Claims.Claim" /> for which to search.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Determines whether the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> contains the specified <see cref="T:System.IdentityModel.Claims.Claim" />, by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object.</summary>
      <returns>true if the specified claim is contained in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />; otherwise false.</returns>
      <param name="claim">The <see cref="T:System.IdentityModel.Claims.Claim" /> for which to search.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object used to make the comparison.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Count">
      <summary>When overridden in a derived class, gets the number of claims in this claim set.</summary>
      <returns>The number of claims in this <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.FindClaims(System.String,System.String)">
      <summary>When overridden in a derived class, searches for a <see cref="T:System.IdentityModel.Claims.Claim" /> object that matches the specified claim type and rights in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>A<see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that enables you to enumerate the claims that matches the specified criteria.</returns>
      <param name="claimType">The uniform resource identifier (URI) of a claim type. Several claim types are available as static properties of the <see cref="T:System.IdentityModel.Claims.ClaimTypes" /> class.</param>
      <param name="right">The URI of the right associated with the new claim. Several rights are available as static properties of the <see cref="T:System.IdentityModel.Claims.Rights" /> class.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.GetEnumerator">
      <summary>When overridden in a derived class, gets a <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Issuer">
      <summary>When overridden in a derived class, gets the entity that issued this <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that issued this <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Item(System.Int32)">
      <summary>When overridden in a derived class, gets the <see cref="T:System.IdentityModel.Claims.Claim" /> for the specified index.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> at the specified index.</returns>
      <param name="index">The index of the claim to be retrieved.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.System">
      <summary>Gets a <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that represents an application trusted issuer.</summary>
      <returns>The system <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.ClaimSet.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimSet.Windows">
      <summary>Gets a set of claims that contains Windows security identifiers. </summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that contains at least one claim of type <see cref="P:System.IdentityModel.Claims.ClaimTypes.Sid" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.ClaimTypes">
      <summary>Represents the pre-defined types of claims that an entity can claim. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Anonymous">
      <summary>Gets the URI for a claim that specifies the anonymous user.</summary>
      <returns>The URI for a claim that specifies the anonymous user.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Authentication">
      <summary>Gets the URI for a claim that specifies details about whether an identity is authenticated.</summary>
      <returns>The URI for a claim that specifies details about whether an identity is authenticated.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.AuthorizationDecision">
      <summary>Gets the URI for a claim that specifies an authorization decision on an entity.</summary>
      <returns>The URI for a claim that specifies an authorization decision on an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Country">
      <summary>Gets the URI for a claim that specifies the country/region in which an entity resides.</summary>
      <returns>The URI for a claim that specifies a country/region in which an entity resides.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.DateOfBirth">
      <summary>Gets the URI for a claim that specifies the date of birth of an entity.</summary>
      <returns>The URI for a claim that specifies the date of birth of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.DenyOnlySid">
      <summary>Gets the URI for a claim that specifies a deny-only security identifier (SID) for an entity.</summary>
      <returns>The URI for a claim that specifies a deny-only SID for an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Dns">
      <summary>Gets the URI for a claim that specifies the DNS name associated with the computer name or with the alternative name of either the subject or issuer of an X.509 certificate.</summary>
      <returns>The URI for a claim that specifies the DNS name associated with the computer name or with the alternative name of either the subject or issuer of an X.509 certificate.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Email">
      <summary>Gets the URI for a claim that specifies the email address of an entity.</summary>
      <returns>The URI for a claim that specifies the email address of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Gender">
      <summary>Gets the URI for a claim that specifies the gender of an entity.</summary>
      <returns>The URI for a claim that specifies the gender of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.GivenName">
      <summary>Gets the URI for a claim that specifies the given name of an entity.</summary>
      <returns>The URI for a claim that specifies the given name of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Hash">
      <summary>Gets the URI for a claim that specifies a hash value.</summary>
      <returns>The URI for a claim that specifies a hash value.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.HomePhone">
      <summary>Gets the URI for a claim that specifies the home phone number of an entity.</summary>
      <returns>The URI for a claim that specifies the home phone number of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Locality">
      <summary>Gets the URI for a claim that specifies the locale in which an entity resides.</summary>
      <returns>The URI for a claim that specifies the locale in which an entity resides.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.MobilePhone">
      <summary>Gets the URI for a claim that specifies the mobile phone number of an entity.</summary>
      <returns>The URI for a claim that specifies the mobile phone number of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Name">
      <summary>Gets the URI for a claim that specifies the name of an entity.</summary>
      <returns>The URI for a claim that specifies the name of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.NameIdentifier">
      <summary>Gets the URI for a claim that specifies the name of an entity.</summary>
      <returns>The URI for a claim that specifies the name of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.OtherPhone">
      <summary>Gets the URI for a claim that specifies the alternative phone number of an entity.</summary>
      <returns>The URI for a claim that specifies the alternative phone number of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.PostalCode">
      <summary>Gets the URI for a claim that specifies the postal code of an entity.</summary>
      <returns>The URI for a claim that specifies the postal code of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.PPID">
      <summary>Gets the URI for a claim that specifies the private personal identifier (PPI) of an entity.</summary>
      <returns>The URI for a claim that specifies the private personal identifier (PPI) of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Rsa">
      <summary>Gets the URI for a claim that specifies an RSA key.</summary>
      <returns>The URI for a claim that specifies an RSA key.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Sid">
      <summary>Gets the URI for a claim that specifies a security identifier (SID).</summary>
      <returns>The URI for a claim that specifies a security identifier (SID).</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Spn">
      <summary>Gets the URI for a claim that specifies a service principal name (SPN) claim.</summary>
      <returns>The URI for a claim that specifies a service principal name (SPN) claim.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.StateOrProvince">
      <summary>Gets the URI for a claim that specifies the state or province in which an entity resides.</summary>
      <returns>The URI for a claim that specifies the state or province in which an entity resides.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.StreetAddress">
      <summary>Gets the URI for a claim that specifies the street address of an entity.</summary>
      <returns>The URI for a claim that specifies the street address of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Surname">
      <summary>Gets the URI for a claim that specifies the surname of an entity.</summary>
      <returns>The URI for a claim that specifies the surname of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.System">
      <summary>Gets the URI for a claim that identifies the system entity.</summary>
      <returns>The URI for a claim that identifies the system entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Thumbprint">
      <summary>Gets the URI for a claim that specifies a thumbprint.</summary>
      <returns>The URI for a claim that specifies a thumbprint.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Upn">
      <summary>Gets the URI for a claim that specifies a user principal name (UPN).</summary>
      <returns>The URI for a claim that specifies UPN.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Uri">
      <summary>Gets the URI for a claim that specifies a URI.</summary>
      <returns>The URI for a claim that specifies a URI.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.Webpage">
      <summary>Gets the URI for a claim that specifies the Web page of an entity.</summary>
      <returns>The URI for a claim that specifies the Web page of an entity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.ClaimTypes.X500DistinguishedName">
      <summary>Gets the string that contains the URI for a distinguished name claim of an X.509 certificate.</summary>
      <returns>The URI for a distinguished name claim of an X.509 certificate.</returns>
    </member>
    <member name="T:System.IdentityModel.Claims.DefaultClaimSet">
      <summary>Provides a default implementation of the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" /> class, using the specified claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the claims to add to this claim set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.Claim[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" /> class, using the specified claims.</summary>
      <param name="claims">An array of <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the claims to be added to this claim set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.ClaimSet,System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" /> class, using the specified claims.</summary>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that specifies the issuer of the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> specified in the <paramref name="claims" /> parameter.</param>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the claims to add to this claim set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.-or-<paramref name="issuer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.#ctor(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Claims.Claim[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" /> class, using the specified claims.</summary>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that specifies the issuer of the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> specified in the <paramref name="claims" /> parameter.</param>
      <param name="claims">An array of <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the claims to be added to this claim set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.-or-<paramref name="issuer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.ContainsClaim(System.IdentityModel.Claims.Claim)">
      <summary>Determines whether the specified claim is contained within this claim set.</summary>
      <returns>true if the claim is contained in this claim set; otherwise false.</returns>
      <param name="claim">The <see cref="T:System.IdentityModel.Claims.Claim" /> to determine whether it exists in this collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claim" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Count">
      <summary>Gets the number of <see cref="T:System.IdentityModel.Claims.Claim" /> objects in this claim set.</summary>
      <returns>The number of <see cref="T:System.IdentityModel.Claims.Claim" /> objects in this claim set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.FindClaims(System.String,System.String)">
      <summary>Searches for the <see cref="T:System.IdentityModel.Claims.Claim" /> object that matches the specified claim type and rights in the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that enables you to enumerate the claims that match the specified criteria.</returns>
      <param name="claimType">The uniform resource identifier (URI) of a claim type. Several claim types are available as static properties of the <see cref="T:System.IdentityModel.Claims.ClaimTypes" /> class.</param>
      <param name="right">The URI of the right associated with the new claim. Several rights are available as static properties of the <see cref="T:System.IdentityModel.Claims.Rights" /> class.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the <see cref="T:System.IdentityModel.Claims.Claim" /> object in the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.Initialize(System.IdentityModel.Claims.ClaimSet,System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Initializes an instance of the <see cref="T:System.IdentityModel.Claims.DefaultClaimSet" /> class, using the specified claims.</summary>
      <param name="issuer">The <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that issued the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> specified in the <paramref name="claims" /> parameter.</param>
      <param name="claims">The set of <see cref="T:System.IdentityModel.Claims.Claim" /> objects to be included in this claim set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.-or-<paramref name="issuer" /> is null.</exception>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Issuer">
      <summary>Gets the <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that issued this claim set.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object that issued this claim set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.DefaultClaimSet.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.IdentityModel.Claims.Claim" /> for the specified index.</summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> specified by the index.</returns>
      <param name="index">The index of the claim to be retrieved.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.DefaultClaimSet.ToString">
      <summary>Returns this <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object.</summary>
      <returns>This <see cref="T:System.IdentityModel.Claims.ClaimSet" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.Rights">
      <summary>Defines the pre-defined types of rights that can be associated with a <see cref="T:System.IdentityModel.Claims.Claim" /> object.</summary>
    </member>
    <member name="P:System.IdentityModel.Claims.Rights.Identity">
      <summary>Gets a string that specifies that the right represents an identity.</summary>
      <returns>The right that represents an identity.</returns>
    </member>
    <member name="P:System.IdentityModel.Claims.Rights.PossessProperty">
      <summary>Gets a string that specifies that the right represents a property that the entity associated with a claim possesses.</summary>
      <returns>The right that represents a property that the entity associated with a <see cref="T:System.IdentityModel.Claims.Claim" /> object possesses.</returns>
    </member>
    <member name="T:System.IdentityModel.Claims.WindowsClaimSet">
      <summary>Represents a collection of Windows claims that are associated with an entity.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> class by using the Windows user identity specified by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" />  that specifies the Windows identity.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> class by using the Windows user identity specified by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" />  that specifies the Windows identity.</param>
      <param name="includeWindowsGroups">true to include the claims representing the Windows groups to which this user belongs; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.Boolean,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> class by using the Windows user identity specified by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" />  that specifies the Windows identity.</param>
      <param name="includeWindowsGroups">true to include the Windows groups to which this user belongs; otherwise, false.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that specifies the expiration time for the claim set.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> class by using the Windows user identity specified by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" />  that specifies the Windows identity.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that specifies the expiration time for the claim set.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.Boolean,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> class by using the Windows user identity specified by the <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" />  that specifies the Windows identity.</param>
      <param name="authenticationType">The authentication type for the Windows Identity.</param>
      <param name="includeWindowsGroups">true to include the Windows groups to which this user belongs; otherwise, false.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that specifies the expiration time for the claim set.</param>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Count">
      <summary>Gets the number of claims in this collection.</summary>
      <returns>The number of claims in this collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.ExpirationTime">
      <summary>Gets the expiration time for this <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>The <see cref="T:System.DateTime" /> in which this <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> expires.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.FindClaims(System.String,System.String)">
      <summary>Searches for the claim that matches the specified claim type and rights in the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>A System.Collections.Generic.IEnumerable&lt;Claim&gt; object that enables you to enumerate the claims that match the specified criteria.</returns>
      <param name="claimType">The uniform resource identifier (URI) of a claim type.</param>
      <param name="right">The URI of the right associated with the new claim.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the Windows claims in the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the Windows claims in the <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Issuer">
      <summary>Gets the issuer for this <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" />.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of this claim set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.Item(System.Int32)">
      <summary>Gets the claim for the specified index.</summary>
      <returns>The claim for the specified index.</returns>
      <param name="index">The index of the Windows claim to be retrieved.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.WindowsClaimSet.ToString">
      <summary>Returns this <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> object.</summary>
      <returns>This <see cref="T:System.IdentityModel.Claims.WindowsClaimSet" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.WindowsClaimSet.WindowsIdentity">
      <summary>Gets the Windows identity for this claim set.</summary>
      <returns>The <see cref="T:System.Security.Principal.WindowsIdentity" /> for this claim set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Claims.X509CertificateClaimSet">
      <summary>Represents a collection of claims extracted from an X.509 certificate that are associated with an entity.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" /> class by using the specified X.509 certificate.</summary>
      <param name="certificate">The X.509 certificate that is added to the claim set.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Count">
      <summary>Gets the number of X.509 certificate claims in this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" /> object.</summary>
      <returns>The number of X.509 certificate claims in this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.ExpirationTime">
      <summary>Gets the expiration time for this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>The expiration time for this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.FindClaims(System.String,System.String)">
      <summary>Searches for the claim that matches the specified claim type and rights in the <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>A System.Collections.Generic.IEnumerable&lt;Claim&gt; object that enables you to enumerate the claims that match the specified criteria.</returns>
      <param name="claimType">The uniform resource identifier (URI) of a claim type.</param>
      <param name="right">The URI of the right associated with the new claim.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.GetEnumerator">
      <summary>Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the Windows claims in the <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to enumerate the Windows claims in the <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Issuer">
      <summary>Gets the issuer for this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</summary>
      <returns>The issuer for this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.Item(System.Int32)">
      <summary>Gets the claim for the specified index.</summary>
      <returns>The claim for the specified index.</returns>
      <param name="index">The index of the claim to be retrieved.</param>
    </member>
    <member name="M:System.IdentityModel.Claims.X509CertificateClaimSet.ToString">
      <summary>Gets the number of X.509 certificate claims in this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" /> object.</summary>
      <returns>The number of X.509 certificate claims in this <see cref="T:System.IdentityModel.Claims.X509CertificateClaimSet" /> object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Claims.X509CertificateClaimSet.X509Certificate">
      <summary>Gets the X.509 certificate associated with this claim set.</summary>
      <returns>The X.509 certificate associated with this claim set.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.AuthorizationContext">
      <summary>The result of evaluating all authorization policies available from the tokens in the sent message and by calling the <see cref="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" /> method.</summary>
    </member>
    <member name="M:System.IdentityModel.Policy.AuthorizationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> class. </summary>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets">
      <summary>Gets the set of claims associated with an authorization policy.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that contains the set of claims. </returns>
    </member>
    <member name="M:System.IdentityModel.Policy.AuthorizationContext.CreateDefaultAuthorizationContext(System.Collections.Generic.IList{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Evaluate all of the specified authorization policies and create an <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains the result of evaluating all the specified authorization policies.</returns>
      <param name="authorizationPolicies">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.ExpirationTime">
      <summary>Gets the date and time at which this <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object is no longer valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> value that indicates the date and time when this <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object is no longer valid.</returns>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.Id">
      <summary>Gets a unique identifier for this <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object. </summary>
      <returns>A <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object.</returns>
    </member>
    <member name="P:System.IdentityModel.Policy.AuthorizationContext.Properties">
      <summary>Gets a collection of non-claim properties associated with this <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2" /> that specifies a collection of non-claim properties.</returns>
    </member>
    <member name="T:System.IdentityModel.Policy.EvaluationContext">
      <summary>When overridden in a derived class, represents the results of the authorization policies that have been evaluated. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)">
      <summary>Adds a set of claims to the evaluation context.</summary>
      <param name="policy">An <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that represents the authorization policy that is adding claims to the evaluation context.</param>
      <param name="claimSet">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that contains a set of claims.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.ClaimSets">
      <summary>Gets a read-only collection of <see cref="T:System.IdentityModel.Claims.ClaimSet" /> objects that contains the claims added by authorization policies that have been evaluated.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> objects that contains the claims added by authorization policies that have been evaluated.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.Generation">
      <summary>Gets the number of times that claims have been added to the evaluation context.</summary>
      <returns>The number of times that claims have been added to the evaluation context.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.EvaluationContext.Properties">
      <summary>Gets a collection of non-claim properties associated with this <see cref="T:System.IdentityModel.Policy.EvaluationContext" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2" /> that specifies a collection of non-claim properties.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)">
      <summary>Sets the date and time at which this <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> is no longer valid. </summary>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> value that indicates the date and time when this <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> object is no longer valid.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.IAuthorizationComponent">
      <summary>Represents a component that is used to authorize users.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.IAuthorizationComponent.Id">
      <summary>Gets a string that identifies this authorization component. </summary>
      <returns>A string that identifies this authorization component.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Policy.IAuthorizationPolicy">
      <summary>Defines a set of rules for authorizing a user, given a set of claims.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)">
      <summary>Evaluates whether a user meets the requirements for this authorization policy.</summary>
      <returns>false if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, true to state no additional evaluation is required by this authorization policy. </returns>
      <param name="evaluationContext">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</param>
      <param name="state">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer">
      <summary>Gets a claim set that represents the issuer of the authorization policy. </summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.AudienceUriMode">
      <summary>Specifies whether the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token's <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> should be validated.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.Never">
      <summary>Never.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.Always">
      <summary>Always.</summary>
    </member>
    <member name="F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly">
      <summary>Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.</summary>
    </member>
    <member name="T:System.IdentityModel.Selectors.AudienceUriModeValidationHelper">
      <summary>A helper class for the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> class that verifies that the <see cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode" /> property is set to a valid value.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.AudienceUriModeValidationHelper.IsDefined(System.IdentityModel.Selectors.AudienceUriMode)">
      <summary>Gets a value that indicates whether the value of the specified <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> is valid. </summary>
      <returns>true when the <paramref name="validationMode" /> is <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.Always" />, <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly" />, or <see cref="F:System.IdentityModel.Selectors.AudienceUriMode.Never" />; otherwise, false. </returns>
      <param name="validationMode">The <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> to verify its validity.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator">
      <summary>Authenticates a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token using a custom authentication scheme.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.UserNamePasswordValidator)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator" /> class using the specified validator. </summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" />  that authenticates the user name and password using a custom authentication scheme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>Authenticates the specified user name and password and returns the set of authorization policies for <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="userName">The user name associated with the security token.</param>
      <param name="password">The password associated with the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
        <paramref name="userName" /> and <paramref name="password" /> combination are not valid.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator">
      <summary>Authenticates a <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator" /> class by specifying whether the groups that the Windows user belongs to are obtained when the user is authenticated. </summary>
      <param name="includeWindowsGroups">true to get the groups the Windows user belongs to; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to authenticate.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider">
      <summary>Represents a security token provider that provides <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security tokens for a SOAP message sender.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> class using the specified service principal name. </summary>
      <param name="servicePrincipalName">The service principal name to get a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> class using the specified service principal name and whether a client allows a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to impersonate the client's credentials. </summary>
      <param name="servicePrincipalName">The service principal name to get a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token for.</param>
      <param name="tokenImpersonationLevel">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that specifies the degree to which a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token can act on behalf of the client.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> is not Identification or Impersonation.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.KerberosSecurityTokenProvider" /> class using the specified service principal name, client identity, and whether a client allows a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to impersonate the client's credentials. </summary>
      <param name="servicePrincipalName">The service principal name to get a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token for.</param>
      <param name="tokenImpersonationLevel">A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that specifies the degree to which a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token can act on behalf of the client process.</param>
      <param name="networkCredential">A <see cref="T:System.Net.NetworkCredential" /> that represents the identity of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> is not Identification or Impersonation.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.NetworkCredential">
      <summary>Gets the identity of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</summary>
      <returns>A <see cref="T:System.Net.NetworkCredential" /> that represents the identity of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.ServicePrincipalName">
      <summary>Gets the service principal name of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to get.</summary>
      <returns>The service principal name of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to get.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.KerberosSecurityTokenProvider.TokenImpersonationLevel">
      <summary>Gets a value that specifies the degree to which a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token can act on behalf of the client.</summary>
      <returns>A <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that specifies the degree to which a recipient of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token can act on behalf of the client.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator">
      <summary>Authenticates a <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.RsaSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator">
      <summary>Authenticates a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> class using the specified set of authenticators. </summary>
      <param name="supportingAuthenticators">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> that contains the authenticators to authenticate the issuer's <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> security tokens.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> class using the specified set of authenticators and the maximum allowable difference between the sender's and receiver's clocks. </summary>
      <param name="supportingAuthenticators">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> that contains the authenticators to authenticate the issuer's <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> security tokens.</param>
      <param name="maxClockSkew">A <see cref="T:System.TimeSpan" /> that represents the maximum allowable difference between the sender's and receiver's clocks. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris">
      <summary>Gets the set of target URIs for which the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token can be targeted for to be considered valid by this <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains the target URIs for which the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token can be targeted for to be considered valid by this security token authenticator.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode">
      <summary>Gets or sets an <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> that specifies whether the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token's <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> should be validated. </summary>
      <returns>An <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> that specifies whether the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token's <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> should be validated.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Resolves the identity associated with the specified key identifier using the supporting security authenticators provided when the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance was created and returns it as a <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the identity of the specified key identifier.</returns>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to get the identity of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Resolves the identity associated with the specified security token using the supporting token authenticators provided when the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance was created and returns it as a <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the identity of the specified security token.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to get the identity of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Resolves the identity associated with the specified key identifier using the supporting security token authenticators provided when the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance was created and returns it as an <see cref="T:System.Security.Principal.IIdentity" />.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> that represents the identity of the specified key identifier.</returns>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to get the identity of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Resolves the identity associated with the specified security token using the supporting security token authenticators provided when the <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> instance was created and returns it as an <see cref="T:System.Security.Principal.IIdentity" />.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> that represents the identity of the specified security token.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to get the identity of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
      <summary>Validates that the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token was intended for this Web service.</summary>
      <returns>true if the <see cref="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" /> property of the <paramref name="audienceRestrictionCondition" /> parameter is in the <see cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris" /> collection; otherwise, false. </returns>
      <param name="audienceRestrictionCondition">A <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> that specifies the set of target Web services for which the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token is intended.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies that result from the security token authentication.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator">
      <summary>Authenticates a security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value indicating whether the specified security token can be validated by this security token authenticator. </summary>
      <returns>true when token can be validated; otherwise, false. </returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator. </summary>
      <returns>true when <paramref name="token" /> can be validated; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
        <paramref name="token" /> cannot be authenticated by this security token authenticator-or-<paramref name="token" /> is not authenticated.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenManager">
      <summary>Represents a security token manager that specifies how security tokens are provided, authenticated, and serialized. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Gets a security token authenticator that meets the specified security token requirements. </summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> that authenticates security tokens in incoming SOAP messages that meet the specified requirements.</returns>
      <param name="tokenRequirement">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> that specifies the security token requirements.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that matches the specified security token requirements.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Gets a security token provider that meets the specified security token requirements.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> that provides security tokens that meet the specified requirements for outgoing SOAP messages.</returns>
      <param name="tokenRequirement">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> that specifies the security token requirements.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Gets an XML serializer that can serialize security tokens in the specified version of the WS-* specifications.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> to serialize the security tokens.</returns>
      <param name="version">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> that specifies the WS-* specification versions that security tokens adhere to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenProvider">
      <summary>Represents a security token provider that handles security tokens for a SOAP message sender.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to cancel a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</param>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to cancel.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to cancel a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</param>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to cancel.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to get a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that renews a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</param>
      <param name="tokenToBeRenewed">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to renew.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation that renews a security token.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</param>
      <param name="tokenToBeRenewed">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to renew.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Cancels a security token.</summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</param>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to cancel.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Cancels a security token.</summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that cancels the security token.</param>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to cancel.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to cancel a security token.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to cancel a security token.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to get a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to get a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to renew a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to renew the security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)">
      <summary>Gets a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Renews a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</param>
      <param name="tokenToBeRenewed">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to renew.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Renews a security token.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is renewed.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that renews the security token.</param>
      <param name="tokenToBeRenewed">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to renew.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation">
      <summary>Gets a value that indicates whether the security token can be cancelled. </summary>
      <returns>true if the security token can be cancelled; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal">
      <summary>Gets a value that indicates whether the security token is renewable. </summary>
      <returns>true if the security token can be renewed; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult">
      <summary>Encapsulates the results of an asynchronous operation on a delegate.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.#ctor(System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult" />.</summary>
      <param name="token">A security token with which to instantiate the <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult" /></param>
      <param name="callback">The callback method to be called when the asynchronous operation completes.</param>
      <param name="state">The object provided as the last parameter of the asynchronous method call.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.AsyncState">
      <summary>Gets the object passed as the last parameter of the asynchronous method call.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.AsyncWaitHandle">
      <summary>Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles.</summary>
      <returns>Returns <see cref="T:System.Threading.WaitHandle" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.CompletedSynchronously">
      <summary>Returns true if the call completed asynchronously; otherwise, false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.End(System.IAsyncResult)">
      <summary>Complete the asynchronous operation with the specified result.</summary>
      <returns>Returns <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</returns>
      <param name="result">The result of the asynchronous operation.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenAsyncResult.IsCompleted">
      <summary>Returns true if the asynchronous call is completed; otherwise, false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenRequirement">
      <summary>Specifies security token requirements.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)">
      <summary>Gets the specified property for the current <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> instance.</summary>
      <returns>The value of the property to get.</returns>
      <param name="propertyName">The name of the property to get.</param>
      <typeparam name="TValue">The type of the property to get.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize">
      <summary>Gets or sets the required size of the key associated with a security token.</summary>
      <returns>The size of the key, in bits, associated with a security token. The default value is 0.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" /> property is set to a value less than 0.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType">
      <summary>Gets or sets the type of key (asymmetric or symmetric) associated with a security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" /> that specifies the type of key (asymmetric or symmetric) associated with a security token. The default value is SymmetricKey.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage">
      <summary>Gets or sets a value that specifies how the key associated with a security token can be used.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyUsage" /> that specifies how the key associated with a security token can be used. The default value is <see cref="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode">
      <summary>Gets the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for a property that specifies the peer authentication method.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for a property that specifies the peer authentication method.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties">
      <summary>Gets a collection of the non-static properties for the current <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains a collection of the non-static properties for the current <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken">
      <summary>Gets or sets a value that indicates whether the security token must be capable of performing cryptographic operations, such as encryption.</summary>
      <returns>true if the security token must be capable of performing cryptographic operations; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty">
      <summary>Gets the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType">
      <summary>Gets or sets the required security token type.</summary>
      <returns>The required security token type.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty">
      <summary>Gets a value that specifies the name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType" /> property.</summary>
      <returns>The name of the index in the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> collection for the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)">
      <summary>Gets the specified property for the current <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /> instance.</summary>
      <returns>true if the <see cref="P:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties" /> property contains a property value for the property specified in the <paramref name="propertyName" /> property; otherwise, false.</returns>
      <param name="propertyName">The name of the property to get.</param>
      <param name="result">The value of the property specified in the <paramref name="propertyName" /> property.</param>
      <typeparam name="TValue">The type of property to return in the <paramref name="result" /> parameter.</typeparam>
      <exception cref="T:System.ArgumentException">A properties exists with the name specified in the <paramref name="propertyName" /> parameter, but it is not of the same type that is specified in the <paramref name="TValue" /> parameter.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenResolver">
      <summary>Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)">
      <summary>Creates a default security token resolver for the specified security tokens.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that resolves key identifiers and clauses that match the security tokens specified in the <paramref name="tokens" /> parameter. </returns>
      <param name="tokens">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.</param>
      <param name="canMatchLocalId">true to resolve the &lt;SecurityTokenReference&gt; key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Obtains the key that is referenced in the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the key referenced in the specified key identifier clause.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to retrieve the key for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A key could not be retrieved for the key identifier clause specified in the <paramref name="keyIdentifierClause" /> parameter.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</returns>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />  to create a security token for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">A security token cannot be created for the specified key identifier.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Retrieves the security token that matches the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to create a security token for.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Attempts to retrieve the key that is referenced in the specified key identifier clause.</summary>
      <returns>true when a key can be retrieved for the specified key identifier clause; otherwise, false. </returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to retrieve the key for.</param>
      <param name="key">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <summary>Attempts to retrieve the key that is referenced in the specified key identifier clause.</summary>
      <returns>true when a key can be retrieved for the specified key identifier clause; otherwise, false. </returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to retrieve the key for.</param>
      <param name="key">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.</summary>
      <returns>true when a security token can be retrieved for the specified key identifier; otherwise, false. </returns>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />  to create a security token for.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>Attempts to retrieve the security token that matches the specified key identifier clause.</summary>
      <returns>true when a security token can be retrieved for the specified key identifier clause; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to create a security token for.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</summary>
      <returns>true when a security token can be retrieved for the specified key identifier; otherwise, false. </returns>
      <param name="keyIdentifier">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />  to create a security token for.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <summary>When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.</summary>
      <returns>true when a security token can be retrieved for the specified key identifier clause; otherwise, false.</returns>
      <param name="keyIdentifierClause">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />  to create a security token for.</param>
      <param name="token">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause. This parameter is passed uninitialized. </param>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenSerializer">
      <summary>Represents a class that can read and write key identifiers, key identifier clauses, and security tokens.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred to by the specified XML reader. </summary>
      <returns>true when the specified &lt;KeyIdentifier&gt; XML element can be read; otherwise, false. </returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read a clause in a &lt;KeyIdentifier&gt; element referred to by the specified XML reader. </summary>
      <returns>true when the specified key identifier clause can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred to by the specified XML reader. Called by the base class.</summary>
      <returns>true when the specified &lt;KeyIdentifier&gt; element can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the &lt;KeyIdentifier&gt; element referred to by the specified XML reader. Called by the base class.</summary>
      <returns>true when the specified key identifier clause can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the security token pointed at by the specified XML reader.</summary>
      <returns>true when the security token can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>Determines whether this serializer can read the security token pointed at by the specified XML reader. Called by the base class.</summary>
      <returns>true when the security token can be read; otherwise, false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Determines whether this serializer can write the specified key identifier. </summary>
      <returns>true when this serializer can write the specified key identifier; otherwise, false. </returns>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Determines whether this serializer can write the specified key identifier clause.</summary>
      <returns>true when this serializer can write the specified key identifier clause; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Determines whether this serializer can write the specified key identifier clause. Called by the base class.</summary>
      <returns>true when this serializer can write the specified key identifier clause; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Determines whether this serializer can write the specified key identifier. Called by the base class.</summary>
      <returns>true when this serializer can write the specified key identifier; otherwise, false. </returns>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Determines whether this serializer can write the specified security token to XML.</summary>
      <returns>true when the security token can be written; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Determines whether this serializer can write the specified security token to XML. Called by the base class.</summary>
      <returns>true when the security token can be written; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)">
      <summary>Reads the key identifier using specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <summary>Reads the key identifier clause using specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier clause using specified XML reader. Called by the base class.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>Reads the key identifier clause using specified XML reader. Called by the base class.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the security token pointed at by the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
      <param name="tokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="tokenResolver" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the security token pointed at by the specified XML reader. Called by the base class.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</param>
      <param name="tokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="tokenResolver" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Writes the specified key identifier using the specified XML writer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</param>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.-or-<paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Writes the specified key identifier clause using the specified XML writer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</param>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.-or-<paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Writes the specified key identifier clause using the specified XML writer. Called by the base class.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</param>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.-or-<paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Writes the specified key identifier using the specified XML writer. Called by the base class.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</param>
      <param name="keyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifier" /> is null.-or-<paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Writes the specified security token using the specified XML writer. </summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</param>
      <param name="token">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.-or-<paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>Writes the specified security token using the specified XML writer. Called by the base class.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</param>
      <param name="token">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="token" /> is null.-or-<paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.SecurityTokenVersion">
      <summary>Represents the specifications, such as the WS-*specifications, that security tokens are defined in.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenVersion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.SecurityTokenVersion.GetSecuritySpecifications">
      <summary>Gets the collection of supported security specifications.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.String" /> that contains the set of supported security specifications.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNamePasswordValidator">
      <summary>Validates a username and password.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.CreateMembershipProviderValidator(System.Web.Security.MembershipProvider)">
      <summary>Gets an instance of a <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that validates a username and password using the specified membership provider.</summary>
      <returns>An <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that validates a username and password using <paramref name="provider" />. </returns>
      <param name="provider">A <see cref="T:System.Web.Security.MembershipProvider" /> to validate the username and password.  </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.UserNamePasswordValidator.None">
      <summary>Gets a validator that performs no validation on the username and password. As a result, the username and password are always deemed valid.</summary>
      <returns>An <see cref="T:System.IdentityModel.Selectors.UserNamePasswordValidator" /> that performs no validation on the username and password.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate(System.String,System.String)">
      <summary>When overridden in a derived class, validates the specified username and password.</summary>
      <param name="userName">The username to validate.</param>
      <param name="password">The password to validate.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator">
      <summary>Authenticates a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens. </summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="userName">The user name associated with the security token.</param>
      <param name="password">The password associated with the security token.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider">
      <summary>Represents a security token provider that provides <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens for a SOAP message sender.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.UserNameSecurityTokenProvider" /> class using the specified username and password. </summary>
      <param name="userName">The username to get <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token for.</param>
      <param name="password">The password of the user to get a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token for.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets a security token based on the username and password specified in the constructor.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator">
      <summary>Uses Windows authentication to authenticate the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator" /> class by specifying whether the groups that the Windows user belongs to are added to the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property when the user is authenticated. </summary>
      <param name="includeWindowsGroups">true to get the groups the Windows user belongs to; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> security token; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" />  to be validated.</param>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator">
      <summary>Uses Windows authentication to authenticate the user name and password in a <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" /> class </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator" /> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property when the user is authenticated. </summary>
      <param name="includeWindowsGroups">true to get the groups the Windows user belongs to; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)">
      <summary>Authenticates the specified user name and password and returns the set of authorization policies for <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> security tokens.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="userName">The user name associated with the security token.</param>
      <param name="password">The password associated with the security token.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userName" /> contains more than one backslash (\) character.</exception>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509CertificateValidator">
      <summary>Validates an X.509 certificate.</summary>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> class. </summary>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust">
      <summary>Gets a validator that validates the X.509 certificate using a trust chain. </summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Gets a validator that verifies the X.509 certificate by specifying the context and chain policy that is used to build and verify a trust chain. </summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that validates the X.509 certificate using a trust chain.</returns>
      <param name="useMachineContext">true to use the machine context; false to use the current user context.</param>
      <param name="chainPolicy">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build and verify the trust chain.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store or by specifying the context and chain policy that is used to build a certificate trust chain. The certificate is trusted if it passes either verification method.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain.</returns>
      <param name="useMachineContext">true to use the machine context; false to use the current user context.</param>
      <param name="chainPolicy">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" /> that specifies the policy used to build the trust chain.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.None">
      <summary>Gets a validator that performs no validation on an X.509 certificate. As a result, an X.509 certificate is always considered to be valid.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that performs no validation on the X.509 certificate.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain. The certificate is trusted if it passes either verification method.</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store or by building a certificate trust chain.</returns>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust">
      <summary>Gets a validator that verifies the certificate is in the TrustedPeople certificate store</summary>
      <returns>A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies the certificate is in the TrustedPeople certificate store.</returns>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>When overridden in a derived class, validates the X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate to validate.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
      <summary>Authenticates an <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validator. </summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.</summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <param name="mapToWindows">true to map the identity of the certificate to a Windows identity; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.</summary>
      <param name="validator">A <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> that verifies that the certificate is valid.</param>
      <param name="mapToWindows">true to map the identity of the certificate to a Windows identity; otherwise, false. </param>
      <param name="includeWindowsGroups">true to include the groups the Windows user belongs to in the <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> property that is constructed throughout the authentication process; otherwise, false.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Gets a value that indicates whether the specified security token can be validated by this security token authenticator.</summary>
      <returns>true when <paramref name="token" /> is a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token or a class that derives from <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />; otherwise, false.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount">
      <summary>Gets a value that indicates whether to map the X.509 certificate to a Windows account.</summary>
      <returns>true to map the X.509 certificate to a Windows account; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>Authenticates the specified security token and returns the set of authorization policies for the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set of authorization policies in effect for this application.</returns>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to be validated.</param>
    </member>
    <member name="T:System.IdentityModel.Selectors.X509SecurityTokenProvider">
      <summary>Represents a security token provider that provides <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens for a SOAP message sender.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> class by getting an X.509 certificate from the specified certificate store criteria. </summary>
      <param name="storeLocation">One of the <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation" /> values that specifies the certificate store location.</param>
      <param name="storeName">One of the <see cref="T:System.Security.Cryptography.X509Certificates.StoreName" /> values that specifies the certificate store name.</param>
      <param name="findType">One of the<see cref="T:System.Security.Cryptography.X509Certificates.X509FindType" /> values that specifies how to search the certificate store.</param>
      <param name="findValue">The value used to find the X.509 certificate in the certificate store.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="findValue" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">No certificates match the specified criteria.-or-More than one certificate matches the specified criteria.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to get a security token for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Selectors.X509SecurityTokenProvider.Certificate">
      <summary>Gets the X.509 certificate associated with the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token.</summary>
      <returns>Gets an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate of a security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenProvider" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Selectors.X509SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
      <summary>Gets a security token using the X.509 certificate specified in the constructor.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to get.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that specifies the timeout value for the message that gets the security token.</param>
    </member>
    <member name="T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <summary>Base class for asymmetric keys.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>When overridden in a derived class, gets the specified asymmetric cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.Typically, true is passed into the <paramref name="privateKey" /> parameter, as a private key is typically required for decryption.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="privateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>When overridden in a derived class, gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>When overridden in a derived class, gets the deformatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the deformatter algorithm for the digital signature.</returns>
      <param name="algorithm">The deformatter algorithm for the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>When overridden in a derived class, gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
      <summary>When overridden in a derived class, gets a value that indicates whether the private key is available.</summary>
      <returns>true when the private key is available; otherwise, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <summary>Represents a base class for key identifier clauses that are based upon binary data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="identificationData">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identificationData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="identificationData" /> is zero length.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="identificationData">An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="identificationData" /> parameter; otherwise, false. </param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identificationData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="identificationData" /> is zero length.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
      <summary>Gets the binary data that represents the key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
      <summary>Gets the binary data that represents the key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the binary data that represents the key identifier.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
      <summary>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</summary>
      <returns>true if <paramref name="data " />is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method; otherwise, false.</returns>
      <param name="data">An array of <see cref="T:System.Byte" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
      <summary>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</summary>
      <returns>true if the binary data in the <paramref name="data " />parameter starting at the index specified in the <paramref name="offset" /> parameter is equivalent to the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method (starting at index zero); otherwise, false.</returns>
      <param name="data">An array of <see cref="T:System.Byte" /> to compare to.</param>
      <param name="offset">The index in the array at which the comparison starts.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" /> and the binary data returned by the <see cref="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" /> method is identical for the <paramref name="keyIdentifierClause" /> parameter and the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies an encrypted key.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key that is specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <param name="carriedKeyName">A user-readable name that is associated with the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</summary>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted. Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</param>
      <param name="encryptingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" /> property.</param>
      <param name="carriedKeyName">A user-readable name that is associated with the key specified in the <paramref name="encryptedKey" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptionMethod" /> is null.-or-<paramref name="encryptedKey" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encryptedKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
      <summary>Gets a user-readable name that is associated with the encrypted key.</summary>
      <returns>A user-readable name that is associated with the encrypted key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
      <summary>Gets a key identifier for the encrypting key.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
      <summary>Gets the cryptographic algorithm that is used to encrypt the key.</summary>
      <returns>The cryptographic algorithm that is used to encrypt the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
      <summary>Gets the encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</summary>
      <returns>true if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, false.</returns>
      <param name="encryptedKey">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</param>
      <param name="encryptionMethod">The cryptographic algorithm that is used to encrypt the key. </param>
      <param name="carriedKeyName">A user-readable name that is associated with the encrypted key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <summary>Represents a security token that is based upon XML.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> class. </summary>
      <param name="tokenXml">An <see cref="T:System.Xml.XmlElement" /> that represents the XML that is associated with the security token. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" /> property.</param>
      <param name="proofToken">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the proof token for the security token. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" /> property.</param>
      <param name="effectiveTime">A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="internalTokenReference">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is included in a SOAP message in which it is referenced. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> property.</param>
      <param name="externalTokenReference">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is not included in a SOAP message in which it is referenced. Sets the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" /> property.</param>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set authorization policies for this security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenXml" /> is null.-or-<paramref name="proofToken" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies">
      <summary>Gets the collection of authorization policies for this security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the set authorization policies for this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier clause.</summary>
      <returns>true when <paramref name="T" /> is not null and the same type as either the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> that is a key identifier clause for a <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="T" /> is not null and not the same type as one of the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference">
      <summary>Gets a security key identifier clause that references this security token when this security token is not included in the SOAP message in which it is referenced.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is not included in a SOAP message in which it is referenced.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference">
      <summary>Gets a security key identifier clause that references this security token when this security token is included in the SOAP message in which it is referenced.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents a reference to this security token when it is included in a SOAP message in which it is referenced.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equal to the specified key identifier.</summary>
      <returns>true when <paramref name="keyIdentifierClause" /> is not null and matches either the <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" /> or <see cref="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" /> property values; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken">
      <summary>Gets the proof token for the security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the proof token for the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the proof token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the proof token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml">
      <summary>Gets the XML that is associated with the security token. </summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> that represents the XML that is associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString">
      <summary>Returns the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <summary>Represents keys that are generated using symmetric algorithms and are only stored in the local computer's random access memory.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key. </summary>
      <param name="symmetricKey">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="symmetricKey" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="symmetricKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" /> class using the specified symmetric key and a value that indicates whether the binary data must be cloned. </summary>
      <param name="symmetricKey">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</param>
      <param name="cloneBuffer">true to clone the array passed into the <paramref name="symmetricKey" /> parameter; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="symmetricKey" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="symmetricKey" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>Generates a derived key using the specified cryptographic algorithm and parameters for the current key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the derived key.</returns>
      <param name="algorithm">A URI that represents the cryptographic algorithm to use to generate the derived key.</param>
      <param name="label">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</param>
      <param name="derivedKeyLength">The size of the derived key.</param>
      <param name="offset">The position at which the derived key is located in the byte array that is returned from this method.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>Gets a transform that decrypts cipher text using the specified cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>Gets a transform that encrypts XML using the specified cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that encrypts XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
      <summary>Gets the size, in bits, of the initialization vector (IV) that is required for the specified cryptographic algorithm.</summary>
      <returns>The size, in bits, of the initialization vector (IV) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</returns>
      <param name="algorithm">The cryptographic algorithm to get the size of the initialization vector (IV).</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>Gets an instance of the specified keyed hash algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</returns>
      <param name="algorithm">The keyed hash algorithm to get an instance of.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>Gets an instance of the specified symmetric algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</returns>
      <param name="algorithm">The symmetric algorithm to get an instance of.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />,  <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
      <summary>Gets the bytes that represent the symmetric key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the symmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is supported by this class; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <summary>Represents a security token that is based upon a Kerberos ticket that is received in a SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> class using the specified Kerberos ticket. </summary>
      <param name="request">An array of <see cref="T:System.Byte" /> that contains a Kerberos ticket.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> class using the specified Kerberos ticket and unique identifier.</summary>
      <param name="request">An array of <see cref="T:System.Byte" /> that contains the Kerberos ticket.</param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />.</summary>
      <param name="request">An array of bytes that contains the Kerberos ticket.</param>
      <param name="id">A unique identifier for the security token.</param>
      <param name="valueTypeUri">The URI that describes the value type.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest">
      <summary>Gets the Kerberos ticket.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Kerberos ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> and the Kerberos ticket match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey">
      <summary>Gets the symmetric session key for the Kerberos ticket that is associated with this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri">
      <summary>Gets the URI that describes the value type.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity">
      <summary>Gets the Windows user associated with this security token.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <summary>Represents a security token that is based upon a Kerberos ticket that is sent in an SOAP request.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> class using a service that is associated with the specified service principal name. </summary>
      <param name="servicePrincipalName">The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">A Kerberos ticket cannot be obtained for the current user.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> class. </summary>
      <param name="servicePrincipalName">The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" /> property.</param>
      <param name="tokenImpersonationLevel">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values that specifies how the client allows the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token to be impersonated.</param>
      <param name="networkCredential">A <see cref="T:System.Net.NetworkCredential" /> that specifies the user to get a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token for. </param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="servicePrincipalName" /> is null.-or-<paramref name="id" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="networkCredential" /> is not null, not equal to <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" /> and the <see cref="P:System.Net.NetworkCredential.UserName" /> property is empty or null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">A Kerberos ticket cannot be obtained for the specified user.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tokenImpersonationLevel" /> is not Impersonation or Identity.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest">
      <summary>Gets the Kerberos ticket request.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the result Kerberos ticket request.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> and the results of the Kerberos ticket request match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey">
      <summary>Gets the symmetric session key for the Kerberos ticket that is associated with this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> that contains the symmetric session key for the Kerberos ticket that is associated with this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName">
      <summary>Gets the service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</summary>
      <returns>The service principal name for the <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" /> or <see cref="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> class using the specified SHA-1 hash of a Kerberos service ticket. </summary>
      <param name="ticketHash">An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ticketHash" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" /> class using the specified Kerberos ticket, nonce, and key length.</summary>
      <param name="ticketHash">An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</param>
      <param name="derivationLength">The size of the derived key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ticketHash" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ticketHash" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash">
      <summary>Gets the SHA-1 hash of a Kerberos service ticket.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the SHA-1 hash of a Kerberos service ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a security tokens specified in the security header of the SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier and array of types. </summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier, nonce, derived key length an owner security token type.</summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="derivationLength">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> class using the specified identifier an owner security token type. </summary>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. Sets the value of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localId" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="localId" /> is empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId">
      <summary>Gets the value of the wsu:Id attribute for an XML element within the current SOAP message.</summary>
      <returns>The value of the wsu:Id attribute for an XML element within the current SOAP message.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" /> and the values of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> and <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> properties match the current instance; otherwise, false. See the remarks for more details.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified reference and type.</summary>
      <returns>true if the <paramref name="localId" /> and <paramref name="ownerType" /> parameters match the values of the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> and <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" /> properties; otherwise, false. See the remarks for more details.</returns>
      <param name="localId">The value of the wsu:Id attribute for an XML element within the current SOAP message. </param>
      <param name="ownerType">A <see cref="T:System.Type" /> that is the type of security token that is referred to by the <paramref name="localId" /> parameter. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType">
      <summary>Gets the type of security token that is referred to by the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</summary>
      <returns>A <see cref="T:System.Type" /> that contains the type of security token that is referred to by the <see cref="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created from the key identifier clause.</summary>
      <returns>true in all cases.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey">
      <summary>Creates a key using the RSA algorithm.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" /> that is a key created using the RSA algorithm specified in the constructor.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent">
      <summary>Gets the Exponent parameter for the RSA algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Exponent parameter for the RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus">
      <summary>Gets the Modulus parameter for the RSA algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the Modulus parameter for the RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> and the arrays returned by the <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> and <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> methods for the <paramref name="keyIdentifierClause" /> parameter are identical to the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified RSA algorithm.</summary>
      <returns>true if the <see cref="F:System.Security.Cryptography.RSAParameters.Exponent" /> and <see cref="F:System.Security.Cryptography.RSAParameters.Modulus" /> fields of the <paramref name="rsa" /> parameter match the values returned by the <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" /> and <see cref="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" /> methods for the current instance; otherwise, false.</returns>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa">
      <summary>Gets the RSA algorithm that is associated with the key identifier clause.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)">
      <summary>Writes the Base64 encoded Exponent parameter of the RSA algorithm into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the Base64 encoded Exponent parameter of the RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)">
      <summary>Writes the Base64 encoded Modulus parameter of the RSA algorithm into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> to write the Base64 encoded Modulus parameter of the RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityKey">
      <summary>Represents a security key that is generated using the RSA algorithm. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityKey" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">An <see cref="T:System.Security.Cryptography.RSA" /> that represents an RSA algorithm.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /> and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified key using the specified algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Gets the specified asymmetric cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="requiresPrivateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="requiresPrivateKey " />is true and a private key is not available.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Gets the de-formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the de-formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The de-formatter algorithm for the digital signature to get an instance of. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature to get an instance of. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithm " />is not supported. The supported algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey">
      <summary>Gets a value that indicates whether the private key is available.</summary>
      <returns>true when the private key is available; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.RsaSecurityToken">
      <summary>Represents a security token that is based upon key that is created using the RSA algorithm.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> class using the specified RSA algorithm. </summary>
      <param name="rsa">A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> class using the specified RSA algorithm and unique identifier.</summary>
      <param name="rsa">A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rsa" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the type of key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize">
      <summary>Allows the <see cref="T:System.IdentityModel.Tokens.RsaSecurityToken" /> to free resources before it is destroyed by the garbage collector.</summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is of type <see cref="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" /> and the keys match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa">
      <summary>Gets a RSA algorithm that is capable of creating an asymmetric key.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.RSA" /> that represents a RSA algorithm that is capable of creating an asymmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAccessDecision">
      <summary>Specifies whether the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token is granted access to a given resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit">
      <summary>Specifies that access to a resource is granted.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny">
      <summary>Specifies that access to a resource is denied.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate">
      <summary>Specifies that the security token service that issued the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token does not have enough information to determine the access permissions for a particular resource. A recipient of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token must use other means to determine the user's access permissions.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAction">
      <summary>Represents the &lt;saml:Action&gt; element within a SAML assertion that contains an action on a specified resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class using the specified action. </summary>
      <param name="action">The action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> security token seeks to perform on the specified resource.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> is null.-or-<paramref name="action" /> is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> class using the specified action.</summary>
      <param name="action">The action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> security token seeks to perform on the specified resource.</param>
      <param name="ns">The XML namespace in which the <paramref name="action" /> parameter is defined.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> is null.-or-<paramref name="action" /> is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Action">
      <summary>Gets or sets the action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> can perform on the specified resource.</summary>
      <returns>Gets or sets the action that the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token seeks to perform on the specified resource.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set to null.-or-The <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set to <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> property is true and the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is set.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAction.Namespace">
      <summary>Gets or sets the XML namespace in which the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is defined.</summary>
      <returns>The XML namespace in which the <see cref="P:System.IdentityModel.Tokens.SamlAction.Action" /> property is defined.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" /> property is true and the <see cref="P:System.IdentityModel.Tokens.SamlAction.Namespace" /> property is set.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Action&gt; element using the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Action&gt; XML element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature for SAML assertions referenced by the &lt;saml:Advice&gt; XML element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the <see cref="T:System.IdentityModel.Tokens.SamlAction" /> into the specified XML writer as a &lt;saml:Action&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Action&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the &lt;saml:Action&gt; element and its child elements and attributes that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAdvice">
      <summary>Represents the &lt;saml:Advice&gt; element within a SAML assertion that contains additional information provided by the SAML authority.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class using the specified collection of SAML assertions. </summary>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provides additional information for a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertions" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class. </summary>
      <param name="references">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="references" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> class using the specified collections of SAML assertions and SAML assertion references. </summary>
      <param name="references">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</param>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provide additional information for a SAML assertion.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="references" /> contains a null element.-or-<paramref name="assertions" /> contains a null element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences">
      <summary>Gets a collection of references to SAML assertions.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains a collection of references to SAML assertions that provide additional information on a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.Assertions">
      <summary>Gets a collection of SAML assertions.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains SAML assertions that provides additional information for a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Advice&gt; XML element using the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Advice&gt; XML element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature for SAML assertions that contain this &lt;saml:Advice&gt; XML element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;saml:Advice&gt; element does not conform to the XML schema for the &lt;saml:Advice&gt; element.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes this <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> into the specified XML writer as an &lt;saml:Advice&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Advice&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the &lt;saml:Advice&gt; element and its child elements and attributes that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertion">
      <summary>Represents a Security Assertion Markup Language 1.1 (SAML 1.1) assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> class using the specified SAML assertion identifier, issuer of the assertion, the date and time when the assertion was issued, a set of processing conditions, additional information, and a collection of SAML statements.</summary>
      <param name="assertionId">The identifier for the assertion.</param>
      <param name="issuer">The SAML authority that issued this SAML assertion.</param>
      <param name="issueInstant">A <see cref="T:System.DateTime" /> that specifies when the SAML assertion was issued.</param>
      <param name="samlConditions">A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</param>
      <param name="samlAdvice">A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information supplied by the SAML authority that can aide in the processing of the SAML assertion.</param>
      <param name="samlStatements">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contain SAML statements.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionId" /> is null-or-<paramref name="assertionId" /> is <see cref="F:System.String.Empty" />-or-<paramref name="assertionId" /> does not start with a letter or the "_" character.-or-<paramref name="issuer" /> is null-or-<paramref name="issuer" /> is <see cref="F:System.String.Empty" />-or-<paramref name="samlStatements" /> is null-or-<paramref name="samlStatements" /> does not contain any elements-or-<paramref name="samlStatements" /> contains a null element</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Advice">
      <summary>Gets or sets additional information related to the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that specifies additional information that is supplied by the SAML authority that can aide in the processing of the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Advice" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId">
      <summary>Gets or sets the identifier for this assertion.</summary>
      <returns>The identifier for this assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" /> property to null or an empty string.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Conditions">
      <summary>Gets or sets a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that may be taken into account when assessing the validity of the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" /> property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only. </summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant">
      <summary>Gets or sets the date and time when the SAML assertion was issued.</summary>
      <returns>A <see cref="T:System.DateTime" /> expressed in the Coordinated Universal Time (UTC) that specifies when the SAML assertion was issued. </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" /> property. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Issuer">
      <summary>Gets or sets the name of the SAML authority that issued this SAML assertion.</summary>
      <returns>The SAML authority that issued this SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property.</exception>
      <exception cref="T:System.ArgumentException">An attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" /> property to null or an empty string.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion">
      <summary>Gets the major version of the SAML specification to which this SAML assertion conforms.</summary>
      <returns>The major version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion">
      <summary>Gets the minor version of the SAML specification to which this SAML assertion conforms.</summary>
      <returns>The minor version of the SAML specification to which this SAML assertion conforms. The default value is the value of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)">
      <summary>Reads the digital signature for a SAML assertion from an XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the digital signature.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements that are defined in the SAML specification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null-or-the digital signature has not been read from the SAML assertion yet.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML assertion from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML assertion.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.InvalidOperationException">the <see cref="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" /> method had been previously called and that SAML assertion was digitally signed.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not refer to a SAML assertion that is compliant with the SAML 1.1 specification.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials">
      <summary>Gets or sets the security credentials that are used to digitally sign the SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> that is used to digitally sign the SAML assertion.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" /> property is true and an attempt is made to set the <see cref="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />  property.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken">
      <summary>Gets the security token contained in or referenced by a digitally signed SAML assertion.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> contained in or referenced by a digitally signed SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertion.Statements">
      <summary>Gets the set of SAML statements associated with the SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that contains the SAML statements associated with the SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML assertion into the specified XML writer as a &lt;saml:Assertion&gt; element.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML assertion.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing the objects in the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> to XML.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" />  is configured such that serializing it into XML would result non-compliance with the SAML v1.1 specification.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <summary>Represents a &lt;KeyIndentifier&gt; element that references a &lt;saml:Assertion&gt; element in a SOAP message.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> class using the specified SAML assertion identifier. </summary>
      <param name="assertionId">The identifier of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertionId" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> class using the specified SAML assertion identifier, nonce, and key length. </summary>
      <param name="assertionId">The identifier of the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</param>
      <param name="derivationNonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. </param>
      <param name="derivationLength">The size of the derived key. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertionId" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId">
      <summary>Gets the identifier for the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</summary>
      <returns>The identifier for the <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Determines whether the specified key identifier is the same as the current instance.</summary>
      <returns>true when the specified key identifier is the same as the current instance; otherwise, false. </returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be compared.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)">
      <summary>Determines whether the specified SAML assertion identifier is the same as the current instance.</summary>
      <returns>true when <paramref name="assertionId" /> has the same value as the current instance's <see cref="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" /> property; otherwise, false. </returns>
      <param name="assertionId">The SAML assertion identifier to be compared.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString">
      <summary>Returns a <see cref="T:System.String" /> that includes the SAML assertion identifier that represents the current key identifier clause.</summary>
      <returns>A <see cref="T:System.String" /> that includes the SAML assertion identifier that represents the current <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttribute">
      <summary>Represents an attribute that is associated with the subject of a <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class using the specified claim. </summary>
      <param name="claim">A <see cref="T:System.IdentityModel.Claims.Claim" /> that represents an attribute of the subject for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claim" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> property of <paramref name="claim" /> is not of type <see cref="T:System.String" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.Right" /> property of <paramref name="claim" /> is not <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> property of <paramref name="claim" /> does not have a '/' character or it is in the first or last index positions. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> class using the specified attribute name, XML namespace, and attribute values. </summary>
      <param name="attributeNamespace">The XML namespace in which the <paramref name="attributeName" /> parameter is defined.</param>
      <param name="attributeName">The name of the SAML attribute.</param>
      <param name="attributeValues">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the values of the SAML attribute.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeNamespace" /> is null.-or- <paramref name="attributeName" /> is null.-or-<paramref name="attributeValues" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.IdentityModel.Claims.Claim.Resource" /> property of <paramref name="claim" /> is not of type <see cref="T:System.String" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.Right" /> property of <paramref name="claim" /> is not <see cref="P:System.IdentityModel.Claims.Rights.PossessProperty" />.-or-The <see cref="P:System.IdentityModel.Claims.Claim.ClaimType" /> property of <paramref name="claim" /> does not have a '/' character or it is in the first or last index positions. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues">
      <summary>Gets a collection of attribute values for the SAML attribute.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> that contains the set of attribute values for the SAML attribute.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims">
      <summary>Gets a collection of claims that this SAML attribute represents.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims that this SAML attribute represents.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Name">
      <summary>Gets or sets the name of the SAML attribute.</summary>
      <returns>The name of the SAML attribute.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAttribute.Name" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttribute.Namespace">
      <summary>Gets or sets the XML namespace in which the name of the SAML attribute is defined.</summary>
      <returns>The XML namespace in which the name of the SAML attribute is defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML attribute from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML attribute.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not have the AttributeName and AttributeNamespace attributes. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML attribute into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML attribute.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <summary>Contains a set of attributes associated with a particular <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAttributeStatement" /> class using the specified subject and set of attributes associated with the subject.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that specifies the subject of the claim.</param>
      <param name="attributes">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that contains a set of attributes associated with the subject.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlSubject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributes" /> contains a member that is null.-or-<paramref name="attributes" /> contains zero members. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds the specified set of claims as attributes to this SAML statement.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to the SAML statement.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes">
      <summary>Gets a collection of attributes associated with the subject of the SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that contains a set of attributes associated with the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML attribute statement from the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML attribute statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML attribute statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain a &lt;saml:Subject&gt; element-or-<paramref name="reader" /> refers to an XML element that contains a &lt;saml:Attribute&gt; element that does not have an attribute value. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML attribute statement into the specified XML serializer.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML attribute statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <summary>Specifies that a SAML assertion is addressed to a particular audience.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> class with the specified set of audiences a SAML assertion is intended for. </summary>
      <param name="audiences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.Uri" /> that contain a set of intended audiences.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="audiences" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences">
      <summary>Gets the set of audiences a SAML assertion is intended for.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.Uri" /> that contain a set of intended audiences.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;AudienceRestrictionCondition&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;AudienceRestrictionCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;AudienceRestrictionCondition&gt; element has a child &lt;Audience&gt; element does not have a value.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;AudienceRestrictionCondition&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;AudienceRestrictionCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in the SAML assertion that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <summary>Represents the resource type for a claim that is created from a <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, and IP address. </summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, IP address, and reference to additional information.</summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> class using the specified instant in time, authentication method, DNS domain name, IP address, and reference to additional information.</summary>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant">
      <summary>Gets the instant in time at which the subject was authenticated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod">
      <summary>Gets or sets the method that was used to authenticate the subject.</summary>
      <returns>The method that was used to authenticate the subject. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings">
      <summary>Gets additional information about the subject.</summary>
      <returns>An <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress">
      <summary>Gets the DNS domain name in which the computer that authenticated the subject resides.</summary>
      <returns>The DNS domain name in which the computer that authenticated the subject resides.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress">
      <summary>Gets or sets the IP address of the computer that authenticated the subject.</summary>
      <returns>The IP address of the computer that authenticated the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts that the subject was authenticated by a particular means at a particular time.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" /> class using the specified authentication details. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim.</param>
      <param name="authenticationMethod">A URI reference that specifies how the subject was authenticated.</param>
      <param name="authenticationInstant">A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.</param>
      <param name="dnsAddress">The DNS domain name in which the computer that authenticated the subject resides.</param>
      <param name="ipAddress">The IP address of the computer that authenticated the subject.</param>
      <param name="authorityBindings">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds a claim based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant">
      <summary>Gets or sets the instant in time at which the subject was authenticated.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time at which the subject was authenticated.Exception typeCondition<see cref="T:System.InvalidOperationException" />The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod">
      <summary>Gets or sets the method used to authenticate the subject.</summary>
      <returns>The method used to authenticate the subject. The default value is urn:oasis:names:tc:SAML:1.0:am:unspecified.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />  property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings">
      <summary>Gets additional information about the subject.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> that contains additional information about the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType">
      <summary>Gets the type of security claim.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimTypes" /> that specifies the type of security claim. Always http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthentication.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress">
      <summary>Gets or sets the DNS domain name in which the computer that authenticated the subject resides.</summary>
      <returns>The DNS domain name in which the computer that authenticated the subject resides.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress">
      <summary>Gets or sets the IP address of the computer that authenticated the subject.</summary>
      <returns>The IP address of the computer that authenticated the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML authentication statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML authentication statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authentication statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain the AuthenticationInstant and AuthenticationMethod attributes.-or-<paramref name="reader" /> refers to an XML element that does not have a &lt;saml:Subject&gt; child element. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML authentication statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authentication statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <summary>Specifies how to retrieve additional information about the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorityBinding" /> class using the specified query types, protocol binding, and SAML authority location.</summary>
      <param name="authorityKind">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the type of queries that the SAML authority that has additional information about the subject responds to.</param>
      <param name="binding">A URI reference that identifies the SAML protocol binding to use when communicating with the SAML authority that has additional information about the subject.</param>
      <param name="location">A URI reference that describes how to locate and communicate with the SAML authority that has additional information about the subject.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind">
      <summary>Gets or sets the type of queries that the SAML authority that has additional information about the subject, responds to.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the type of queries that the SAML authority that has additional information about the subject, responds to.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />  property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />  property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding">
      <summary>Gets or sets the SAML protocol binding to use when communicating with the SAML authority that has additional information that has additional information about the subject.</summary>
      <returns>A URI reference that identifies the SAML protocol binding to use when communicating with the SAML authority that has additional information that has additional information about the subject.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location">
      <summary>Gets or sets how to locate and communicate with the SAML authority that has additional information that has additional information about the subject.</summary>
      <returns>A URI reference that describes how to locate and communicate with the SAML authority that has additional information about the subject.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" /> property is true.</exception>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" /> property is set to null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;AuthorityBinding&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;AuthorityBinding&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML assertion that are defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not refer to a SAML assertion</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">The &lt;AuthorityBinding&gt; element does not have one of the AuthorityKind, Location, or Binding attributes.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;AuthorityBinding&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;AuthorityBinding&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in the SAML assertion that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts an authorization decision regarding access to a specific resource.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" /> class using the specified resource the subject is seeking access to, the authorization decision regarding the resource, the action sought on the resource, and the XML namespace in which the action is defined. </summary>
      <param name="resource">The resource the subject is seeking access to.</param>
      <param name="accessDecision">The authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</param>
      <param name="actionNamespace">The XML namespace in which the action specified in the <paramref name="action" /> parameter is defined.</param>
      <param name="actionName">The action sought by the subject on the resource specified in the <paramref name="resource" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resource" /> is null.-or-<paramref name="actionName" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision">
      <summary>Gets the authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</summary>
      <returns>The authorization decision rendered by the SAML authority regarding the access to the resource by the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName">
      <summary>Gets the action sought by the subject on the resource specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" /> property.</summary>
      <returns>The action sought by the subject on the resource specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" /> property.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace">
      <summary>Gets the XML namespace in which the action specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" /> property is defined.</summary>
      <returns>The XML namespace in which the action specified in the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" /> property is defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource">
      <summary>Gets the resource the subject is seeking access to.</summary>
      <returns>A URI that represents the resource the subject is seeking access to.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that asserts that an authorization decision regarding access by the subject to the specified resource has been made.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. using the specified subject, resource, authorization decision, and the actions sought by the subject on the resource. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
      <param name="resource">A URI reference that identifies the resource to which access is sought. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" /> property.</param>
      <param name="accessDecision">A <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> that specifies the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" /> property.</param>
      <param name="samlActions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlActions" /> is null.-or-<paramref name="samlActions" /> contains a member that is null.-or-<paramref name="samlSubject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authorityBindings" /> contains a member that is null.-or-<paramref name="resource" /> is null or empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" /> class. using the specified subject, resource, authorization decision, and the actions sought by the subject on the resource.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that represents the subject of the claim. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
      <param name="resource">A URI reference that identifies the resource to which access is sought. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" /> property.</param>
      <param name="accessDecision">A <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> that specifies the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" /> property.</param>
      <param name="samlActions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" /> property.</param>
      <param name="samlEvidence">A <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> that contains a set of SAML assertions that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision">
      <summary>Gets or sets the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource.</summary>
      <returns>One of the <see cref="T:System.IdentityModel.Tokens.SamlAccessDecision" /> values that specify the authorization decision rendered by the SAML authority with respect to access by the subject to the specified resource.Exception typeCondition<see cref="T:System.InvalidOperationException" />The <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />   property is set and the <see cref="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" /> property is true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds claims based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType">
      <summary>Gets the type of security claim.</summary>
      <returns>The type of security claim. Always http://schemas.microsoft.com/mb/2005/09/ClaimType/SamlAuthorizationDecision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence">
      <summary>Gets or sets the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> that contains a set of SAML assertions that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the SAML authorization statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML authorization statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not contain the Resource and Decision attributes.-or-<paramref name="reader" /> refers to an XML element that does not have &lt;saml:Subject&gt;, &lt;saml:Evidence&gt;, and &lt;saml:Action&gt; child elements. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource">
      <summary>The resource to which access is sought by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>A URI reference that identifies the resource to which access is sought. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions">
      <summary>Gets the set of actions that the subject is authorized to perform on the resource.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAction" /> that specifies the set of actions that the subject is authorized to perform on the resource.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML authorization statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authorization statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlCondition">
      <summary>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> class. </summary>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
      <summary>When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
      <summary>When overridden in a derived class, causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>When overridden in a derived class, reads the condition from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the condition.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>When overridden in a derived class, writes the condition into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the condition.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConditions">
      <summary>Represents a set of conditions that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class using the specified timeframe that the SAML assertion is valid.</summary>
      <param name="notBefore">A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> property.</param>
      <param name="notOnOrAfter">A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> property.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> class using the specified timeframe and conditions when the SAML assertion is valid.</summary>
      <param name="notBefore">A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" /> property.</param>
      <param name="notOnOrAfter">A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" /> property.</param>
      <param name="conditions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a set of conditions that a recipient of a SAML assertion must take into account in assessing the validity of the assertion. Sets the <see cref="P:System.IdentityModel.Tokens.SamlConditions.Conditions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="conditions" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.Conditions">
      <summary>Gets the set of conditions that must be taken into consideration when assessing the validity of a SAML assertion.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a set of conditions that a recipient of a SAML assertion must take into account when assessing the validity of the assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotBefore">
      <summary>Gets the earliest instant in time when the SAML assertion is valid. </summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the earliest instant in time when the SAML assertion is valid. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter">
      <summary>Gets the instant in time when the SAML assertion expires.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the instant in time when the SAML assertion expires. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Conditions&gt; element from the specified XML reader.</summary>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Conditions&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:Conditions&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Conditions&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlConstants">
      <summary>Represents a set of constants that are used to set properties of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. This class cannot be inherited. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailName">
      <summary>Gets the name of the attribute used to specify that the subject of a SAML assertion is specified as an e-mail address. This field is constant.</summary>
      <returns>The name of the attribute used to specify that the subject of a SAML assertion is specified as an e-mail address. This field is constant.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace">
      <summary>Gets a URI that states the subject of a SAML assertion is specified as an e-mail address. This field is constant.</summary>
      <returns>A URI that states the subject of a SAML assertion is specified as an e-mail address.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey">
      <summary>Gets a URI that specifies that the recipient of a SAML security token should use the &lt;ds:KeyInfo&gt; element to confirm that the SOAP message was sent by the SAML assertion's subject. This field is constant.</summary>
      <returns>A URI that specifies that the recipient of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token should use the &lt;ds:KeyInfo&gt; element to confirm that the SOAP message was sent by the SAML assertion's subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue">
      <summary>Gets the major version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to. This field is constant.</summary>
      <returns>The major version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to. Always 1.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue">
      <summary>Gets the minor version of the SAML specification used by <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens. This field is constant.</summary>
      <returns>The minor version of the SAML specification. Always 1.The combination of the <see cref="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" /> and <see cref="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" /> properties comprises the version of the SAML specification that <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security tokens conform to.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.Namespace">
      <summary>Gets the XML namespace in which SAML assertions are defined. This field is constant.</summary>
      <returns>The XML namespace in which SAML assertions are defined.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches">
      <summary>Gets a URI that specifies that additional information is not available for a recipient of a SAML security token to confirm that the SOAP message was sent by the SAML assertion's subject. This field is constant.</summary>
      <returns>A URI that specifies that additional information is not available for a recipient of a SAML security token to confirm that the SOAP message was sent by the SAML assertion's subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserName">
      <summary>Gets the name of the attribute used to specify that the subject of a SAML assertion is specified as a Windows domain account. This field is constant.</summary>
      <returns>The name of the attribute used to specify that the subject of a SAML assertion is specified as a Windows domain account. This field is constant.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace">
      <summary>Gets a URI that states the subject of a SAML assertion is specified using a Windows domain account. This field is constant.</summary>
      <returns>A URI that states the subject of a SAML assertion is specified using a Windows domain account.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <summary>Represents a condition that must be taken into account when assessing the validity of a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:DoNotCacheCondition&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:DoNotCacheCondition&gt;.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> does not point to a &lt;saml:DoNotCacheCondition&gt; element.  </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:DoNotCacheCondition&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:DoNotCacheCondition&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="samlSerializer" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlEvidence">
      <summary>Represents the evidence used to render an authorization decision for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertions. </summary>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertions" /> contains a member that is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertion references. </summary>
      <param name="assertionIdReferences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains an identifier for a SAML assertion that specifies the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionIdReferences" /> contains a member that is null or empty.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlEvidence" /> class using the specified set of SAML assertion references and SAML assertions. </summary>
      <param name="assertionIdReferences">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains an identifier for a SAML assertion that specifies the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" /> property.</param>
      <param name="assertions">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision. Sets the <see cref="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" /> property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertionIdReferences" /> contains a member that is null or empty.-or-<paramref name="assertions" /> contains a member that is null.-or-<paramref name="assertionIdReferences" /> and <paramref name="assertions" /> are both null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences">
      <summary>Gets a collection of identifiers for SAML assertions that specify the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains identifiers for SAML assertions that specify the evidence that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.Assertions">
      <summary>Gets the collection of SAML assertions that comprise the evidence that the SAML authority relied on to render the authorization decision.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that contains the evidence that the SAML authority relied on to render the authorization decision.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the evidence from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the evidence.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element that does not have at least one &lt;saml:AssertionIDReference&gt; or &lt;saml:Assertion&gt; child element. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the evidence into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the evidence.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <summary>Represents a claim for a SAML security token that asserts the subject's name.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" /> class using the specified name, the domain in which the name resides, and the format the name is in.</summary>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" /> property.</param>
      <param name="format">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)">
      <summary>Returns a value that indicates whether the instance is equal to the specified object.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" /> and has the same value as this instance; otherwise, false.</returns>
      <param name="obj">An object to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format">
      <summary>Gets a URI reference that represents the format that the subject name of a SAML security token is in.</summary>
      <returns>A URI reference that represents the format that the subject name of a SAML security token is in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode">
      <summary>Returns the hash code for the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</summary>
      <returns>A hash code for the <see cref="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name">
      <summary>Gets the subject name of a SAML security token.</summary>
      <returns>The subject name of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier">
      <summary>Gets the domain in which the subject name of a SAML security token resides in.</summary>
      <returns>The domain in which the subject name of a SAML security token resides in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSecurityToken">
      <summary>Represents a security token that is based upon a SAML assertion.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class using the specified SAML assertion.</summary>
      <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion">
      <summary>Gets the SAML assertion for this security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value indicating whether this security token is capable of creating the specified key identifier. </summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />; otherwise, false. </returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> that is a key identifier clause for a SAML security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> is not of type <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.Id">
      <summary>Gets a unique identifier of the security token. </summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)">
      <summary>Initializes the properties of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> class using the specified SAML assertion.</summary>
      <param name="assertion">A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion for this security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertion" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value indicating whether the key identifier for this instance is equal to the specified key identifier. </summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" /> property; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the first instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSerializer">
      <summary>Serializes and deserializes <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> objects into and from XML documents. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the additional information provided by the SAML authority within a &lt;saml:Advice&gt; element of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAdvice" /> that contains additional information provided by the SAML authority within a &lt;saml:Advice&gt; element of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the additional information provided by the SAML authority.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML assertion from the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAssertion" /> that represents the SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads an attribute of the subject of a SAML security token using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlAttribute" /> that represents a claim that is an attribute of the subject of a SAML security token.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the attributes.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a condition that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlCondition" /> that specifies a condition that must be taken into account when assessing the validity of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML condition.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a set of conditions that must be taken into account when assessing the validity of a SAML assertion using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlConditions" /> that specifies a set of conditions that must be taken into account when assessing the validity of a SAML assertion.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML conditions.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML statement using the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> that represents the SAML statement.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML statement.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)">
      <summary>Replaces the default set of XML elements and attributes that are recognized by this serializer with the specified dictionary of elements and attributes. </summary>
      <param name="dictionary">An <see cref="T:System.Xml.IXmlDictionary" /> that contains the set of XML elements and attributes.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads a SAML security token from the specified XML reader.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlDictionaryReader" /> to read the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="reader" /> refers to an XML element that does not contain a digital signature. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the specified SAML security token into the specified XML serializer.</summary>
      <param name="token">The <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> to write.</param>
      <param name="writer">An <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML authorization statement.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null-or-<paramref name="token" /> is null</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlStatement" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Creates an authorization policy for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that represents an authorization policy for the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> to authenticate the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
      <summary>When overridden in a derived class, gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>When overridden in a derived class, reads the SAML statement from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the SAML statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in the SAML statement that is defined in the SAML specification.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the SAML statement into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the SAML statement.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubject">
      <summary>Represents the subject of a SAML security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class using the specified name, the domain in which the name resides, and the format the name is in.</summary>
      <param name="nameFormat">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" /> property.</param>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> class using the specified name, the domain in which the name resides, the format the name is in, authentication protocols, additional authentication information, and a key identifier.</summary>
      <param name="nameFormat">A URI reference that represents the format that the <paramref name="name" /> parameter is in. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" /> property.</param>
      <param name="nameQualifier">The domain in which the <paramref name="name" /> parameter resides. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" /> property.</param>
      <param name="name">The subject name. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.Name" /> property.</param>
      <param name="confirmations">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of type <see cref="T:System.String" /> that contains URI references that identify the protocols to authenticate the subject. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" /> property.</param>
      <param name="confirmationData">Additional authentication information that can be used by authentication protocols. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" /> property.</param>
      <param name="securityKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that provides access to a cryptographic key held by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="confirmations" /> contains a null or <see cref="F:System.String.Empty" /> member.-or-<paramref name="confirmations" /> does not contain any members and <paramref name="name" /> is null or is <see cref="F:System.String.Empty" />.-or-<paramref name="confirmations" /> does not contain any members and <paramref name="confirmationData" /> or <paramref name="securityKeyIdentifier" /> are not null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods">
      <summary>Gets a set of URI references that identify the protocols that should be used to authenticate the subject.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.String" /> that contains a set of URI references that identify the protocols that should be used to authenticate the subject.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Crypto">
      <summary>Gets or sets the cryptographic key that is used to verify the digital signature that is identified by this SAML subject statement.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to verify the digital signature for a SAML security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims">
      <summary>Gets a set of claims using the properties of this class.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims represented by this <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Gets a set of claims using the properties of this class and the specified SAML security token authenticator.</summary>
      <returns>A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that contains the set of claims represented by this <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> instance.</returns>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> that authenticates the portion of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token that corresponds to the &lt;saml:Subject&gt; element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlAuthenticator" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier">
      <summary>Gets or sets a key identifier that provides access to a cryptographic key held by the subject of the SAML security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that provides access to a cryptographic key held by the subject of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.Name">
      <summary>Gets or sets the subject name of a SAML security token.</summary>
      <returns>The subject name of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType">
      <summary>Gets the claim type that is used to represent the subject name of a SAML security token. </summary>
      <returns>The claim type that is used to represent the subject name of a SAML security token (<see cref="P:System.IdentityModel.Claims.ClaimTypes.NameIdentifier" />).</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameFormat">
      <summary>Gets or sets a URI reference that represents the format that the subject name of a SAML security token is in.</summary>
      <returns>A URI reference that represents the format that the subject name of a SAML security token is in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier">
      <summary>Gets or sets the domain in which the subject name of a SAML security token resides in.</summary>
      <returns>The domain in which the subject name of a SAML security token resides in.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>Reads the &lt;saml:Subject&gt; element from the specified XML reader.</summary>
      <param name="reader">A <see cref="T:System.Xml.XmlDictionaryReader" /> to read the &lt;saml:Subject&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of reading XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that reads the KeyInfo clause of the digital signature.</param>
      <param name="outOfBandTokenResolver">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token that created the digital signature.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> is null.-or-<paramref name="samlSerializer" /> is null.</exception>
      <exception cref="T:System.IdentityModel.Tokens.SecurityTokenException">
        <paramref name="reader" /> refers to an XML element in which one of the following is true:Contains an &lt;saml:NameIdentifier&gt; element without a value.-or-Contains an &lt;saml:ConfirmationMehtod&gt; element without a value.-or-Contains a &lt;saml:SubjectConfirmation&gt; element that does not have at least one &lt;saml:ConfirmationMethod&gt; child element.-or-Does not contain at least one &lt;saml:ConfirmationMethod&gt; or &lt;saml:NameIdentifier&gt; element. </exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="reader" /> refers to an XML element that contains a &lt;ds:KeyInfo&gt; element that does not have a key that can be retrieved.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData">
      <summary>Gets or sets additional authentication information that can be used by authentication protocols. </summary>
      <returns>Additional authentication information that can be used by authentication protocols.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>Writes the &lt;saml:Subject&gt; element into the specified XML serializer.</summary>
      <param name="writer">A <see cref="T:System.Xml.XmlDictionaryWriter" /> to write the &lt;saml:Subject&gt; element.</param>
      <param name="samlSerializer">A <see cref="T:System.IdentityModel.Tokens.SamlSerializer" /> that is capable of writing XML elements in a SAML assertion.</param>
      <param name="keyInfoSerializer">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that is capable of writing KeyInfo clauses.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <summary>Represents a claim for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SamlSubjectStatement" /> class using the specified subject. </summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token. Sets the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <summary>Adds a claim based on the properties of this instance to the specified collection of claims.</summary>
      <param name="claims">An <see cref="T:System.Collections.Generic.IList`1" /> of type <see cref="T:System.IdentityModel.Claims.Claim" /> that contains the set of claims to add to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="claims" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <summary>Creates an authorization policy for a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that represents an authorization policy for the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <param name="issuer">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <param name="samlAuthenticator">A <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> to authenticate the <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
      <summary>Gets a value indicating whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject">
      <summary>Gets or sets the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" /> property is set and the <see cref="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)">
      <summary>Sets the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</summary>
      <param name="samlSubject">A <see cref="T:System.IdentityModel.Tokens.SamlSubject" /> that identifies the subject of a <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="samlSubject" /> is null.</exception>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <summary>Defines constants for the URIs that represent the cryptographic algorithms that are used to encrypt XML and compute digital signatures for SOAP messages.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption">
      <summary>Specifies a URI that points to the 128-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap">
      <summary>Specifies a URI that points to the 128-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption">
      <summary>Specifies a URI that points to the 192-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap">
      <summary>Specifies a URI that points to the 192-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption">
      <summary>Specifies a URI that points to the 256-bit AES cryptographic algorithm for encrypting XML. This field is constant. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap">
      <summary>Specifies a URI that points to the 256-bit AES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption">
      <summary>Specifies a URI that points to the DES cryptographic algorithm for encrypting XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature">
      <summary>Specifies a URI that points to the DSA cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n">
      <summary>Represents the Exclusive XML Without Comments Canonicalization algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments">
      <summary>Represents the Exclusive XML With Comments Canonicalization algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature">
      <summary>Specifies a URI that points to the HMAC cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature">
      <summary>Specifies a URI that points to the 256-bit HMAC cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation">
      <summary>Represents the P-SHA1 key generation algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005">
      <summary>Represents the December 2007 version of the P-SHA1 key generation algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest">
      <summary>Specifies a URI that points to the RIPEMD-160 cryptographic digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap">
      <summary>Specifies a URI that points to the RSAES-OAEP-ENCRYPT cryptographic algorithm for encrypting and decrypting asymmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature">
      <summary>Specifies a URI that points to the RSA-SHA1 cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature">
      <summary>Specifies a URI that points to the RSA-SHA256 cryptographic algorithm for digitally signing XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap">
      <summary>Specifies a URI that points to the RSAES-PKCS1-v1_5 cryptographic algorithm for encrypting and decrypting asymmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest">
      <summary>Specifies a URI that points to the 160-bit SHA-1 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest">
      <summary>Specifies a URI that points to the 256-bit SHA-256 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest">
      <summary>Specifies a URI that points to the 512-bit SHA-512 digest algorithm. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap">
      <summary>Specifies a URI that points to the Transport Layer Security (TLS) algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption">
      <summary>Specifies a URI that points to the Triple DES cryptographic algorithm for encrypting XML. This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap">
      <summary>Specifies a URI that points to the Triple DES cryptographic algorithm for encrypting and decrypting symmetric keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap">
      <summary>Specifies a URI that points to the GSS-API cryptographic algorithm for encrypting and decrypting Kerberos ticket session keys (key wrap). This field is constant.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKey">
      <summary>Base class for security keys.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>When overridden in a derived class, decrypts the specified encrypted key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm that was used to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>When overridden in a derived class, encrypts the specified key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key with.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm uses asymmetric keys. </summary>
      <returns>true when the specified algorithm uses asymmetric keys; otherwise, false. </returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is supported by this class; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm uses symmetric keys; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
      <summary>When overridden in a derived class, gets the size, in bits, of the key.</summary>
      <returns>The size, in bits, of the key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <summary>Represents a key identifier.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> class using the specified key identifier clauses. </summary>
      <param name="clauses">An array of <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that contains the key identifier clauses.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clauses" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Adds a key identifier clause to the end of the list.</summary>
      <param name="clause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to be added to the end of the list.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clause" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" /> property is true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created for at least one of the key identifier clauses. </summary>
      <returns>true if a key can be created for at least one of the key identifier clauses; otherwise, false. </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count">
      <summary>Gets the number of key identifier clauses.</summary>
      <returns>The number of key identifier clauses.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey">
      <summary>Creates a key for one of the key identifier clauses.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the created key.</returns>
      <exception cref="T:System.InvalidOperationException">A key could not be created for any of the key identifier clauses.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1">
      <summary>Searches for a key identifier clause of the specified type and returns the first occurrence within the entire collection. </summary>
      <returns>The first <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> in the collection that is of the type specified in the <paramref name="TClause" /> parameter.</returns>
      <typeparam name="TClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the type of key identifier clause to search the collection for.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="TClause" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The collection does not contain a key identifier clause of the type specified in the <paramref name="TClause" /> parameter.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of key identifier clauses.</summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> for the collection.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly">
      <summary>Gets a value that indicates whether the properties of this instance are read-only.</summary>
      <returns>true if the properties of this instance are read-only; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)">
      <summary>Gets the key identifier clause at the specified index.</summary>
      <returns>The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> at the specified index.</returns>
      <param name="index">The zero-based index of the key identifier clause in the collection of key identifier clauses.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly">
      <summary>Causes this instance to be read-only.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection of key identifier clauses.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString">
      <summary>Returns the current object.</summary>
      <returns>The current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)">
      <summary>Searches for a key identifier clause of the specified type and returns a value that indicates whether a clause of that type could be found. When a type is found it is returned in the out parameter. </summary>
      <returns>true when a key identifier clause of the type specified in the <paramref name="TClause" /> parameter exists in the collection; otherwise, false. </returns>
      <param name="clause">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is of the type specified in the <paramref name="TClause" /> parameter when a clause of that type could be found in the collection. This parameter is passed un-initialized. </param>
      <typeparam name="TClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the type of key identifier clause to search the collection for.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <summary>Represents an abstract base class for a key identifier clause.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> class using the specified key identifier clause type, nonce, and the derived key length. </summary>
      <param name="clauseType">The key identifier clause type. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /> property.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</param>
      <param name="length">The size of the derived key. Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created. </summary>
      <returns>true if a key can be created; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
      <summary>Gets the key identifier clause type.</summary>
      <returns>The key identifier clause type.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
      <summary>Creates a key based on the parameters passed into the constructor.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the created key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
      <summary>Gets the size of the derived key.</summary>
      <returns>The size of the derived key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
      <summary>Gets the nonce that was used to generate the derived key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the nonce that was used to generate the derived key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is the same instance as the current instance; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyIdentifierClause" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyType">
      <summary>Specifies the type of key that is associated with a security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
      <summary>Specifies that the key is a symmetric key.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
      <summary>Specifies that the key is an asymmetric key.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
      <summary>Specifies that the security token does not contain a proof-of-possession key. </summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityKeyUsage">
      <summary>Specifies how a key that is associated with a security token can be used.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange">
      <summary>Specifies that the key can be used to exchange keys between a sender and a receiver.</summary>
    </member>
    <member name="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature">
      <summary>Specifies that the key can be used to generate a digital signature.</summary>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityToken">
      <summary>Represents a base class used to implement all security tokens.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value that indicates whether this security token is capable of creating the specified key identifier. </summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />; otherwise, false. </returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>The unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> and it has the same unique identifier as the <see cref="P:System.IdentityModel.Tokens.SecurityToken.Id" /> property; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Gets the key for the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that represents the key.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to get the key for.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenException">
      <summary>The exception that is thrown when a problem occurs while processing a security token.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified XML serialization data and contextual data about the source and destination of the serialization stream.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains values that are used during serialization and deserialization.</param>
      <param name="context">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> that contains data about the source and destination of the serialization stream.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified error message. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenException" /> class using the specified error message and root cause of the error. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> that represents the root cause of the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <summary>Contains a set of static properties that returns strings that represent security token types.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos">
      <summary>Gets a string that represents a security token based upon a Kerberos ticket.</summary>
      <returns>A string that represents a security token based upon a Kerberos ticket.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa">
      <summary>Gets a string that represents a security token based upon an RSA key.</summary>
      <returns>A string that represents a security token based upon an RSA key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml">
      <summary>Gets a string that represents a security token based upon a SAML assertion.</summary>
      <returns>A string that represents a security token based upon a SAML assertion.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName">
      <summary>Gets a string that represents a security token based upon a user name and password.</summary>
      <returns>A string that represents a security token based upon a user name and password.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate">
      <summary>Gets a string that represents a security token based upon an X.509 certificate.</summary>
      <returns>A string that represents a security token based upon an X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <summary>The exception that is thrown when a received security token is invalid. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified XML serialization data and contextual data about the source and destination of the serialization stream. </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains values that are used during serialization and deserialization.</param>
      <param name="context">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> that contains data about the source and destination of the serialization stream.</param>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified error message. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException" /> class using the specified error message and root cause of the error. </summary>
      <param name="message">A message that identifies the reason the exception occurred.</param>
      <param name="innerException">A <see cref="T:System.Exception" /> that represents the root cause of the exception.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SigningCredentials">
      <summary>Represents the cryptographic key and security algorithms that are used to generate a digital signature.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class. </summary>
      <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature. </param>
      <param name="signatureAlgorithm">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</param>
      <param name="digestAlgorithm">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SigningCredentials" /> class.</summary>
      <param name="signingKey">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</param>
      <param name="signatureAlgorithm">A URI that represents the cryptographic algorithm that is used to generate the digital signature.</param>
      <param name="digestAlgorithm">A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</param>
      <param name="signingKeyIdentifier">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm">
      <summary>Gets the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</summary>
      <returns>A URI that represents the cryptographic algorithm that is used to compute the digest for the portion of the SOAP message that is to be digitally signed.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm">
      <summary>Gets the cryptographic algorithm that is used to generate the digital signature.</summary>
      <returns>A URI that represents the cryptographic algorithm that is used to generate the digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey">
      <summary>Gets the cryptographic key that is used to generate the digital signature.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the cryptographic key that is used to generate the digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier">
      <summary>Gets the identifier that represents the key that is used to create a digital signature.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that specifies the identifier that represents the key that is used to create a digital signature.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <summary>Represents the abstract base class for all keys that are generated using symmetric algorithms.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <summary>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key. </summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the derived key.</returns>
      <param name="algorithm">A URI that represents the cryptographic algorithm to use to generate the derived key.</param>
      <param name="label">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</param>
      <param name="nonce">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</param>
      <param name="derivedKeyLength">The size of the derived key.</param>
      <param name="offset">The position at which the derived key is located in the byte array that is returned from this method.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <summary>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <summary>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm. </summary>
      <returns>An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</returns>
      <param name="algorithm">A cryptographic algorithm that encrypts XML.</param>
      <param name="iv">An array of <see cref="T:System.Byte" /> that contains the initialization vector (IV) for the specified algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
      <summary>When overridden in a derived class, gets the size, in bits, of the initialization vector (IV) that is required for the specified cryptographic algorithm. </summary>
      <returns>The size, in bits, of the initialization vector (IV) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</returns>
      <param name="algorithm">The cryptographic algorithm to get the size of the initialization vector (IV).</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</returns>
      <param name="algorithm">The keyed hash algorithm to get an instance of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <summary>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</returns>
      <param name="algorithm">The symmetric algorithm to get an instance of.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
      <summary>When overridden in a derived class, gets the bytes that represent the symmetric key.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the symmetric key.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <summary>Represents a security token that is based upon a user name and password.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> class using the specified user name and password. </summary>
      <param name="userName">A user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" /> property.</param>
      <param name="password">A password for the user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> is null.-or-<paramref name="password" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" /> class using the specified user name, password, and unique identifier.</summary>
      <param name="userName">A user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" /> property.</param>
      <param name="password">A password for the user name. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> is null.-or-<paramref name="password" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password">
      <summary>Gets the password for the user name associated with the security token.</summary>
      <returns>The password for the user name associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName">
      <summary>Gets the user name that is associated with the security token.</summary>
      <returns>The user name that is associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <summary>Represents a security token that is based on the identity of a Windows domain or user account.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class. </summary>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the Windows user. </summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the Windows user. </summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <param name="id">A unique identifier for the security token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />.</summary>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</param>
      <param name="id">A unique identifier for the security token.</param>
      <param name="authenticationType">The authentication type for the security token.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType">
      <summary>Gets the authentication type for the token.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id">
      <summary>Gets the unique identifier for the security token.</summary>
      <returns>A unique identifier for the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class using the specified unique identifier, Windows user, and the first and last instants in time when the security token is valid.</summary>
      <param name="id">A unique identifier for the security token. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" /> property.</param>
      <param name="effectiveTime">A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid. Set the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" /> property.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" /> property.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user. Sets the value of the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property.</param>
      <param name="clone">true to create a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that is identical to the <paramref name="windowsIdentity" /> parameter and assign that to the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property; otherwise, assign the value of the <paramref name="windowsIdentity" /> parameter to the <see cref="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="windowsIdentity" /> is null.-or-<paramref name="id" /> is null.</exception>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.WindowsSecurityToken" /> class.</summary>
      <param name="id">A unique identifier for the security token.</param>
      <param name="authenticationType">The authentication type for the security token.</param>
      <param name="effectiveTime">A <see cref="System.DateTime" /> that represents the instant in time at which this security token is first valid.</param>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</param>
      <param name="windowsIdentity">Represents a Windows user.</param>
      <param name="clone">true to create a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that is identical to the <paramref name="windowsIdentity" /> parameter and assign that to the <paramref name="WindowsIdentity" /> property; otherwise, assign the value of the <paramref name="windowsIdentity" /> parameter to the <paramref name="WindowsIdentity" /> property.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed">
      <summary>Throws an exception if the <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" /> method has been called for this instance.</summary>
      <exception cref="T:System.ObjectDisposedException">the <see cref="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" /> method has been called for this instance.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
      <summary>Gets the Windows user associated with this security token.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents a Windows user.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <summary>Represents an asymmetric key for X.509 certificates.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that represents the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <summary>Decrypts the specified encrypted key using the specified cryptographic algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the decrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to decrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor does not have a private key.-or-The X.509 certificate has a private key, but it was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.-or-The X.509 certificate has a private key, it was generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm, but the <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /> property is null.-or-The <paramref name="algorithm" /> parameter is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <summary>Encrypts the specified encrypted key using the specified cryptographic algorithm.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the encrypted key.</returns>
      <param name="algorithm">The cryptographic algorithm to encrypt the key.</param>
      <param name="keyData">An array of <see cref="T:System.Byte" /> that contains the key to encrypt.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor has a public key that was not generated using the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.-or-The <paramref name="algorithm" /> parameter is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /> and <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <summary>Gets the specified asymmetric cryptographic algorithm.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that represents the specified asymmetric cryptographic algorithm.</returns>
      <param name="algorithm">The asymmetric algorithm to create.</param>
      <param name="privateKey">true when a private key is required to create the algorithm; otherwise, false. </param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="privateKey" /> is true and the X.509 certificate specified in the constructor does not have a private key.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />. -or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public or private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />. -or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <summary>Gets a cryptographic algorithm that generates a hash for a digital signature.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.HashAlgorithm" /> that generates hashes for digital signatures.</returns>
      <param name="algorithm">The hash algorithm.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <summary>Gets the de-formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the de-formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The de-formatter algorithm for the digital signature to get an instance of.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.-or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <summary>Gets the formatter algorithm for the digital signature.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /> that represents the formatter algorithm for the digital signature.</returns>
      <param name="algorithm">The formatter algorithm for the digital signature to get an instance of.</param>
      <exception cref="T:System.NotSupportedException">The X.509 certificate specified in the constructor does not have a private key.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.DSA" />.-or-<paramref name="algorithm" /> is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /> or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the private key for the X.509 certificate specified in the constructor is not of type <see cref="T:System.Security.Cryptography.RSA" />.-or-<paramref name="algorithm" /> is not supported. The supported algorithms are <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />,<see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, and <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
      <summary>Gets a value that indicates whether the private key is a available. </summary>
      <returns>true when the private key is available; otherwise, false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm is supported by this class.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />, <see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />, <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /> and the public key is of the right type; otherwise, false. See the remarks for details.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <summary>Gets a value that indicates whether the specified algorithm uses symmetric keys.</summary>
      <returns>true when the specified algorithm is <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />, <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />, or <see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />; otherwise, false.</returns>
      <param name="algorithm">The cryptographic algorithm.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
      <summary>Gets the size, in bits, of the public key associated with the X.509 certificate.</summary>
      <returns>The size, in bits, of the public key associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens using the distinguished name of the certificate issuer and the X.509 certificate's serial number.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> class using the specified distinguished name of the certificate issuer and the serial number of the X.509 certificate. </summary>
      <param name="issuerName">The distinguished name of the certificate authority that issued the X.509 certificate. Sets the value of the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" /> property.</param>
      <param name="issuerSerialNumber">The serial number of the X.509 certificate. Sets the value of the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="issuerName" /> is null.-or-<paramref name="issuerSerialNumber" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName">
      <summary>Gets the distinguished name of the certificate authority that issued the X.509 certificate.</summary>
      <returns>The distinguished name of the certificate authority that issued the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber">
      <summary>Gets the serial number of the X.509 certificate.</summary>
      <returns>The serial number of the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is a <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" /> type and the key identifier clauses match; otherwise, false.</returns>
      <param name="keyIdentifierClause">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance matches the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the same issuer name and issuer serial number as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified issuer name and issuer serial number.</summary>
      <returns>true if the <paramref name="issuerName " />and <paramref name="issuerSerialNumber" /> parameters match the <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" /> and <see cref="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" /> properties; otherwise, false.</returns>
      <param name="issuerName">The distinguished name of the certificate authority that issued the X.509 certificate.</param>
      <param name="issuerSerialNumber">The serial number of the X.509 certificate.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token using the X.509 certificate's raw data.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> class using the specified raw data of an X.509 certificate. </summary>
      <param name="certificateRawData">An array of <see cref="T:System.Byte" /> that contains the raw data of an X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateRawData" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="certificateRawData" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey">
      <summary>Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor. </summary>
      <returns>true in all cases.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey">
      <summary>Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /> that contains the key(s) associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData">
      <summary>Gets the raw data associated with the X.509 certificate.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the raw data associated with the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the raw data that matches the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString">
      <summary>Returns the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SecurityToken">
      <summary>Represents a security token that is based upon an X.509 certificate.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> class using the specified X.509 certificate and unique identifier. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" /> property.</param>
      <param name="id">A unique identifier of the security token. Sets the <see cref="P:System.IdentityModel.Tokens.X509SecurityToken.Id" /> property.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.-or-<paramref name="id" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1">
      <summary>Gets a value indicating whether this security token is capable of creating the specified key identifier.</summary>
      <returns>true when <paramref name="T" /> is of type <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, or <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />; otherwise, false.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate">
      <summary>Gets the X.509 certificate associated with the security token.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1">
      <summary>Creates the specified key identifier clause.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that is a key identifier clause for the security token.</returns>
      <typeparam name="T">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that specifies the key identifier to create.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.Id">
      <summary>Gets a unique identifier of the security token.</summary>
      <returns>A unique identifier of the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>Returns a value indicating whether the key identifier for this instance is equal to the specified key identifier.</summary>
      <returns>true if <paramref name="keyIdentifierClause" /> is one of the <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />, <see cref="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />, or <see cref="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" /> types and the key identifier clauses match; otherwise, false.</returns>
      <param name="keyIdentifierClause">An <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to compare to this instance.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys">
      <summary>Gets the cryptographic keys associated with the security token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the set of keys associated with the security token.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed">
      <summary>Throws an exception if the <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" /> method has been called for this instance.</summary>
      <exception cref="T:System.ObjectDisposedException">the <see cref="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />  method has been called for this instance.</exception>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom">
      <summary>Gets the first instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the instant in time at which this security token is first valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo">
      <summary>Gets the last instant in time at which this security token is valid.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the last instant in time at which this security token is valid.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security token using the X.509 certificate's subject key identifier extension.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> class using the specified subject key identifier. </summary>
      <param name="ski">An array of <see cref="T:System.Byte" /> that contains the subject key identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ski" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Gets a value that indicates whether a key identifier clause can be created for the specified X.509 certificate. </summary>
      <returns>true if a key identifier clause can be created for <paramref name="certificate" />; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier">
      <summary>Gets the subject key identifier.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the subject key identifier.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the key identifier of the specified X.509 certificate.</summary>
      <returns>true if <paramref name="certificate" /> has the same subject key identifier as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)">
      <summary>Creates a key identifier clause using the specified X.509 certificate.</summary>
      <returns>true when a key identifier clause can be created for the specified X.509 certificate; otherwise, false. </returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> to create the key identifier clause for.</param>
      <param name="keyIdentifierClause">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" /> that represents the key identifier clause. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <summary>Represents a key identifier clause that identifies a <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> security tokens using the X.509 certificate's thumbprint.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" /> class using the specified thumbprint for an X.509 certificate. </summary>
      <param name="thumbprint">An array of <see cref="T:System.Byte" /> that contains the thumbprint of the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="thumbprint" /> is null.-or-<paramref name="thumbprint" /> is zero length.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" /> class using the specified X.509 certificate. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint">
      <summary>Returns the thumbprint for the X.509 certificate.</summary>
      <returns>An array of <see cref="T:System.Byte" /> that contains the thumbprint of the X.509 certificate.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate's thumbprint.</summary>
      <returns>true if <paramref name="certificate" /> has the same thumbprint as the current instance; otherwise, false.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate to compare.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current object.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <summary>Represents a security token that is based upon an X.509 certificate and that the certificate is mapped to a Windows domain user or local computer user account.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" /> class using the specified X.509 certificate and Windows domain or computer account. </summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" /> class using the specified X.509 certificate, Windows domain or computer account, and unique identifier.</summary>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</param>
      <param name="id">A unique identifier of the security token.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <summary>Creates a new instance of <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />.</summary>
      <param name="certificate">A <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the X.509 certificate.</param>
      <param name="windowsIdentity">Represents the identity of a Windows domain or computer account.</param>
      <param name="authenticationType">The authentication type for the token.</param>
      <param name="id">A unique identifier for the security token.</param>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType">
      <summary>Gets the authentication type for the token.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity">
      <summary>Gets the identity of a Windows domain or computer account.</summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the identity of a Windows domain or computer account.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Messaging.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Messaging</name>
  </assembly>
  <members>
    <member name="T:System.Messaging.AccessControlEntry">
      <summary>Specifies access rights for a trustee (user, group, or computer) to perform application-specific implementations of common tasks.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies neither a trustee nor set of rights to apply.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee to which rights are granted or denied.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="trustee" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee, rights to assign, and whether to grant or deny these rights.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="genericAccessRights">A bitwise combination of the <see cref="T:System.Messaging.GenericAccessRights" /> values. </param>
      <param name="standardAccessRights">A bitwise combination of the <see cref="T:System.Messaging.StandardAccessRights" /> values. </param>
      <param name="entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set, or revoke the specified rights. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="trustee" /> parameter is null. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="genericAccessRights" />, <paramref name="standardAccessRights" />, or <paramref name="entryType" /> parameters are not valid enumeration values. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.CustomAccessRights">
      <summary>Gets or sets custom access rights.</summary>
      <returns>Application-specific access rights, usually defined as a bitflag.</returns>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.EntryType">
      <summary>Gets or sets a value that indicates how the access rights apply to the trustee.</summary>
      <returns>One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set, or revoke the specified rights. The default is Allow.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The entry type is not a valid <see cref="T:System.Messaging.AccessControlEntryType" /> enumeration value. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.GenericAccessRights">
      <summary>Gets or sets a set of common access rights that map to both standard and object-specific access rights for reading, writing, and executing.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.GenericAccessRights" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="T:System.Messaging.GenericAccessRights" /> bitflag members. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.StandardAccessRights">
      <summary>Gets or sets a set of standard access rights that correspond to operations common to most types of securable objects.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.StandardAccessRights" /> values.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="T:System.Messaging.StandardAccessRights" /> bitflag members. </exception>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.Trustee">
      <summary>Gets or sets the user, group, domain, or alias to which you are assigning access rights.</summary>
      <returns>A <see cref="T:System.Messaging.Trustee" /> that specifies a user account, group account, or logon session to which a <see cref="T:System.Messaging.AccessControlEntry" /> applies.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> property is null. </exception>
    </member>
    <member name="T:System.Messaging.AccessControlEntryType">
      <summary>Specifies whether to allow, deny, or revoke access rights for a trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Allow">
      <summary>An access-allowed entry that causes the new rights to be added to any existing rights the trustee has.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Set">
      <summary>An access-allowed entry that is similar to Allow, except that the new entry allows only the specified rights. Using it discards any existing rights, including all existing access-denied entries for the trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Deny">
      <summary>An access-denied entry that denies the specified rights in addition to any currently denied rights of the trustee.</summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Revoke">
      <summary>An entry that removes all existing allowed or denied rights for the specified trustee.</summary>
    </member>
    <member name="T:System.Messaging.AccessControlList">
      <summary>Contains a list of access control entries, specifying access rights for one or more trustees.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlList" /> class.</summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)">
      <summary>Appends an access control entry to the access control list.</summary>
      <returns>The position into which the new access control entry was inserted.</returns>
      <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to append to the end of the access control list. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)">
      <summary>Determines whether the access control list contains a specific access control entry.</summary>
      <returns>true if the access control entry is found in the access control list; otherwise, false.</returns>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)">
      <summary>Copies the entire access control list to a compatible one-dimensional array of access control entries, starting at the specified index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Messaging.AccessControlEntry" /> to which the access control list entries will be copied. The array must have zero-based indexing. </param>
      <param name="index">The index in the array at which to begin copying the access control list entries. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="index" /> parameter is greater than or equal to the length of the <paramref name="array" /> parameter.-or-The number of elements in the source access control list is greater than the available space from <paramref name="index" /> to the end of the destination array of access control entries. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)">
      <summary>Determines the specific index of an access control entry in the access control list.</summary>
      <returns>The index of the entry if it was found in the list; otherwise, -1 </returns>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list. </param>
    </member>
    <member name="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)">
      <summary>Inserts an access control entry into the access control list at the specified position.</summary>
      <param name="index">The zero-based index at which the access control entry should be inserted. </param>
      <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> to insert into the access control list. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is not a valid index in this access control list. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)">
      <summary>Removes the first occurrence of a specific access control entry from the access control list.</summary>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to remove from the access control list. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="entry" /> parameter is null. </exception>
    </member>
    <member name="T:System.Messaging.AcknowledgeTypes">
      <summary>Specifies the types of acknowledgment message that Message Queuing returns to the sending application.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveArrival">
      <summary>A mask used to request a positive acknowledgment when the original message reaches the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveReceive">
      <summary>A mask used to request a positive acknowledgment when the original message is successfully retrieved from the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NegativeReceive">
      <summary>A mask used to request a negative acknowledgment when the original message fails to be received from the queue.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.None">
      <summary>A mask used to request that no acknowledgment messages (positive or negative) be posted.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue">
      <summary>A mask used to request a negative acknowledgment when the original message cannot reach the queue. This can happen when the time-to-reach-queue timer expires or if a message cannot be authenticated.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive">
      <summary>A mask used to request a negative acknowledgment when an error occurs that prevents the original message from being received from the queue before its time-to-be-received timer expires.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReachQueue">
      <summary>A mask used to request positive acknowledgment if the original message reaches the queue or negative acknowledgment if the time-to-reach-queue timer expires or if the original message cannot be authenticated.</summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReceive">
      <summary>A mask used to request positive acknowledgment if the original message is received from the queue before its time-to-be-received timer expires or negative acknowledgment otherwise.</summary>
    </member>
    <member name="T:System.Messaging.Acknowledgment">
      <summary>Specifies the result of an attempted message delivery.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.None">
      <summary>The message is not an acknowledgment message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.AccessDenied">
      <summary>A negative arrival acknowledgment indicating that the sending application does not have the necessary rights to send a message to the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadDestinationQueue">
      <summary>A negative arrival acknowledgment indicating that the destination queue is not available to the sending application.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadEncryption">
      <summary>A negative arrival acknowledgment indicating that the destination queue manager could not decrypt a private message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadSignature">
      <summary>A negative arrival acknowledgment indicating that the original message's digital signature is not valid and could not be authenticated by Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.CouldNotEncrypt">
      <summary>A negative arrival acknowledgment indicating that the source queue manager could not encrypt a private message.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.HopCountExceeded">
      <summary>A negative arrival acknowledgment indicating that the original message's hop count (which indicates the number of intermediate servers) was exceeded.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalQueue">
      <summary>A negative arrival acknowledgment indicating that a transactional message was sent to a non-transactional queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalMessage">
      <summary>A negative arrival acknowledgment indicating that a non-transactional message was sent to a transactional queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Purged">
      <summary>A negative arrival acknowledgment indicating that the message was purged before reaching its destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueDeleted">
      <summary>A negative read acknowledgment indicating that the queue was deleted before the message could be read.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueExceedMaximumSize">
      <summary>A negative arrival acknowledgment indicating that the original message was not delivered because its destination queue is full.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueuePurged">
      <summary>A negative read acknowledgment indicating that the queue was purged before the message could be read.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueue">
      <summary>A positive arrival acknowledgment indicating that the original message reached its destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueueTimeout">
      <summary>A negative arrival acknowledgment indicating that the time-to-reach-queue or time-to-be-received timer expired before the original message could reach the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReceiveTimeout">
      <summary>A negative read acknowledgment indicating that the original message was not received from the queue before its time-to-be-received timer expired.</summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Receive">
      <summary>A positive read acknowledgment indicating that the original message was received by the receiving application.</summary>
    </member>
    <member name="T:System.Messaging.ActiveXMessageFormatter">
      <summary>Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</summary>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
      <summary>Provides a utility to help serialize COM objects that implement IPersistStream and require IPersistStreamInit to be called.</summary>
      <param name="streamedObject">An OLE object that implements IPersistStreamInit. </param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object. </exception>
      <exception cref="T:System.NotSupportedException">The body represents a stored object. The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message body. </param>
      <exception cref="T:System.InvalidOperationException">The object to serialize is neither a primitive nor a streamed object that implements the OLE IPersistStream interface. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.BinaryMessageFormatter">
      <summary>Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</summary>
      <param name="topObjectFormat">Determines how the top (root) object of a graph is laid out in the serialized stream. </param>
      <param name="typeFormat">Determines how type descriptions are laid out in the serialized stream. </param>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the binary message formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
      <summary>Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</summary>
      <returns>One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that defines the deserialization behavior.</returns>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
      <summary>Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> that defines the type description format.</returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message body. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
    </member>
    <member name="T:System.Messaging.CryptographicProviderType">
      <summary>Specifies the cryptographic service providers available for validating digital signatures.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.None">
      <summary>No cryptographic provider type specified.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsaFull">
      <summary>The full RSA provider type, which supports both digital signatures and data encryption. Considered a general purpose cryptographic services provider. The RSA public-key algorithm is used for all public-key operations.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsqSig">
      <summary>A subset of the RsaFull provider type, which supports only those functions and algorithms required for hashes and digital signatures.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Dss">
      <summary>A provider type that, like RsqSig, only supports hashes and digital signatures. Dss specifies the Digital Signature Algorithm (DSA) signature algorithm.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Fortezza">
      <summary>A provider type that contains a set of cryptographic protocols and algorithms owned by the National Institute of Standards and Technology.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.MicrosoftExchange">
      <summary>A provider type designed for the cryptographic needs of the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Ssl">
      <summary>A provider type that supports the Secure Sockets Layer (SSL) protocol.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttMer">
      <summary>Secure transaction technology provider enterprise.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttAcq">
      <summary>Secure transaction technology provider acquirer.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttBrnd">
      <summary>Secure transaction technology provider brand.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttRoot">
      <summary>Secure transaction technology provider root.</summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttIss">
      <summary>Secure transaction technology provider issuer.</summary>
    </member>
    <member name="T:System.Messaging.Cursor">
      <summary>A <see cref="T:System.Messaging.Cursor" /> is used to maintain a specific location in a <see cref="T:System.Messaging.MessageQueue" /> when reading the queue's messages.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Close">
      <summary>Closes the cursor, allowing Message Queuing to release the associated resources.</summary>
    </member>
    <member name="M:System.Messaging.Cursor.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.Cursor" />.</summary>
    </member>
    <member name="T:System.Messaging.DefaultPropertiesToSend">
      <summary>Specifies the default property values that will be used when sending objects other than <see cref="T:System.Messaging.Message" /> instances to a message queue.</summary>
    </member>
    <member name="M:System.Messaging.DefaultPropertiesToSend.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.DefaultPropertiesToSend" /> class.</summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType">
      <summary>Gets or sets the type of acknowledgement message to be returned to the sending application.</summary>
      <returns>One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> enumeration values. This value is used to determine the type of acknowledgment messages the system posts in the administration queue and when acknowledgments are returned to the sending application. The default is AcknowledgeTypes.None.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue">
      <summary>Gets or sets the queue that receives acknowledgement messages generated by Message Queuing.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AppSpecific">
      <summary>Gets or sets additional, application-specific information.</summary>
      <returns>Information specific to the application. The default is 0.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId">
      <summary>Gets or sets a value that indicates whether the sender ID should be attached to the message.</summary>
      <returns>true if sender ID should be attached to the message; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm used to encrypt the body of a private message.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values. The default is RC2.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Extension">
      <summary>Gets or sets additional information associated with the message.</summary>
      <returns>An array of bytes that provides additional, application-defined information associated with the message. The default is a zero-length array.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm">
      <summary>Gets or sets the hashing algorithm used when authenticating messages or creating a digital signature for a message.</summary>
      <returns>One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values. The default is MD5.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Label">
      <summary>Gets or sets an application-defined string that describes the message.</summary>
      <returns>The label of the message. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Priority">
      <summary>Gets or sets the message priority, which is used to determine where the message is placed in the queue.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessagePriority" /> enumeration values that represents the priority level of a non-transactional message. The default is Normal.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Recoverable">
      <summary>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</summary>
      <returns>true if the message is guaranteed delivery by saving it to disk while en route; false if delivery is not assured. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived">
      <summary>Gets or sets the time limit for the message to be retrieved from the destination queue.</summary>
      <returns>The total time, in seconds, for a sent message to be received from the destination queue. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue">
      <summary>Gets or sets the time limit for the message to reach the queue.</summary>
      <returns>The time limit in seconds for a message to reach the destination queue, from the time the message is sent. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue">
      <summary>Gets the transaction status queue on the source computer.</summary>
      <returns>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication">
      <summary>Gets or sets a value that indicates whether the message must be authenticated before being sent.</summary>
      <returns>true if the sending application requested authentication for the message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</summary>
      <returns>true if message delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseEncryption">
      <summary>Gets or sets a value that indicates whether to make the message private.</summary>
      <returns>true to require Message Queuing to encrypt the message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</summary>
      <returns>true to require that a copy of a message be kept in the originating computer's machine journal after it has been successfully transmitted from the originating computer to the next step; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseTracing">
      <summary>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</summary>
      <returns>true if each intermediate step made by the original message en route to the destination queue will generate a report to be sent to the system's report queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.EncryptionAlgorithm">
      <summary>Specifies the encryption algorithm used to encrypt the message body of a private message.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.None">
      <summary>No encryption.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc2">
      <summary>The value MQMSG_CALG_RC2. This is the default value for the encryption property of the Message Queuing application's message object.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc4">
      <summary>The value MQMSG_CALG_RC4. This corresponds to the less secure option for the encryption property of the Message Queuing application's message object.</summary>
    </member>
    <member name="T:System.Messaging.EncryptionRequired">
      <summary>Specifies the privacy level of messages received by the queue.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.None">
      <summary>Accepts only non-private (non-encrypted) messages.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Optional">
      <summary>Does not force privacy. Accepts private (encrypted) messages and non-private (non-encrypted) messages.</summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Body">
      <summary>Accepts only private (encrypted) messages.</summary>
    </member>
    <member name="T:System.Messaging.GenericAccessRights">
      <summary>Uses the Windows 2000 and Windows NT access format to specify a set of common access rights that Message Queuing maps to both standard and object-specific access rights for reading, writing, and executing.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.All">
      <summary>Read, write, and execute access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Execute">
      <summary>Execute access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Write">
      <summary>Write access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Read">
      <summary>Read access.</summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.None">
      <summary>No access.</summary>
    </member>
    <member name="T:System.Messaging.HashAlgorithm">
      <summary>Specifies the hash algorithm used by Message Queuing when authenticating messages.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.None">
      <summary>No hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md2">
      <summary>MD2 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md4">
      <summary>MD4 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md5">
      <summary>MD5 hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha">
      <summary>SHA hashing algorithm.</summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Mac">
      <summary>MAC keyed-hash algorithm.</summary>
    </member>
    <member name="T:System.Messaging.IMessageFormatter">
      <summary>Serializes or deserializes objects from the body of a Message Queuing message.</summary>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>When implemented in a class, determines whether the formatter can deserialize the contents of the message.</summary>
      <returns>true if the formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)">
      <summary>When implemented in a class, reads the contents from the given message and creates an object that contains data from the message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to deserialize. </param>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>When implemented in a class, serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> that will contain the serialized object. </param>
      <param name="obj">The object to be serialized into the message. </param>
    </member>
    <member name="T:System.Messaging.Message">
      <summary>Provides access to the properties needed to define a Message Queuing message.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</summary>
      <param name="body">The object to be serialized into the body of the message. </param>
      <param name="formatter">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body. </param>
    </member>
    <member name="P:System.Messaging.Message.AcknowledgeType">
      <summary>Gets or sets the type of acknowledgment message to be returned to the sending application.</summary>
      <returns>One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application. The default is None.</returns>
      <exception cref="T:System.InvalidOperationException">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Acknowledgment">
      <summary>Gets the classification of acknowledgment that this message represents.</summary>
      <returns>One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AdministrationQueue">
      <summary>Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AppSpecific">
      <summary>Gets or sets additional, application-specific information.</summary>
      <returns>Information that is specific to the application. The default is zero.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ArrivedTime">
      <summary>Gets the time that the message arrived in the destination queue.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue. The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or-The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AttachSenderId">
      <summary>Gets or sets a value that indicates whether the sender ID should be attached to the message.</summary>
      <returns>true if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Authenticated">
      <summary>Gets a value that indicates whether the message was authenticated.</summary>
      <returns>true if authentication was requested for the message when it entered the queue; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderName">
      <summary>Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>The name of the cryptographic provider used to generate the digital signature of the message. The default is Microsoft Base Cryptographic Provider version 1.0.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to null. </exception>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderType">
      <summary>Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</summary>
      <returns>One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values. The default is RSA_FULL.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Body">
      <summary>Gets or sets the content of the message.</summary>
      <returns>An object that specifies the message contents. The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyStream">
      <summary>Gets or sets the information in the body of the message.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.BodyType">
      <summary>Gets or sets the type of data that the message body contains.</summary>
      <returns>The message body's true type, such as a string, a date, a currency, or a number.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ConnectorType">
      <summary>Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</summary>
      <returns>A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption. This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.CorrelationId">
      <summary>Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</summary>
      <returns>The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message. The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.CorrelationId" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationQueue">
      <summary>Gets the intended destination queue for a message.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.DestinationSymmetricKey">
      <summary>Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</summary>
      <returns>An array of byte values that specifies the destination symmetric key used to encrypt the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.DigitalSignature">
      <summary>Gets or sets the digital signature that Message Queuing uses to authenticate the message.</summary>
      <returns>An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.EncryptionAlgorithm">
      <summary>Gets or sets the encryption algorithm used to encrypt the body of a private message.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values. The default is RC2.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Extension">
      <summary>Gets or sets additional, application-defined information associated with the message.</summary>
      <returns>An array of byte values that provides application-defined information associated with the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property. </exception>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Extension" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body. The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.Message.Formatter" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Message.HashAlgorithm">
      <summary>Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</summary>
      <returns>One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values. For Windows XP, the default is SHA. Otherwise, the default is MD5.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Id">
      <summary>Gets the message's identifier.</summary>
      <returns>The message's unique identifier, which is generated by Message Queuing.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property. </exception>
    </member>
    <member name="F:System.Messaging.Message.InfiniteTimeout">
      <summary>Specifies that no time-out exists.</summary>
    </member>
    <member name="P:System.Messaging.Message.IsFirstInTransaction">
      <summary>Gets a value that indicates whether the message was the first message sent in a transaction.</summary>
      <returns>true if the message was the first message sent in a transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.IsLastInTransaction">
      <summary>Gets a value that indicates whether the message was the last message sent in a transaction.</summary>
      <returns>true if the message was the last message sent in a single transaction; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Label">
      <summary>Gets or sets an application-defined Unicode string that describes the message.</summary>
      <returns>The label of the message. The default is an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.LookupId">
      <summary>Introduced in MSMQ 3.0. Gets the message's lookup identifier.</summary>
      <returns>The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.MessageType">
      <summary>Gets the message type: Normal, Acknowledgment, or Report.</summary>
      <returns>One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Priority">
      <summary>Gets or sets the message priority, which determines where in the queue the message is placed.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages. The default is Normal.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.Recoverable">
      <summary>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</summary>
      <returns>true if delivery of the message is guaranteed (through saving the message to disk while en route); false if delivery is not assured. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.ResponseQueue">
      <summary>Gets or sets the queue that receives application-generated response messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SecurityContext">
      <summary>Gets or sets the security context for a message.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</returns>
    </member>
    <member name="P:System.Messaging.Message.SenderCertificate">
      <summary>Gets or sets the security certificate used to authenticate messages.</summary>
      <returns>An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message. The default is a zero-length array.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderId">
      <summary>Gets the identifier of the sending user.</summary>
      <returns>An array of byte values that identifies the sender. The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SenderVersion">
      <summary>Gets the version of Message Queuing used to send the message.</summary>
      <returns>The version of Message Queuing used to send the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SentTime">
      <summary>Gets the date and time on the sending computer that the message was sent by the source queue manager.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the time the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.SourceMachine">
      <summary>Gets the computer from which the message originated.</summary>
      <returns>The name of the computer from which the message was sent.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The computer information or directory service could not be accessed. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToBeReceived">
      <summary>Gets or sets the maximum amount of time for the message to be received from the destination queue.</summary>
      <returns>The total time for a sent message to be received from the destination queue. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid. </exception>
    </member>
    <member name="P:System.Messaging.Message.TimeToReachQueue">
      <summary>Gets or sets the maximum amount of time for the message to reach the queue.</summary>
      <returns>The time limit for the message to reach the destination queue, beginning from the time the message is sent. The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property. </exception>
      <exception cref="T:System.ArgumentException">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid. It might represent a negative number. </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionId">
      <summary>Gets the identifier for the transaction of which the message was a part.</summary>
      <returns>The identifier for the transaction associated with the message.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.TransactionStatusQueue">
      <summary>Gets the transaction status queue on the source computer.</summary>
      <returns>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The message has not been sent. This property can only be read on messages retrieved from a queue.-or- The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseAuthentication">
      <summary>Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</summary>
      <returns>true if the sending application requested authentication for the message; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</summary>
      <returns>true if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseEncryption">
      <summary>Gets or sets a value that indicates whether to make the message private.</summary>
      <returns>true to require Message Queuing to encrypt the message; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</summary>
      <returns>true to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property. </exception>
    </member>
    <member name="P:System.Messaging.Message.UseTracing">
      <summary>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</summary>
      <returns>true if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, false. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property. </exception>
    </member>
    <member name="T:System.Messaging.MessageEnumerator">
      <summary>Provides a forward-only cursor to enumerate through messages in a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Close">
      <summary>Frees the resources associated with the enumerator.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Messaging.Message" /> that this enumerator points to.</summary>
      <returns>The current message.</returns>
      <exception cref="T:System.InvalidOperationException">You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />. The cursor is located before the first element of the message enumeration.-or- You called <see cref="P:System.Messaging.MessageEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last element of the message enumeration.) </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message the enumerator is currently pointing to no longer exists. It might have been deleted. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.CursorHandle">
      <summary>Gets the native Message Queuing cursor handle used to browse messages in the queue.</summary>
      <returns>The native cursor handle.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The handle does not exist. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Finalize">
      <summary>Releases the resources held by the enumerator.</summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext">
      <summary>Advances the enumerator to the next message in the queue, if one is currently available.</summary>
      <returns>true if the enumerator was succesfully advanced to the next message; false if the enumerator has reached the end of the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An exception specific to Message Queuing was thrown. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
      <summary>Advances the enumerator to the next message in the queue. If the enumerator is positioned at the end of the queue, <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> waits until a message is available or the given timeout expires.</summary>
      <returns>true if the enumerator successfully advanced to the next message; false if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <paramref name="timeout" /> parameter.</returns>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> to wait for a message to be available if the enumerator is positioned at the end of the queue. </param>
      <exception cref="T:System.ArgumentException">The value specified for the timeout parameter is invalid. It might represent a negative number. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An exception specific to Message Queuing was thrown.-or- The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent">
      <summary>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
      <summary>Removes the current message from a transactional queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction in which the message will be removed. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
      <summary>Removes the current message from a queue and returns the message to the calling application. There is no timeout specified for a message to arrive in the queue.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
      <summary>Removes the current message from the queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for a message to arrive in the queue. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Removes the current message from a transactional queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for the message to be removed. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction context for the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Removes the current message from a queue and returns the message to the calling application. If there is a message to remove, the method returns it immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">The interval of time to wait for the message to be removed. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is invalid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The timeout has expired. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Reset">
      <summary>Resets the current enumerator so it points to the head of the queue.</summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Messaging.Message" /> that this enumerator points to.</summary>
      <returns>The current message.</returns>
      <exception cref="T:System.InvalidOperationException">You accessed this property before the first call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" />. The cursor is located before the first element of the message enumeration.-or- You accessed this property after a call to <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last element of the message enumeration.) </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message the enumerator is currently pointing to no longer exists. It might have been deleted. </exception>
    </member>
    <member name="T:System.Messaging.MessageLookupAction">
      <summary>Specifies a message to peek at or receive from a message queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Current">
      <summary>Read the current message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Next">
      <summary>Read the following message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Previous">
      <summary>Read the preceding message.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.First">
      <summary>Read the first message in the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageLookupAction.Last">
      <summary>Read the last message in the queue.</summary>
    </member>
    <member name="T:System.Messaging.MessagePriority">
      <summary>Specifies the priority Message Queuing applies to a message while it is en route to a queue, and when inserting the message into the destination queue.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Lowest">
      <summary>Lowest message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryLow">
      <summary>Between Low and Lowest message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Low">
      <summary>Low message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Normal">
      <summary>Normal message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.AboveNormal">
      <summary>Between <see cref="F:System.Messaging.MessagePriority.High" /> and <see cref="F:System.Messaging.MessagePriority.Normal" /> message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.High">
      <summary>High message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryHigh">
      <summary>Between Highest and High message priority.</summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Highest">
      <summary>Highest message priority.</summary>
    </member>
    <member name="T:System.Messaging.MessagePropertyFilter">
      <summary>Controls and selects the properties that are retrieved when peeking or receiving messages from a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessagePropertyFilter" /> class and sets default values for all properties.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AcknowledgeType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AcknowledgeType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AcknowledgeType" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Acknowledgment">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Acknowledgment" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Acknowledgment" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AdministrationQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AdministrationQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AdministrationQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AppSpecific">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AppSpecific" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AppSpecific" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ArrivedTime">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ArrivedTime" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ArrivedTime" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AttachSenderId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AttachSenderId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AttachSenderId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Authenticated">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Authenticated" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Authenticated" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderName">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Body">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Body" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Body" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.ClearAll">
      <summary>Sets all Boolean filter values to false, so that no message properties are retrieved when receiving a message.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.Clone">
      <summary>Creates a shallow copy of the object.</summary>
      <returns>A <see cref="T:System.Object" /> that represents an instance of the <see cref="T:System.Messaging.MessagePropertyFilter" /> class.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ConnectorType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ConnectorType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ConnectorType" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.CorrelationId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.CorrelationId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.CorrelationId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultBodySize">
      <summary>Gets or sets the size, in bytes, of the default body buffer.</summary>
      <returns>The default body buffer size to create when the message is received. The default is 1024 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize">
      <summary>Gets or sets the size, in bytes, of the default extension buffer.</summary>
      <returns>The default extension buffer size to create when the message is received. The default is 255 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize">
      <summary>Gets or sets the size, in bytes, of the default label buffer.</summary>
      <returns>The default label buffer size to create when the message is received. The default is 255 bytes.</returns>
      <exception cref="T:System.ArgumentException">The assigned value is negative. </exception>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DestinationQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DestinationQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DigitalSignature">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.DigitalSignature" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.DigitalSignature" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Extension">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Extension" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Extension" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.HashAlgorithm">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.HashAlgorithm" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.HashAlgorithm" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Id">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Id" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Id" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsFirstInTransaction">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsLastInTransaction">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.IsLastInTransaction" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Label">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Label" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Label" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.LookupId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.LookupId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.LookupId" /> property information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.MessageType">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.MessageType" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.MessageType" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Priority">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Priority" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Priority" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Recoverable">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.Recoverable" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.Recoverable" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ResponseQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.ResponseQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.ResponseQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderCertificate">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderCertificate" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderCertificate" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderVersion">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SenderVersion" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SenderVersion" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SentTime">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SentTime" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SentTime" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetAll">
      <summary>Specifies to retrieve all message properties when receiving a message.</summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetDefaults">
      <summary>Sets the filter values of common Message Queuing properties to true and the integer-valued properties to their default values.</summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SourceMachine">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.SourceMachine" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.SourceMachine" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToBeReceived">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TimeToBeReceived" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToReachQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TimeToReachQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionId">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TransactionId" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TransactionId" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionStatusQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseAuthentication">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseAuthentication" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseAuthentication" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseEncryption">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseEncryption" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseEncryption" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseJournalQueue" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseJournalQueue" /> information; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseTracing">
      <summary>Gets or sets a value that indicates whether to retrieve <see cref="P:System.Messaging.Message.UseTracing" /> property information when receiving or peeking a message.</summary>
      <returns>true to receive <see cref="P:System.Messaging.Message.UseTracing" /> information; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueue">
      <summary>Provides access to a queue on a Message Queuing server.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class. After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer. For information about the proper syntax for this parameter, see the Remarks section. </param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="sharedModeDenyReceive">true to grant exclusive read access to the first application that accesses the queue; otherwise, false. </param>
      <param name="enableCache">true to create and use a connection cache; otherwise, false.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</param>
      <param name="accessMode">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</param>
    </member>
    <member name="P:System.Messaging.MessageQueue.AccessMode">
      <summary>Gets a value that indicates the access mode for the queue.</summary>
      <returns>One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Authenticate">
      <summary>Gets or sets a value that indicates whether the queue accepts only authenticated messages.</summary>
      <returns>true if the queue accepts only authenticated messages; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.BasePriority">
      <summary>Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</summary>
      <returns>The single base priority for all messages sent to the (public) queue. The default is zero (0).</returns>
      <exception cref="T:System.ArgumentException">The base priority was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek">
      <summary>Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object. The state object provides associated information throughout the lifetime of the operation. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values. Indicates whether to peek at the current message in the queue, or the next message.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive">
      <summary>Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object. The state object provides associated information throughout the lifetime of the operation. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime. This overload receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available. </param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanRead">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanWrite">
      <summary>Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</summary>
      <returns>true if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues. The default is Guid.empty.</returns>
      <exception cref="T:System.ArgumentException">The queue category was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ClearConnectionCache">
      <summary>Clears the connection cache.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Close">
      <summary>Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String)">
      <summary>Creates a non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
      <summary>Creates a transactional or non-transactional Message Queuing queue at the specified path.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</returns>
      <param name="path">The path of the queue to create. </param>
      <param name="transactional">true to create a transactional queue; false to create a non-transactional queue. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A queue already exists at the specified path.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Administer" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.CreateCursor">
      <summary>Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</summary>
      <returns>A new <see cref="T:System.Messaging.Cursor" /> for the current message queue. This cursor is used to maintain a specific location in the queue when reading the queue's messages.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.CreateTime">
      <summary>Gets the time and date that the queue was created in Message Queuing.</summary>
      <returns>A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
      <summary>Gets or sets the message property values to be used by default when the application sends messages to the queue.</summary>
      <returns>A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</returns>
      <exception cref="T:System.ArgumentException">The default properties could not be set for the queue, possibly because one of the properties is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Delete(System.String)">
      <summary>Deletes a queue on a Message Queuing server.</summary>
      <param name="path">The location of the queue to be deleted. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> parameter is null or is an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The syntax for the <paramref name="path" /> parameter is not valid.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.DenySharedReceive">
      <summary>Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</summary>
      <returns>true if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Messaging.MessageQueue.EnableConnectionCache">
      <summary>Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</summary>
      <returns>true to create and use a connection cache; otherwise, false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.EncryptionRequired">
      <summary>Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionRequired" /> values. The default is None.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
      <summary>Completes the specified asynchronous peek operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
      <summary>Completes the specified asynchronous receive operation.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The syntax of the <paramref name="asyncResult" /> parameter is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Exists(System.String)">
      <summary>Determines whether a Message Queuing queue exists at the specified path.</summary>
      <returns>true if a queue with the specified path exists; otherwise, false.</returns>
      <param name="path">The location of the queue to find. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="path" /> syntax is not valid. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue </exception>
      <exception cref="T:System.InvalidOperationException">The application used format name syntax when verifying queue existence. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.FormatName">
      <summary>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</summary>
      <returns>The name for the queue, which is unique on the network.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.Formatter">
      <summary>Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</summary>
      <returns>The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body. The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetAllMessages">
      <summary>Returns all the messages that are in the queue.</summary>
      <returns>An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetEnumerator">
      <summary>Enumerates the messages in a queue. <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
      <summary>Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</returns>
      <param name="machineName">The name of the computer that contains the queue, without the two preceding backslashes (\\). </param>
      <exception cref="T:System.Messaging.MessageQueueException">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator">
      <summary>Creates an enumerator object for all the messages in the queue. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated. <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
      <summary>Creates an enumerator object for all the messages in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
      <summary>Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues. </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
      <summary>Retrieves all the private queues on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</returns>
      <param name="machineName">The computer from which to retrieve the private queues. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter is null or an empty string (""). </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues">
      <summary>Retrieves all the public queues on the network.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
      <summary>Retrieves all the public queues on the network that meet the specified criteria.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
      <summary>Retrieves all the public queues on the network that belong to the specified category.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="category">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
      <summary>Retrieves all the public queues on the network that carry the specified label.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</returns>
      <param name="label">A label that groups the set of queues to be retrieved. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
      <summary>Retrieves all the public queues that reside on the specified computer.</summary>
      <returns>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</returns>
      <param name="machineName">The name of the computer that contains the set of public queues to be retrieved. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="machineName" /> parameter has incorrect syntax. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetSecurityContext">
      <summary>Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</summary>
      <returns>A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Id">
      <summary>Gets the unique Message Queuing identifier of the queue.</summary>
      <returns>A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteQueueSize">
      <summary>Specifies that no size restriction exists for a queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteTimeout">
      <summary>Specifies that no time-out exists for methods that peek or receive messages.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Label">
      <summary>Gets or sets the queue description.</summary>
      <returns>The label for the message queue. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The label was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.LastModifyTime">
      <summary>Gets the last time the properties of a queue were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MachineName">
      <summary>Gets or sets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located. The Message Queuing default is ".", the local computer.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueue.MachineName" /> is null. </exception>
      <exception cref="T:System.ArgumentException">The name of the computer is not valid, possibly because the syntax is incorrect. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumJournalSize">
      <summary>Gets or sets the maximum size of the journal queue.</summary>
      <returns>The maximum size, in kilobytes, of the journal queue. The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum journal queue size was set to an invalid value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumQueueSize">
      <summary>Gets or sets the maximum size of the queue.</summary>
      <returns>The maximum size, in kilobytes, of the queue. The Message Queuing default specifies that no limit exists.</returns>
      <exception cref="T:System.ArgumentException">The maximum queue size contains a negative value. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
      <summary>Gets or sets the property filter for receiving or peeking messages.</summary>
      <returns>The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</returns>
      <exception cref="T:System.ArgumentException">The filter is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.MulticastAddress">
      <summary>Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.</summary>
      <returns>A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or null, which indicates that the queue is not associated with a multicast address. Copy Code&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueue.Path">
      <summary>Gets or sets the queue's path. Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />. The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either null or is specified by the constructor's <paramref name="path" /> parameter.</returns>
      <exception cref="T:System.ArgumentException">The path is not valid, possibly because the syntax is not valid. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
      <summary>Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
      <summary>Returns without removing (peeks) the current or next message in the queue, using the specified cursor. The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="action">One of the <see cref="T:System.Messaging.PeekAction" /> values. Indicates whether to peek at the current message in the queue, or the next message.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value other than PeekAction.Current or PeekAction.Next was specified for the <paramref name="action" /> parameter.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
      <summary>Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
      <summary>Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">No message with the specified <paramref name="id" /> exists. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
      <summary>Peeks the message whose message identifier matches the <paramref name="id" /> parameter. Waits until the message appears in the queue or a time-out occurs.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0. Peeks at the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
      <summary>Introduced in MSMQ 3.0. Peeks at a specific message from the queue. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Peeks at the message specified by <paramref name="lookupId" />.MessageLookupAction.Next: Peeks at the message following the message specified by <paramref name="lookupId" />.MessageLookupAction.Previous: Peeks at the message preceding the message specified by <paramref name="lookupId" />.MessageLookupAction.First: Peeks at the first message in the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Peeks at the last message in the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.PeekCompleted">
      <summary>Occurs when a message is read without being removed from the queue. This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Purge">
      <summary>Deletes all the messages contained in the queue.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.QueueName">
      <summary>Gets or sets the friendly name that identifies the queue.</summary>
      <returns>The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />. The value cannot be null.</returns>
      <exception cref="T:System.ArgumentException">The queue name is null. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.ReadHandle">
      <summary>Gets the native handle used to read messages from the message queue.</summary>
      <returns>A handle to the native queue object that you use for peeking and receiving messages from the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and blocks the current thread of execution until a message is available.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.-or-The <paramref name="transaction" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the current message in the queue, using a specified cursor. If no message is available, this method waits until either a message is available, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="cursor">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid. Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />. This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</returns>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</returns>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="correlationId" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="correlationId" /> could not be found. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
      <summary>Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="id" /> could not be found. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
      <summary>Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- The queue is non-transactional.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</returns>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive. </param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="id" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.-or- An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
      <summary>Introduced in MSMQ 3.0. Receives the message that matches the given lookup identifier from a non-transactional queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</returns>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive. </param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
      <summary>Introduced in MSMQ 3.0. Receives a specific message from a transactional queue. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method.-or- The queue is non-transactional.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</exception>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
      <summary>Introduced in MSMQ 3.0. Receives a specific message from the queue, using the specified transaction context. The message can be specified by a lookup identifier or by its position at the front or end of the queue.</summary>
      <returns>The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</returns>
      <param name="action">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue. Specify one of the following:MessageLookupAction.Current: Receives the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Next: Receives the message following the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.Previous: Receives the message preceding the message specified by <paramref name="lookupId" /> and removes it from the queue.MessageLookupAction.First: Receives the first message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.MessageLookupAction.Last: Receives the last message in the queue and removes it from the queue. The <paramref name="lookupId" /> parameter must be set to 0.</param>
      <param name="lookupId">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0. 0 is used when accessing the first or last message in the queue. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
      <exception cref="T:System.InvalidOperationException">The message with the specified <paramref name="lookupId" /> could not be found. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.-or- The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</exception>
    </member>
    <member name="E:System.Messaging.MessageQueue.ReceiveCompleted">
      <summary>Occurs when a message has been removed from the queue. This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Refresh">
      <summary>Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.ResetPermissions">
      <summary>Resets the permission list to the operating system's default values. Removes any queue permissions you have appended to the default list.</summary>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object)">
      <summary>Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction use.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
      <summary>Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
      <summary>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null.-or- The <paramref name="transaction" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- The Message Queuing application indicated an incorrect transaction usage.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</summary>
      <param name="obj">The object to send to the queue. </param>
      <param name="label">The label of the message. </param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="label" /> parameter is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueTransaction">The Message Queuing application indicated an incorrect transaction usage. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.-or- An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
      <summary>Assigns access rights to the queue based on the contents of an access control list.</summary>
      <param name="dacl">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
      <summary>Assigns access rights to the queue based on the contents of an access control entry.</summary>
      <param name="ace">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
      <summary>Gives a computer, group, or user the specified access rights.</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="user" /> is null. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue. </param>
      <param name="rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in. </param>
      <param name="entryType">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter. </param>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.SynchronizingObject">
      <summary>Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</summary>
      <returns>A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event. The default is null.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueue.Transactional">
      <summary>Gets a value that indicates whether the queue accepts only transactions.</summary>
      <returns>true if the queue accepts only messages sent as part of a transaction; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether received messages are copied to the journal queue.</summary>
      <returns>true if messages received from the queue are copied to its journal queue; otherwise, false.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">An error occurred when accessing a Message Queuing method. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueue.WriteHandle">
      <summary>Gets the native handle used to send messages to the message queue.</summary>
      <returns>A handle to the native queue object that you use for sending messages to the queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The message queue is not available for writing. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessControlEntry">
      <summary>Specifies access rights for a trustee (user, group, or computer) to perform Message Queuing tasks.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, granting the specified Message Queuing access rights to the specified trustee.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, with the specified trustee and Message Queuing access rights. The type of access (such as Allow or Deny) is defined by the entry type you pass in.</summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias. </param>
      <param name="rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee. </param>
      <param name="entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set or revoke the specified rights. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights">
      <summary>Gets or sets the set of Message Queuing-specific rights to apply to the trustee.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> members. The default is defined by the <paramref name="rights" /> parameter passed into the constructor.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessRights">
      <summary>Specifies a set of object-specific access rights for operations specific to Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteMessage">
      <summary>The right to delete messages from the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.PeekMessage">
      <summary>The right to peek messages from the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.WriteMessage">
      <summary>The right to send messages to the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteJournalMessage">
      <summary>The right to delete messages from the journal queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.SetQueueProperties">
      <summary>The right to modify properties of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueueProperties">
      <summary>The right to read properties of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteQueue">
      <summary>The right to delete the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueuePermissions">
      <summary>The right to read queue permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ChangeQueuePermissions">
      <summary>The right to modify queue permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.TakeQueueOwnership">
      <summary>The right to take ownership of the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveMessage">
      <summary>The right to receive messages from the queue. This includes the rights to delete and peek messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveJournalMessage">
      <summary>The right to receive messages from the journal queue. This includes the rights to delete and peek messages from the journal queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericRead">
      <summary>A combination of GetQueueProperties, GetQueuePermissions, ReceiveMessage, and ReceiveJournalMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericWrite">
      <summary>A combination of GetQueueProperties, GetQueuePermissions, and WriteMessage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.FullControl">
      <summary>Full rights to the queue. A union of all other rights in the enumeration.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueCriteria">
      <summary>Filters message queues when performing a query using the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" /> method.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueCriteria" /> class.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Category">
      <summary>Gets or sets the category by which to filter queues in the network.</summary>
      <returns>The queues' category.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Category" /> property before reading it. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.ClearAll">
      <summary>Clears all properties from being built into a filter and puts all property values into a "not set" state.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedAfter">
      <summary>Gets or sets the lower boundary of the queue creation date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the lower boundary for a queue's creation date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedAfter" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedBefore">
      <summary>Gets or sets the upper boundary of the queue creation date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the upper boundary for a queue's creation date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.CreatedBefore" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Label">
      <summary>Gets or sets the label by which to filter queues in the network.</summary>
      <returns>The queues' label.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.Label" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.MachineName">
      <summary>Gets or sets the computer name by which to filter queues in the network.</summary>
      <returns>The server name of the computer on which the queues reside.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.MachineName" /> property before reading it.-or- The computer name syntax is invalid. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedAfter">
      <summary>Gets or sets the lower boundary of the queue modification date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the lower boundary for a queue's last modification date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedAfter" /> property before reading it. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedBefore">
      <summary>Gets or sets the upper boundary of the queue modification date and time by which to filter queues on the network.</summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the upper boundary for a queue's last modification date and time.</returns>
      <exception cref="T:System.InvalidOperationException">The application did not set the <see cref="P:System.Messaging.MessageQueueCriteria.ModifiedBefore" /> property before reading it. </exception>
    </member>
    <member name="T:System.Messaging.MessageQueueEnumerator">
      <summary>Provides a forward-only cursor to enumerate through messages in a message queue.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Close">
      <summary>Frees the resources associated with the enumerator.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</summary>
      <returns>The queue at which the cursor is currently positioned.</returns>
      <exception cref="T:System.InvalidOperationException">You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> before the first call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" />. The cursor is located before the first queue in the enumeration.-or- You called <see cref="P:System.Messaging.MessageQueueEnumerator.Current" /> after a call to <see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /> had returned false (indicating the cursor is located after the last queue in the enumeration). </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Finalize">
      <summary>Releases the resources held by the queue.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
      <summary>Gets the native Message Queuing handle used to locate queues in a network.</summary>
      <returns>The native handle to the current queue.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The handle does not exist. </exception>
      <exception cref="T:System.Security.SecurityException">The calling code does not have browse permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.MoveNext">
      <summary>Advances the enumerator to the next queue of the enumeration, if one is currently available.</summary>
      <returns>true if the enumerator was successfully advanced to the next queue; false if the enumerator has reached the end of the enumeration.</returns>
      <exception cref="T:System.Security.SecurityException">The calling code does not have browse permissions. </exception>
      <PermissionSet>
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1">
          <Path value="*" access="Browse" />
        </IPermission>
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Reset">
      <summary>Resets the cursor, so it points to the beginning of the enumeration.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
      <summary>Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</summary>
      <returns>The queue at which the cursor is currently positioned.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueErrorCode">
      <summary>Identifies the source of an error that occurred within the Message Queuing application and generated a <see cref="T:System.Messaging.MessageQueueException" /> exception.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Base">
      <summary>Message Queuing does not return this error code.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Generic">
      <summary>Message text: Generic Error.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Property">
      <summary>Message text: One or more of the passed properties are invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotFound">
      <summary>Message text: The queue is not registered in the directory service.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueExists">
      <summary>Message text: A queue with the same pathname is already registered.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidParameter">
      <summary>Message text: An invalid parameter passed to a function.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidHandle">
      <summary>Message text: An invalid handle passed to a function.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.OperationCanceled">
      <summary>Message text: The operation was canceled before it could be completed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SharingViolation">
      <summary>Message text: Sharing violation. The queue is already opened for exclusive receive.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable">
      <summary>Message text: The Message Queues service is not available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineNotFound">
      <summary>Message text: The specified computer could not be found.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSort">
      <summary>Message text: Illegal sort specified (for example, duplicate columns).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalUser">
      <summary>Message text: The user has an invalid user name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoDs">
      <summary>Message text: No connection with this site's controller(s).</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName">
      <summary>Message text: Invalid queue path name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue">
      <summary>Message text: Invalid property value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyVt">
      <summary>Message text: Invalid VARTYPE value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BufferOverflow">
      <summary>Message text: The buffer supplied to MQReceiveMessage for message body retrieval was too small. The message is not removed from the queue and part of the message body that fits in the buffer was copied.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IOTimeout">
      <summary>Message text: The receive or peek message time-out has expired.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCursorAction">
      <summary>Message text: MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage can not be used with the current cursor position.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived">
      <summary>Message text: A message that is currently pointed at by the cursor has been removed from the queue by another process or by another call to receive the message without the use of this cursor.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName">
      <summary>Message text: The given format name is invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FormatNameBufferTooSmall">
      <summary>Message text: The format name buffer supplied to the API was too small to fit the format name.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation">
      <summary>Message text: The requested operation for the specified format name is not supported.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSecurityDescriptor">
      <summary>Message text: The specified security descriptor is not a valid security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderIdBufferTooSmall">
      <summary>Message text: The passed buffer for the user identifier property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SecurityDescriptorBufferTooSmall">
      <summary>Message text: The size of the buffer passed to MQGetQueueSecurity is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient">
      <summary>Message text: The RPC server cannot impersonate the client application, hence security credentials could not be verified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.AccessDenied">
      <summary>Message text: Access is denied.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld">
      <summary>Message text: Client does not have the required privileges to perform the operation.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientResources">
      <summary>Message text: Insufficient resources to perform operation.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UserBufferTooSmall">
      <summary>Message text: Request failed because user buffer is too small to hold the returned information.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed">
      <summary>Message text: Could not store a recoverable or journal message. Message was not sent.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SenderCertificateBufferTooSmall">
      <summary>Message text: The passed buffer for the user certificate property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate">
      <summary>Message text: The user certificate is not valid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate">
      <summary>Message text: The internal Message Queuing certificate is corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate">
      <summary>Message text: The internal Message Queuing certificate for the user does not exist.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData">
      <summary>Message text: A cryptographic function has failed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore">
      <summary>Message text: The personal certificate store is corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
      <summary>Message text: The computer does not support encryption operations.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.BadSecurityContext">
      <summary>Message text: Bad security context.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid">
      <summary>Message text: Could not get the SID information out of the thread token.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo">
      <summary>Message text: Could not get the account information for the user.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalCriteriaColumns">
      <summary>Message text: Invalid MQCOLUMNS parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyId">
      <summary>Message text: Invalid property identifier value.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRelation">
      <summary>Message text: Invalid relation value in restriction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertySize">
      <summary>Message text: Illegal property buffer size.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalRestrictionPropertyId">
      <summary>Message text: Invalid propid value in MQRESTRICTION parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueueProperties">
      <summary>Message text: Illegal MQQUEUEPROPS parameter, either null or with zero properties.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed">
      <summary>Message text: Invalid property for the requested operation </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties">
      <summary>Message text: Not all the required properties for the operation were specified in the input parameters.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineExists">
      <summary>Message text: Computer with the same name already exists in the site.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalMessageProperties">
      <summary>Message text: Illegal MQQMPROPS parameter, either null or with zero properties.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsIsFull">
      <summary>Message text: Directory service is full.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsError">
      <summary>Message text: Internal directory service error.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidOwner">
      <summary>Message text: Invalid object owner. For example CreateQueue failed because the Queue Manager object is invalid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode">
      <summary>Message text: The specified access mode is not supported.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ResultBufferTooSmall">
      <summary>Message text: The supplied result buffer is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse">
      <summary>Message text: The connected network cannot be deleted; it is in use.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer">
      <summary>Message text: No response from object owner.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable">
      <summary>Message text: Object owner is not reachable.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable">
      <summary>Message text: Error while reading from a queue residing on a remote computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DtcConnect">
      <summary>Message text: Cannot connect to MS DTC.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionImport">
      <summary>Message text: Cannot import the transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionUsage">
      <summary>Message text: Wrong transaction usage.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionSequence">
      <summary>Message text: Wrong transaction operations sequence.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType">
      <summary>Message text: Connector Type is mandatory when sending an Acknowledgment or secure message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.StaleHandle">
      <summary>Message text: The Queue Manager service has been restarted. The queue handle is stale and should be closed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist">
      <summary>Message text: Cannot enlist the transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueDeleted">
      <summary>Message text: The queue was deleted. Messages cannot be received anymore using this queue instance. The queue should be closed.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalContext">
      <summary>Message text: Invalid context parameter.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalSortPropertyId">
      <summary>Message text: Invalid propid value in MQSORTSET.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.LabelBufferTooSmall">
      <summary>Message text: The label buffer supplied to the API was too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty">
      <summary>Message text: The list of MQIS servers (in registry) is empty.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode">
      <summary>Message text: MQIS database is in read-only mode.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SymmetricKeyBufferTooSmall">
      <summary>Message text: The passed buffer for the Symmetric key property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SignatureBufferTooSmall">
      <summary>Message text: The passed buffer for the Signature property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ProviderNameBufferTooSmall">
      <summary>Message text: The passed buffer for the Provider name property is too small.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalOperation">
      <summary>Message text: The operation is invalid on foreign message queuing systems.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed">
      <summary>Message text: Another MQIS server is being installed; write operations to the database are not allowed at this time.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient">
      <summary>Message text: Message Queuing-independent clients cannot serve Message Queuing-dependent clients.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow">
      <summary>Message text: The number of dependent clients served by this Message Queuing server reached its upper limit.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted">
      <summary>Message text: The.ini file for the queue in LQS was deleted because it was corrupted.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable">
      <summary>Message text: The remote machine is not available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation">
      <summary>Message text: The operation is not supported for a WORKGROUP installation computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported">
      <summary>Message text: The Cryptographic Service Provider is not supported by Message Queuing.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
      <summary>Message text: Unable to set the security descriptor for the cryptographic keys.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided">
      <summary>Message text: A user attempted to send an authenticated message without a certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QDnsPropertyNotSupported">
      <summary>DNS property is not supported as criteria to locate queues.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore">
      <summary>Message text: Unable to create a certificate store for the internal certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore">
      <summary>Message text: Unable to open the certificates store for the internal certificate.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation">
      <summary>Message text: The operation is invalid for a Message Queuing services object.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid">
      <summary>Message text: Failed to grant the "Add Guid" permission to current user.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm">
      <summary>Message text: Cannot load the MSMQOCM.DLL library.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm">
      <summary>Message text: Cannot locate an entry point in the MSMQOCM.DLL library.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc">
      <summary>Message text: Failed to find Message Queuing servers on domain controllers.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain">
      <summary>Message text: Failed to join Message Queuing enterprise on Windows 2000 domain.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
      <summary>Message text: Failed to create an object on a specified global catalog server.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching">
      <summary>Message text: Failed to create Message Queuing configuration object with a GUID that matches the computer installation. You must uninstall Message Queuing and then reinstall it.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound">
      <summary>Message text: Unable to find the public key for computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist">
      <summary>Message text: The public key for the computer does not exist.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPrivateProperties">
      <summary>The private properties parameter value is invalid. This may be because it has a null value or has zero properties specified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain">
      <summary>Message text: Unable to find Global Catalog servers in the specified domain.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
      <summary>Message text: Failed to find Message Queuing servers on Global Catalog domain controllers.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName">
      <summary>Message text: Failed to retrieve the distinguished name of local computer.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx">
      <summary>Message text: Unable to hash data for an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx">
      <summary>Message text: Unable to sign data before sending an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx">
      <summary>Message text: Unable to create a hash object for an authenticated message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx">
      <summary>Message text: Signature of received message is not valid.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageNotFound">
      <summary>Message text: The specified message could not be found.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueException">
      <summary>The exception that is thrown if a Microsoft Message Queuing internal error occurs.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueException" /> class with serialized data.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Messaging.MessageQueueException" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Messaging.MessageQueueException" />. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueException.Message">
      <summary>Gets a value that describes the Message Queuing error.</summary>
      <returns>The description of the Message Queuing internal error that generated this <see cref="T:System.Messaging.MessageQueueException" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueException.MessageQueueErrorCode">
      <summary>Gets a value that indicates the error code associated with this exception.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueueErrorCode" /> that identifies the type of error Message Queuing generated.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueInstaller">
      <summary>Allows you to install and configure a queue that your application needs in order to run. This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class. Does not set any instance properties.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</summary>
      <param name="componentToCopy">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Authenticate">
      <summary>Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</summary>
      <returns>true if the queue accepts only authenticated messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.BasePriority">
      <summary>Gets or sets the base priority that is used to route a public queue's messages over the network.</summary>
      <returns>The single base priority for all messages sent to the public queue. The default is zero (0).</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Category">
      <summary>Gets or sets an implementation-specific queue type.</summary>
      <returns>A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used. The default is Guid.empty.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)">
      <summary>Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</summary>
      <param name="component">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />. </param>
      <exception cref="T:System.ArgumentException">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.EncryptionRequired">
      <summary>Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</summary>
      <returns>One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue. The default is Optional.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)">
      <summary>Performs the installation and writes message queue information to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="stateSaver">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>Determines whether the specified installer can handle the same kind of installation as this installer.</summary>
      <returns>true if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, false.</returns>
      <param name="otherInstaller">The installer to compare. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Label">
      <summary>Gets or sets a description of the queue.</summary>
      <returns>The label that describes the message queue. The default is an empty string ("").</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize">
      <summary>Gets or sets the maximum size of the journal that is associated with the queue.</summary>
      <returns>The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue. The Message Queuing default is no limit.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize">
      <summary>Gets or sets the maximum size of the queue.</summary>
      <returns>The maximum size, in kilobytes, of the queue. The Message Queuing default is no limit.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MulticastAddress">
      <summary>Introduced in MSMQ 3.0. Gets or sets the multicast address associated with the queue.</summary>
      <returns>A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or null, which indicates that the queue is not associated with a multicast address. Copy Code&lt;address&gt;:&lt;port&gt;
</returns>
      <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 is not installed.</exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Path">
      <summary>Gets or sets the location of the queue that is referenced by this object.</summary>
      <returns>The path that represents the location of the queue in the network.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.-or- The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Permissions">
      <summary>Gets or sets permissions associated with the queue.</summary>
      <returns>A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)">
      <summary>Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry. This method is meant to be used by installation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Transactional">
      <summary>Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</summary>
      <returns>true if the queue can only accept messages sent as part of a transaction; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>Removes an installation by removing queue information from the registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</summary>
      <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Messaging.MessageQueuePermission, System.Messaging, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UninstallAction">
      <summary>Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</summary>
      <returns>One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled. The default is Remove.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UseJournalQueue">
      <summary>Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</summary>
      <returns>true to copy messages that are retrieved from the queue to the journal queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermission">
      <summary>Allows control of code access permissions for messaging.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified access levels and the path of the queue.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. </param>
      <param name="path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified access levels, computer to use, queue description, and queue category.</summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. </param>
      <param name="machineName">The name of the computer where the Message Queuing queue is located. </param>
      <param name="label">The queue description. </param>
      <param name="category">The queue category (Message Queuing type identifier). </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission access level entries.</summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects. The <see cref="P:System.Messaging.MessageQueuePermission.PermissionEntries" /> property is set to this value. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the specified permission state.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Copy">
      <summary>Creates and returns an identical copy of the current permission object.</summary>
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)">
      <summary>Returns a new permission object that represents the intersection of the current permission object and the specified permission object.</summary>
      <returns>A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (Nothing in Visual Basic) if the intersection is empty.</returns>
      <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Returns a value that indicates whether the current permission object is a subset of the specified permission object.</summary>
      <returns>true if the current permission object is a subset of the specified permission object; otherwise, false.</returns>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.IsUnrestricted">
      <summary>Returns a value that indicates whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
      <returns>true if the permission can be represented as unrestricted; otherwise, false.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermission.PermissionEntries">
      <summary>Gets the collection of permission entries for this permissions request.</summary>
      <returns>A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries for this permissions request.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)">
      <summary>Returns a new permission object that is the union of the current and specified permission objects.</summary>
      <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object. </param>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAccess">
      <summary>Defines access levels used by <see cref="N:System.Messaging" /> permission classes.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.None">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> has no permissions.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Browse">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Send">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available and send messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Peek">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available and read the messages in the queue.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Receive">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available, read the messages in the queue, and receive messages.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Administer">
      <summary>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available, read the messages in the queue, and send and receive messages.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAttribute">
      <summary>Allows declarative <see cref="T:System.Messaging.MessageQueue" /> permission checks.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Category">
      <summary>Gets or sets the queue category.</summary>
      <returns>The queue category (Message Queuing type identifier), which allows an application to categorize its queues.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.CreatePermission">
      <summary>Creates the permission based on the requested access levels, category, label, computer name, and path that are set through the <see cref="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Category" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Label" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.MachineName" />, and <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Path" /> properties on the attribute.</summary>
      <returns>A <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Label">
      <summary>Gets or sets the queue description.</summary>
      <returns>The label for the message queue.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.MachineName">
      <summary>Gets or sets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Path">
      <summary>Gets or sets the queue's path.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</returns>
      <exception cref="T:System.InvalidOperationException">The value is null. </exception>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess">
      <summary>Gets or sets the permission access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntry">
      <summary>Defines the smallest unit of a code access security permission set for messaging.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the specified permission access levels and the path of the queue.</summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" /> object. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" /> property is set to this value. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the specified permission access levels, the name of the computer where the queue is located, the queue description, and the queue category.</summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value. </param>
      <param name="machineName">The name of the computer where the Message Queuing queue is located. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" /> property is set to this value. </param>
      <param name="label">The queue description. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" /> property is set to this value. </param>
      <param name="category">The queue category (Message Queuing type identifier). The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" /> property is set to this value. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Category">
      <summary>Gets the queue category.</summary>
      <returns>The queue category (Message Queuing type identifier), which allows an application to categorize its queues.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Label">
      <summary>Gets the queue description.</summary>
      <returns>The label for the message queue.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.MachineName">
      <summary>Gets the name of the computer where the Message Queuing queue is located.</summary>
      <returns>The name of the computer where the queue is located.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Path">
      <summary>Gets the queue's path.</summary>
      <returns>The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess">
      <summary>Gets the permission access levels used in the permissions request.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntryCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Adds a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to this collection.</summary>
      <returns>The zero-based index of the added <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</returns>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects that contains the permission entries to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)">
      <summary>Appends a set of specified permission entries to this collection.</summary>
      <param name="value">A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries to add. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Determines whether this collection contains a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</summary>
      <returns>true if the specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> belongs to this collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to find. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)">
      <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> that receives this collection's permission entries. </param>
      <param name="index">The zero-based index at which to begin copying the permission entries. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Determines the index of a specified permission entry in this collection.</summary>
      <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
      <param name="value">The permission entry to search for. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)">
      <summary>Inserts a permission entry into this collection at a specified index.</summary>
      <param name="index">The zero-based index into the collection at which to insert the permission entry. </param>
      <param name="value">The permission entry to insert into this collection. </param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)">
      <summary>Gets or sets the object at a specified index.</summary>
      <returns>The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnClear">
      <summary>Performs additional custom processes after clearing the contents of the collection.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before a new permission entry is inserted into the collection.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />. </param>
      <param name="value">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing a new permission entry from the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found. </param>
      <param name="value">The permission entry to remove from <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the collection.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />. </param>
      <param name="newValue">The new value of the permission entry at <paramref name="index" />. </param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)">
      <summary>Removes a specified permission entry from this collection.</summary>
      <param name="value">The permission entry to remove. </param>
    </member>
    <member name="T:System.Messaging.MessageQueueTransaction">
      <summary>Provides a Message Queuing internal transaction.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueTransaction" /> class.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Abort">
      <summary>Rolls back the pending internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The internal transaction you are attempting to roll back has not started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Begin">
      <summary>Begins a new Message Queuing internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The transaction has already been started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Commit">
      <summary>Commits a pending internal transaction.</summary>
      <exception cref="T:System.InvalidOperationException">The transaction you are trying to commit has not started. </exception>
      <exception cref="T:System.Messaging.MessageQueueException">An internal Message Queuing error occurs. </exception>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" />.</summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Finalize">
      <summary>Releases the resources held by the current instance.</summary>
    </member>
    <member name="P:System.Messaging.MessageQueueTransaction.Status">
      <summary>Gets the status of the transaction.</summary>
      <returns>One of the <see cref="T:System.Messaging.MessageQueueTransactionStatus" /> values that indicates whether the transaction has been committed, aborted, initialized, or is pending.</returns>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionStatus">
      <summary>Specifies the state of an internal Message Queuing transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Aborted">
      <summary>The transaction has been aborted and all participants have been notified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Committed">
      <summary>The transaction has been committed and all participants have been notified.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Initialized">
      <summary>The transaction has been initialized. It has not yet been started.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Pending">
      <summary>The transaction has been started. It has not yet been either committed or rolled back.</summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionType">
      <summary>Specifies the type of a Message Queuing transaction.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.None">
      <summary>Operation will not be transactional.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Automatic">
      <summary>A transaction type used for Microsoft Transaction Server (MTS) or COM+ 1.0 Services. If there is already an MTS transaction context, it will be used when sending or receiving the message.</summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Single">
      <summary>A transaction type used for single internal transactions.</summary>
    </member>
    <member name="T:System.Messaging.MessageType">
      <summary>Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative (arrival and read) acknowledgment message, or a report message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Acknowledgment">
      <summary>An acknowledgment message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Normal">
      <summary>A normal Message Queuing message.</summary>
    </member>
    <member name="F:System.Messaging.MessageType.Report">
      <summary>A report message.</summary>
    </member>
    <member name="T:System.Messaging.MessagingDescriptionAttribute">
      <summary>Specifies a description for a property or event.</summary>
    </member>
    <member name="M:System.Messaging.MessagingDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.MessagingDescriptionAttribute" /> class, using the specified description.</summary>
      <param name="description">The application-defined description text. </param>
    </member>
    <member name="P:System.Messaging.MessagingDescriptionAttribute.Description">
      <summary>Gets description text associated with the item monitored.</summary>
      <returns>An application-defined description.</returns>
    </member>
    <member name="T:System.Messaging.PeekAction">
      <summary>Indicates whether to peek the current message in a queue, or the next message.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Current">
      <summary>Peek at the current message in the queue.</summary>
    </member>
    <member name="F:System.Messaging.PeekAction.Next">
      <summary>Peek at the next message in the queue.</summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event. When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler.</summary>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.AsyncResult">
      <summary>Gets or sets the result of the asynchronous operation requested.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> that contains the data associated with the peek operation.</returns>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.Message">
      <summary>Gets the message associated with the asynchronous peek operation.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous peek operation.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> could not be retrieved. The time-out on the asynchronous operation might have expired. </exception>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">A <see cref="T:System.Messaging.PeekCompletedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Messaging.QueueAccessMode">
      <summary>Specifies the access mode for a <see cref="T:System.Messaging.MessageQueue" /> at creation time.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Send">
      <summary>The queue can only send messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Peek">
      <summary>The queue can only peek at messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.Receive">
      <summary>The queue can peek at or receive messages.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.PeekAndAdmin">
      <summary>The queue can peek at messages. It can also be purged.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.ReceiveAndAdmin">
      <summary>The queue can receive messages. It can also be purged.</summary>
    </member>
    <member name="F:System.Messaging.QueueAccessMode.SendAndReceive">
      <summary>The queue can peek at, receive, or send messages.</summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event. When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</summary>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
      <summary>Gets or sets the result of the asynchronous operation requested.</summary>
      <returns>A <see cref="T:System.IAsyncResult" /> that contains the data associated with the receive operation.</returns>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.Message">
      <summary>Gets the message associated with the asynchronous receive operation.</summary>
      <returns>A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous receive operation.</returns>
      <exception cref="T:System.Messaging.MessageQueueException">The <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> could not be retrieved. The time-out on the asynchronous operation might have expired. </exception>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />. </param>
      <param name="e">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Messaging.SecurityContext">
      <summary>Represents the security context for a message in a queue.</summary>
    </member>
    <member name="M:System.Messaging.SecurityContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</summary>
    </member>
    <member name="T:System.Messaging.StandardAccessRights">
      <summary>Specifies a set of standard access rights that correspond to operations common to most types of securable objects.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Delete">
      <summary>The right to delete the object.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ReadSecurity">
      <summary>The right to read the information in the object's security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.WriteSecurity">
      <summary>The right to modify the discretionary access control list (DACL) in the security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Synchronize">
      <summary>The right to use the object for synchronization. This enables a thread to wait until the object is in a specific state.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ModifyOwner">
      <summary>The right to change the owner in the object's security descriptor.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Read">
      <summary>The right to read the information in the object's security descriptor. Read is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Write">
      <summary>The right to read the information in the object's security descriptor. Write is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Execute">
      <summary>The right to read the information in the object's security descriptor. On Windows 2000 and Windows NT, the security descriptor contains the security information for a securable object. It identifies the object's owner and primary group. Execute is currently defined to equal ReadSecurity.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Required">
      <summary>Combines Delete, ReadSecurity, WriteSecurity, and ModifyOwner access.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.All">
      <summary>Combines Delete, ReadSecurity, WriteSecurity, ModifyOwner, and Synchronize access.</summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.None">
      <summary>No access.</summary>
    </member>
    <member name="T:System.Messaging.Trustee">
      <summary>Specifies a user account, group account, or logon session to which an access control entry applies.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class without setting any of its read/write properties.</summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of type Unknown, setting the <see cref="P:System.Messaging.Trustee.Name" /> property to the value specified, and the <see cref="P:System.Messaging.Trustee.SystemName" /> to null.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of type Unknown, setting the <see cref="P:System.Messaging.Trustee.Name" /> and the SystemName properties to the values specified.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <param name="systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of the specified type, setting the <see cref="P:System.Messaging.Trustee.Name" /> and the <see cref="P:System.Messaging.Trustee.SystemName" /> properties to the values specified.</summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property. </param>
      <param name="systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property. </param>
      <param name="trusteeType">A <see cref="T:System.Messaging.TrusteeType" /> that indicates the account type of the trustee. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.Name">
      <summary>Gets or sets the name of the trustee.</summary>
      <returns>The name of the account to which the new rights will be assigned. The default is null.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.Trustee.Name" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.Trustee.SystemName">
      <summary>Gets or sets the computer on which to look up the trustee's account.</summary>
      <returns>The local or remote computer on which the account exists. The default is null, which indicates that the name will be looked up on the local computer.</returns>
    </member>
    <member name="P:System.Messaging.Trustee.TrusteeType">
      <summary>Gets or sets the type of the trustee, which identifies whether the trustee is a user, group, computer, domain, or alias.</summary>
      <returns>A <see cref="T:System.Messaging.TrusteeType" /> that indicates what type of account the trustee has on the system. The default is Unknown.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The trustee type specified is not one of the <see cref="T:System.Messaging.TrusteeType" /> enumeration members. </exception>
    </member>
    <member name="T:System.Messaging.TrusteeType">
      <summary>Specifies the type of a trustee.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Unknown">
      <summary>The trustee type is unknown, but not necessarily invalid.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.User">
      <summary>The trustee is a user.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Group">
      <summary>The trustee is a group.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Domain">
      <summary>The trustee is a domain.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Alias">
      <summary>The trustee is an alias.</summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Computer">
      <summary>The trustee is a computer.</summary>
    </member>
    <member name="T:System.Messaging.XmlMessageFormatter">
      <summary>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</summary>
      <param name="targetTypeNames">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided. These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName". </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetTypeNames" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</summary>
      <param name="targetTypes">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="targetTypes" /> parameter is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>Determines whether the formatter can deserialize the message.</summary>
      <returns>true if the XML formatter can deserialize the message; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect. </param>
      <exception cref="T:System.InvalidOperationException">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Clone">
      <summary>Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</summary>
      <returns>An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
      <summary>Reads the contents from the given message and creates an object that contains the deserialized message.</summary>
      <returns>The deserialized message.</returns>
      <param name="message">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize. </param>
      <exception cref="T:System.InvalidOperationException">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.-or- The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
      <summary>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</summary>
      <returns>An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is null. </exception>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypes">
      <summary>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</summary>
      <returns>An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</returns>
      <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is null. </exception>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>Serializes an object into the body of the message.</summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object. </param>
      <param name="obj">The <see cref="T:System.Object" /> to be serialized into the message body. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="message" /> parameter is null.-or- The <paramref name="obj" /> parameter is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c56193