n the staging area stack. </param>
    </member>
    <member name="T:System.Windows.Input.ProcessInputEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Input.InputManager.PostProcessInput" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.QueryCursorEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.QueryCursorEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> class, by using the specified mouse device and the specified timestamp.</summary>
      <param name="mouse">The logical mouse device associated with this event.</param>
      <param name="timestamp">The time when the input occurred.</param>
    </member>
    <member name="M:System.Windows.Input.QueryCursorEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> class, by using the specified mouse device, timestamp, and stylus device.</summary>
      <param name="mouse">The logical mouse device associated with this event.</param>
      <param name="timestamp">The time when the input occurred.</param>
      <param name="stylusDevice">The stylus pointer associated with this event.</param>
    </member>
    <member name="P:System.Windows.Input.QueryCursorEventArgs.Cursor">
      <summary>Gets or sets the cursor associated with this event. </summary>
      <returns>The cursor.</returns>
    </member>
    <member name="M:System.Windows.Input.QueryCursorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="T:System.Windows.Input.QueryCursorEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.UIElement.QueryCursor" /> and <see cref="E:System.Windows.ContentElement.QueryCursor" /> events, as well as the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.RestoreFocusMode">
      <summary>Specifies how Windows Presentation Foundation (WPF) restores focus to the window.</summary>
    </member>
    <member name="F:System.Windows.Input.RestoreFocusMode.Auto">
      <summary>
            WPFÂ automatically tries to restore focus to the element that last had focus.</summary>
    </member>
    <member name="F:System.Windows.Input.RestoreFocusMode.None">
      <summary>
            WPF does not restore focus.</summary>
    </member>
    <member name="T:System.Windows.Input.RoutedCommand">
      <summary>Defines a command that implements <see cref="T:System.Windows.Input.ICommand" /> and is routed through the element tree.</summary>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name and owner type.</summary>
      <param name="name">Declared name for serialization.</param>
      <param name="ownerType">The type which is registering the command.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">the length of <paramref name="name" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ownerType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedCommand" /> class with the specified name, owner type, and collection of gestures.</summary>
      <param name="name">Declared name for serialization.</param>
      <param name="ownerType">The type that is registering the command.</param>
      <param name="inputGestures">Default input gestures associated with this command.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">the length of <paramref name="name" /> is zero- or -<paramref name="ownerType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.CanExecute(System.Object,System.Windows.IInputElement)">
      <summary>Determines whether this <see cref="T:System.Windows.Input.RoutedCommand" /> can execute in its current state.</summary>
      <returns>true if the command can execute on the current command target; otherwise, false.</returns>
      <param name="parameter">A user defined data type.</param>
      <param name="target">The command target.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</exception>
    </member>
    <member name="E:System.Windows.Input.RoutedCommand.CanExecuteChanged">
      <summary>Occurs when changes to the command source are detected by the command manager. These changes often affect whether the command should execute on the current command target.</summary>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)">
      <summary>Executes the <see cref="T:System.Windows.Input.RoutedCommand" /> on the current command target.</summary>
      <param name="parameter">User defined parameter to be passed to the handler.</param>
      <param name="target">Element at which to being looking for command handlers.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="target" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</exception>
    </member>
    <member name="P:System.Windows.Input.RoutedCommand.InputGestures">
      <summary>Gets the collection of <see cref="T:System.Windows.Input.InputGesture" /> objects that are associated with this command.</summary>
      <returns>The input gestures.</returns>
    </member>
    <member name="P:System.Windows.Input.RoutedCommand.Name">
      <summary>Gets the name of the command. </summary>
      <returns>The name of the command.</returns>
    </member>
    <member name="P:System.Windows.Input.RoutedCommand.OwnerType">
      <summary>Gets the type that is registered with the command.</summary>
      <returns>The type of the command owner.</returns>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
      <summary>For a description of this members, see <see cref="M:System.Windows.Input.ICommand.CanExecute(System.Object)" />.</summary>
      <returns>true if this command can be executed; otherwise, false.</returns>
      <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="M:System.Windows.Input.RoutedCommand.System#Windows#Input#ICommand#Execute(System.Object)">
      <summary>For a description of this members, see <see cref="M:System.Windows.Input.ICommand.Execute(System.Object)" />.</summary>
      <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
    </member>
    <member name="T:System.Windows.Input.RoutedUICommand">
      <summary>Defines an <see cref="T:System.Windows.Input.ICommand" /> that is routed through the element tree and contains a text property.</summary>
    </member>
    <member name="M:System.Windows.Input.RoutedUICommand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedUICommand" /> class.</summary>
    </member>
    <member name="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedUICommand" /> class, using the specified descriptive text, declared name, and owner type.</summary>
      <param name="text">Descriptive text for the command.</param>
      <param name="name">The declared name of the command for serialization.</param>
      <param name="ownerType">The type that is registering the command.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="name" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ownerType" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.RoutedUICommand" /> class, using the specified descriptive text, declared name, owner type, and input gestures.</summary>
      <param name="text">Descriptive text for the command.</param>
      <param name="name">The declared name of the command for serialization.</param>
      <param name="ownerType">The type that is registering the command.</param>
      <param name="inputGestures">A collection of gestures to associate with the command.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="name" /> is zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ownerType" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Input.RoutedUICommand.Text">
      <summary>Gets or sets the text that describes this command.</summary>
      <returns>The text that describes the command.  The default is an empty string.</returns>
    </member>
    <member name="T:System.Windows.Input.SpeechMode">
      <summary>Specifies the mode of interpretation for speech input.</summary>
    </member>
    <member name="F:System.Windows.Input.SpeechMode.Dictation">
      <summary>Speech input is interpreted as dictation. </summary>
    </member>
    <member name="F:System.Windows.Input.SpeechMode.Command">
      <summary>Speech input is interpreted as commands. </summary>
    </member>
    <member name="F:System.Windows.Input.SpeechMode.Indeterminate">
      <summary>Speech input mode is indeterminate.</summary>
    </member>
    <member name="T:System.Windows.Input.StagingAreaInputItem">
      <summary>Encapsulates an input event when it is being processed by the input manager.</summary>
    </member>
    <member name="M:System.Windows.Input.StagingAreaInputItem.GetData(System.Object)">
      <summary>Gets the input data associated with the specified key. </summary>
      <returns>The data for this key, or null.</returns>
      <param name="key">An arbitrary key for the data. This cannot be null.</param>
    </member>
    <member name="P:System.Windows.Input.StagingAreaInputItem.Input">
      <summary>Gets the input event data associated with this <see cref="T:System.Windows.Input.StagingAreaInputItem" /> object </summary>
      <returns>The event.</returns>
    </member>
    <member name="M:System.Windows.Input.StagingAreaInputItem.SetData(System.Object,System.Object)">
      <summary>Creates a dictionary entry by using the specified key and the specified data. </summary>
      <param name="key">An arbitrary key for the data. This cannot be null.</param>
      <param name="value">The data to set for this key. This can be null.</param>
    </member>
    <member name="T:System.Windows.Input.Stylus">
      <summary>Provides access to general information about a tablet pen.</summary>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)">
      <summary>Captures the stylus to the specified element.</summary>
      <returns>true if the stylus is captured to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">The element to capture the stylus to.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>Captures the stylus to the specified element.</summary>
      <returns>true if the stylus is captured to <paramref name="element" />; otherwise, false.</returns>
      <param name="element">The element to capture the stylus to.</param>
      <param name="captureMode">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</param>
    </member>
    <member name="P:System.Windows.Input.Stylus.Captured">
      <summary>Gets the element to which the stylus is bound.</summary>
      <returns>The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.CurrentStylusDevice">
      <summary>Gets the stylus that represents the stylus currently in use.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.DirectlyOver">
      <summary>Gets the element that is directly beneath the stylus.</summary>
      <returns>The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</returns>
    </member>
    <member name="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />Â attached property on the specified element.</summary>
      <returns>true if the specified element has flicks enabled; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />Â attached property on the specified element.</summary>
      <returns>true if the specified element has press and hold enabled; otherwise, false;</returns>
      <param name="element">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />Â attached property on the specified element.</summary>
      <returns>true if the specified element has tap feedback enabled; otherwise, false.</returns>
      <param name="element">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />Â attached property on the specified element.</summary>
      <returns>true if touch input feedback is enabled, otherwise false.</returns>
      <param name="element">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</param>
    </member>
    <member name="E:System.Windows.Input.Stylus.GotStylusCapture">
      <summary>Occurs when an element captures the stylus events.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.GotStylusCaptureEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />Â attached event.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.IsFlicksEnabled">
      <summary>Gets or sets a value indicating whether flicks are enabled.</summary>
      <returns>true if flicks are enabled; otherwise, false. </returns>
    </member>
    <member name="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />Â attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled">
      <summary>Gets or sets a values indicating whether press and hold is enabled.</summary>
      <returns>true if press and hold is enabled; otherwise, false;</returns>
    </member>
    <member name="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />Â attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled">
      <summary>Gets or sets whether a value indicating whether tap feedback is enabled.</summary>
      <returns>true if tap feedback is enabled, otherwise false.</returns>
    </member>
    <member name="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />Â attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled">
      <summary>Gets or sets whether a value indicating whether touch feedback is enabled.</summary>
      <returns>true if touch feedback is enabled, otherwise false.</returns>
    </member>
    <member name="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.LostStylusCapture">
      <summary>Occurs when an element releases stylus events.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.LostStylusCaptureEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusButtonDown">
      <summary>Occurs when the user presses one of the buttons on the stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusButtonUp">
      <summary>Occurs when the user releases one of the buttons on the stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusDown">
      <summary>Occurs when user touches the tip of the stylus to the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusInAirMove">
      <summary>Occurs if the stylus moves while it is within range of (but not touching) the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusInRange">
      <summary>Occurs when the stylus comes within range of the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusMove">
      <summary>Occurs when the stylus moves while it is touching the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange">
      <summary>Occurs when the stylus goes out of range of the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture">
      <summary>Occurs when the user makes a system gesture with this stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.PreviewStylusUp">
      <summary>Occurs when the user lifts the stylus from the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.PreviewStylusUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />Â attached event.</returns>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" />Â attached event.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />Â attached property on the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</param>
      <param name="enabled">true to enable flicks; false to disable flicks.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />Â attached property on the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</param>
      <param name="enabled">true to enable press and hold; false to disable press and hold.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />Â attached property on the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</param>
      <param name="enabled">true to enable tap feedback; false to disable tap feedback.</param>
    </member>
    <member name="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />Â attached property on the specified element.</summary>
      <param name="element">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</param>
      <param name="enabled">true to enable touch input feedback; false to disable touch input feedback.</param>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusButtonDown">
      <summary>Occurs when the user presses one of the buttons on the stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusButtonDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusButtonUp">
      <summary>Occurs when the user releases one of the buttons on the stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusButtonUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusDown">
      <summary>Occurs when the user touches the tip of the stylus to the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusDownEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusDown" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusEnter">
      <summary>Occurs when the stylus cursor enters the bounds of an element.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusEnterEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusInAirMove">
      <summary>Occurs when the stylus moves while it is in range of, but not touching, the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusInAirMoveEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusInRange">
      <summary>Occurs when the stylus comes within range of the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusInRangeEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusLeave">
      <summary>Occurs when the stylus cursor leaves the bounds of an element.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusLeaveEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusMove">
      <summary>Occurs when the stylus moves while it is touching the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusMoveEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusMove" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusOutOfRange">
      <summary>Occurs when the stylus goes out of range of the tablet.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusSystemGesture">
      <summary>Occurs when the user makes a system gesture with this stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusSystemGestureEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />Â attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.Stylus.StylusUp">
      <summary>Occurs when the user raises the stylus from the Tablet PC.</summary>
    </member>
    <member name="F:System.Windows.Input.Stylus.StylusUpEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" />Â attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.Stylus.StylusUp" />Â attached event.</returns>
    </member>
    <member name="M:System.Windows.Input.Stylus.Synchronize">
      <summary>Synchronizes the cursor and the user interface.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusButton">
      <summary>Represents a button on a stylus.</summary>
    </member>
    <member name="P:System.Windows.Input.StylusButton.Guid">
      <summary>Gets the <see cref="T:System.Guid" /> that represents the stylus button.</summary>
      <returns>The <see cref="T:System.Guid" /> property that represents the stylus button.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusButton.Name">
      <summary>Gets the name of the stylus button.</summary>
      <returns>The name of the stylus button.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusButton.StylusButtonState">
      <summary>Gets the state of the stylus button.</summary>
      <returns>One of the <see cref="T:System.Windows.Input.StylusButtonState" /> values.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusButton.StylusDevice">
      <summary>Gets the stylus that this button belongs to.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus of the current <see cref="T:System.Windows.Input.StylusButton" />.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusButton.ToString">
      <summary>Creates a string representation of the <see cref="T:System.Windows.Input.StylusButton" />.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusButtonCollection">
      <summary>Contains a collection of <see cref="T:System.Windows.Input.StylusButton" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusButtonCollection.GetStylusButtonByGuid(System.Guid)">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusButton" /> that the specified GUID identifies.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusButton" /> of the specified GUID.</returns>
      <param name="guid">The <see cref="T:System.Guid" /> that specifies the desired <see cref="T:System.Windows.Input.StylusButton" />.</param>
    </member>
    <member name="T:System.Windows.Input.StylusButtonEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> and <see cref="E:System.Windows.UIElement.StylusButtonUp" /> events. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusButtonEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32,System.Windows.Input.StylusButton)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> class. </summary>
      <param name="stylusDevice">The <see cref="T:System.Windows.Input.StylusDevice" /> to associate with this event.</param>
      <param name="timestamp">The time when the event occurs.</param>
      <param name="button">The <see cref="T:System.Windows.Input.StylusButton" /> that raises the event.</param>
    </member>
    <member name="M:System.Windows.Input.StylusButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.Input.StylusButtonEventArgs.StylusButton">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusButton" /> that raises this event.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusButton" /> that raises this event.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusButtonEventHandler">
      <summary>Represents the method that handles either the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> event or the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> event of a <see cref="T:System.Windows.UIElement" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Input.StylusButtonState">
      <summary>Represents the state of a <see cref="T:System.Windows.Input.StylusButton" />.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusButtonState.Up">
      <summary>The button is up.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusButtonState.Down">
      <summary>The button is pressed down.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusDevice">
      <summary>Represents a tablet pen used with a Tablet PC.</summary>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.ActiveSource">
      <summary>Gets the <see cref="T:System.Windows.PresentationSource" /> that reports current input for the stylus.</summary>
      <returns>The <see cref="T:System.Windows.PresentationSource" /> that reports current input for the stylus.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.Capture(System.Windows.IInputElement)">
      <summary>Binds input from the stylus to the specified element.</summary>
      <returns>true if the input element is captured successfully; otherwise, false. The default is false.</returns>
      <param name="element">The element to which the stylus is bound.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>Binds the stylus to the specified element.</summary>
      <returns>true if the input element is captured successfully; otherwise, false. The default is false.</returns>
      <param name="element"></param>
      <param name="captureMode">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> or <paramref name="captureMode" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="element" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Captured">
      <summary>Gets the element that captured the stylus.</summary>
      <returns>The <see cref="T:System.Windows.IInputElement" /> that captured the stylus.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.DirectlyOver">
      <summary>Gets the <see cref="T:System.Windows.IInputElement" /> that the pointer is positioned over.</summary>
      <returns>The element the pointer is over.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetPosition(System.Windows.IInputElement)">
      <summary>Gets the position of the stylus.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that represents the position of the stylus, in relation to <paramref name="relativeTo" />.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (<paramref name="x,y" />) coordinates are mapped.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.IInputElement)">
      <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects that the stylus collected.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (<paramref name="x,y" />) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.IInputElement,System.Windows.Input.StylusPointDescription)">
      <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus. Uses the specified <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected from the stylus.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (<paramref name="x y" />) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
      <param name="subsetToReformatTo">The <see cref="T:System.Windows.Input.StylusPointDescription" /> to be used by the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Id">
      <summary>Gets the identifier for the stylus device.</summary>
      <returns>The identifier for the stylus device.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.InAir">
      <summary>Gets whether the tablet pen is positioned above, yet not in contact with, the digitizer.</summary>
      <returns>true if the pen is positioned above, yet not in contact with, the digitizer; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.InRange">
      <summary>Gets a value that indicates whether the tablet pen is in range of the digitizer.</summary>
      <returns>true if the pen is within range of the digitizer; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Inverted">
      <summary>Gets a value that indicates whether the secondary tip of the stylus is in use.</summary>
      <returns>true if the secondary tip of the stylus is in use; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Name">
      <summary>Gets the name of the stylus.</summary>
      <returns>The name of the stylus.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.StylusButtons">
      <summary>Gets the stylus buttons on the stylus.</summary>
      <returns>A reference to a <see cref="T:System.Windows.Input.StylusButtonCollection" /> object representing all of the buttons on the stylus.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.Synchronize">
      <summary>Synchronizes the cursor and the user interface.</summary>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.TabletDevice">
      <summary>Gets the <see cref="T:System.Windows.Input.TabletDevice" /> representing the digitizer associated with the current <see cref="T:System.Windows.Input.StylusDevice" />.</summary>
      <returns>The <see cref="T:System.Windows.Input.TabletDevice" /> represents the digitizer associated with the current <see cref="T:System.Windows.Input.StylusDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Target">
      <summary>Gets the element that receives input.</summary>
      <returns>The <see cref="T:System.Windows.IInputElement" /> object that receives input.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.ToString">
      <summary>Returns the name of the stylus device.</summary>
      <returns>The name of the <see cref="T:System.Windows.Input.StylusDevice" />.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusDeviceCollection">
      <summary>Contains the <see cref="T:System.Windows.Input.StylusDevice" /> objects that represent a Tablet PC's stylus devices.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusDownEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.StylusDown" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusDownEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusDownEventArgs" /> class. </summary>
      <param name="stylusDevice">Device instance that the event is associated with.</param>
      <param name="timestamp">A timestamp used to disambiguate instances of the event.</param>
    </member>
    <member name="M:System.Windows.Input.StylusDownEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.Input.StylusDownEventArgs.TapCount">
      <summary>Gets the number of times the tablet pen was tapped.</summary>
      <returns>The number of times the tablet pen was tapped.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusDownEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> event, as well as several variations, including the corresponding Preview event. Also re-exposes the event in the base element classes. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data. .</param>
    </member>
    <member name="T:System.Windows.Input.StylusEventArgs">
      <summary>Provides data for several of the events that are associated with the <see cref="T:System.Windows.Input.Stylus" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusEventArgs" /> class. </summary>
      <param name="stylus">The stylus to associate with the event.</param>
      <param name="timestamp">The time when the event occurs.</param>
    </member>
    <member name="M:System.Windows.Input.StylusEventArgs.GetPosition(System.Windows.IInputElement)">
      <summary>Gets the position of the stylus.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that represents the position of the stylus, based on the coordinates of <paramref name="relativeTo" />.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> that the (<paramref name="x" />,<paramref name="y" />) coordinates are mapped to.</param>
    </member>
    <member name="M:System.Windows.Input.StylusEventArgs.GetStylusPoints(System.Windows.IInputElement)">
      <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects relative to the specified input element.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected in the event.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (<paramref name="x,y" />) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusEventArgs.GetStylusPoints(System.Windows.IInputElement,System.Windows.Input.StylusPointDescription)">
      <summary>Returns a <see cref="T:System.Windows.Input.StylusPointCollection" /> that uses the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> and contains <see cref="T:System.Windows.Input.StylusPoint" /> objects relating to the specified input element.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains <see cref="T:System.Windows.Input.StylusPoint" /> objects collected during an event.</returns>
      <param name="relativeTo">The <see cref="T:System.Windows.IInputElement" /> to which the (<paramref name="x,y" />) coordinates in the <see cref="T:System.Windows.Input.StylusPointCollection" /> are mapped.</param>
      <param name="subsetToReformatTo">The <see cref="T:System.Windows.Input.StylusPointDescription" /> to be used by the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="relativeTo" /> is neither <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusEventArgs.InAir">
      <summary>Gets a value that indicates whether the stylus is in proximity to, but not touching, the digitizer.</summary>
      <returns>true if the stylus is in proximity to, but not touching, the digitizer; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusEventArgs.Inverted">
      <summary>Gets a value that indicates whether the stylus in inverted.</summary>
      <returns>true if the stylus is inverted; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.Input.StylusEventArgs.StylusDevice">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusEventHandler">
      <summary>Represents the method that handles a stylus event for a class that the implements the <see cref="T:System.Windows.IInputElement" /> interface.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.StylusPoint">
      <summary>Represents a single data point collected from the digitizer and stylus.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPoint" /> class using specified (x, y) coordinates.</summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPoint" /> class using specified (x, y) coordinates and pressure.</summary>
      <param name="x">The x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="y">The y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="pressureFactor">The amount of pressure applied to the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pressureFactor" /> is less than 0 or greater than 1.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPoint" /> class using specified (x, y) coordinates, a <paramref name="pressureFactor" />, and additional parameters specified in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="pressureFactor">The amount of pressure applied to the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="stylusPointDescription">A <see cref="T:System.Windows.Input.StylusPointDescription" /> that specifies the additional properties stored in the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="additionalValues">An array of 32-bit signed integers that contains the values of the properties defined in <paramref name="stylusPointDescription" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pressureFactor" /> is less than 0 or greater than 1.-or-The values in <paramref name="additionalValues" /> that correspond to button properties are not 0 or 1.</exception>
      <exception cref="T:System.ArgumentException">The number of values in <paramref name="additionalValues" /> does not match the number of properties in <paramref name="stylusPointDescription" /> minus 3.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.Description">
      <summary>Gets or sets the <see cref="T:System.Windows.Input.StylusPointDescription" /> that specifies the properties stored in the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusPointDescription" /> specifies the properties stored in the <see cref="T:System.Windows.Input.StylusPoint" />.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.Equals(System.Object)">
      <summary>Returns a value indicating whether the specified object is equal to the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Windows.Input.StylusPoint" /> to compare to the current <see cref="T:System.Windows.Input.StylusPoint" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)">
      <summary>Returns a Boolean value that indicates whether the specified <see cref="T:System.Windows.Input.StylusPoint" /> is equal to the current <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPoint" /> objects are equal; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Input.StylusPoint" /> to compare to the current <see cref="T:System.Windows.Input.StylusPoint" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)">
      <summary>Returns a Boolean value that indicates whether the two specified <see cref="T:System.Windows.Input.StylusPoint" /> objects are equal.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPoint" /> objects are equal; otherwise, false.</returns>
      <param name="stylusPoint1">The first <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
      <param name="stylusPoint2">The second <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.GetHashCode"></member>
    <member name="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)">
      <summary>Returns the value of the specified property.</summary>
      <returns>The value of the specified <see cref="T:System.Windows.Input.StylusPointProperty" />.</returns>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> that specifies which property value to get.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylusPointProperty" /> is not one of the properties in <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)">
      <summary>Returns whether the current <see cref="T:System.Windows.Input.StylusPoint" /> contains the specified property.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Input.StylusPointProperty" /> is in the current <see cref="T:System.Windows.Input.StylusPoint" />; otherwise, false.</returns>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> to check for in the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
    </member>
    <member name="F:System.Windows.Input.StylusPoint.MaxXY">
      <summary>Specifies the largest valid value for a pair of (x, y) coordinates.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPoint.MinXY">
      <summary>Specifies the smallest valid value for a pair of (x, y) coordinates.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)">
      <summary>Compares two specified <see cref="T:System.Windows.Input.StylusPoint" /> objects and determines whether they are equal.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPoint" /> objects are equal; otherwise, false.</returns>
      <param name="stylusPoint1">The first <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
      <param name="stylusPoint2">The second <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point">
      <summary>Casts the specified <see cref="T:System.Windows.Input.StylusPoint" /> to a <see cref="T:System.Windows.Point" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> that contains the same (x, y) coordinates as <paramref name="stylusPoint" />.</returns>
      <param name="stylusPoint">The <see cref="T:System.Windows.Input.StylusPoint" /> to cast to a <see cref="T:System.Windows.Point" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)">
      <summary>Returns a Boolean value which indicates whether the specified <see cref="T:System.Windows.Input.StylusPoint" /> objects are unequal.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Input.StylusPoint" /> objects are unequal; otherwise, false.</returns>
      <param name="stylusPoint1">The first <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
      <param name="stylusPoint2">The second <see cref="T:System.Windows.Input.StylusPoint" /> to compare.</param>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.PressureFactor">
      <summary>Gets or sets a value between 0 and 1 that reflects the amount of pressure the stylus applies to the digitizer's surface when the <see cref="T:System.Windows.Input.StylusPoint" /> is created.</summary>
      <returns>Value between 0 and 1 indicating the amount of pressure the stylus applies to the digitizer's surface as the <see cref="T:System.Windows.Input.StylusPoint" /> is created.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> property is set to a value less than 0 or greater than 1.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)">
      <summary>Sets the specified property to the specified value.</summary>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> that specifies which property value to set.</param>
      <param name="value">The value of the property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylusPointProperty" /> is not one of the properties in <see cref="P:System.Windows.Input.StylusPoint.Description" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.ToPoint">
      <summary>Converts a <see cref="T:System.Windows.Input.StylusPoint" /> to a <see cref="T:System.Windows.Point" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.X">
      <summary>Gets or sets the value for the x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>The x-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.Y">
      <summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
      <returns>The y-coordinate of the <see cref="T:System.Windows.Input.StylusPoint" />.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPointCollection">
      <summary>Contains a collection of <see cref="T:System.Windows.Input.StylusPoint" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPoint})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class with the specified <see cref="T:System.Windows.Input.StylusPoint" /> objects. </summary>
      <param name="stylusPoints">A generic IEnumerable of type <see cref="T:System.Windows.Input.StylusPoint" /> to add to the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPoints" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="points" /> is 0.-or-The <see cref="T:System.Windows.Input.StylusPoint" /> objects in <paramref name="stylusPoints" /> have incompatible <see cref="T:System.Windows.Input.StylusPointDescription" /> objects.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class with specified points. </summary>
      <param name="points">A generic IEnumerable of type <see cref="T:System.Windows.Point" /> that specifies the <see cref="T:System.Windows.Input.StylusPoint" /> objects to add to the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="points" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="points" /> is 0.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class that may initially contain the specified number of <see cref="T:System.Windows.Input.StylusPoint" /> objects.</summary>
      <param name="initialCapacity">The number of <see cref="T:System.Windows.Input.StylusPoint" /> objects the <see cref="T:System.Windows.Input.StylusPointCollection" /> can initially contain.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCapacity" /> is negative.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Windows.Input.StylusPointDescription)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class that contains the properties specified in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <param name="stylusPointDescription">A <see cref="T:System.Windows.Input.StylusPointDescription" /> that specifies the additional properties stored in each <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPointDescription" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Windows.Input.StylusPointDescription,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointCollection" /> class that is the specified size and contains the properties specified in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <param name="stylusPointDescription">A <see cref="T:System.Windows.Input.StylusPointDescription" /> that specifies the additional properties stored in each <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="initialCapacity">The number of <see cref="T:System.Windows.Input.StylusPoint" /> objects the <see cref="T:System.Windows.Input.StylusPointCollection" /> can initially contain.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCapacity" /> is negative.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPointDescription" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Add(System.Windows.Input.StylusPointCollection)">
      <summary>Adds the specified <see cref="T:System.Windows.Input.StylusPointCollection" /> to the current <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <param name="stylusPoints">The <see cref="T:System.Windows.Input.StylusPointCollection" /> to add to the current <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPoints" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Input.StylusPointDescription" /> of <paramref name="stylusPoints" /> is not compatible with the <see cref="P:System.Windows.Input.StylusPointCollection.Description" /> property.</exception>
    </member>
    <member name="E:System.Windows.Input.StylusPointCollection.Changed">
      <summary>Occurs when the <see cref="T:System.Windows.Input.StylusPointCollection" /> changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.ClearItems">
      <summary>Removes all <see cref="T:System.Windows.Input.StylusPoint" /> objects from the <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Input.StylusPointCollection" /> is connected to a <see cref="T:System.Windows.Ink.Stroke" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Clone">
      <summary>Copies the <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <returns>A new <see cref="T:System.Windows.Input.StylusPointCollection" /> that contains copies of the <see cref="T:System.Windows.Input.StylusPoint" /> objects in the current <see cref="T:System.Windows.Input.StylusPointCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPointCollection.Description">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusPointDescription" /> that is associated with the <see cref="T:System.Windows.Input.StylusPoint" /> objects in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusPointDescription" /> that is associated with the <see cref="T:System.Windows.Input.StylusPoint" /> objects in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.InsertItem(System.Int32,System.Windows.Input.StylusPoint)">
      <summary>Inserts the specified <see cref="T:System.Windows.Input.StylusPoint" /> into the <see cref="T:System.Windows.Input.StylusPointCollection" /> at the specified position.</summary>
      <param name="index">The position at which to insert the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="stylusPoint">The <see cref="T:System.Windows.Input.StylusPoint" /> to insert into the <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Input.StylusPointDescription" /> of <paramref name="stylusPoint" /> is not compatible with the <see cref="P:System.Windows.Input.StylusPointCollection.Description" /> property.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is greater or equal to the number of <see cref="T:System.Windows.Input.StylusPoint" /> objects in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.OnChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Input.StylusPointCollection.Changed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.op_Explicit(System.Windows.Input.StylusPointCollection)~System.Windows.Point[]">
      <summary>Converts a <see cref="T:System.Windows.Input.StylusPointCollection" /> into a point array.</summary>
      <returns>A point array that contains points that correspond to each <see cref="T:System.Windows.Input.StylusPoint" /> in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</returns>
      <param name="stylusPoints">The stylus point collection to convert to a point array.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Reformat(System.Windows.Input.StylusPointDescription)">
      <summary>Finds the intersection of the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> and the <see cref="P:System.Windows.Input.StylusPointCollection.Description" /> property.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointCollection" /> that has a <see cref="T:System.Windows.Input.StylusPointDescription" /> that is a subset of the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> and the <see cref="T:System.Windows.Input.StylusPointDescription" /> that the current <see cref="T:System.Windows.Input.StylusPointCollection" /> uses.</returns>
      <param name="subsetToReformatTo">A <see cref="T:System.Windows.Input.StylusPointDescription" /> to intersect with the <see cref="T:System.Windows.Input.StylusPointDescription" /> of the current <see cref="T:System.Windows.Input.StylusPointCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subsetToReformatTo" /> is not a subset of the <see cref="P:System.Windows.Input.StylusPointCollection.Description" /> property.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.RemoveItem(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Input.StylusPoint" /> at the specified position from the <see cref="T:System.Windows.Input.StylusPointCollection" />.</summary>
      <param name="index">The position at which to remove the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Input.StylusPointCollection" /> is connected to a <see cref="T:System.Windows.Ink.Stroke" /> and there is only one <see cref="T:System.Windows.Input.StylusPoint" /> in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.SetItem(System.Int32,System.Windows.Input.StylusPoint)">
      <summary>Sets the specified <see cref="T:System.Windows.Input.StylusPoint" /> at the specified position.</summary>
      <param name="index">The position at which to set the <see cref="T:System.Windows.Input.StylusPoint" />.</param>
      <param name="stylusPoint">The <see cref="T:System.Windows.Input.StylusPoint" /> to set at the specified position.</param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Input.StylusPointDescription" /> of <paramref name="stylusPoint" /> is not compatible with the <see cref="P:System.Windows.Input.StylusPointCollection.Description" /> property.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is greater than the number of <see cref="T:System.Windows.Input.StylusPoint" /> objects in the <see cref="T:System.Windows.Input.StylusPointCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.ToHiMetricArray">
      <summary>Converts the property values of the <see cref="T:System.Windows.Input.StylusPoint" /> objects into a 32-bit signed integer array.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusPointDescription">
      <summary>Specifies the properties that are in a <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointDescription" /> class. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPointPropertyInfo})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointDescription" /> class with the specified <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> objects. </summary>
      <param name="stylusPointPropertyInfos">A generic IEnumerable of type <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> that specifies the properties in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.AreCompatible(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> objects are identical.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPointDescription" /> objects are identical; otherwise, false.</returns>
      <param name="stylusPointDescription1">The first <see cref="T:System.Windows.Input.StylusPointDescription" /> to check.</param>
      <param name="stylusPointDescription2">The second <see cref="T:System.Windows.Input.StylusPointDescription" /> to check.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.GetCommonDescription(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)">
      <summary>Returns the intersection of the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> objects.</summary>
      <returns>A <see cref="T:System.Windows.Input.StylusPointDescription" /> that contains the properties that are present if both of the specified <see cref="T:System.Windows.Input.StylusPointDescription" /> objects.</returns>
      <param name="stylusPointDescription"></param>
      <param name="stylusPointDescriptionPreserveInfo">The second <see cref="T:System.Windows.Input.StylusPointDescription" /> to intersect.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.GetPropertyInfo(System.Windows.Input.StylusPointProperty)">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> for the specified property.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> for the specified <see cref="T:System.Windows.Input.StylusPointProperty" />.</returns>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> that specifies the property of the desired <see cref="T:System.Windows.Input.StylusPointPropertyInfo" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.GetStylusPointProperties">
      <summary>Gets all the properties of the <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <returns>A collection that contains all of the <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> objects in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.HasProperty(System.Windows.Input.StylusPointProperty)">
      <summary>Returns a value that indicates whether the current <see cref="T:System.Windows.Input.StylusPointDescription" /> has the specified property.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPointDescription" /> has the specified <see cref="T:System.Windows.Input.StylusPointProperty" />; otherwise, false.</returns>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> to check for in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointDescription.IsSubsetOf(System.Windows.Input.StylusPointDescription)">
      <summary>Returns a value that indicates whether the current <see cref="T:System.Windows.Input.StylusPointDescription" /> is a subset of the specified <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <returns>true if the current <see cref="T:System.Windows.Input.StylusPointDescription" /> is a subset of the specified <see cref="T:System.Windows.Input.StylusPointDescription" />; otherwise, false.</returns>
      <param name="stylusPointDescriptionSuperset">The <see cref="T:System.Windows.Input.StylusPointDescription" /> against which to check whether the current <see cref="T:System.Windows.Input.StylusPointDescription" /> is a subset.</param>
    </member>
    <member name="P:System.Windows.Input.StylusPointDescription.PropertyCount">
      <summary>Gets the number of properties in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</summary>
      <returns>The number of properties in the <see cref="T:System.Windows.Input.StylusPointDescription" />.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPointProperties">
      <summary>Contains a <see cref="T:System.Windows.Input.StylusPointProperty" /> for each property that the WPF supports.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.AltitudeOrientation">
      <summary>Represents the angle between the axis of the pen and the surface of the Tablet PC.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.AzimuthOrientation">
      <summary>Represents the clockwise rotation of the cursor, through a full circular range around the z-axis.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.BarrelButton">
      <summary>Represents the barrel button of a stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.ButtonPressure">
      <summary>Represents the pressure on a pressure-sensitive button.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.Height">
      <summary>Represents the height of the contact point on the digitizer.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.NormalPressure">
      <summary>Represents the pressure of the pen tip perpendicular to the Tablet PC surface.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.PacketStatus">
      <summary>Represents the current status of the cursor.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.PitchRotation">
      <summary>Represents whether the tip is above or below a horizontal line that is perpendicular to the writing surface.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.RollRotation">
      <summary>Represents the clockwise rotation of the pen around its own axis.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.SecondaryTipButton">
      <summary>Represents the secondary tip button of a stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.SerialNumber">
      <summary>Identifies the <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.SystemTouch">
      <summary>Represents the point of contact that generates the <see cref="T:System.Windows.Input.StylusPoint" />, whether initiated by a finger, palm, or any other touch.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.TangentPressure">
      <summary>Represents the pen tip pressure along the plane of the Tablet PC surface.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.TipButton">
      <summary>Represents the tip button of a stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.TwistOrientation">
      <summary>Represents the clockwise rotation of the cursor around its own axis.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.Width">
      <summary>Represents the width of the contact point on the digitizer.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.X">
      <summary>Represents the x-coordinate in the tablet coordinate space.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.XTiltOrientation">
      <summary>Represents the angle between the (<paramref name="y,z" />) plane and the pen and y-axis plane.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.Y">
      <summary>Represents the y-coordinate in the tablet coordinate space.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.YawRotation">
      <summary>Represents the angle of the pen to the left or right around the center of its horizontal axis when the pen is horizontal.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.YTiltOrientation">
      <summary>Represents the angle between the (x, z) plane and the pen and x-axis plane.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointProperties.Z">
      <summary>Represents the z-coordinate or distance of the pen tip from the tablet surface.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusPointProperty">
      <summary>Represents a property stored in a <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointProperty.#ctor(System.Guid,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointProperty" /> class using the specified GUID. </summary>
      <param name="identifier">The <see cref="T:System.Guid" /> that uniquely identifies the <see cref="T:System.Windows.Input.StylusPointProperty" />.</param>
      <param name="isButton">true to indicate that the property represents a button on the stylus; otherwise, false. </param>
    </member>
    <member name="M:System.Windows.Input.StylusPointProperty.#ctor(System.Windows.Input.StylusPointProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointProperty" /> class. </summary>
      <param name="stylusPointProperty"></param>
    </member>
    <member name="P:System.Windows.Input.StylusPointProperty.Id">
      <summary>Gets the GUID for the current <see cref="T:System.Windows.Input.StylusPointProperty" />.</summary>
      <returns>The GUID for the current <see cref="T:System.Windows.Input.StylusPointProperty" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPointProperty.IsButton">
      <summary>Gets whether the <see cref="T:System.Windows.Input.StylusPointProperty" /> represents a button on the stylus.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPointProperty" /> represents a button on the stylus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPointProperty.ToString"></member>
    <member name="T:System.Windows.Input.StylusPointPropertyInfo">
      <summary>Specifies the constraints of a property in a <see cref="T:System.Windows.Input.StylusPoint" />.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointPropertyInfo.#ctor(System.Windows.Input.StylusPointProperty)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> class. </summary>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> to base the new <see cref="T:System.Windows.Input.StylusPointProperty" /> on.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPointPropertyInfo.#ctor(System.Windows.Input.StylusPointProperty,System.Int32,System.Int32,System.Windows.Input.StylusPointPropertyUnit,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPointPropertyInfo" /> class using the specified values.</summary>
      <param name="stylusPointProperty">The <see cref="T:System.Windows.Input.StylusPointProperty" /> to base the new <see cref="T:System.Windows.Input.StylusPointProperty" /> on.</param>
      <param name="minimum">The minimum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</param>
      <param name="maximum">The maximum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</param>
      <param name="unit"></param>
      <param name="resolution">The scale that converts a <see cref="T:System.Windows.Input.StylusPoint" /> property value into its units.</param>
    </member>
    <member name="P:System.Windows.Input.StylusPointPropertyInfo.Maximum">
      <summary>Gets the maximum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</summary>
      <returns>The maximum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPointPropertyInfo.Minimum">
      <summary>Gets the minimum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</summary>
      <returns>The minimum value accepted for the <see cref="T:System.Windows.Input.StylusPoint" /> property.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPointPropertyInfo.Resolution">
      <summary>Gets the scale that converts a <see cref="T:System.Windows.Input.StylusPoint" /> property value into units.</summary>
      <returns>The scale that converts a <see cref="T:System.Windows.Input.StylusPoint" /> property value into units.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPointPropertyInfo.Unit">
      <summary>Gets the type of measurement that is used by <see cref="T:System.Windows.Input.StylusPoint" /> property. </summary>
      <returns>One of the <see cref="T:System.Windows.Input.StylusPointPropertyUnit" /> values.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPointPropertyUnit">
      <summary>Specifies the unit of measurement for a <see cref="T:System.Windows.Input.StylusPoint" /> property.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.None">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property's measurement is not specified.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Inches">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in inches.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Centimeters">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in centimeters.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Degrees">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in degrees.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Radians">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in radians.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Seconds">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in seconds.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Pounds">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in pounds.</summary>
    </member>
    <member name="F:System.Windows.Input.StylusPointPropertyUnit.Grams">
      <summary>Indicates that a <see cref="T:System.Windows.Input.StylusPoint" /> property is measured in grams.</summary>
    </member>
    <member name="T:System.Windows.Input.StylusSystemGestureEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> event. </summary>
    </member>
    <member name="M:System.Windows.Input.StylusSystemGestureEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32,System.Windows.Input.SystemGesture)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> class. </summary>
      <param name="stylusDevice">The <see cref="T:System.Windows.Input.StylusDevice" /> to associate with the event.</param>
      <param name="timestamp"></param>
      <param name="systemGesture">The <see cref="T:System.Windows.Input.SystemGesture" /> that raises the event.</param>
    </member>
    <member name="M:System.Windows.Input.StylusSystemGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.Input.StylusSystemGestureEventArgs.SystemGesture">
      <summary>Gets the <see cref="T:System.Windows.Input.SystemGesture" /> that raises the event.</summary>
      <returns>The <see cref="T:System.Windows.Input.SystemGesture" /> that raises the event.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusSystemGestureEventHandler">
      <summary>Represents the method that handles the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> event of a <see cref="T:System.Windows.UIElement" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Windows.Input.SystemGesture">
      <summary>Defines the available system gestures.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.None">
      <summary>No system gesture.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.Tap">
      <summary>Maps to a left-click on a mouse. This can be used to choose a command from the menu or toolbar, take action if a command is chosen, set an insertion point, or show selection feedback.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.RightTap">
      <summary>Maps to a right-click on a mouse. This can be used to show a shortcut menu.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.Drag">
      <summary>Maps to a left drag on a mouse.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.RightDrag">
      <summary>Maps to a right drag on a mouse. This can be used to drag an object or selection to a different area and is followed by the appearance of the shortcut menu which provides options for moving the object.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.HoldEnter">
      <summary>Indicates that press and hold has occurred.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.HoldLeave">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.HoverEnter">
      <summary>Maps to a mouse hover. This can be used to show ToolTip rollover effects, or other mouse hover behaviors.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.HoverLeave">
      <summary>Maps to a mouse leaving a hover. This can be used to end ToolTip rollover effects or other mouse hover behaviors.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.Flick">
      <summary>Occurs with a short, quick stroke that translates into a specific command. The action taken by a flick is set system-wide. An application can listen for a <see cref="F:System.Windows.Input.SystemGesture.Flick" /> and prevent it from becoming one of the standard <see cref="T:System.Windows.Input.ApplicationCommands" /> by setting the <see cref="P:System.Windows.RoutedEventArgs.Handled" /> property to true in the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> event. Only Windows Vista supports flicks.</summary>
    </member>
    <member name="F:System.Windows.Input.SystemGesture.TwoFingerTap">
      <summary>Maps to a double-click of a mouse. </summary>
    </member>
    <member name="T:System.Windows.Input.Tablet">
      <summary>Provides access to static methods that return the tablet devices attached to the system. </summary>
    </member>
    <member name="P:System.Windows.Input.Tablet.CurrentTabletDevice">
      <summary>Gets the current <see cref="T:System.Windows.Input.TabletDevice" />.</summary>
      <returns>The current <see cref="T:System.Windows.Input.TabletDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Tablet.TabletDevices">
      <summary>Gets the <see cref="T:System.Windows.Input.TabletDeviceCollection" /> associated with the system.</summary>
      <returns>The <see cref="T:System.Windows.Input.TabletDeviceCollection" /> associated with the Tablet PC.</returns>
    </member>
    <member name="T:System.Windows.Input.TabletDevice">
      <summary>Represents the digitizer device of a Tablet PC. </summary>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.ActiveSource">
      <summary>Gets the <see cref="T:System.Windows.PresentationSource" /> that reports current input for the tablet device.</summary>
      <returns>The <see cref="T:System.Windows.PresentationSource" /> that reports current input for the tablet device.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.Id">
      <summary>Gets the unique identifier for the tablet device on the system.</summary>
      <returns>The unique identifier for the tablet device on the system.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.Name">
      <summary>Gets the name of the tablet device.</summary>
      <returns>The name of the tablet device.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.ProductId">
      <summary>Gets the product identifier for the tablet device.</summary>
      <returns>The product identifier for the tablet device.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.StylusDevices">
      <summary>Gets the <see cref="T:System.Windows.Input.StylusDeviceCollection" /> associated with the tablet device.</summary>
      <returns>The <see cref="T:System.Windows.Input.StylusDeviceCollection" /> associated with the tablet device.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.SupportedStylusPointProperties">
      <summary>Gets a collection of <see cref="T:System.Windows.Input.StylusPointProperty" /> objects that the <see cref="T:System.Windows.Input.TabletDevice" /> supports.</summary>
      <returns>A collection of <see cref="T:System.Windows.Input.StylusPointProperty" /> objects that the <see cref="T:System.Windows.Input.TabletDevice" /> supports.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.TabletHardwareCapabilities">
      <summary>Gets the <see cref="T:System.Windows.Input.TabletHardwareCapabilities" /> for the tablet device.</summary>
      <returns>The <see cref="T:System.Windows.Input.TabletHardwareCapabilities" /> for the tablet device.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.Target">
      <summary>Gets the <see cref="T:System.Windows.IInputElement" /> that provides basic input processing for the tablet device.</summary>
      <returns>The <see cref="T:System.Windows.IInputElement" /> that provides basic input processing for the tablet device.</returns>
    </member>
    <member name="M:System.Windows.Input.TabletDevice.ToString">
      <summary>Returns the name of the tablet device.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the <see cref="T:System.Windows.Input.TabletDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDevice.Type">
      <summary>Gets the <see cref="T:System.Windows.Input.TabletDeviceType" /> of the tablet device.</summary>
      <returns>The <see cref="T:System.Windows.Input.TabletDeviceType" /> of the tablet device.</returns>
    </member>
    <member name="T:System.Windows.Input.TabletDeviceCollection">
      <summary>Contains the <see cref="T:System.Windows.Input.TabletDevice" /> objects that represent the digitizer devices of a tablet device.</summary>
    </member>
    <member name="M:System.Windows.Input.TabletDeviceCollection.CopyTo(System.Windows.Input.TabletDevice[],System.Int32)">
      <summary>Copies all elements in the current collection to the specified one-dimensional array, starting at the specified destination array index.</summary>
      <param name="array">The one-dimensional array that is the destination of elements copied from the collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in the array parameter where copying begins.</param>
      <exception cref="T:System.ArgumentException">If <paramref name="index" /> + collection count is greater than or equal to <paramref name="array.length" />.</exception>
      <exception cref="T:System.ArgumentNullException">If <paramref name="array" /> is null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">If <paramref name="index" /> is less than 0 or <paramref name="index" /> is greater than or equal to <paramref name="array.length" />.</exception>
    </member>
    <member name="P:System.Windows.Input.TabletDeviceCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Input.TabletDevice" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Windows.Input.TabletDevice" /> objects in the collection.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDeviceCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe).</summary>
      <returns>true if access to the collection is synchronized (thread safe); otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Input.TabletDeviceCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Input.TabletDevice" /> object at the specified index within the collection.</summary>
      <returns>The <see cref="T:System.Windows.Input.TabletDevice" /> object at the specified index within the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Input.TabletDevice" /> that is retrieved from the collection.</param>
      <exception cref="T:System.IndexOutOfRangeException">If <paramref name="index" /> is less than 0 or <paramref name="index" /> is greater than or equal to the number of <see cref="T:System.Windows.Input.TabletDeviceCollection" /> objects in the collection.</exception>
    </member>
    <member name="P:System.Windows.Input.TabletDeviceCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the .NET Framework and is not intended to be used from your code.</summary>
      <param name="array">The array.</param>
      <param name="index">The index.</param>
    </member>
    <member name="M:System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the .NET Framework and is not intended to be used from your code.</summary>
    </member>
    <member name="T:System.Windows.Input.TabletDeviceType">
      <summary>Defines values for the type of devices the tablet device uses. </summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Stylus">
      <summary>Indicates the tablet device is a stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Touch">
      <summary>Indicates the tablet device is a touch screen.</summary>
    </member>
    <member name="T:System.Windows.Input.TabletHardwareCapabilities">
      <summary>Defines values that specify the hardware capabilities of a tablet device, including desktop digitizers and mice. </summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.None">
      <summary>Indicates the tablet device cannot provide this information.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.Integrated">
      <summary>Indicates the digitizer is integrated with the display.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.StylusMustTouch">
      <summary>Indicates the stylus must be in physical contact with the tablet device to report its position.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.HardProximity">
      <summary>Indicates the tablet device can generate in-air packets when the stylus is in the physical detection range (proximity) of the tablet device.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.StylusHasPhysicalIds">
      <summary>Indicates the tablet device can uniquely identify the active stylus.</summary>
    </member>
    <member name="F:System.Windows.Input.TabletHardwareCapabilities.SupportsPressure">
      <summary>Indicates that the tablet device can detect the amount of pressure the user applies when using the stylus.</summary>
    </member>
    <member name="T:System.Windows.Input.TextComposition">
      <summary>Represents a composition related to text input which includes the composition text itself, any related control or system text, and a state of completion for the composition.</summary>
    </member>
    <member name="M:System.Windows.Input.TextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TextComposition" /> class, taking a specified <see cref="T:System.Windows.Input.InputManager" />, source element, and composition text as initial values for the new instance.</summary>
      <param name="inputManager">An input manager to associate with this text composition.</param>
      <param name="source">A source element for this text composition.  The object underlying the source element must implement the <see cref="T:System.Windows.IInputElement" /> interface.</param>
      <param name="resultText">A string containing the initial text for the composition.  This parameter will become the value of the <see cref="P:System.Windows.Input.TextComposition.Text" /> property in the new class instance.</param>
    </member>
    <member name="M:System.Windows.Input.TextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String,System.Windows.Input.TextCompositionAutoComplete)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TextComposition" /> class, taking a specified <see cref="T:System.Windows.Input.InputManager" />, source element, composition text, and a <see cref="T:System.Windows.Input.TextCompositionAutoComplete" /> setting as initial values for the new instance.</summary>
      <param name="inputManager">An input manager to associate with this text composition.</param>
      <param name="source">A source element for this text composition.  The object underlying the source element must implement the <see cref="T:System.Windows.IInputElement" /> interface.</param>
      <param name="resultText">A string containing the initial text for the composition.  This parameter will become the value of the <see cref="P:System.Windows.Input.TextComposition.Text" /> property in the new class instance.</param>
      <param name="autoComplete">A member of the <see cref="T:System.Windows.Input.TextCompositionAutoComplete" /> enumerations specifying desired auto-complete behavior for this text composition.</param>
    </member>
    <member name="P:System.Windows.Input.TextComposition.AutoComplete">
      <summary>Gets the auto-complete setting for this text composition.</summary>
      <returns>A member of the <see cref="T:System.Windows.Input.TextCompositionAutoComplete" /> enumerations specifying the current auto-complete behavior for this text composition.</returns>
    </member>
    <member name="M:System.Windows.Input.TextComposition.Complete">
      <summary>Completes this text composition.</summary>
    </member>
    <member name="P:System.Windows.Input.TextComposition.CompositionText">
      <summary>Gets or sets the composition text for this text composition.</summary>
      <returns>A string containing the composition text for this text composition.</returns>
    </member>
    <member name="P:System.Windows.Input.TextComposition.ControlText">
      <summary>Gets or sets any control text associated with this text composition.</summary>
      <returns>A string containing any control text associated with this text composition.</returns>
    </member>
    <member name="P:System.Windows.Input.TextComposition.SystemCompositionText">
      <summary>Gets or sets the system composition text for this text composition.</summary>
      <returns>A string containing the system composition text for this text composition.</returns>
    </member>
    <member name="P:System.Windows.Input.TextComposition.SystemText">
      <summary>Gets or sets the system text for this text composition.</summary>
      <returns>A string containing the system text for this text composition.</returns>
    </member>
    <member name="P:System.Windows.Input.TextComposition.Text">
      <summary>Gets or sets the current text for this text composition.</summary>
      <returns>A string containing the current text for this text composition.</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionAutoComplete">
      <summary>Defines a set of states for the handling of automatic completion of a text composition.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionAutoComplete.Off">
      <summary>Auto-complete is off.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionAutoComplete.On">
      <summary>Auto-complete is on. A <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> event will be raised automatically by the <see cref="T:System.Windows.Input.TextCompositionManager" /> after a <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> event is handled.</summary>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventArgs">
      <summary>Contains arguments associated with changes to a <see cref="T:System.Windows.Input.TextComposition" />.</summary>
    </member>
    <member name="M:System.Windows.Input.TextCompositionEventArgs.#ctor(System.Windows.Input.InputDevice,System.Windows.Input.TextComposition)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> class, taking a specified <see cref="T:System.Windows.Input.InputDevice" /> and <see cref="T:System.Windows.Input.TextComposition" /> as initial values for the class.</summary>
      <param name="inputDevice">The input device associated with this event.</param>
      <param name="composition">A <see cref="T:System.Windows.Input.TextComposition" /> object associated with this event.</param>
      <exception cref="T:System.ArgumentNullException">Raised when composition is null.</exception>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.ControlText">
      <summary>Gets control text associated with a <see cref="T:System.Windows.Input.TextComposition" /> event.</summary>
      <returns>A string containing any control text associated with this event.</returns>
    </member>
    <member name="M:System.Windows.Input.TextCompositionEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.SystemText">
      <summary>Gets system text associated with a <see cref="T:System.Windows.Input.TextComposition" /> event.</summary>
      <returns>A string containing any system text associated with this event.</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Text">
      <summary>Gets input text associated with a <see cref="T:System.Windows.Input.TextComposition" /> event.</summary>
      <returns>A string containing the input text associated with this event.</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.TextComposition">
      <summary>Gets the <see cref="T:System.Windows.Input.TextComposition" /> associated with a <see cref="T:System.Windows.Input.TextComposition" /> event.</summary>
      <returns>A <see cref="T:System.Windows.Input.TextComposition" /> object containing the text composition associated with this event.</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventHandler">
      <summary>Represents the method that will handle the routed events related to the <see cref="T:System.Windows.Input.TextComposition" /> and <see cref="T:System.Windows.Input.TextCompositionManager" /> classes, for example <see cref="E:System.Windows.UIElement.TextInput" />.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.TextCompositionManager">
      <summary>Provides facilities for managing events related to input and text compositions.</summary>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputStartHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputStart" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputUpdateHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdate" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputStartHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputUpdateHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Adds a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputUpdate" /> Â  attached event.</summary>
      <param name="element">A dependency object to add the event handler to.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to add.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.CompleteComposition(System.Windows.Input.TextComposition)">
      <summary>Completes a specified text composition.</summary>
      <returns>true if the text composition was successfully completed; otherwise, false.</returns>
      <param name="composition">A <see cref="T:System.Windows.Input.TextComposition" /> object to complete.</param>
      <exception cref="T:System.ArgumentNullException">Raised when composition is null.</exception>
      <exception cref="T:System.ArgumentException">Raised when there is no input manager associated with composition, or when the text composition is already marked as completed.</exception>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.PreviewTextInput">
      <summary>Occurs when a <see cref="T:System.Windows.Input.TextComposition" /> is completed.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.PreviewTextInputEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.PreviewTextInputStart">
      <summary>Occurs when a new <see cref="T:System.Windows.Input.TextComposition" /> is started.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.PreviewTextInputStartEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputStart" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputStart" /> attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdate">
      <summary>Occurs when a <see cref="T:System.Windows.Input.TextComposition" /> is updated.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdate" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdate" /> attached event.</returns>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputStartHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputUpdateHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInputUpdate" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputStartHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputUpdateHandler(System.Windows.DependencyObject,System.Windows.Input.TextCompositionEventHandler)">
      <summary>Removes a handler for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputUpdate" /> Â  attached event.</summary>
      <param name="element">A dependency object to remove the event handler from.  The dependency object must be a <see cref="T:System.Windows.UIElement" /> or a <see cref="T:System.Windows.ContentElement" />.</param>
      <param name="handler">A delegate that designates the handler to remove.</param>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.StartComposition(System.Windows.Input.TextComposition)">
      <summary>Starts a specified text composition.</summary>
      <returns>true if the text composition was successfully started; otherwise, false.</returns>
      <param name="composition">A <see cref="T:System.Windows.Input.TextComposition" /> object to start.</param>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.TextInput">
      <summary>Occurs when a <see cref="T:System.Windows.Input.TextComposition" /> is completed.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.TextInputEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.TextInputStart">
      <summary>Occurs when a new <see cref="T:System.Windows.Input.TextComposition" /> is started.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.TextInputStartEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputStart" /> attached event.</returns>
    </member>
    <member name="E:System.Windows.Input.TextCompositionManager.TextInputUpdate">
      <summary>Occurs when a <see cref="T:System.Windows.Input.TextComposition" /> is updated.</summary>
    </member>
    <member name="F:System.Windows.Input.TextCompositionManager.TextInputUpdateEvent">
      <summary>Identifies the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputUpdate" /> attached event.</summary>
      <returns>The identifier for the <see cref="E:System.Windows.Input.TextCompositionManager.TextInputUpdate" /> attached event.</returns>
    </member>
    <member name="M:System.Windows.Input.TextCompositionManager.UpdateComposition(System.Windows.Input.TextComposition)">
      <summary>Updates a specified text composition.</summary>
      <returns>true if the text composition was successfully updated; otherwise, false.</returns>
      <param name="composition">A <see cref="T:System.Windows.Input.TextComposition" /> object to update.</param>
    </member>
    <member name="T:System.Windows.Input.Touch">
      <summary>Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</summary>
    </member>
    <member name="E:System.Windows.Input.Touch.FrameReported">
      <summary>Occurs when a touch message is sent.</summary>
    </member>
    <member name="T:System.Windows.Input.TouchAction">
      <summary>Describes the action of a specific touch point.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Down">
      <summary>The act of putting a finger onto the screen.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Move">
      <summary>The act of dragging a finger across the screen.</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Up">
      <summary>The act of lifting a finger off of the screen.</summary>
    </member>
    <member name="T:System.Windows.Input.TouchDevice">
      <summary>Represents a single touch input produced by a finger on a touchscreen.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)">
      <summary>Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class. </summary>
      <param name="deviceId">A unique identifier for the touch device.</param>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.Activate">
      <summary>Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</summary>
      <exception cref="T:System.InvalidOperationException">The device is already activated.</exception>
    </member>
    <member name="E:System.Windows.Input.TouchDevice.Activated">
      <summary>Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</summary>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.ActiveSource">
      <summary>Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</summary>
      <returns>The source that is reporting input for this device.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)">
      <summary>Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</summary>
      <returns>true if the element was able to capture the touch; otherwise, false.</returns>
      <param name="element">The element that captures the touch input.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</exception>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</summary>
      <returns>true if the element was able to capture the touch; otherwise, false.</returns>
      <param name="element">The element that captures the touch.</param>
      <param name="captureMode">The capture policy to use.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</exception>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Captured">
      <summary>Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</summary>
      <returns>The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.CaptureMode">
      <summary>Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</summary>
      <returns>The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.Deactivate">
      <summary>Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</summary>
      <exception cref="T:System.InvalidOperationException">The device is not activated.</exception>
    </member>
    <member name="E:System.Windows.Input.TouchDevice.Deactivated">
      <summary>Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</summary>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.DirectlyOver">
      <summary>Gets the element that the touch contact point is directly over.</summary>
      <returns>The element that the touch contact point is directly over.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)">
      <summary>When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</summary>
      <returns>All touch points that were collected between the most recent and previous touch events.</returns>
      <param name="relativeTo">The element that defines the coordinate space.</param>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)">
      <summary>Returns the current position of the touch device relative to the specified element.</summary>
      <returns>The current position of the touch device relative to the specified element.</returns>
      <param name="relativeTo">The element that defines the coordinate space.</param>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Id">
      <summary>Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</summary>
      <returns>The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.IsActive">
      <summary>Gets a value that indicates whether the device is active.</summary>
      <returns>true if the device is active; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>Called when a touch is captured to an element.</summary>
      <param name="element">The element that captures the touch input.</param>
      <param name="captureMode">The capture policy.</param>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)">
      <summary>Called when a manipulation has ended.</summary>
      <param name="cancel">true to cancel the action; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.OnManipulationStarted">
      <summary>Called when a manipulation is started.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.ReportDown">
      <summary>Reports that a touch is pressed on an element.</summary>
      <returns>true if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.ReportMove">
      <summary>Reports that a touch is moving across an element.</summary>
      <returns>true if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.ReportUp">
      <summary>Reports that a touch was lifted from an element.</summary>
      <returns>true if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)">
      <summary>Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</summary>
      <param name="activeSource">The source that reports input for this device.</param>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.Synchronize">
      <summary>Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)">
      <summary>Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</summary>
      <returns>The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</returns>
      <param name="relativeTo">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</param>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id">
      <summary>Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</summary>
      <returns>The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)">
      <summary>Occurs when a manipulation has ended.</summary>
      <param name="cancel">true to cancel the action; otherwise, false.</param>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Target">
      <summary>Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</summary>
      <returns>The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
    </member>
    <member name="E:System.Windows.Input.TouchDevice.Updated">
      <summary>Occurs when a touch message is sent.</summary>
    </member>
    <member name="T:System.Windows.Input.TouchEventArgs">
      <summary>Provides data for touch input events.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TouchEventArgs" /> class. </summary>
      <param name="touchDevice">The input device to associate with this event.</param>
      <param name="timestamp">The time when the input occurred.</param>
    </member>
    <member name="M:System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)">
      <summary>Returns all touch points that were collected between the most recent and previous touch events.</summary>
      <returns>All touch points that were collected between the most recent and previous touch events.</returns>
      <param name="relativeTo">The element that defines the coordinate space.</param>
    </member>
    <member name="M:System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)">
      <summary>Returns the current position of the touch device relative to the specified element.</summary>
      <returns>The current position of the touch device relative to the specified element.</returns>
      <param name="relativeTo">The element that defines the coordinate space.</param>
    </member>
    <member name="M:System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>Invokes event handlers in a type-specific way, which can increase event system efficiency.</summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target on which to call the handler.</param>
    </member>
    <member name="P:System.Windows.Input.TouchEventArgs.TouchDevice">
      <summary>Gets the touch that generated the event.</summary>
      <returns>The touch that generated the event.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)">
      <summary>Returns the current touch point of the primary touch device relative to the specified element.</summary>
      <returns>The current position of the primary <see cref="T:System.Windows.Input.TouchDevice" /> relative to the specified element; or null if the primary <see cref="T:System.Windows.Input.TouchDevice" /> is not active.</returns>
      <param name="relativeTo">The element that defines the coordinate space. To use WPF absolute coordinates, specify <paramref name="relativeTo" /> as null.</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)">
      <summary>Returns a collection that contains the current touch point for each active touch device relative to the specified element.</summary>
      <returns>A collection that contains the current <see cref="T:System.Windows.Input.TouchPoint" /> for each active <see cref="T:System.Windows.Input.TouchDevice" />.</returns>
      <param name="relativeTo">The element that defines the coordinate space. To use WPF absolute coordinates, specify <paramref name="relativeTo" /> as null.</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
      <summary>This member is not implemented.</summary>
    </member>
    <member name="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
      <summary>Gets the time stamp for this event.</summary>
      <returns>The time stamp for this event.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event of a <see cref="T:System.Windows.Input.Touch" />.</summary>
      <param name="sender">The object where the event handler is attached.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Windows.Input.TouchPoint">
      <summary>Represents a single touch point from a multitouch message source.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchPoint.#ctor(System.Windows.Input.TouchDevice,System.Windows.Point,System.Windows.Rect,System.Windows.Input.TouchAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TouchPoint" /> class. </summary>
      <param name="device">The touch device that generated this <see cref="T:System.Windows.Input.TouchPoint" />.</param>
      <param name="position">The location of the touch point.</param>
      <param name="bounds">The bounds of the area that the finger has in contact with the screen. </param>
      <param name="action">The last action that occurred by this device at this location.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="device" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Action">
      <summary>Gets the last action that occurred at this location.</summary>
      <returns>The last action that occurred at this location.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Bounds">
      <summary>Gets the bounds of the area that the finger has in contact with the screen. </summary>
      <returns>The bounds of the area that the finger has in contact with the screen. </returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Position">
      <summary>Gets the location of the touch point.</summary>
      <returns>The location of the touch point.</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Size">
      <summary>Gets the size of the <see cref="P:System.Windows.Input.TouchPoint.Bounds" /> property.</summary>
      <returns>The size of the <see cref="P:System.Windows.Input.TouchPoint.Bounds" /> property.</returns>
    </member>
    <member name="M:System.Windows.Input.TouchPoint.System#IEquatable{T}#Equals(System.Windows.Input.TouchPoint)">
      <summary>Indicates whether the current object is equal to another <see cref="T:System.Windows.Input.TouchPoint" />.</summary>
      <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
      <param name="other">An object to compare with this object.</param>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.TouchDevice">
      <summary>Gets the touch device that generated this <see cref="T:System.Windows.Input.TouchPoint" />.</summary>
      <returns>The touch device that generated this <see cref="T:System.Windows.Input.TouchPoint" />.</returns>
    </member>
    <member name="T:System.Windows.Input.TouchPointCollection">
      <summary>Contains a collection of <see cref="T:System.Windows.Input.TouchPoint" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Input.TouchPointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.TouchPointCollection" /> class. </summary>
    </member>
    <member name="T:System.Windows.Input.StylusPlugIns.DynamicRenderer">
      <summary>Draws ink on a surface as the user moves the tablet pen.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.DynamicRenderer.DrawingAttributes">
      <summary>Gets or sets the <see cref="T:System.Windows.Ink.DrawingAttributes" /> that specifies the appearance of the rendered ink.</summary>
      <returns>The <see cref="T:System.Windows.Ink.DrawingAttributes" /> that specifies the appearance of the rendered ink.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.GetDispatcher">
      <summary>Returns a <see cref="T:System.Windows.Threading.Dispatcher" /> for the rendering thread.</summary>
      <returns>A <see cref="T:System.Windows.Threading.Dispatcher" /> for the rendering thread.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnAdded">
      <summary>Occurs when the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" /> is added to an element.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw(System.Windows.Media.DrawingContext,System.Windows.Input.StylusPointCollection,System.Windows.Media.Geometry,System.Windows.Media.Brush)">
      <summary>Draws the ink in real-time so it appears to "flow" from the tablet pen or other pointing device.</summary>
      <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> object onto which the stroke is rendered.</param>
      <param name="stylusPoints">The <see cref="T:System.Windows.Input.StylusPointCollection" /> that represents the segment of the stroke to draw.</param>
      <param name="geometry">A <see cref="T:System.Windows.Media.Geometry" /> that represents the path of the mouse pointer.</param>
      <param name="fillBrush">A Brush that specifies the appearance of the current stroke.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDrawingAttributesReplaced">
      <summary>Occurs when the <see cref="P:System.Windows.Input.StylusPlugIns.DynamicRenderer.DrawingAttributes" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnEnabledChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnIsActiveForInputChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Input.StylusPlugIns.DynamicRenderer.IsActiveForInput" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnRemoved">
      <summary>Occurs when the <see cref="T:System.Windows.Input.DynamicRenderer.StylusPlugIn" /> is removed from an element.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusDown(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a thread in the pen thread pool when the tablet pen touches the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusDownProcessed(System.Object,System.Boolean)">
      <summary>Occurs on the application UI (user interface) thread when the tablet pen touches the digitizer.</summary>
      <param name="callbackData">The object that the application passed to the <see cref="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)" /> method.</param>
      <param name="targetVerified">true if the pen's input was correctly routed to the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusEnter(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
      <summary>Occurs on a pen thread when the cursor enters the bounds of an element.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
      <param name="confirmed">true if the pen actually entered the bounds of the element; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusLeave(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
      <summary>Occurs on a pen thread when the cursor leaves the bounds of an element.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
      <param name="confirmed">true if the pen actually left the bounds of the element; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusMove(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a pen thread when the tablet pen moves on the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusUp(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a pen thread when the user lifts the tablet pen from the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnStylusUpProcessed(System.Object,System.Boolean)">
      <summary>Occurs on the application UI (user interface) thread when the user lifts the tablet pen from the digitizer.</summary>
      <param name="callbackData">The object that the application passed to the <see cref="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)" /> method.</param>
      <param name="targetVerified">true if the pen's input was correctly routed to the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.Reset(System.Windows.Input.StylusDevice,System.Windows.Input.StylusPointCollection)">
      <summary>Clears rendering on the current stroke and redraws it.</summary>
      <param name="stylusDevice">The current stylus device.</param>
      <param name="stylusPoints">The stylus points to be redrawn.</param>
      <exception cref="T:System.ArgumentException">Neither the stylus nor the mouse is in the down state.</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.DynamicRenderer.RootVisual">
      <summary>Gets the root visual for the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />.</summary>
      <returns>The root <see cref="T:System.Windows.Media.Visual" /> for the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPlugIns.RawStylusInput">
      <summary>Provides information about input from a <see cref="T:System.Windows.Input.StylusDevice" /> to a <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.GetStylusPoints">
      <summary>Gets the stylus points that are collected from the stylus.</summary>
      <returns>The stylus points that are collected from the stylus.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)">
      <summary>Subscribes to the application thread's corresponding stylus methods.</summary>
      <param name="callbackData">The data to pass to the application thread.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.SetStylusPoints(System.Windows.Input.StylusPointCollection)">
      <summary>Sets the stylus points that are passed to the application thread.</summary>
      <param name="stylusPoints">The stylus points to pass to the application thread.</param>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.RawStylusInput.StylusDeviceId">
      <summary>Gets the identifier of the current stylus device.</summary>
      <returns>The identifier of the current <see cref="T:System.Windows.Input.StylusDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.RawStylusInput.TabletDeviceId">
      <summary>Gets the identifier of the current tablet device.</summary>
      <returns>The identifier of the current <see cref="T:System.Windows.Input.TabletDevice" />.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.RawStylusInput.Timestamp">
      <summary>Gets the time at which the input occurred.</summary>
      <returns>The time at which the input occurred.</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPlugIns.StylusPlugIn">
      <summary>Represents a plug-in that can be added to a control's <see cref="P:System.Windows.UIElement.StylusPlugIns" /> property.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> class. </summary>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.Element">
      <summary>Gets the <see cref="T:System.Windows.UIElement" /> to which the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is attached. </summary>
      <returns>The <see cref="T:System.Windows.UIElement" /> to which the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is attached.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.ElementBounds">
      <summary>Gets the cached bounds of the element.</summary>
      <returns>The cached bounds of the element.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled">
      <summary>Gets or sets whether the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is active.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is active; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput">
      <summary>Gets whether the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is able to accept input.</summary>
      <returns>true if the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is able to accept input; otherwise false.</returns>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnAdded">
      <summary>Occurs when the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is added to an element.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnEnabledChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.Enabled" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnIsActiveForInputChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Input.StylusPlugIns.StylusPlugIn.IsActiveForInput" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnRemoved">
      <summary>Occurs when the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> is removed from an element.</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDown(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a thread in the pen thread pool when the tablet pen touches the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDownProcessed(System.Object,System.Boolean)">
      <summary>Occurs on the application UI (user interface) thread when the tablet pen touches the digitizer.</summary>
      <param name="callbackData">The object that the application passed to the <see cref="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)" /> method.</param>
      <param name="targetVerified">true if the pen's input was correctly routed to the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusEnter(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
      <summary>Occurs on a pen thread when the cursor enters the bounds of an element.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
      <param name="confirmed">true if the pen actually entered the bounds of the element; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusLeave(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
      <summary>Occurs on a pen thread when the cursor leaves the bounds of an element.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
      <param name="confirmed">true if the pen actually left the bounds of the element; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMove(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a pen thread when the tablet pen moves on the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMoveProcessed(System.Object,System.Boolean)">
      <summary>Occurs on the application UI (user interface) thread when the tablet pen moves on the digitizer.</summary>
      <param name="callbackData">The object that the application passed to the <see cref="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)" /> method.</param>
      <param name="targetVerified">true if the pen's input was correctly routed to the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUp(System.Windows.Input.StylusPlugIns.RawStylusInput)">
      <summary>Occurs on a pen thread when the user lifts the tablet pen from the digitizer.</summary>
      <param name="rawStylusInput">A <see cref="T:System.Windows.Input.StylusPlugIns.RawStylusInput" /> that contains information about input from the pen.</param>
    </member>
    <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUpProcessed(System.Object,System.Boolean)">
      <summary>Occurs on the application UI (user interface) thread when the user lifts the tablet pen from the digitizer.</summary>
      <param name="callbackData">The object that the application passed to the <see cref="M:System.Windows.Input.StylusPlugIns.RawStylusInput.NotifyWhenProcessed(System.Object)" /> method.</param>
      <param name="targetVerified">true if the pen's input was correctly routed to the <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" />; otherwise, false.</param>
    </member>
    <member name="T:System.Windows.Input.StylusPlugIns.StylusPlugInCollection">
      <summary>Represent a collection of <see cref="T:System.Windows.Input.StylusPlugIns.StylusPlugIn" /> objects.</summary>
    </member>
    <member name="T:System.Windows.Interop.CursorInteropHelper">
      <summary>Provides a static helper class for WPF/Win32 interoperation with one method, which is used to obtain a Windows Presentation Foundation (WPF)Â <see cref="T:System.Windows.Input.Cursor" /> object based on a provided Win32 cursor handle.</summary>
    </member>
    <member name="M:System.Windows.Interop.CursorInteropHelper.Create(System.Runtime.InteropServices.SafeHandle)">
      <summary>Returns a Windows Presentation Foundation (WPF)Â <see cref="T:System.Windows.Input.Cursor" /> object based on a provided Win32 cursor handle.</summary>
      <returns>The Windows Presentation Foundation (WPF)Â cursor object based on the provided Win32 cursor handle.</returns>
      <param name="cursorHandle">Cursor reference to use for interoperation.</param>
    </member>
    <member name="T:System.Windows.Interop.D3DImage">
      <summary>An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface. </summary>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class. </summary>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution. </summary>
      <param name="dpiX">The display resolution on the x-axis. </param>
      <param name="dpiY">The display resolution on the y-axis.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</exception>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)">
      <summary>Specifies the area of the back buffer that changed. </summary>
      <param name="dirtyRect">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</param>
      <exception cref="T:System.InvalidOperationException">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods. -or- The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">One or more of the following conditions is true.<paramref name="dirtyRect.X" /> &lt; 0 <paramref name="dirtyRect.Y" /> &lt; 0 <paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></exception>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The object to clone.</param>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
      <summary>Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, null if the back buffer cannot be read.</returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
      <summary>When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class. </summary>
      <returns>The new instance. </returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.Finalize">
      <summary>Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection. </summary>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)">
      <summary>Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable. </summary>
      <returns>false in all cases.</returns>
      <param name="isChecking">Has no effect.</param>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The instance to copy.</param>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <param name="sourceFreezable">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</param>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.Height">
      <summary>Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />. </summary>
      <returns>The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units. A measure unit is 1/96th inch.</returns>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable">
      <summary>Gets a value that indicates whether a front buffer exists.</summary>
      <returns>true if a front buffer exists; otherwise, false. </returns>
    </member>
    <member name="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes. </summary>
    </member>
    <member name="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty">
      <summary>Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property. </returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.Lock">
      <summary>Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer. </summary>
      <exception cref="T:System.InvalidOperationException">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.Metadata">
      <summary>Gets the metadata associated with the image source.</summary>
      <returns>null in all cases. </returns>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.PixelHeight">
      <summary>Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</summary>
      <returns>The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</returns>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.PixelWidth">
      <summary>Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</summary>
      <returns>The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</returns>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)">
      <summary>Assigns a Direct3D surface as the source of the back buffer. </summary>
      <param name="backBufferType">The type of Direct3D surface. Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</param>
      <param name="backBuffer">The Direct3D surface to assign as the back buffer.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</exception>
      <exception cref="T:System.ArgumentException">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</exception>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)">
      <summary>Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</summary>
      <returns>true if the lock was acquired; otherwise, false. </returns>
      <param name="timeout">The duration to wait for the lock to be acquired.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</exception>
      <exception cref="T:System.InvalidOperationException">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Windows.Interop.D3DImage.Unlock">
      <summary>Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />. </summary>
    </member>
    <member name="P:System.Windows.Interop.D3DImage.Width">
      <summary>Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />. </summary>
      <returns>The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units. A measure unit is 1/96th inch.</returns>
    </member>
    <member name="T:System.Windows.Interop.D3DResourceType">
      <summary>Specifies the Direct3D surface types that are compatible with the <see cref="T:System.Windows.Interop.D3DImage" /> class.</summary>
    </member>
    <member name="F:System.Windows.Interop.D3DResourceType.IDirect3DSurface9">
      <summary>Specifies an IDirect3DSurface9 surface. </summary>
    </member>
    <member name="T:System.Windows.Interop.HwndSource">
      <summary>Presents Windows Presentation Foundation (WPF) content in a Win32 window.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window. </summary>
      <param name="classStyle">The Win32 class styles for the window.</param>
      <param name="style">The Win32 styles for the window.</param>
      <param name="exStyle">The extended Win32 styles for the window.</param>
      <param name="x">The position of the window's left edge.</param>
      <param name="y">The position of the window's upper edge.</param>
      <param name="width">The width of the window.</param>
      <param name="height">The height of the window.</param>
      <param name="name">The name of the window.</param>
      <param name="parent">The handle of the window's parent window.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized. </summary>
      <param name="classStyle">The Win32 class styles for the window.</param>
      <param name="style">The Win32 styles for the window.</param>
      <param name="exStyle">The extended Win32 styles for the window.</param>
      <param name="x">The position of the window's left edge.</param>
      <param name="y">The position of the window's upper edge.</param>
      <param name="width">The width of the window.</param>
      <param name="height">The height of the window.</param>
      <param name="name">The name of the window.</param>
      <param name="parent">The handle of the window's parent window.</param>
      <param name="adjustSizingForNonClientArea">true to have the layout manager include the non-client area for sizing; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</summary>
      <param name="classStyle">The Win32 class styles for the window.</param>
      <param name="style">The Win32 styles for the window.</param>
      <param name="exStyle">The extended Win32 styles for the window.</param>
      <param name="x">The position of the window's left edge.</param>
      <param name="y">The position of the window's upper edge.</param>
      <param name="name">The name of the window.</param>
      <param name="parent">The handle of the window's parent window.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings. </summary>
      <param name="parameters">A structure that contains the parameters that are required to create the window.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
      <summary>Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</summary>
      <returns>true to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
      <summary>Adds an event handler that receives all window messages. </summary>
      <param name="hook">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</param>
    </member>
    <member name="E:System.Windows.Interop.HwndSource.AutoResized">
      <summary>Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize. </summary>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks">
      <summary>Gets a sequence of registered input sinks.</summary>
      <returns>An enumeration of keyboard input sinks.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.CompositionTarget">
      <summary>Gets the visual manager for the hosted window. </summary>
      <returns>The visual manager.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.CreateHandleRef">
      <summary>Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />. The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure. </summary>
      <returns>A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
      <summary>Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />. </summary>
      <returns>true to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.Dispose">
      <summary>Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</summary>
    </member>
    <member name="E:System.Windows.Interop.HwndSource.Disposed">
      <summary>Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
      <summary>Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window. </summary>
      <returns>The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</returns>
      <param name="hwnd">The provided window handle.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
      <summary>Gets the visual target of the window. </summary>
      <returns>Returns the visual target of the window.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.Handle">
      <summary>Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />. </summary>
      <returns>The window handle.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.HasFocusWithinCore">
      <summary>Gets a value that indicates whether the sink or one of its contained components has focus. </summary>
      <returns>true if the sink or one of its contained components has focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.IsDisposed">
      <summary>Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />. </summary>
      <returns>true if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
      <summary>Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface. </summary>
      <returns>A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or null if no site is assigned. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Called when one of the mnemonics (access keys) for this sink is invoked. </summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="msg">The message for the mnemonic and associated data.</param>
      <param name="modifiers">Modifier keys.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</exception>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
      <summary>Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component. </summary>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
      <summary>Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />. </summary>
      <param name="hook">The event handler to remove.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.RestoreFocusMode">
      <summary>Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</summary>
      <returns>The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.RootVisual">
      <summary>Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window. </summary>
      <returns>The root visual object of the window.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.SizeToContent">
      <summary>Get or sets whether and how the window is sized to its content. </summary>
      <returns>One of the enumeration values. The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</returns>
    </member>
    <member name="E:System.Windows.Interop.HwndSource.SizeToContentChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
      <summary>For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</summary>
      <returns>true if the sink or one of its contained components has focus; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
      <summary>For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</summary>
      <returns>A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was handled; otherwise, false.</returns>
      <param name="msg">The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</summary>
      <returns>The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</returns>
      <param name="sink">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</summary>
      <returns>true if the focus has been set as requested; false, if there are no tab stops.</returns>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was handled by the method implementation; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
      <returns>true if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
      <summary>Sets focus on either the first tab stop or the last tab stop of the sink.</summary>
      <returns>true if the focus has been set as requested; false, if there are no tab stops.</returns>
      <param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes keyboard input at the key-down message level.</summary>
      <returns>true if the message was handled by the method implementation; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</summary>
      <returns>true if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, false.</returns>
      <param name="msg">The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</param>
      <param name="modifiers">Modifier keys.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
      <summary>Gets a value that declares whether the per-pixel opacity of the source window content is respected.</summary>
      <returns>true if the system uses per-pixel opacity; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Interop.HwndSourceHook">
      <summary> Represents the method that handles Win32 window messages.Â </summary>
      <returns>The appropriate return value depends on the particular message. See the message documentation details for the Win32 message being handled.</returns>
      <param name="hwnd">The window handle.</param>
      <param name="msg">The message ID.</param>
      <param name="wParam">The message's wParam value.</param>
      <param name="lParam">The message's lParam value.</param>
      <param name="handled">A value that indicates whether the message was handled. Set the value to true if the message was handled; otherwise, false.</param>
    </member>
    <member name="T:System.Windows.Interop.HwndSourceParameters">
      <summary>Contains the parameters that are used to create an <see cref="T:System.Windows.Interop.HwndSource" /> object using the <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> constructor.</summary>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name. </summary>
      <param name="name">The window's name.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name and initial size. </summary>
      <param name="name">The window's name.</param>
      <param name="width">The window's width, in pixels.</param>
      <param name="height">The window's height, in pixels.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode">
      <summary>Gets or sets the value that determines whether to acquire Win32 focus for the WPF containing window when an <see cref="T:System.Windows.Interop.HwndSource" /> is created.</summary>
      <returns>true to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, false. null to use the value of <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />. </returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea">
      <summary>Gets or sets a value that indicates whether to include the nonclient area for sizing. </summary>
      <returns>true if the layout manager sizing logic should include the nonclient area; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)">
      <summary>Determines whether this structure is equal to a specified object. </summary>
      <returns>true if the comparison is equal; otherwise, false.</returns>
      <param name="obj">The objects to be tested for equality.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)">
      <summary>Determines whether this structure is equal to a specified <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure. </summary>
      <returns>true if the structures are equal; otherwise, false.</returns>
      <param name="obj">The structure to be tested for equality.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle">
      <summary>Gets or sets the extended Microsoft Windows styles for the window. </summary>
      <returns>The extended window styles. See CreateWindowEx for a list of these styles. The default is 0 (no extended window styles).</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:System.Windows.Interop.HwndSourceParameters" /> instance. </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize">
      <summary>Gets a value that indicates whether a size was assigned. </summary>
      <returns>true if the window size was assigned; otherwise, false. The default is false, unless the structure was created with provided height and width, in which case the value is true.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.Height">
      <summary>Gets or sets a value that indicates the height of the window. </summary>
      <returns>The height of the window, in device pixels. The default value is 1.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook">
      <summary>Gets or sets the message hook for the window. </summary>
      <returns>The message hook for the window.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)">
      <summary>Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</summary>
      <returns>true if the structures are equal; otherwise, false.</returns>
      <param name="a">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
      <param name="b">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)">
      <summary>Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is not equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</summary>
      <returns>true if the structures are not equal; otherwise, false.</returns>
      <param name="a">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
      <param name="b">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.ParentWindow">
      <summary>Gets or sets the window handle (HWND) of the parent for the created window. </summary>
      <returns>The HWND of the parent window.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.PositionX">
      <summary>Gets or sets the left-edge position of the window. </summary>
      <returns>The left-edge position of the window. The default is CW_USEDEFAULT, as processed by CreateWindow.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.PositionY">
      <summary>Gets or sets the upper-edge position of the window. </summary>
      <returns>The upper-edge position of the window. The default is CW_USEDEFAULT, as processed by CreateWindow.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode">
      <summary>Gets or sets how WPF handles restoring focus to the window.</summary>
      <returns>One of the enumeration values that specifies how WPF handles restoring focus for the window. The default is <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)">
      <summary>Sets the values that are used for the screen position of the window for the <see cref="T:System.Windows.Interop.HwndSource" />. </summary>
      <param name="x">The position of the left edge of the window.</param>
      <param name="y">The position of the upper edge of the window.</param>
    </member>
    <member name="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)">
      <summary>Sets the values that are used for the window size of the <see cref="T:System.Windows.Interop.HwndSource" />. </summary>
      <param name="width">The width of the window, in device pixels.</param>
      <param name="height">The height of the window, in device pixels.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity">
      <summary>Gets a value that declares whether the per-pixel opacity of the source window content is respected.</summary>
      <returns>true if using per-pixel opacity; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.Width">
      <summary>Gets or sets a value that indicates the width of the window. </summary>
      <returns>The window width, in device pixels. The default value is 1.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle">
      <summary>Gets or sets the Microsoft Windows class style for the window. </summary>
      <returns>The window class style. See Window Class Styles for detailed information. The default is 0 (no window class style).</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.WindowName">
      <summary>Gets or sets the name of the window. </summary>
      <returns>The window name.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndSourceParameters.WindowStyle">
      <summary>Gets or sets the style for the window. </summary>
      <returns>The window style. See the CreateWindowEx function for a complete list of style bits. See Remarks for defaults.</returns>
    </member>
    <member name="T:System.Windows.Interop.HwndTarget">
      <summary>Represents a binding to a window handle that supports visual composition. </summary>
    </member>
    <member name="M:System.Windows.Interop.HwndTarget.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndTarget" /> class, using the specified HWND. </summary>
      <param name="hwnd">The handle for the window that this object draws to.</param>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.BackgroundColor">
      <summary>Gets or sets the background color of the window referenced by this <see cref="T:System.Windows.Interop.HwndTarget" />. </summary>
      <returns>The background color, as a <see cref="T:System.Windows.Media.Color" /> value.</returns>
    </member>
    <member name="M:System.Windows.Interop.HwndTarget.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Interop.HwndTarget" />.</summary>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.RenderMode">
      <summary>Gets or sets the rendering mode for the window referenced by this <see cref="T:System.Windows.Interop.HwndTarget" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Interop.RenderMode" /> values that specifies the current render mode. The default is <see cref="F:System.Windows.Interop.RenderMode.Default" />.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.RootVisual">
      <summary>Gets or sets the root visual object of the page that is hosted by the window. </summary>
      <returns>The root visual object of the hosted page.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.TransformFromDevice">
      <summary>Gets a matrix that transforms the coordinates of the device that is associated with the rendering destination of this target. </summary>
      <returns>The transform matrix.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.TransformToDevice">
      <summary>Gets a matrix that transforms the coordinates of this target to the device that is associated with the rendering destination. </summary>
      <returns>The transform matrix.</returns>
    </member>
    <member name="P:System.Windows.Interop.HwndTarget.UsesPerPixelOpacity">
      <summary>Gets a value that declares whether the per-pixel opacity value of the source window content is used for rendering.</summary>
      <returns>true if using per-pixel opacity; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Interop.Imaging">
      <summary>Provides managed to unmanaged interoperation support for creating image objects.</summary>
    </member>
    <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)">
      <summary>Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided pointer to an unmanaged bitmap and palette information. </summary>
      <returns>The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
      <param name="bitmap">A pointer to the unmanaged bitmap.</param>
      <param name="palette">A pointer to the bitmap's palette map.</param>
      <param name="sourceRect">The size of the source image.</param>
      <param name="sizeOptions">A value of the enumeration that specifies how to handle conversions.</param>
    </member>
    <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHIcon(System.IntPtr,System.Windows.Int32Rect,System.Windows.Media.Imaging.BitmapSizeOptions)">
      <summary>Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided pointer to an unmanaged icon image. </summary>
      <returns>The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
      <param name="icon">A pointer to the unmanaged icon source.</param>
      <param name="sourceRect">The size of the source image.</param>
      <param name="sizeOptions">A value of the enumeration that specifies how to handle conversions.</param>
    </member>
    <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromMemorySection(System.IntPtr,System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32,System.Int32)">
      <summary>Returns a managed <see cref="T:System.Windows.Media.Imaging.BitmapSource" />, based on the provided unmanaged memory location. </summary>
      <returns>The created <see cref="T:System.Windows.Media.Imaging.BitmapSource" />.</returns>
      <param name="section">A pointer to a memory section.</param>
      <param name="pixelWidth">An integer that specifies the width, in pixels, of the bitmap.</param>
      <param name="pixelHeight">An integer that specifies the height, in pixels, of the bitmap.</param>
      <param name="format">A value of the enumeration.</param>
      <param name="stride">The stride of the bitmap.</param>
      <param name="offset">The byte offset into the memory stream where the image starts.</param>
    </member>
    <member name="T:System.Windows.Interop.InteropBitmap">
      <summary>
        <see cref="T:System.Windows.Interop.InteropBitmap" /> enables developers to improve rendering performance of non-WPFÂ UIs that are hosted by WPF in interoperability scenarios.</summary>
    </member>
    <member name="M:System.Windows.Interop.InteropBitmap.Invalidate">
      <summary>Forces the hosted non-WPFÂ UI to be rendered.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Interop.InteropBitmap" /> instance is frozen and cannot have its members written to.</exception>
    </member>
    <member name="T:System.Windows.Interop.IWin32Window">
      <summary>Defines the contract for Win32 window handles.</summary>
    </member>
    <member name="P:System.Windows.Interop.IWin32Window.Handle">
      <summary>Gets the window handle.</summary>
      <returns>The window handle.</returns>
    </member>
    <member name="T:System.Windows.Interop.RenderMode">
      <summary>Specifies the rendering preference.</summary>
    </member>
    <member name="F:System.Windows.Interop.RenderMode.Default">
      <summary>The WPF rendering is in hardware, if possible; software otherwise.</summary>
    </member>
    <member name="F:System.Windows.Interop.RenderMode.SoftwareOnly">
      <summary>The WPF rendering is in software only.</summary>
    </member>
    <member name="T:System.Windows.Markup.IAddChild">
      <summary>Provides a means to parse elements that permit mixtures of child elements or text.</summary>
    </member>
    <member name="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
      <summary>Adds a child object. </summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:System.Windows.Markup.IAddChild.AddText(System.String)">
      <summary>Adds the text content of a node to the object. </summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:System.Windows.Markup.XmlLanguage">
      <summary>Represents a language tag for use in XAML markup.</summary>
    </member>
    <member name="P:System.Windows.Markup.XmlLanguage.Empty">
      <summary>Gets a static <see cref="T:System.Windows.Markup.XmlLanguage" /> instance as would be created by <see cref="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" /> with the language tag as an empty attribute string.</summary>
      <returns>The empty language tag version of <see cref="T:System.Windows.Markup.XmlLanguage" />, for use in comparison operations.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture">
      <summary>Returns the appropriate equivalent <see cref="T:System.Globalization.CultureInfo" /> for this <see cref="T:System.Windows.Markup.XmlLanguage" />, if and only if such a <see cref="T:System.Globalization.CultureInfo" /> is registered for the <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value of this <see cref="T:System.Windows.Markup.XmlLanguage" /></summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> that can be used for localization-globalization API calls that take that type as an argument.</returns>
      <exception cref="T:System.InvalidOperationException">No registered <see cref="T:System.Globalization.CultureInfo" /> for the provided <see cref="T:System.Windows.Markup.XmlLanguage" /> exists, as determined by a call to <see cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)">
      <summary>Returns a <see cref="T:System.Windows.Markup.XmlLanguage" /> instance, based on a string representing the language per RFC 3066.</summary>
      <returns>A new <see cref="T:System.Windows.Markup.XmlLanguage" /> with the provided string as its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value.</returns>
      <param name="ietfLanguageTag">An RFC 3066 language string, or empty string.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ietfLanguageTag" /> parameter cannot be null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ietfLanguageTag" /> parameter was non-empty, but did not conform to the syntax specified in RFC 3066. See Remarks.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture">
      <summary>Returns the most-closely-related non-neutral <see cref="T:System.Globalization.CultureInfo" /> for this <see cref="T:System.Windows.Markup.XmlLanguage" />.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> that can be used for localization-globalization API calls that take that type as an argument.</returns>
      <exception cref="T:System.InvalidOperationException">No related non-neutral <see cref="T:System.Globalization.CultureInfo" /> is registered for the current <see cref="T:System.Windows.Markup.XmlLanguage" /> Â <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag">
      <summary>Gets the string representation of the language tag.</summary>
      <returns>The string representation of the language tag.</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Markup.XmlLanguage" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Markup.XmlLanguage" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLanguageConverter">
      <summary>Provides type conversion for the <see cref="T:System.Windows.Markup.XmlLanguage" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguageConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlLanguageConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.Markup.XmlLanguage" /> type supported by this converter.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A type that represents the type you want to convert from.</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">The type you want to convert to. </param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified string value to the <see cref="T:System.Windows.Markup.XmlLanguage" /> type supported by this converter.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="source">The string to convert.</param>
      <exception cref="T:System.InvalidOperationException">Conversion could not be performed.</exception>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Markup.XmlLanguage" /> to the specified type.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture. </param>
      <param name="value">The object to convert. This is expected to be type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
      <param name="destinationType">A type that represents the type you want to convert to. </param>
      <exception cref="T:System.InvalidOperationException">Conversion could not be performed.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.AlignmentX">
      <summary>Describes how content is positioned horizontally in a container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Left">
      <summary>The contents align toward the left of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Center">
      <summary>The contents align toward the center of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Right">
      <summary>The contents align toward the right of the container. </summary>
    </member>
    <member name="T:System.Windows.Media.AlignmentY">
      <summary>Describes how content is positioned vertically in a container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Top">
      <summary>The contents align toward the upper edge of the container. </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Center">
      <summary>The contents align toward the center of the container.</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Bottom">
      <summary>The contents align toward the lower edge of the container. </summary>
    </member>
    <member name="T:System.Windows.Media.ArcSegment">
      <summary> Represents an elliptical arc between two points. </summary>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.ArcSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.ArcSegment" /> class. </summary>
      <param name="point">The destination point of the arc; the start point of the arc is defined as the current point of the <see cref="T:System.Windows.Media.PathFigure" /> to which the <see cref="T:System.Windows.Media.ArcSegment" /> is added.</param>
      <param name="size">The x- and y-radius of the arc. The x-radius is specified by the <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property, and the y-radius is specified by the <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property.</param>
      <param name="rotationAngle">The x-axis rotation of the ellipse.</param>
      <param name="isLargeArc">Whether the arc should be greater than 180 degrees.</param>
      <param name="sweepDirection">Set to <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> to draw the arc in a positive angle direction; set to <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> to draw the arc in a negative angle direction.</param>
      <param name="isStroked">Set to true to stroke the arc when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ArcSegment" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ArcSegment" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.IsLargeArc">
      <summary>Gets or sets a value that indicates whether the arc should be greater than 180 degrees. </summary>
      <returns>true if the arc should be greater than 180 degrees; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.IsLargeArcProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Point">
      <summary> Gets or sets the endpoint of the elliptical arc. </summary>
      <returns>The point to which the arc is drawn. The default value is (0,0). </returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.PointProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.ArcSegment.Point" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.Point" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.RotationAngle">
      <summary>Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.  </summary>
      <returns>The amount (in degrees) by which the ellipse is rotated about the x-axis. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.RotationAngleProperty">
      <summary>Identifies the  <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Size">
      <summary> Gets or sets the x- and y-radius of the arc as a <see cref="T:System.Windows.Size" /> structure. </summary>
      <returns>A <see cref="T:System.Windows.Size" /> structure that describes the x- and y-radius of the elliptical arc. The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the arc's x-radius; its <see cref="P:System.Windows.Size.Height" /> property specifies the arc's y-radius. The default value is 0,0. </returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SizeProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.ArcSegment.Size" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.Size" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.SweepDirection">
      <summary> Gets or sets a value that specifies whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.  </summary>
      <returns>A value that specifies the direction in which the arc is drawn. The default value is <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SweepDirectionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.BezierSegment">
      <summary>Represents a cubic Bezier curve drawn between two points. </summary>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option. </summary>
      <param name="point1">The first control point, which determines the beginning portion of the curve.</param>
      <param name="point2">The second control point, which determines the ending portion of the curve.</param>
      <param name="point3">The point to which the curve is drawn.</param>
      <param name="isStroked">true to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point1">
      <summary>Gets or sets the first control point of the curve.  </summary>
      <returns>The first control point of the curve.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point1Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.BezierSegment.Point1" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point2">
      <summary>Gets or sets the second control point of the curve.  </summary>
      <returns>The second control point of the curve.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point2Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.BezierSegment.Point2" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point3">
      <summary>Gets or sets the end point of the curve.  </summary>
      <returns>The end point of the curve.</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point3Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.BezierSegment.Point3" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapCache">
      <summary>Creates and caches a bitmap representation of a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BitmapCache" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BitmapCache" /> class with the specified scale. </summary>
      <param name="renderAtScale">A double that scales the bitmap. </param>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.Clone">
      <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Media.BitmapCache" />, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.CloneCurrentValue">
      <summary>Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Media.BitmapCache" /> using its current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.EnableClearType">
      <summary>Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated. </summary>
      <returns>true if ClearType is active; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCache.EnableClearType" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCache.EnableClearType" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.RenderAtScale">
      <summary>Gets or sets a value that indicates the scale that is applied to the bitmap. </summary>
      <returns>The scale that is applied to the bitmap. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels">
      <summary>Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping. </summary>
      <returns>true if pixel snapping is active; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapCacheBrush">
      <summary>Paints an area with cached content.</summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCacheBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BitmapCacheBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCacheBrush.#ctor(System.Windows.Media.Visual)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.BitmapCacheBrush" /> class with the specified <see cref="T:System.Windows.Media.Visual" />. </summary>
      <param name="visual">A <see cref="T:System.Windows.Media.Visual" /> to cache and use as the <see cref="P:System.Windows.Media.BitmapCacheBrush.Target" />.</param>
    </member>
    <member name="P:System.Windows.Media.BitmapCacheBrush.AutoLayoutContent">
      <summary>Gets or sets a value that indicates whether layout is applied to the contents of this brush. </summary>
      <returns>true if layout is applied; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCacheBrush.AutoLayoutContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCacheBrush.AutoLayoutContent" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCacheBrush.AutoLayoutContent" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.BitmapCacheBrush.BitmapCache">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.CacheMode" /> that represents cached content. </summary>
      <returns>A <see cref="T:System.Windows.Media.BitmapCache" /> that represents cached content.</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCacheBrush.BitmapCacheProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCacheBrush.BitmapCache" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCacheBrush.BitmapCache" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.BitmapCacheBrush.Clone">
      <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Media.BitmapCacheBrush" />, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.BitmapCacheBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Media.BitmapCacheBrush" /> using its current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.BitmapCacheBrush.Target">
      <summary>Gets or sets the target visual to cache. </summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> to cache and paint with. </returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCacheBrush.TargetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.BitmapCacheBrush.Target" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.BitmapCacheBrush.Target" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapScalingMode">
      <summary>Specifies which algorithm is used to scale bitmap images.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.Unspecified">
      <summary>Use the default bitmap scaling mode, which is <see cref="F:System.Windows.Media.BitmapScalingMode.Linear" />.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.LowQuality">
      <summary>Use bilinear bitmap scaling, which is faster than <see cref="F:System.Windows.Media.BitmapScalingMode.HighQuality" /> mode, but produces lower quality output. The <see cref="F:System.Windows.Media.BitmapScalingMode.LowQuality" /> mode is the same as the <see cref="F:System.Windows.Media.BitmapScalingMode.Linear" /> mode.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.HighQuality">
      <summary>Use high quality bitmap scaling, which is slower than <see cref="F:System.Windows.Media.BitmapScalingMode.LowQuality" /> mode, but produces higher quality output. The <see cref="F:System.Windows.Media.BitmapScalingMode.HighQuality" /> mode is the same as the <see cref="F:System.Windows.Media.BitmapScalingMode.Fant" /> mode.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.Linear">
      <summary>Use linear bitmap scaling, which is faster than <see cref="F:System.Windows.Media.BitmapScalingMode.HighQuality" /> mode, but produces lower quality output.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.Fant">
      <summary>Use very high quality Fant bitmap scaling, which is slower than all other bitmap scaling modes, but produces higher quality output.</summary>
    </member>
    <member name="F:System.Windows.Media.BitmapScalingMode.NearestNeighbor">
      <summary>Use nearest-neighbor bitmap scaling, which provides performance benefits over <see cref="F:System.Windows.Media.BitmapScalingMode.LowQuality" /> mode when the software rasterizer is used. This mode is often used to magnify a bitmap. </summary>
    </member>
    <member name="T:System.Windows.Media.Brush">
      <summary>Defines objects used to paint graphical objects. Classes that derive from <see cref="T:System.Windows.Media.Brush" /> describe how the area is painted.       </summary>
    </member>
    <member name="M:System.Windows.Media.Brush.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Brush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Brush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Brush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Brush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Brush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.Opacity">
      <summary> Gets or sets the degree of opacity of a <see cref="T:System.Windows.Media.Brush" />.  </summary>
      <returns>The value of the <see cref="P:System.Windows.Media.Brush.Opacity" /> property is expressed as a value between 0.0 and 1.0. The default value is 1.0. </returns>
    </member>
    <member name="F:System.Windows.Media.Brush.OpacityProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Brush.Opacity" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.Opacity" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.RelativeTransform">
      <summary>Gets or sets the transformation that is applied to the brush using relative coordinates. </summary>
      <returns>The transformation that is applied to the brush using relative coordinates.  The default value is the <see cref="P:System.Windows.Media.Transform.Identity" /> transformation.</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.RelativeTransformProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Brush.RelativeTransform" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.RelativeTransform" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Brush.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Brush.ToString">
      <summary> Return string representation of this <see cref="T:System.Windows.Media.Brush" />.              </summary>
      <returns>A string representation of this object.</returns>
    </member>
    <member name="M:System.Windows.Media.Brush.ToString(System.IFormatProvider)">
      <summary> Creates a string representation of this object based on the specified culture-specific formatting information.              </summary>
      <returns>A string representation of this object.</returns>
      <param name="provider">Culture-specific formatting information, or null to use the default formatting of the current culture.</param>
    </member>
    <member name="P:System.Windows.Media.Brush.Transform">
      <summary> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush's output has been mapped and positioned. </summary>
      <returns>The transformation to apply to the brush. The default value is the <see cref="P:System.Windows.Media.Transform.Identity" /> transformation.</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.TransformProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Brush.Transform" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.Brush.Transform" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.BrushConverter">
      <summary> Used to convert a <see cref="T:System.Windows.Media.Brush" /> object to or from another object type. </summary>
    </member>
    <member name="M:System.Windows.Media.BrushConverter.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.BrushConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.BrushConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether this class can convert an object of a given type to a <see cref="T:System.Windows.Media.Brush" /> object. </summary>
      <returns>Returns true if conversion is possible (object is string type); otherwise, false.</returns>
      <param name="context">The conversion context.</param>
      <param name="sourceType">The type from which to convert.</param>
    </member>
    <member name="M:System.Windows.Media.BrushConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether this class can convert an object of a given type to the specified destination type. </summary>
      <returns>Returns true if conversion is possible; otherwise, false.</returns>
      <param name="context">The conversion context.</param>
      <param name="destinationType">The destination type.</param>
    </member>
    <member name="M:System.Windows.Media.BrushConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Converts from an object of a given type to a <see cref="T:System.Windows.Media.Brush" /> object. </summary>
      <returns>Returns a new <see cref="T:System.Windows.Media.Brush" /> object if successful; otherwise, NULL.</returns>
      <param name="context">The conversion context.</param>
      <param name="culture">The culture information that applies to the conversion.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is NULL or cannot be converted to a <see cref="T:System.Windows.Media.Brush" />.</exception>
    </member>
    <member name="M:System.Windows.Media.BrushConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Converts a <see cref="T:System.Windows.Media.Brush" /> object to a specified type, using the specified context and culture information. </summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">The conversion context.</param>
      <param name="culture">The current culture information.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Brush" /> to convert.</param>
      <param name="destinationType">The destination type that the value object is converted to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is NULL or it is not a <see cref="T:System.Windows.Media.Brush" />-or-<paramref name="destinationType" /> is not a valid destination type.</exception>
    </member>
    <member name="T:System.Windows.Media.Brushes">
      <summary>Implements a set of predefined <see cref="T:System.Windows.Media.SolidColorBrush" /> objects. </summary>
    </member>
    <member name="P:System.Windows.Media.Brushes.AliceBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF0F8FF. </summary>
      <returns>A frozen <see cref="T:System.Windows.Media.SolidColorBrush" /> with a <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> of #FFF0F8FF.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.AntiqueWhite">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFAEBD7. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Aqua">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00FFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Aquamarine">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF7FFFD4. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Azure">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF0FFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Beige">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF5F5DC. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Bisque">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFE4C4. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Black">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF000000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.BlanchedAlmond">
      <summary> Gets the solid fill color that has a hexadecimal value of #FFFFEBCD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Blue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF0000FF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.BlueViolet">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF8A2BE2. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Brown">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFA52A2A. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.BurlyWood">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDEB887. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.CadetBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF5F9EA0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Chartreuse">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF7FFF00. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Chocolate">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFD2691E. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Coral">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF7F50. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.CornflowerBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF6495ED. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Cornsilk">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFF8DC. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Crimson">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDC143C. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Cyan">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00FFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00008B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkCyan">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF008B8B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkGoldenrod">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFB8860B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFA9A9A9. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF006400. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkKhaki">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFBDB76B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkMagenta">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF8B008B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkOliveGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF556B2F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkOrange">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF8C00. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkOrchid">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF9932CC. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkRed">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF8B0000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkSalmon">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFE9967A. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkSeaGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF8FBC8F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkSlateBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF483D8B. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkSlateGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF2F4F4F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkTurquoise">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00CED1. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DarkViolet">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF9400D3. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DeepPink">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF1493. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DeepSkyBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00BFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DimGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF696969. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.DodgerBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF1E90FF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Firebrick">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFB22222. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.FloralWhite">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFAF0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.ForestGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF228B22. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Fuchsia">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF00FF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Gainsboro">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDCDCDC. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.GhostWhite">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF8F8FF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Gold">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFD700. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Goldenrod">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDAA520. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Gray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF808080. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Green">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF008000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.GreenYellow">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFADFF2F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Honeydew">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF0FFF0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.HotPink">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF69B4. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.IndianRed">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFCD5C5C. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Indigo">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF4B0082. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Ivory">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFFF0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Khaki">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF0E68C. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Lavender">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFE6E6FA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LavenderBlush">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFF0F5. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LawnGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF7CFC00. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LemonChiffon">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFACD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFADD8E6. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightCoral">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF08080. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightCyan">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFE0FFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightGoldenrodYellow">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFAFAD2. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFD3D3D3. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF90EE90. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightPink">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFB6C1. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightSalmon">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFA07A. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightSeaGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF20B2AA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightSkyBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF87CEFA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightSlateGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF778899. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightSteelBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFB0C4DE. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LightYellow">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFFE0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Lime">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00FF00. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.LimeGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF32CD32. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Linen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFAF0E6. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Magenta">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF00FF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Maroon">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF800000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumAquamarine">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF66CDAA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF0000CD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumOrchid">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFBA55D3. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumPurple">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF9370DB. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumSeaGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF3CB371. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumSlateBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF7B68EE. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumSpringGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00FA9A. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumTurquoise">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF48D1CC. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MediumVioletRed">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFC71585. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MidnightBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF191970. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MintCream">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF5FFFA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.MistyRose">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFE4E1. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Moccasin">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFE4B5. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.NavajoWhite">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFDEAD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Navy">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF000080. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.OldLace">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFDF5E6. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Olive">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF808000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.OliveDrab">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF6B8E23. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Orange">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFA500. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.OrangeRed">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF4500. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Orchid">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDA70D6. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PaleGoldenrod">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFEEE8AA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PaleGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF98FB98. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PaleTurquoise">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFAFEEEE. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PaleVioletRed">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDB7093. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PapayaWhip">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFEFD5. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PeachPuff">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFDAB9. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Peru">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFCD853F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Pink">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFC0CB. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Plum">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFDDA0DD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.PowderBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFB0E0E6. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Purple">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF800080. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Red">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF0000. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.RosyBrown">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFBC8F8F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.RoyalBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF4169E1. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SaddleBrown">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF8B4513. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Salmon">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFA8072. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SandyBrown">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF4A460. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SeaGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF2E8B57. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SeaShell">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFF5EE. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Sienna">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFA0522D. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Silver">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFC0C0C0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SkyBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF87CEEB. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SlateBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF6A5ACD. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SlateGray">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF708090. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Snow">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFAFA. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SpringGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF00FF7F. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.SteelBlue">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF4682B4. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Tan">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFD2B48C. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Teal">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF008080. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Thistle">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFD8BFD8. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Tomato">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFF6347. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Transparent">
      <summary>Gets the solid fill color that has a hexadecimal value of #00FFFFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Turquoise">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF40E0D0. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Violet">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFEE82EE. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Wheat">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF5DEB3. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.White">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFFFF. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.WhiteSmoke">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFF5F5F5. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.Yellow">
      <summary>Gets the solid fill color that has a hexadecimal value of #FFFFFF00. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="P:System.Windows.Media.Brushes.YellowGreen">
      <summary>Gets the solid fill color that has a hexadecimal value of #FF9ACD32. </summary>
      <returns>A solid fill color.</returns>
    </member>
    <member name="T:System.Windows.Media.BrushMappingMode">
      <summary>Specifies the coordinate system used by a <see cref="T:System.Windows.Media.Brush" />. </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.Absolute">
      <summary>The coordinate system is not relative to a bounding box. Values are interpreted directly in local space.  </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox">
      <summary>The coordinate system is relative to a bounding box: 0 indicates 0Â percent of the bounding box, and 1 indicates 100Â percent of the bounding box. For example, (0.5, 0.5) describes a point in the middle of the bounding box, and (1, 1) describes a point at the bottom right of the bounding box. </summary>
    </member>
    <member name="T:System.Windows.Media.CacheMode">
      <summary>Provides a base implementation for caching a <see cref="T:System.Windows.UIElement" />.</summary>
    </member>
    <member name="M:System.Windows.Media.CacheMode.Clone">
      <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Media.CacheMode" />, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.CacheMode.CloneCurrentValue">
      <summary>Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Media.CacheMode" /> using its current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="T:System.Windows.Media.CacheModeConverter">
      <summary>Converts a <see cref="T:System.Windows.Media.CacheMode" /> from one data type to another.</summary>
    </member>
    <member name="M:System.Windows.Media.CacheModeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CacheModeConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.CacheModeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this <see cref="T:System.Windows.Media.CacheModeConverter" /> can convert an instance of the specified type to a <see cref="T:System.Windows.Media.CacheMode" />, using the specified context.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.CacheModeConverter" /> can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that specifies the type you want to convert from. </param>
    </member>
    <member name="M:System.Windows.Media.CacheModeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this <see cref="T:System.Windows.Media.CacheModeConverter" /> can convert a <see cref="T:System.Windows.Media.CacheMode" /> to an instance of a specified type, using the specified context.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.CacheModeConverter" /> can perform the conversion; otherwise, false.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A type representing the type to convert to.</param>
    </member>
    <member name="M:System.Windows.Media.CacheModeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts a specified object to a <see cref="T:System.Windows.Media.CacheMode" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.CacheMode" /> that is created by converting <paramref name="value" />; otherwise, an exception is raised.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture. </param>
      <param name="value">The <see cref="T:System.Object" /> to be converted. </param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or not a type that can be converted to <see cref="T:System.Windows.Media.CacheMode" />.</exception>
    </member>
    <member name="M:System.Windows.Media.CacheModeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a <see cref="T:System.Windows.Media.CacheMode" /> to the specified type.</summary>
      <returns>The converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that represents information about a culture, such as language and calendar system. Can be null.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null, <paramref name="value" /> is not a <see cref="T:System.Windows.Media.CacheMode" />, or <paramref name="destinationType" /> is not a string.</exception>
    </member>
    <member name="T:System.Windows.Media.CachingHint">
      <summary>Specifies whether to cache tiled brush objects.</summary>
    </member>
    <member name="F:System.Windows.Media.CachingHint.Unspecified">
      <summary>No caching hints are specified.</summary>
    </member>
    <member name="F:System.Windows.Media.CachingHint.Cache">
      <summary>Cache the tiled brush objects in an off-screen buffer, using the caching hints specified by the <see cref="T:System.Windows.Media.RenderOptions" /> settings.</summary>
    </member>
    <member name="T:System.Windows.Media.CharacterMetrics">
      <summary>Represents the metrics used to lay out a character in a device font.</summary>
    </member>
    <member name="M:System.Windows.Media.CharacterMetrics.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CharacterMetrics" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.CharacterMetrics.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CharacterMetrics" /> class by specifying the metrics as a string.</summary>
      <param name="metrics">A comma-delimited <see cref="T:System.String" /> value that represents the metrics for the character.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.Baseline">
      <summary>Gets the baseline value for the character.</summary>
      <returns>A value of type <see cref="T:System.Double" /> representing the baseline.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.BlackBoxHeight">
      <summary>Gets the height of the black box for the character.</summary>
      <returns>A value of type <see cref="T:System.Double" /> representing the black box height.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.BlackBoxWidth">
      <summary>Gets the width of the black box for the character.</summary>
      <returns>A value of type <see cref="T:System.Double" /> representing the black box width.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.BottomSideBearing">
      <summary>Gets the recommended white space below the black box.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetrics.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Media.CharacterMetrics" /> object is equal to the current <see cref="T:System.Windows.Media.CharacterMetrics" /> object.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Windows.Media.CharacterMetrics" /> object to compare to the current <see cref="T:System.Windows.Media.CharacterMetrics" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetrics.GetHashCode">
      <summary>Creates a hash code from the metric values of the <see cref="T:System.Windows.Media.CharacterMetrics" /> object.</summary>
      <returns>A value of type <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.LeftSideBearing">
      <summary>Gets the recommended white space to the left of the black box.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.Metrics">
      <summary>Gets or sets a comma-delimited string representing metric values.</summary>
      <returns>A value of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.RightSideBearing">
      <summary>Gets the recommended white space to the right of the black box.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetrics.TopSideBearing">
      <summary>Gets the recommended white space above the black box.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="T:System.Windows.Media.CharacterMetricsDictionary">
      <summary>Represents a dictionary of <see cref="T:System.Windows.Media.CharacterMetrics" /> objects for a device font that is indexed by Unicode scalar values.</summary>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Add(System.Collections.Generic.KeyValuePair{System.Int32,System.Windows.Media.CharacterMetrics})">
      <summary>Adds a character code and associated <see cref="T:System.Windows.Media.CharacterMetrics" /> value to the collection using a key/value pair.</summary>
      <param name="item">The key/value pair representing the character code and associated <see cref="T:System.Windows.Media.CharacterMetrics" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Add(System.Int32,System.Windows.Media.CharacterMetrics)">
      <summary>Adds a character code and associated <see cref="T:System.Windows.Media.CharacterMetrics" /> value to the collection.</summary>
      <param name="key">A value of type <see cref="T:System.Int32" /> representing the character code.</param>
      <param name="value">A value of type <see cref="T:System.Windows.Media.CharacterMetrics" />.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Int32,System.Windows.Media.CharacterMetrics})">
      <summary>Determines whether the collection contains the specified key/value pair.</summary>
      <returns>true if the dictionary contains the <see cref="T:System.Windows.Media.CharacterMetrics" /> represented by the character code in <paramref name="item" />; otherwise, false.</returns>
      <param name="item">The key/value pair representing the character code and associated <see cref="T:System.Windows.Media.CharacterMetrics" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.ContainsKey(System.Int32)">
      <summary>Determines whether the collection contains the specified character code.</summary>
      <returns>true if the dictionary contains <paramref name="key" />; otherwise, false.</returns>
      <param name="key">A value of type <see cref="T:System.Int32" /> representing the character code.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Int32,System.Windows.Media.CharacterMetrics}[],System.Int32)">
      <summary>Copies the items in the collection to an array, starting at a specific array index.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>A value of type <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that iterates through the collection.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" /> is read-only.</summary>
      <returns>true if the dictionary is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.Item(System.Int32)">
      <summary>Gets or sets a value for the item in the collection that matches a specified key.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.CharacterMetrics" />.</returns>
      <param name="key">A value of type <see cref="T:System.Int32" />.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.Keys">
      <summary>Gets a collection of character codes from <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</summary>
      <returns>A collection of keys of type <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Int32,System.Windows.Media.CharacterMetrics})">
      <summary>Removes the element from <see cref="T:System.Windows.Media.CharacterMetricsDictionary" /> based on the specified key/value pair.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.CharacterMetrics" /> item was successfully deleted; otherwise false.</returns>
      <param name="item">The key/value pair representing the character code and associated <see cref="T:System.Windows.Media.CharacterMetrics" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.Remove(System.Int32)">
      <summary>Removes the element from <see cref="T:System.Windows.Media.CharacterMetricsDictionary" /> based on the specified character code.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.CharacterMetrics" /> item was successfully deleted; otherwise false.</returns>
      <param name="key">A value of type <see cref="T:System.Int32" /> representing the character code.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <returns>The element with the specified key.</returns>
      <param name="key">The key of the element to get or set. </param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Keys">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Keys" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Values">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Values" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.CharacterMetricsDictionary.TryGetValue(System.Int32,System.Windows.Media.CharacterMetrics@)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.CharacterMetrics" /> value in the dictionary for a specified character code value.</summary>
      <returns>true if the dictionary contains an entry for <paramref name="key" />; otherwise false.</returns>
      <param name="key">A value of type <see cref="T:System.Int32" />.</param>
      <param name="value">A value of type <see cref="T:System.Windows.Media.CharacterMetrics" />.</param>
    </member>
    <member name="P:System.Windows.Media.CharacterMetricsDictionary.Values">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.CharacterMetrics" /> values in the <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</summary>
      <returns>A collection of type <see cref="T:System.Windows.Media.CharacterMetrics" />.</returns>
    </member>
    <member name="T:System.Windows.Media.ClearTypeHint">
      <summary>An enumeration that specifies a hint to the rendering engine that text can be rendered with ClearType.</summary>
    </member>
    <member name="F:System.Windows.Media.ClearTypeHint.Auto">
      <summary>The rendering engine uses ClearType when it is possible. If opacity is introduced, ClearType is disabled for that subtree.</summary>
    </member>
    <member name="F:System.Windows.Media.ClearTypeHint.Enabled">
      <summary>The rendering engine re-enables ClearType for the current subtree. Where opacity is introduced in this subtree, ClearType is disabled.</summary>
    </member>
    <member name="T:System.Windows.Media.Color">
      <summary>Describes a color in terms of alpha, red, green, and blue channels. </summary>
    </member>
    <member name="P:System.Windows.Media.Color.A">
      <summary>Gets or sets the sRGB alpha channel value of the color. </summary>
      <returns>The sRGB alpha channel value of the color.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Adds two <see cref="T:System.Windows.Media.Color" /> structures. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the addition operation.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Compares two <see cref="T:System.Windows.Media.Color" /> structures for fuzzy equality. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are nearly identical; otherwise, false.</returns>
      <param name="color1">The first color to compare.</param>
      <param name="color2">The second color to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Color.B">
      <summary>Gets or sets the sRGB blue channel value of the color. </summary>
      <returns>The sRGB blue channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Clamp">
      <summary>Sets the ScRGB channels of the color to within the gamut of 0 to 1, if they are outside that range. </summary>
    </member>
    <member name="P:System.Windows.Media.Color.ColorContext">
      <summary>Gets the International Color Consortium (ICC) or Image Color Management (ICM) color profile of the color.</summary>
      <returns>The International Color Consortium (ICC) or Image Color Management (ICM) color profile of the color.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Object)">
      <summary>Tests whether the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is equivalent to the current color. </summary>
      <returns>true if the specified object is a <see cref="T:System.Windows.Media.Color" /> structure and is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, false.</returns>
      <param name="o">The object to compare to the current <see cref="T:System.Windows.Media.Color" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)">
      <summary>Tests whether the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to the current color.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Media.Color" /> structure is identical to the current <see cref="T:System.Windows.Media.Color" /> structure; otherwise, false.</returns>
      <param name="color">The <see cref="T:System.Windows.Media.Color" /> structure to compare to the current <see cref="T:System.Windows.Media.Color" /> structure.</param>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are exactly identical; otherwise, false.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified sRGB alpha channel and color channel values. </summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
      <param name="a">The alpha channel, <see cref="P:System.Windows.Media.Color.A" />, of the new color.</param>
      <param name="r">The red channel, <see cref="P:System.Windows.Media.Color.R" />, of the new color.</param>
      <param name="g">The green channel, <see cref="P:System.Windows.Media.Color.G" />, of the new color.</param>
      <param name="b">The blue channel, <see cref="P:System.Windows.Media.Color.B" />, of the new color.</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified alpha channel, color channel values, and color profile.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
      <param name="a">The alpha channel for the new color.</param>
      <param name="values">A collection of values that specify the color channels for the new color. These values map to the <paramref name="profileUri" />.</param>
      <param name="profileUri">The International Color Consortium (ICC) or Image Color Management (ICM) color profile for the new color. </param>
    </member>
    <member name="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified sRGB color channel values. </summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values and an alpha channel value of 1.</returns>
      <param name="r">The sRGB red channel, <see cref="P:System.Windows.Media.Color.R" />, of the new color.</param>
      <param name="g">The sRGB green channel, <see cref="P:System.Windows.Media.Color.G" />, of the new color.</param>
      <param name="b">The sRGB blue channel, <see cref="P:System.Windows.Media.Color.B" />, of the new color.</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified ScRGB alpha channel and color channel values. </summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values.</returns>
      <param name="a">The ScRGB alpha channel, <see cref="P:System.Windows.Media.Color.ScA" />, of the new color.</param>
      <param name="r">The ScRGB red channel, <see cref="P:System.Windows.Media.Color.ScR" />, of the new color.</param>
      <param name="g">The ScRGB green channel, <see cref="P:System.Windows.Media.Color.ScG" />, of the new color.</param>
      <param name="b">The ScRGB blue channel, <see cref="P:System.Windows.Media.Color.ScB" />, of the new color.</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Color" /> structure by using the specified color channel values and color profile.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> structure with the specified values and an alpha channel value of 1.</returns>
      <param name="values">A collection of values that specify the color channels for the new color. These values map to the <paramref name="profileUri" />.</param>
      <param name="profileUri">The International Color Consortium (ICC) or Image Color Management (ICM) color profile for the new color.</param>
    </member>
    <member name="P:System.Windows.Media.Color.G">
      <summary>Gets or sets the sRGB green channel value of the color. </summary>
      <returns>The sRGB green channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.GetHashCode">
      <summary>Gets a hash code for the current <see cref="T:System.Windows.Media.Color" /> structure. </summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.GetNativeColorValues">
      <summary>Gets the color channel values of the color.</summary>
      <returns>An array of color channel values.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)">
      <summary>Multiplies the alpha, red, blue, and green channels of the specified <see cref="T:System.Windows.Media.Color" /> structure by the specified value. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the multiplication operation.</returns>
      <param name="color">The <see cref="T:System.Windows.Media.Color" /> to be multiplied.</param>
      <param name="coefficient">The value to multiply by.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Adds two <see cref="T:System.Windows.Media.Color" /> structures. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the addition operation.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to add.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are identical. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are exactly identical; otherwise, false.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Tests whether two <see cref="T:System.Windows.Media.Color" /> structures are not identical. </summary>
      <returns>true if <paramref name="color1" /> and <paramref name="color2" /> are not equal; otherwise, false.</returns>
      <param name="color1">The first <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
      <param name="color2">The second <see cref="T:System.Windows.Media.Color" /> structure to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)">
      <summary>Multiplies the alpha, red, blue, and green channels of the specified <see cref="T:System.Windows.Media.Color" /> structure by the specified value. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the multiplication operation.</returns>
      <param name="color">The <see cref="T:System.Windows.Media.Color" /> to be multiplied.</param>
      <param name="coefficient">The value to multiply by.</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Color" /> structure from a <see cref="T:System.Windows.Media.Color" /> structure. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the subtraction operation.</returns>
      <param name="color1">The <see cref="T:System.Windows.Media.Color" /> structure to be subtracted from.</param>
      <param name="color2">The <see cref="T:System.Windows.Media.Color" /> structure to subtract from <paramref name="color1" />.</param>
    </member>
    <member name="P:System.Windows.Media.Color.R">
      <summary>Gets or sets the sRGB red channel value of the color. </summary>
      <returns>The sRGB red channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Color.ScA">
      <summary>Gets or sets the ScRGB alpha channel value of the color. </summary>
      <returns>The ScRGB alpha channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Color.ScB">
      <summary>Gets or sets the ScRGB blue channel value of the color. </summary>
      <returns>The ScRGB red channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Color.ScG">
      <summary>Gets or sets the ScRGB green channel value of the color. </summary>
      <returns>The ScRGB green channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="P:System.Windows.Media.Color.ScR">
      <summary>Gets or sets the ScRGB red channel value of the color. </summary>
      <returns>The ScRGB red channel value of the current <see cref="T:System.Windows.Media.Color" /> structure.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>Subtracts a <see cref="T:System.Windows.Media.Color" /> structure from a <see cref="T:System.Windows.Media.Color" /> structure. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Color" /> structure whose color values are the results of the subtraction operation.</returns>
      <param name="color1">The <see cref="T:System.Windows.Media.Color" /> structure to be subtracted from.</param>
      <param name="color2">The <see cref="T:System.Windows.Media.Color" /> structure to subtract from <paramref name="color1" />.</param>
    </member>
    <member name="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Color.ToString">
      <summary>Creates a string representation of the color using the ScRGB channels. </summary>
      <returns>The string representation of the color.</returns>
    </member>
    <member name="M:System.Windows.Media.Color.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the color by using the ScRGB channels and the specified format provider. </summary>
      <returns>The string representation of the color.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.ColorContext">
      <summary>Represents the International Color Consortium (ICC) or Image Color Management (ICM) color profile that is associated with a bitmap image.</summary>
    </member>
    <member name="M:System.Windows.Media.ColorContext.#ctor(System.Uri)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.ColorContext" /> with the International Color Consortium (ICC) or Image Color Management (ICM) color profile located at a given <see cref="T:System.Uri" />.</summary>
      <param name="profileUri">The <see cref="T:System.Uri" /> that identifies the location of the desired color profile.</param>
    </member>
    <member name="M:System.Windows.Media.ColorContext.#ctor(System.Windows.Media.PixelFormat)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.ColorContext" /> with the standard color profile (sRGB or RGB ) that most closely matches the supplied <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <param name="pixelFormat">The <see cref="T:System.Windows.Media.PixelFormat" /> from which the <see cref="T:System.Windows.Media.ColorContext" /> is derived.</param>
    </member>
    <member name="M:System.Windows.Media.ColorContext.Equals(System.Object)">
      <summary>Determines whether an <see cref="T:System.Object" /> is equal to an instance of <see cref="T:System.Windows.Media.ColorContext" />.</summary>
      <returns>true if the supplied <see cref="T:System.Object" /> is equal to this instance of <see cref="T:System.Windows.Media.ColorContext" />; otherwise, false.</returns>
      <param name="obj">Identifies the <see cref="T:System.Object" /> to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Media.ColorContext.GetHashCode">
      <summary>Gets the hash code for this instance of <see cref="T:System.Windows.Media.ColorContext" />. </summary>
      <returns>An <see cref="T:System.Int32" /> that represents the hash code for the object.</returns>
    </member>
    <member name="M:System.Windows.Media.ColorContext.op_Equality(System.Windows.Media.ColorContext,System.Windows.Media.ColorContext)">
      <summary>Operates on two instances of <see cref="T:System.Windows.Media.ColorContext" /> to determine equality.</summary>
      <returns>true if the instances of <see cref="T:System.Windows.Media.ColorContext" /> are equal; otherwise, false.</returns>
      <param name="context1">The first instance of <see cref="T:System.Windows.Media.ColorContext" /> to compare.</param>
      <param name="context2">The second instance of <see cref="T:System.Windows.Media.ColorContext" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.ColorContext.op_Inequality(System.Windows.Media.ColorContext,System.Windows.Media.ColorContext)">
      <summary>Operates on two instances of <see cref="T:System.Windows.Media.ColorContext" /> to determine that they are not equal.</summary>
      <returns>true if the instances of <see cref="T:System.Windows.Media.ColorContext" /> are not equal; otherwise, false.</returns>
      <param name="context1">The first instance of <see cref="T:System.Windows.Media.ColorContext" /> to compare.</param>
      <param name="context2">The second instance of <see cref="T:System.Windows.Media.ColorContext" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.ColorContext.OpenProfileStream">
      <summary>Returns a readable <see cref="T:System.IO.Stream" /> of raw color profile data.</summary>
      <returns>A readable <see cref="T:System.IO.Stream" /> of raw color profile data.</returns>
    </member>
    <member name="P:System.Windows.Media.ColorContext.ProfileUri">
      <summary>Gets a <see cref="T:System.Uri" /> that represents the location of a International Color Consortium (ICC) or Image Color Management (ICM) color profile.</summary>
      <returns>A <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Windows.Media.ColorConverter">
      <summary> Converts instances of other types to and from an instance of <see cref="T:System.Windows.Media.Color" />. </summary>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.ColorConverter" />. </summary>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Color" />.  </summary>
      <returns>true if the type can be converted to a <see cref="T:System.Windows.Media.Color" />; otherwise, false.</returns>
      <param name="td">Describes the context information of a type.</param>
      <param name="t">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary> Determines whether an instance of a <see cref="T:System.Windows.Media.Color" /> can be converted to a different type. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.Color" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.Media.Color" /> is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary> Attempts to convert the specified object to a <see cref="T:System.Windows.Media.Color" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Color" /> created from converting <paramref name="value" />.</returns>
      <param name="td">Describes the context information of a type.</param>
      <param name="ci">Cultural information to respect during conversion.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.ConvertFromString(System.String)">
      <summary>Attempts to convert a string to a <see cref="T:System.Windows.Media.Color" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.Color" /> that represents the converted text.</returns>
      <param name="value">The string to convert to a <see cref="T:System.Windows.Media.Color" />.</param>
    </member>
    <member name="M:System.Windows.Media.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary> Attempts to convert a <see cref="T:System.Windows.Media.Color" /> to a specified type. </summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Color" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Color" /> to convert.</param>
      <param name="destinationType">The type to convert this <see cref="T:System.Windows.Media.Color" /> to.</param>
    </member>
    <member name="T:System.Windows.Media.ColorInterpolationMode">
      <summary>Determines how the colors in a gradient are interpolated. </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.ScRgbLinearInterpolation">
      <summary>Colors are interpolated in the scRGB color space </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation">
      <summary>Colors are interpolated in the sRGB color space </summary>
    </member>
    <member name="T:System.Windows.Media.Colors">
      <summary>Implements a set of predefined colors. </summary>
    </member>
    <member name="P:System.Windows.Media.Colors.AliceBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0F8FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.AntiqueWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAEBD7. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Aqua">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Aquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFFD4. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Azure">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Beige">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5DC. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Bisque">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4C4. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Black">
      <summary>Gets the system-defined color that has an ARGB value of #FF000000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.BlanchedAlmond">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEBCD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Blue">
      <summary>Gets the system-defined color that has an ARGB value of #FF0000FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.BlueViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF8A2BE2. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Brown">
      <summary>Gets the system-defined color that has an ARGB value of #FFA52A2A. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.BurlyWood">
      <summary>Gets the system-defined color that has an ARGB value of #FFDEB887. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.CadetBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF5F9EA0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Chartreuse">
      <summary>Gets the system-defined color that has an ARGB value of #FF7FFF00. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Chocolate">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2691E. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Coral">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF7F50. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.CornflowerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6495ED. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Cornsilk">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF8DC. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Crimson">
      <summary>Gets the system-defined color that has an ARGB value of #FFDC143C. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Cyan">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00008B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FF008B8B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFB8860B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGray">
      <summary>Gets the system-defined color that has an ARGB value of #FFA9A9A9. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF006400. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkKhaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFBDB76B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkMagenta">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B008B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkOliveGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF556B2F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkOrange">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF8C00. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FF9932CC. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkRed">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B0000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFE9967A. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF8FBC8F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF483D8B. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF2F4F4F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF00CED1. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkViolet">
      <summary>Gets the system-defined color that has an ARGB value of #FF9400D3. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DeepPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF1493. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DeepSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF00BFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DimGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF696969. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DodgerBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF1E90FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Firebrick">
      <summary>Gets the system-defined color that has an ARGB value of #FFB22222. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.FloralWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAF0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.ForestGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF228B22. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Fuchsia">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF00FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gainsboro">
      <summary>Gets the system-defined color that has an ARGB value of #FFDCDCDC. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.GhostWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFF8F8FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gold">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFD700. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Goldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFDAA520. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gray">
      <summary>Gets the system-defined color that has an ARGB value of #FF808080. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Green">
      <summary>Gets the system-defined color that has an ARGB value of #FF008000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.GreenYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFADFF2F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Honeydew">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0FFF0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.HotPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF69B4. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.IndianRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD5C5C. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Indigo">
      <summary>Gets the system-defined color that has an ARGB value of #FF4B0082. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Ivory">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFF0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Khaki">
      <summary>Gets the system-defined color that has an ARGB value of #FFF0E68C. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Lavender">
      <summary>Gets the system-defined color that has an ARGB value of #FFE6E6FA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LavenderBlush">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF0F5. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LawnGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF7CFC00. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LemonChiffon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFACD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFADD8E6. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightCoral">
      <summary>Gets the system-defined color that has an ARGB value of #FFF08080. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightCyan">
      <summary>Gets the system-defined color that has an ARGB value of #FFE0FFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGoldenrodYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAFAD2. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGray">
      <summary>Gets the system-defined color that has an ARGB value of #FFD3D3D3. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF90EE90. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightPink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFB6C1. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightSalmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFA07A. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF20B2AA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightSkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEFA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightSlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF778899. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightSteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0C4DE. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightYellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFE0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Lime">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF00. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LimeGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF32CD32. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Linen">
      <summary>Gets the system-defined color that has an ARGB value of #FFFAF0E6. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Magenta">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF00FF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Maroon">
      <summary>Gets the system-defined color that has an ARGB value of #FF800000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumAquamarine">
      <summary>Gets the system-defined color that has an ARGB value of #FF66CDAA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF0000CD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumOrchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFBA55D3. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumPurple">
      <summary>Gets the system-defined color that has an ARGB value of #FF9370DB. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumSeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF3CB371. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumSlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF7B68EE. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumSpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FA9A. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF48D1CC. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MediumVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFC71585. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MidnightBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF191970. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MintCream">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5FFFA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.MistyRose">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4E1. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Moccasin">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFE4B5. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.NavajoWhite">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDEAD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Navy">
      <summary>Gets the system-defined color that has an ARGB value of #FF000080. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.OldLace">
      <summary>Gets the system-defined color that has an ARGB value of #FFFDF5E6. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Olive">
      <summary>Gets the system-defined color that has an ARGB value of #FF808000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.OliveDrab">
      <summary>Gets the system-defined color that has an ARGB value of #FF6B8E23. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Orange">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFA500. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.OrangeRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF4500. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Orchid">
      <summary>Gets the system-defined color that has an ARGB value of #FFDA70D6. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PaleGoldenrod">
      <summary>Gets the system-defined color that has an ARGB value of #FFEEE8AA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PaleGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF98FB98. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PaleTurquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FFAFEEEE. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PaleVioletRed">
      <summary>Gets the system-defined color that has an ARGB value of #FFDB7093. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PapayaWhip">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFEFD5. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PeachPuff">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFDAB9. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Peru">
      <summary>Gets the system-defined color that has an ARGB value of #FFCD853F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Pink">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFC0CB. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Plum">
      <summary>Gets the system-defined color that has an ARGB value of #FFDDA0DD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.PowderBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FFB0E0E6. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Purple">
      <summary>Gets the system-defined color that has an ARGB value of #FF800080. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Red">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF0000. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.RosyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFBC8F8F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.RoyalBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4169E1. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SaddleBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FF8B4513. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Salmon">
      <summary>Gets the system-defined color that has an ARGB value of #FFFA8072. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SandyBrown">
      <summary>Gets the system-defined color that has an ARGB value of #FFF4A460. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SeaGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF2E8B57. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SeaShell">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFF5EE. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Sienna">
      <summary>Gets the system-defined color that has an ARGB value of #FFA0522D. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Silver">
      <summary>Gets the system-defined color that has an ARGB value of #FFC0C0C0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SkyBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF87CEEB. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SlateBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF6A5ACD. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SlateGray">
      <summary>Gets the system-defined color that has an ARGB value of #FF708090. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Snow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFAFA. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SpringGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF00FF7F. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.SteelBlue">
      <summary>Gets the system-defined color that has an ARGB value of #FF4682B4. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Tan">
      <summary>Gets the system-defined color that has an ARGB value of #FFD2B48C. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Teal">
      <summary>Gets the system-defined color that has an ARGB value of #FF008080. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Thistle">
      <summary>Gets the system-defined color that has an ARGB value of #FFD8BFD8. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Tomato">
      <summary>Gets the system-defined color that has an ARGB value of #FFFF6347. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Transparent">
      <summary>Gets the system-defined color that has an ARGB value of #00FFFFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Turquoise">
      <summary>Gets the system-defined color that has an ARGB value of #FF40E0D0. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Violet">
      <summary>Gets the system-defined color that has an ARGB value of #FFEE82EE. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Wheat">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5DEB3. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.White">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFFFF. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.WhiteSmoke">
      <summary>Gets the system-defined color that has an ARGB value of #FFF5F5F5. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Yellow">
      <summary>Gets the system-defined color that has an ARGB value of #FFFFFF00. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.YellowGreen">
      <summary>Gets the system-defined color that has an ARGB value of #FF9ACD32. </summary>
      <returns>Represents colors in terms of alpha, red, green, and blue channels.</returns>
    </member>
    <member name="T:System.Windows.Media.CombinedGeometry">
      <summary>Represents a 2-D geometric shape defined by the combination of two <see cref="T:System.Windows.Media.Geometry" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.CombinedGeometry" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.#ctor(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.CombinedGeometry" /> class with the specified <see cref="T:System.Windows.Media.Geometry" /> objects. </summary>
      <param name="geometry1">The first <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
      <param name="geometry2">The second <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.#ctor(System.Windows.Media.GeometryCombineMode,System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CombinedGeometry" /> class with the specified <see cref="T:System.Windows.Media.Geometry" /> objects and <see cref="P:System.Windows.Media.CombinedGeometry.GeometryCombineMode" />.</summary>
      <param name="geometryCombineMode">The method by which <paramref name="geometry1" /> and <paramref name="geometry2" /> are combined.</param>
      <param name="geometry1">The first <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
      <param name="geometry2">The second <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.#ctor(System.Windows.Media.GeometryCombineMode,System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.CombinedGeometry" /> class with the specified <see cref="T:System.Windows.Media.Geometry" /> objects, <see cref="P:System.Windows.Media.CombinedGeometry.GeometryCombineMode" />, and <see cref="P:System.Windows.Media.Geometry.Transform" />.</summary>
      <param name="geometryCombineMode">The method by which <paramref name="geometry1" /> and <paramref name="geometry2" /> are combined.</param>
      <param name="geometry1">The first <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
      <param name="geometry2">The second <see cref="T:System.Windows.Media.Geometry" /> to combine.</param>
      <param name="transform">The <see cref="P:System.Windows.Media.Geometry.Transform" /> applied to the <see cref="T:System.Windows.Media.CombinedGeometry" />.</param>
    </member>
    <member name="P:System.Windows.Media.CombinedGeometry.Bounds">
      <summary> Gets a <see cref="T:System.Windows.Rect" /> that specifies the bounding box of this <see cref="T:System.Windows.Media.CombinedGeometry" /> object.   Note: This method does not take any pens into account.    </summary>
      <returns>The bounding box of this <see cref="T:System.Windows.Media.CombinedGeometry" />.</returns>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.CombinedGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.CombinedGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.CombinedGeometry.Geometry1">
      <summary> Gets or sets the first <see cref="T:System.Windows.Media.Geometry" /> object of this <see cref="T:System.Windows.Media.CombinedGeometry" /> object. </summary>
      <returns>The first <see cref="T:System.Windows.Media.Geometry" /> object to combine.</returns>
    </member>
    <member name="F:System.Windows.Media.CombinedGeometry.Geometry1Property">
      <summary> Identifies the <see cref="P:System.Windows.Media.CombinedGeometry.Geometry1" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CombinedGeometry.Geometry1" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CombinedGeometry.Geometry2">
      <summary> Gets or sets the second <see cref="T:System.Windows.Media.Geometry" /> object of this <see cref="T:System.Windows.Media.CombinedGeometry" /> object. </summary>
      <returns>The second <see cref="T:System.Windows.Media.Geometry" /> object.</returns>
    </member>
    <member name="F:System.Windows.Media.CombinedGeometry.Geometry2Property">
      <summary> Identifies the <see cref="P:System.Windows.Media.CombinedGeometry.Geometry2" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CombinedGeometry.Geometry2" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.CombinedGeometry.GeometryCombineMode">
      <summary>Gets or sets the method by which the two geometries (specified by the <see cref="P:System.Windows.Media.CombinedGeometry.Geometry1" /> and <see cref="P:System.Windows.Media.CombinedGeometry.Geometry2" /> properties) are combined. </summary>
      <returns>The method by which <see cref="P:System.Windows.Media.CombinedGeometry.Geometry1" /> and <see cref="P:System.Windows.Media.CombinedGeometry.Geometry2" /> are combined. The default value is <see cref="F:System.Windows.Media.GeometryCombineMode.Union" />.</returns>
    </member>
    <member name="F:System.Windows.Media.CombinedGeometry.GeometryCombineModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.CombinedGeometry.GeometryCombineMode" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.CombinedGeometry.GeometryCombineMode" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)">
      <summary> Gets the area of the filled region. </summary>
      <returns>The area of the filled region of this combined geometry.</returns>
      <param name="tolerance">The computational tolerance of error.</param>
      <param name="type">Specifies how the error tolerance will be interpreted.</param>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.IsEmpty">
      <summary> Determines whether this <see cref="T:System.Windows.Media.CombinedGeometry" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.CombinedGeometry" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.CombinedGeometry.MayHaveCurves">
      <summary> Determines whether this <see cref="T:System.Windows.Media.CombinedGeometry" /> object may have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.CombinedGeometry" /> object may have curved segments; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.CompositionTarget">
      <summary>Represents the display surface of your application.</summary>
    </member>
    <member name="M:System.Windows.Media.CompositionTarget.Dispose">
      <summary>Disposes <see cref="T:System.Windows.Media.CompositionTarget" />.</summary>
    </member>
    <member name="E:System.Windows.Media.CompositionTarget.Rendering">
      <summary>Occurs just before the objects in the composition tree are rendered.</summary>
    </member>
    <member name="P:System.Windows.Media.CompositionTarget.RootVisual">
      <summary>Gets or sets the root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</summary>
      <returns>The root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</returns>
    </member>
    <member name="P:System.Windows.Media.CompositionTarget.TransformFromDevice">
      <summary>Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.</summary>
      <returns>The transformation matrix. </returns>
    </member>
    <member name="P:System.Windows.Media.CompositionTarget.TransformToDevice">
      <summary>Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.</summary>
      <returns>The transformation matrix. </returns>
    </member>
    <member name="T:System.Windows.Media.ContainerVisual">
      <summary>Manages a collection of <see cref="T:System.Windows.Media.Visual" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.ContainerVisual.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.ContainerVisual" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.BitmapEffect">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The bitmap effect for this visual object.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.BitmapEffectInput">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The bitmap effect input value for this visual object.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.CacheMode">
      <summary>Gets or sets a cached representation of the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.ContainerVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Children">
      <summary>Gets the child collection of the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.VisualCollection" /> that contains the children of the <see cref="T:System.Windows.Media.ContainerVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Clip">
      <summary>Gets or sets the clipping region of the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> that defines the clipping region.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.ContentBounds">
      <summary>Gets the bounding box for the contents of the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that specifies the bounding box.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.DescendantBounds">
      <summary>Gets the union of all the content bounding boxes for all of the descendants of the <see cref="T:System.Windows.Media.ContainerVisual" />, but not including the contents of the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that specifies the combination bounding box.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Effect">
      <summary>Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</returns>
    </member>
    <member name="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
      <summary>Returns a specified child <see cref="T:System.Windows.Media.Visual" /> for the parent <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The child <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="index">A 32-bit signed integer that represents the index value of the child <see cref="T:System.Windows.Media.Visual" />. The value of <paramref name="index" /> must be between 0 and <see cref="P:System.Windows.Media.ContainerVisual.VisualChildrenCount" /> - 1.</param>
    </member>
    <member name="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
      <summary>Initiates a hit test on the <see cref="T:System.Windows.Media.ContainerVisual" /> by using the <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> objects.</summary>
      <param name="filterCallback">The delegate that allows you to ignore parts of the visual tree that you are not interested in processing in your hit test results.</param>
      <param name="resultCallback">The delegate that is used to control the return of hit test information.</param>
      <param name="hitTestParameters">Defines the set of parameters for a hit test.</param>
    </member>
    <member name="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
      <summary>Returns the top-most visual object of a hit test by specifying a <see cref="T:System.Windows.Point" />.</summary>
      <returns>The hit test result of the visual returned as a <see cref="T:System.Windows.Media.HitTestResult" /> type.</returns>
      <param name="point">The point value to hit test.</param>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Offset">
      <summary>Gets or sets the offset value of the <see cref="T:System.Windows.Media.ContainerVisual" /> from its reference point.</summary>
      <returns>A <see cref="T:System.Windows.Vector" /> that represents the offset value of the <see cref="T:System.Windows.Media.ContainerVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Opacity">
      <summary>Gets or sets the opacity of the <see cref="T:System.Windows.Media.ContainerVisual" />, based on 0=transparent, 1=opaque.</summary>
      <returns>A value from 0 through 1 that specifies a range from fully transparent to fully opaque. A value of 0 indicates that the <see cref="T:System.Windows.Media.ContainerVisual" /> is completely transparent, while a value of 1 indicates that the <see cref="T:System.Windows.Media.ContainerVisual" /> is completely opaque. A value 0.5 indicates 50 percent opaque, a value of 0.725 indicates 72.5 percent opaque, and so on. Values less than 0 are treated as 0, while values greater than 1 are treated as 1.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.OpacityMask">
      <summary>Gets or sets a brush that specifies a possible opacity mask for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the <see cref="T:System.Windows.Media.ContainerVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Parent">
      <summary>Gets the parent <see cref="T:System.Windows.Media.Visual" /> for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The parent of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.Transform">
      <summary>Gets or sets the transform that is applied to the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The transform value.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
      <summary>Gets the number of children for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The number of children in the <see cref="T:System.Windows.Media.VisualCollection" /> of the <see cref="T:System.Windows.Media.ContainerVisual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
      <summary>Gets or sets the X (horizontal) guideline for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The horizontal guideline.</returns>
    </member>
    <member name="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
      <summary>Gets or sets the Y (vertical) guideline for the <see cref="T:System.Windows.Media.ContainerVisual" />.</summary>
      <returns>The vertical guideline.</returns>
    </member>
    <member name="T:System.Windows.Media.DashStyle">
      <summary>Represents the sequence of dashes and gaps that will be applied by a <see cref="T:System.Windows.Media.Pen" />. </summary>
    </member>
    <member name="M:System.Windows.Media.DashStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DashStyle" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> class with the specified <see cref="P:System.Windows.Media.DashStyle.Dashes" /> and <see cref="P:System.Windows.Media.DashStyle.Offset" />.</summary>
      <param name="dashes">The <see cref="P:System.Windows.Media.DashStyle.Dashes" /> of the <see cref="T:System.Windows.Media.DashStyle" />.</param>
      <param name="offset">The <see cref="P:System.Windows.Media.DashStyle.Offset" /> of the <see cref="T:System.Windows.Media.DashStyle" />.</param>
    </member>
    <member name="M:System.Windows.Media.DashStyle.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DashStyle" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.DashStyle.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DashStyle" /> object, making deep copies of this object's current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyle.Dashes">
      <summary>Gets or sets the collection of dashes and gaps in this <see cref="T:System.Windows.Media.DashStyle" />.  </summary>
      <returns>The collection of dashes and gaps.  The default is an empty <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
    </member>
    <member name="F:System.Windows.Media.DashStyle.DashesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DashStyle.Dashes" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DashStyle.Dashes" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyle.Offset">
      <summary>Gets or sets how far in the dash sequence the stroke will start.  </summary>
      <returns>The offset for the dash sequence.  The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.DashStyle.OffsetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DashStyle.Offset" />Â dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.DashStyle.Offset" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.DashStyles">
      <summary>Implements a set of predefined <see cref="T:System.Windows.Media.DashStyle" /> objects. </summary>
    </member>
    <member name="P:System.Windows.Media.DashStyles.Dash">
      <summary>Gets a <see cref="T:System.Windows.Media.DashStyle" /> with a <see cref="P:System.Windows.Media.DashStyle.Dashes" /> property equal to 2,2. </summary>
      <returns>A dash sequence of 2,2, which describes a sequence composed of a dash that is twice as long as the pen <see cref="P:System.Windows.Media.Pen.Thickness" /> followed by a space that is twice as long as the <see cref="P:System.Windows.Media.Pen.Thickness" />.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyles.DashDot">
      <summary>Gets a <see cref="T:System.Windows.Media.DashStyle" /> with a <see cref="P:System.Windows.Media.DashStyle.Dashes" /> property equal to 2,2,0,2. </summary>
      <returns>A dash sequence of 2,2,0,2.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyles.DashDotDot">
      <summary>Gets a <see cref="T:System.Windows.Media.DashStyle" /> with a <see cref="P:System.Windows.Media.DashStyle.Dashes" /> property equal to 2,2,0,2,0,2. </summary>
      <returns>A dash sequence of 2,2,0,2,0,2.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyles.Dot">
      <summary>Gets a <see cref="T:System.Windows.Media.DashStyle" /> with a <see cref="P:System.Windows.Media.DashStyle.Dashes" /> property equal to 0,2. </summary>
      <returns>A dash sequence of 0,2.</returns>
    </member>
    <member name="P:System.Windows.Media.DashStyles.Solid">
      <summary>Gets a <see cref="T:System.Windows.Media.DashStyle" /> with an empty <see cref="P:System.Windows.Media.DashStyle.Dashes" /> property. </summary>
      <returns>A dash sequence with no dashes.</returns>
    </member>
    <member name="T:System.Windows.Media.DoubleCollection">
      <summary> Represents an ordered collection of <see cref="T:System.Double" /> values. </summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor">
      <summary> Initializes a new instance of a <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class with the specified collection of <see cref="T:System.Double" /> values.</summary>
      <param name="collection">The collection of <see cref="T:System.Double" /> values that make up the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class with the specified capacity, or the number of <see cref="T:System.Double" /> values the collection is initially capable of storing.</summary>
      <param name="capacity">The number of <see cref="T:System.Double" /> values that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Add(System.Double)">
      <summary> Adds a <see cref="T:System.Double" /> to the end of this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <param name="value">The item to add to the end of this collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Clear">
      <summary> Removes all the items from this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DoubleCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DoubleCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Contains(System.Double)">
      <summary> Determines whether a <see cref="T:System.Double" /> is in this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>true if <paramref name="value" />, the specified <see cref="T:System.Double" />, is in this <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)">
      <summary> Copies the items of this <see cref="T:System.Windows.Media.DoubleCollection" />, starting with the specified index, into an array of  <see cref="T:System.Double" /> values. </summary>
      <param name="array">The array that is the destination of the items copied from this <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
      <param name="index">The index at which to begin copying.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.DoubleCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.Count">
      <summary> Gets the number of doubles contained in the <see cref="T:System.Windows.Media.DoubleCollection" />.  </summary>
      <returns>The number of doubles contained in the <see cref="T:System.Windows.Media.DoubleCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Windows.Media.DoubleCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.IndexOf(System.Double)">
      <summary> Gets the index of the first occurrence of the specified <see cref="T:System.Double" />. </summary>
      <returns>The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Double" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Insert(System.Int32,System.Double)">
      <summary> Inserts a <see cref="T:System.Double" /> into this <see cref="T:System.Windows.Media.DoubleCollection" /> at the specified index. </summary>
      <param name="index">The index at which to insert <paramref name="value" />, the specified <see cref="T:System.Double" />.</param>
      <param name="value">The item to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DoubleCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Double" /> at the specified zero-based index. </summary>
      <returns>The <see cref="T:System.Double" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Double" /> value to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DoubleCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Parse(System.String)">
      <summary> Converts a <see cref="T:System.String" /> representation of a collection of doubles into an equivalent <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>Returns the equivalent <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the collection of doubles. </param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Remove(System.Double)">
      <summary> Removes the first occurrence of the specified <see cref="T:System.Double" /> from this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, false.</returns>
      <param name="value">The item to remove from this collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Double" /> at the specified index from this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.DoubleCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.DoubleCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.DoubleCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.DoubleCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.ToString">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.DoubleCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Double" /> items in a <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.DoubleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.DoubleCollectionConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DoubleCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object can be converted from a specified type to an instance of a <see cref="T:System.Windows.Media.DoubleCollection" />.  </summary>
      <returns>true if the type can be converted to a <see cref="T:System.Windows.Media.DoubleCollection" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of a <see cref="T:System.Windows.Media.DoubleCollection" /> can be converted to a different type. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.DoubleCollection" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="destinationType">The needed type for which you are evaluating this <see cref="T:System.Windows.Media.DoubleCollection" /> for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.Media.DoubleCollection" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.DoubleCollection" /> that is created from converting <paramref name="value" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.DoubleCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.Media.DoubleCollection" /> to a specified type. </summary>
      <returns>The object you create when you convert this <see cref="T:System.Windows.Media.DoubleCollection" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The <see cref="T:System.Windows.Media.DoubleCollection" /> to convert.</param>
      <param name="destinationType">The type to convert this <see cref="T:System.Windows.Media.DoubleCollection" /> to.</param>
    </member>
    <member name="T:System.Windows.Media.Drawing">
      <summary>Abstract class that describes a 2-D drawing. This class cannot be inherited by your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Drawing.Bounds">
      <summary> Gets the axis-aligned bounds of the drawing's contents. </summary>
      <returns>The axis-aligned bounds of the drawing's contents.</returns>
    </member>
    <member name="M:System.Windows.Media.Drawing.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Drawing" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Drawing.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Drawing" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.DrawingBrush">
      <summary>Paints an area with a <see cref="T:System.Windows.Media.Drawing" />, which can include shapes, text, video, images, or other drawings. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingBrush" /> class. The resulting brush has no content. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingBrush.#ctor(System.Windows.Media.Drawing)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingBrush" /> class that contains the specified <see cref="T:System.Windows.Media.Drawing" />. </summary>
      <param name="drawing">The <see cref="T:System.Windows.Media.Drawing" /> that describes the contents of the brush.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingBrush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingBrush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingBrush.Drawing">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Drawing" /> that describes the contents of this <see cref="T:System.Windows.Media.DrawingBrush" />.   </summary>
      <returns>The <see cref="T:System.Windows.Media.Drawing" /> that describes the contents of this <see cref="T:System.Windows.Media.DrawingBrush" />. The default is null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingBrush.DrawingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingBrush.Drawing" />Â dependency property. </summary>
      <returns>The identifer for the <see cref="P:System.Windows.Media.DrawingBrush.Drawing" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.DrawingCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Drawing" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Drawing})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingCollection" /> class with the specified collection of <see cref="T:System.Windows.Media.Drawing" /> objects.</summary>
      <param name="collection">The collection of <see cref="T:System.Windows.Media.Drawing" /> objects that make up the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.DrawingCollection" /> with the specified capacity.</summary>
      <param name="capacity">The total capacity of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Add(System.Windows.Media.Drawing)">
      <summary>Adds a <see cref="T:System.Windows.Media.Drawing" /> to the end of the <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
      <param name="value">The item to add to the end of this collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Clear">
      <summary>Removes all the items from this <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Contains(System.Windows.Media.Drawing)">
      <summary> Determines whether a given <see cref="T:System.Windows.Media.Drawing" /> is in this <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
      <returns>true if <paramref name="value" />, the specified <see cref="T:System.Windows.Media.Drawing" />, is in this <see cref="T:System.Windows.Media.DrawingCollection" />; otherwise, false.</returns>
      <param name="value">The item to locate in this collection.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.CopyTo(System.Windows.Media.Drawing[],System.Int32)">
      <summary>Copies the items of this <see cref="T:System.Windows.Media.DrawingCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Drawing" /> objects. </summary>
      <param name="array">The array that is the destination of the items copied from this <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
      <param name="index">The index at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.DrawingCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.Drawing" /> objects contained in the <see cref="T:System.Windows.Media.DrawingCollection" />.</summary>
      <returns>The number of <see cref="T:System.Windows.Media.Drawing" /> objects contained in the <see cref="T:System.Windows.Media.DrawingCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection. </summary>
      <returns>An enumerator that can iterate the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.IndexOf(System.Windows.Media.Drawing)">
      <summary>Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Drawing" />. </summary>
      <returns>The index position of the specified <see cref="T:System.Windows.Media.Drawing" />.</returns>
      <param name="value">The item to search for.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Insert(System.Int32,System.Windows.Media.Drawing)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Drawing" /> into this <see cref="T:System.Windows.Media.DrawingCollection" /> at the specified index position. </summary>
      <param name="index">The index position at which to insert <paramref name="value" />, the specified <see cref="T:System.Windows.Media.Drawing" />.</param>
      <param name="value">The item to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DrawingCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.Drawing" /> at the specified zero-based index.</summary>
      <returns>The <see cref="T:System.Windows.Media.Drawing" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Drawing" /> object to get or set</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DrawingCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Remove(System.Windows.Media.Drawing)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Drawing" /> from the <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
      <returns>true if the operation was successful; otherwise, false.</returns>
      <param name="value">The item to remove from this collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Drawing" /> at the specified index position from the <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
      <param name="index">The index position of the item to remove.</param>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the<see cref="T:System.Windows.Media.DrawingCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.DrawingCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.DrawingCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.DrawingCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the<see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the<see cref="T:System.Windows.Media.DrawingCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.DrawingCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.DrawingCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Drawing" /> items in a <see cref="T:System.Windows.Media.DrawingCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.DrawingCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.DrawingCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.DrawingContext">
      <summary>Describes visual content using draw, push, and pop commands. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.Close">
      <summary>Closes the <see cref="T:System.Windows.Media.DrawingContext" /> and flushes the content. Afterward, the <see cref="T:System.Windows.Media.DrawingContext" /> cannot be modified.</summary>
      <exception cref="T:System.ObjectDisposedException">This object has already been closed or disposed.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DisposeCore">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Media.DrawingContext" />. </summary>
      <exception cref="T:System.ObjectDisposedException">The object has already been closed or disposed.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawDrawing(System.Windows.Media.Drawing)">
      <summary>Draws the specified <see cref="T:System.Windows.Media.Drawing" /> object.</summary>
      <param name="drawing">The drawing to append.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double)">
      <summary>Draws an ellipse with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" />. </summary>
      <param name="brush">The brush with which to fill the ellipse.  This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the ellipse.  This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="center">The location of the center of the ellipse.</param>
      <param name="radiusX">The horizontal radius of the ellipse.</param>
      <param name="radiusY">The vertical radius of the ellipse.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawEllipse(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws an ellipse with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" /> and applies the specified animation clocks. </summary>
      <param name="brush">The brush with which to fill the ellipse.  This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the ellipse.  This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="center">The location of the center of the ellipse.</param>
      <param name="centerAnimations">The clock with which to animate the ellipse's center position, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Point" /> objects.</param>
      <param name="radiusX">The horizontal radius of the ellipse.</param>
      <param name="radiusXAnimations">The clock with which to animate the ellipse's x-radius, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Double" /> objects.</param>
      <param name="radiusY">The vertical radius of the ellipse.</param>
      <param name="radiusYAnimations">The clock with which to animate the ellipse's y-radius, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Double" /> objects.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
      <summary>Draws the specified <see cref="T:System.Windows.Media.Geometry" /> using the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" />. </summary>
      <param name="brush">The <see cref="T:System.Windows.Media.Brush" /> with which to fill the <see cref="T:System.Windows.Media.Geometry" />. This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The <see cref="T:System.Windows.Media.Pen" /> with which to stroke the <see cref="T:System.Windows.Media.Geometry" />. This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="geometry">The <see cref="T:System.Windows.Media.Geometry" /> to draw.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawGlyphRun(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)">
      <summary>Draws the specified text. </summary>
      <param name="foregroundBrush">The brush used to paint the text.</param>
      <param name="glyphRun">The text to draw.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect)">
      <summary>Draws an image into the region defined by the specified <see cref="T:System.Windows.Rect" />. </summary>
      <param name="imageSource">The image to draw.</param>
      <param name="rectangle">The region in which to draw <paramref name="bitmapSource" />.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawImage(System.Windows.Media.ImageSource,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws an image into the region defined by the specified <see cref="T:System.Windows.Rect" /> and applies the specified animation clock.  </summary>
      <param name="imageSource">The image to draw.</param>
      <param name="rectangle">The region in which to draw <paramref name="bitmapSource" />.</param>
      <param name="rectangleAnimations">The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Rect" /> objects.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Media.Animation.AnimationClock,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws a line between the specified points using the specified <see cref="T:System.Windows.Media.Pen" /> and applies the specified animation clocks. </summary>
      <param name="pen">The pen to stroke the line.</param>
      <param name="point0">The start point of the line.</param>
      <param name="point0Animations">The clock with which to animate the start point of the line, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Point" /> objects.</param>
      <param name="point1">The end point of the line.</param>
      <param name="point1Animations">The clock with which to animate the end point of the line, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Point" /> objects.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawLine(System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point)">
      <summary>Draws a line between the specified points using the specified <see cref="T:System.Windows.Media.Pen" />. </summary>
      <param name="pen">The pen with which to stroke the line.</param>
      <param name="point0">The start point of the line.</param>
      <param name="point1">The end point of the line.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect)">
      <summary>Draws a rectangle with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" />. The pen and the brush can be null. </summary>
      <param name="brush">The brush with which to fill the rectangle.  This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the rectangle.  This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="rectangle">The rectangle to draw.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws a rectangle with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" /> and applies the specified animation clocks. </summary>
      <param name="brush">The brush with which to fill the rectangle.  This is optional, and can be null. If the brush is null, no fill is drawn.</param>
      <param name="pen">The pen with which to stroke the rectangle.  This is optional, and can be null. If the pen is null, no stroke is drawn.</param>
      <param name="rectangle">The rectangle to draw.</param>
      <param name="rectangleAnimations">The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Rect" /> objects.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Double,System.Double)">
      <summary>Draws a rounded rectangle with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" />. </summary>
      <param name="brush">The brush used to fill the rectangle.</param>
      <param name="pen">The pen used to stroke the rectangle.</param>
      <param name="rectangle">The rectangle to draw.</param>
      <param name="radiusX">The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to <see cref="P:System.Windows.Rect.Width" />/2.</param>
      <param name="radiusY">The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to <see cref="P:System.Windows.Rect.Height" />/2.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawRoundedRectangle(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws a rounded rectangle with the specified <see cref="T:System.Windows.Media.Brush" /> and <see cref="T:System.Windows.Media.Pen" /> and applies the specified animation clocks. </summary>
      <param name="brush">The brush used to fill the rectangle, or null for no fill.</param>
      <param name="pen">The pen used to stroke the rectangle, or null for no stroke.</param>
      <param name="rectangle">The rectangle to draw.</param>
      <param name="rectangleAnimations">The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Rect" /> objects.</param>
      <param name="radiusX">The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to <see cref="P:System.Windows.Rect.Width" />/2</param>
      <param name="radiusXAnimations">The clock with which to animate the rectangle's radiusX value, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Double" /> values. </param>
      <param name="radiusY">The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to <see cref="P:System.Windows.Rect.Height" />/2.</param>
      <param name="radiusYAnimations">The clock with which to animate the rectangle's radiusY value, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Double" /> values.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawText(System.Windows.Media.FormattedText,System.Windows.Point)">
      <summary>Draws formatted text at the specified location. </summary>
      <param name="formattedText">The formatted text to be drawn.</param>
      <param name="origin">The location where the text is to be drawn.</param>
      <exception cref="T:System.ObjectDisposedException">The object has already been closed or disposed.</exception>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect)">
      <summary>Draws a video into the specified region.</summary>
      <param name="player">The media to draw.</param>
      <param name="rectangle">The region in which to draw <paramref name="player" />.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.DrawVideo(System.Windows.Media.MediaPlayer,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)">
      <summary>Draws a video into the specified region and applies the specified animation clock. </summary>
      <param name="player">The media to draw.</param>
      <param name="rectangle">The area in which to draw the media.</param>
      <param name="rectangleAnimations">The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Windows.Rect" /> objects.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.Pop">
      <summary>Pops the last opacity mask, opacity, clip, effect, or transform operation that was pushed onto the drawing context. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushClip(System.Windows.Media.Geometry)">
      <summary>Pushes the specified clip region onto the drawing context.  </summary>
      <param name="clipGeometry">The clip region to apply to subsequent drawing commands.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushEffect(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput)">
      <summary>Pushes the specified <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> onto the drawing context. </summary>
      <param name="effect">The effect to apply to subsequent drawings.</param>
      <param name="effectInput">The area to which the effect is applied, or null if the effect is to be applied to the entire area of subsequent drawings.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushGuidelineSet(System.Windows.Media.GuidelineSet)">
      <summary>Pushes the specified <see cref="T:System.Windows.Media.GuidelineSet" /> onto the drawing context. </summary>
      <param name="guidelines">The guideline set to apply to subsequent drawing commands.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushOpacity(System.Double)">
      <summary>Pushes the specified opacity setting onto the drawing context. </summary>
      <param name="opacity">The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous <see cref="M:System.Windows.Media.DrawingContext.PushOpacity(System.Double)" /> operations.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushOpacity(System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Pushes the specified opacity setting onto the drawing context and applies the specified animation clock. </summary>
      <param name="opacity">The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous <see cref="M:System.Windows.Media.DrawingContext.PushOpacity(System.Double)" /> operations.</param>
      <param name="opacityAnimations">The clock with which to animate the opacity value, or null for no animation. This clock must be created from an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that can animate <see cref="T:System.Double" /> values.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushOpacityMask(System.Windows.Media.Brush)">
      <summary>Pushes the specified opacity mask onto the drawing context. </summary>
      <param name="opacityMask">The opacity mask to apply to subsequent drawings. The alpha values of this brush determine the opacity of the drawing to which it is applied.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.PushTransform(System.Windows.Media.Transform)">
      <summary>Pushes the specified <see cref="T:System.Windows.Media.Transform" /> onto the drawing context. </summary>
      <param name="transform">The transform to apply to subsequent drawing commands.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingContext.VerifyApiNonstructuralChange">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.Â </summary>
    </member>
    <member name="T:System.Windows.Media.DrawingGroup">
      <summary>Represents a collection of drawings that can be operated upon as a single drawing. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingGroup" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingGroup.Append">
      <summary>Opens the <see cref="T:System.Windows.Media.DrawingGroup" /> in order to populate its <see cref="P:System.Windows.Media.DrawingGroup.Children" />. This method enables you to append additional <see cref="P:System.Windows.Media.DrawingGroup.Children" /> to this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.DrawingContext" /> that you can use to describe the contents of this <see cref="T:System.Windows.Media.DrawingGroup" /> object.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.BitmapEffect">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> to apply to this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> to apply to this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is null.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.BitmapEffectInput">
      <summary>Gets or sets the region where the <see cref="T:System.Windows.Media.DrawingGroup" /> applies its <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" /> and, optionally, a <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to use as input for its <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" />.  </summary>
      <returns>The region where the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" /> of the <see cref="T:System.Windows.Media.DrawingGroup" /> is applied and, optionally, the <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> to use as input; or null if the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" /> applies to the whole <see cref="T:System.Windows.Media.DrawingGroup" /> and uses the <see cref="T:System.Windows.Media.DrawingGroup" /> as its input. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.BitmapEffectInputProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffectInput" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffectInput" />Â dependency property.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.BitmapEffectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.BitmapEffect" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.Children">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Drawing" /> objects that are contained in this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>A collection of the <see cref="T:System.Windows.Media.Drawing" /> objects in this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is an empty <see cref="T:System.Windows.Media.DrawingCollection" />.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.Children" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.Children" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.ClipGeometry">
      <summary>Gets or sets the clip region of this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> that is used to clip this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.ClipGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.ClipGeometry" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.ClipGeometry" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingGroup.Clone">
      <summary>Creates a modifiable deep copy of this <see cref="T:System.Windows.Media.DrawingGroup" /> and makes deep copies of its values. </summary>
      <returns>A modifiable clone of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingGroup.CloneCurrentValue">
      <summary>Creates a modifiable deep copy of this <see cref="T:System.Windows.Media.DrawingGroup" /> object and makes deep copies of its current values. </summary>
      <returns>A modifiable clone of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.GuidelineSet">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.GuidelineSet" /> to apply to this <see cref="T:System.Windows.Media.DrawingGroup" />.   </summary>
      <returns>The <see cref="T:System.Windows.Media.GuidelineSet" /> to apply to this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.GuidelineSetProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.GuidelineSet" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.GuidelineSet" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.Opacity">
      <summary>Gets or sets the opacity of this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>A value between 0 and 1, inclusive, that describes the opacity of this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is 1.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.OpacityMask">
      <summary>Gets or sets the brush used to alter the opacity of select regions of this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes the opacity of this <see cref="T:System.Windows.Media.DrawingGroup" />; null indicates that no opacity mask exists and the opacity is uniform. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.OpacityMaskProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.OpacityMask" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.OpacityMask" />Â dependency property.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.OpacityProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.Opacity" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.Opacity" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingGroup.Open">
      <summary>Opens the <see cref="T:System.Windows.Media.DrawingGroup" /> in order to populate its <see cref="P:System.Windows.Media.DrawingGroup.Children" /> and clears any existing <see cref="P:System.Windows.Media.DrawingGroup.Children" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.DrawingContext" /> that can be used to describe the contents of this <see cref="T:System.Windows.Media.DrawingGroup" /> object. </returns>
    </member>
    <member name="P:System.Windows.Media.DrawingGroup.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" /> that is applied to this <see cref="T:System.Windows.Media.DrawingGroup" />. </summary>
      <returns>The transformation to apply to this <see cref="T:System.Windows.Media.DrawingGroup" />. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingGroup.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingGroup.Transform" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingGroup.Transform" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.DrawingImage">
      <summary> An <see cref="T:System.Windows.Media.ImageSource" /> that uses a <see cref="T:System.Windows.Media.Drawing" /> for content. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingImage" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.DrawingImage.#ctor(System.Windows.Media.Drawing)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingImage" /> class that has the specified <see cref="P:System.Windows.Media.DrawingImage.Drawing" />.  </summary>
      <param name="drawing">The <see cref="P:System.Windows.Media.DrawingImage.Drawing" /> of the new <see cref="T:System.Windows.Media.DrawingImage" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingImage.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingImage" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingImage.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingImage" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingImage.Drawing">
      <summary> Gets or sets the drawing content for the <see cref="T:System.Windows.Media.DrawingImage" />.</summary>
      <returns>The drawing content for the <see cref="T:System.Windows.Media.DrawingImage" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.DrawingImage.DrawingProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.DrawingImage.Drawing" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.DrawingImage.Drawing" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingImage.Height">
      <summary> Gets the height of the <see cref="T:System.Windows.Media.DrawingImage" />.</summary>
      <returns>The height of the <see cref="T:System.Windows.Media.DrawingImage" />.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingImage.Metadata">
      <summary>Gets the metadata of the <see cref="T:System.Windows.Media.DrawingImage" />.</summary>
      <returns>The metadata of the <see cref="T:System.Windows.Media.DrawingImage" />.</returns>
    </member>
    <member name="P:System.Windows.Media.DrawingImage.Width">
      <summary> Gets the width of the <see cref="T:System.Windows.Media.DrawingImage" />. </summary>
      <returns>The width of the <see cref="T:System.Windows.Media.DrawingImage" />.</returns>
    </member>
    <member name="T:System.Windows.Media.DrawingVisual">
      <summary>
        <see cref="T:System.Windows.Media.DrawingVisual" /> is a visual object that can be used to render vector graphics on the screen. The content is persisted by the system.</summary>
    </member>
    <member name="M:System.Windows.Media.DrawingVisual.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingVisual" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.DrawingVisual.Drawing">
      <summary>Gets the drawing content of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</summary>
      <returns>Gets a value of type <see cref="T:System.Windows.Media.DrawingGroup" /> that represents the collection of <see cref="T:System.Windows.Media.Drawing" /> objects in the <see cref="T:System.Windows.Media.DrawingVisual" />.</returns>
    </member>
    <member name="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
      <summary>Determines whether a geometry value is within the bounds of the visual object.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.GeometryHitTestResult" />.</returns>
      <param name="hitTestParameters">A value of type <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Determines whether a point coordinate value is within the bounds of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.HitTestResult" />, representing the <see cref="T:System.Windows.Media.Visual" /> returned from a hit test. </returns>
      <param name="hitTestParameters">A value of type <see cref="T:System.Windows.Media.PointHitTestParameters" /> that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.DrawingVisual.RenderOpen">
      <summary>Opens the <see cref="T:System.Windows.Media.DrawingVisual" /> object for rendering. The returned <see cref="T:System.Windows.Media.DrawingContext" /> value can be used to render into the <see cref="T:System.Windows.Media.DrawingVisual" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.DrawingContext" />.</returns>
    </member>
    <member name="T:System.Windows.Media.EdgeMode">
      <summary>Determines how the edges of non-text drawing primitives are rendered.</summary>
    </member>
    <member name="F:System.Windows.Media.EdgeMode.Unspecified">
      <summary>No edge mode is specified. Do not alter the current edge mode of non-text drawing primitives. This is the default value.</summary>
    </member>
    <member name="F:System.Windows.Media.EdgeMode.Aliased">
      <summary>Render the edges of non-text drawing primitives as aliased edges.</summary>
    </member>
    <member name="T:System.Windows.Media.EllipseGeometry">
      <summary>Represents the geometry of a circle or ellipse. </summary>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.EllipseGeometry" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor(System.Windows.Point,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.EllipseGeometry" /> class as an ellipse that has a specified center location, x radius, and y radius. </summary>
      <param name="center">The location of the center of the ellipse.</param>
      <param name="radiusX">The horizontal radius of the ellipse.</param>
      <param name="radiusY">The vertical radius of the ellipse.</param>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor(System.Windows.Point,System.Double,System.Double,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.EllipseGeometry" /> class that has the specified position, size, and transformation.  </summary>
      <param name="center">The location of the center of the ellipse.</param>
      <param name="radiusX">The horizontal radius of the ellipse.</param>
      <param name="radiusY">The vertical radius of the ellipse.</param>
      <param name="transform">The transformation to apply to the ellipse.</param>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.EllipseGeometry" /> class that has a horizontal diameter equal to the width of the passed <see cref="T:System.Windows.Rect" />, a vertical diameter equal to the length of the passed <see cref="T:System.Windows.Rect" />, and a center point location equal to the center of the passed <see cref="T:System.Windows.Rect" />. </summary>
      <param name="rect">The rectangle that describes the ellipse dimensions.</param>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.Bounds">
      <summary>Gets a <see cref="T:System.Windows.Rect" /> that represents the bounding box of this <see cref="T:System.Windows.Media.EllipseGeometry" />. This method does not consider the extra area potentially added by a stroke. </summary>
      <returns>The bounding box of the <see cref="T:System.Windows.Media.EllipseGeometry" />. </returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.Center">
      <summary>Gets or sets the center point of the <see cref="T:System.Windows.Media.EllipseGeometry" />.  </summary>
      <returns>The center point of the <see cref="T:System.Windows.Media.EllipseGeometry" />.</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.CenterProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.Center" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.Center" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.EllipseGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.EllipseGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets the area of this <see cref="T:System.Windows.Media.EllipseGeometry" />. </summary>
      <returns>The area of the filled region of this ellipse.</returns>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the enumeration values, <see cref="F:System.Windows.Media.ToleranceType.Absolute" /> or <see cref="F:System.Windows.Media.ToleranceType.Relative" />, that specifies whether the tolerance factor is an absolute value or relative to the area of this geometry.</param>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.IsEmpty">
      <summary>Determines whether this <see cref="T:System.Windows.Media.EllipseGeometry" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.EllipseGeometry" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.MayHaveCurves">
      <summary>Determines whether this <see cref="T:System.Windows.Media.EllipseGeometry" /> object can have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.EllipseGeometry" /> object can have curved segments; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusX">
      <summary>Gets or sets the x-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />.   </summary>
      <returns>The x-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />. </returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusY">
      <summary>Gets or sets the y-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />.  </summary>
      <returns>The y-radius value of the <see cref="T:System.Windows.Media.EllipseGeometry" />.</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.ExceptionEventArgs">
      <summary>Provides error exception data for media events.</summary>
    </member>
    <member name="P:System.Windows.Media.ExceptionEventArgs.ErrorException">
      <summary>Gets the exception that details the cause of the failure.</summary>
      <returns>The exception that details the error condition.</returns>
      <exception cref="T:System.Security.SecurityException">The attempt to access the media or image file is denied.</exception>
      <exception cref="T:System.IO.FileNotFoundException">The media or image file is not found.</exception>
      <exception cref="T:System.IO.FileFormatException">The media or image format is not supported by any installed codec.-or-The file format is not recognized.</exception>
      <exception cref="T:System.Windows.Media.InvalidWmpVersionException">The detected version of Microsoft Windows Media PlayerÂ is not supported.</exception>
      <exception cref="T:System.NotSupportedException">The operation is not supported.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">A COM error code appears. </exception>
    </member>
    <member name="T:System.Windows.Media.FamilyTypeface">
      <summary>Specifies the details of a single typeface supported by a <see cref="T:System.Windows.Media.FontFamily" />.</summary>
    </member>
    <member name="M:System.Windows.Media.FamilyTypeface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FamilyTypeface" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.AdjustedFaceNames">
      <summary>Gets a collection of localized face names adjusted by the font differentiator.</summary>
      <returns>An array of type <see cref="T:System.Collections.Generic.IDictionary`2" /> that represent the localized typeface names.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.CapsHeight">
      <summary>Gets or sets the distance from baseline to top of an English capital, relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics">
      <summary>Gets the collection of character metrics for a device font family typeface.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.CharacterMetricsDictionary" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.DeviceFontName">
      <summary>Gets or sets the name or unique identifier for a device font family typeface.</summary>
      <returns>A value of type <see cref="T:System.String" /> that represents the device font name.</returns>
    </member>
    <member name="M:System.Windows.Media.FamilyTypeface.Equals(System.Object)">
      <summary>Compares two font family typefaces for equality.</summary>
      <returns>true if <paramref name="typeface" /> is not null and has the same properties as this typeface; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Object" /> value that represents the typeface to compare.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypeface.Equals(System.Windows.Media.FamilyTypeface)">
      <summary>Compares two font family typefaces for equality.</summary>
      <returns>true if <paramref name="typeface" /> is not null and has the same properties as this font family typeface; otherwise, false.</returns>
      <param name="typeface">The <see cref="T:System.Windows.Media.FamilyTypeface" /> value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypeface.GetHashCode">
      <summary>Serves as a hash function for a <see cref="T:System.Windows.Media.FamilyTypeface" /> object. The <see cref="M:System.Windows.Media.FamilyTypeface.GetHashCode" /> method is suitable for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A value of type <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.Stretch">
      <summary>Gets or sets the designed stretch of the font family typeface.</summary>
      <returns>A value of type <see cref="T:System.Windows.FontStretch" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.StrikethroughPosition">
      <summary>Gets or sets the position of the strikethrough value relative to the baseline. The value is also relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.StrikethroughThickness">
      <summary>Gets or sets the thickness of the strikethrough relative to em size. </summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.Style">
      <summary>Gets or sets the style of the font family typeface design. </summary>
      <returns>A value of type <see cref="T:System.Windows.FontStyle" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.UnderlinePosition">
      <summary>Gets or sets the position of underline value relative to the baseline. The value is also relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.UnderlineThickness">
      <summary>Gets or sets the thickness of underline relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.Weight">
      <summary>Gets or sets the designed weight of this font family typeface.</summary>
      <returns>A value of type <see cref="T:System.Windows.FontWeight" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypeface.XHeight">
      <summary>Gets or sets the Western x-height relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="T:System.Windows.Media.FamilyTypefaceCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.FamilyTypeface" /> instances.</summary>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.Add(System.Windows.Media.FamilyTypeface)">
      <summary>Inserts the specified <see cref="T:System.Windows.Media.FamilyTypeface" /> object into the collection.</summary>
      <param name="item">The <see cref="T:System.Windows.Media.FamilyTypeface" /> object to insert.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.FamilyTypeface" /> objects from the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.Contains(System.Windows.Media.FamilyTypeface)">
      <summary>Determines if the collection contains the specified <see cref="T:System.Windows.Media.FamilyTypeface" />.</summary>
      <returns>true if <paramref name="item" /> is in the collection; otherwise, false.</returns>
      <param name="item">The <see cref="T:System.Windows.Media.FamilyTypeface" /> object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.FamilyTypeface" /> objects in the collection into an array of <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />, starting at the specified index position.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.FamilyTypeface" /> objects in the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.IndexOf(System.Windows.Media.FamilyTypeface)">
      <summary>Returns the index of the specified <see cref="T:System.Windows.Media.FamilyTypeface" /> object within the collection.</summary>
      <returns>The zero-based index of <paramref name="item" />, if found; otherwise -1;</returns>
      <param name="item">The <see cref="T:System.Windows.Media.FamilyTypeface" /> object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.Insert(System.Int32,System.Windows.Media.FamilyTypeface)">
      <summary>Inserts the specified <see cref="T:System.Windows.Media.FamilyTypeface" /> object at the specified index position in the collection.</summary>
      <param name="index">The zero-based index position to insert the object.</param>
      <param name="item">The <see cref="T:System.Windows.Media.FamilyTypeface" /> object to insert.</param>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.FamilyTypeface" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</summary>
      <returns>The element at the specified index. </returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> from which to get or set the <see cref="T:System.Windows.Media.FamilyTypeface" />.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.Remove(System.Windows.Media.FamilyTypeface)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.FamilyTypeface" /> object from the collection.</summary>
      <returns>true if <paramref name="item" /> was successfully deleted; otherwise false.</returns>
      <param name="item">The <see cref="T:System.Windows.Media.FamilyTypeface" /> object to remove.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.RemoveAt(System.Int32)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.FamilyTypeface" /> object from the collection at the specified index.</summary>
      <param name="index">The zero-based index position from where to delete the object.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="item">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.FillRule">
      <summary> Specifies how the intersecting areas of <see cref="T:System.Windows.Media.PathFigure" /> objects contained in a <see cref="T:System.Windows.Media.Geometry" /> are combined to form the area of the <see cref="T:System.Windows.Media.Geometry" />.</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.EvenOdd">
      <summary>Rule that determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction and counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside.</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.Nonzero">
      <summary>Rule that determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside the path. Otherwise, it is inside.</summary>
    </member>
    <member name="T:System.Windows.Media.FontEmbeddingManager">
      <summary>Provides functionality for physical and composite font embedding.</summary>
    </member>
    <member name="M:System.Windows.Media.FontEmbeddingManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontEmbeddingManager" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.FontEmbeddingManager.GetUsedGlyphs(System.Uri)">
      <summary>Retrieves the list of glyphs used by the glyph typeface.</summary>
      <returns>A collection of <see cref="T:System.UInt16" /> values that represent the glyphs.</returns>
      <param name="glyphTypeface">A <see cref="T:System.Uri" /> value that represents the location of the glyph typeface containing the glyphs.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="glyphTypeface" /> value does not reference a previously recorded glyph typeface.</exception>
    </member>
    <member name="P:System.Windows.Media.FontEmbeddingManager.GlyphTypefaceUris">
      <summary>Returns the collection of glyph typefaces used by the <see cref="T:System.Windows.Media.GlyphRun" /> specified in the <see cref="M:System.Windows.Media.FontEmbeddingManager.RecordUsage(System.Windows.Media.GlyphRun)" /> method.</summary>
      <returns>A collection of <see cref="T:System.Uri" /> values that represent glyph typefaces.</returns>
    </member>
    <member name="M:System.Windows.Media.FontEmbeddingManager.RecordUsage(System.Windows.Media.GlyphRun)">
      <summary>Initiates the collection of usage information about the glyph typeface and indices used by a specified <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <param name="glyphRun">The <see cref="T:System.Windows.Media.GlyphRun" /> whose usage information is collected.</param>
    </member>
    <member name="T:System.Windows.Media.FontEmbeddingRight">
      <summary>Describes font embedding permissions specified in an OpenType font file.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.Installable">
      <summary>Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. The user of the remote system acquires the identical rights, obligations and licenses for that font as the original purchaser of the font, and is subject to the same end-user license agreement, copyright, design patent, and/or trademark as was the original purchaser.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.InstallableButNoSubsetting">
      <summary>Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. They may not be subsetted prior to embedding.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.InstallableButWithBitmapsOnly">
      <summary>Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. Only bitmaps contained in the fonts may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.InstallableButNoSubsettingAndWithBitmapsOnly">
      <summary>Fonts with this setting indicate that they may be embedded and permanently installed on the remote system by an application. They may not be subsetted prior to embedding. Only bitmaps contained in the fonts may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.RestrictedLicense">
      <summary>Fonts with this setting must not be modified, embedded or exchanged in any manner without first obtaining permission of the legal owner.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.PreviewAndPrint">
      <summary>The font may be embedded and temporarily loaded on the remote system. Documents containing the font must be opened in a read-only mode.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.PreviewAndPrintButNoSubsetting">
      <summary>The font may be embedded and temporarily loaded on the remote system. Documents containing the font must be opened in a read-only mode. The font may not be subsetted prior to embedding.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.PreviewAndPrintButWithBitmapsOnly">
      <summary>The font may be embedded and temporarily loaded on the remote system. Documents containing the font must be opened in a read-only mode. Only bitmaps contained in the font may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.PreviewAndPrintButNoSubsettingAndWithBitmapsOnly">
      <summary>The font may be embedded and temporarily loaded on the remote system. Documents containing the font must be opened in a read-only mode. The font may not be subsetted prior to embedding. Only bitmaps contained in the font may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.Editable">
      <summary>The font may be embedded but must only be installed temporarily on other systems. In contrast to the <see cref="F:System.Windows.Media.FontEmbeddingRight.PreviewAndPrint" /> setting, documents containing Editable fonts may be opened for reading, editing is permitted, and changes may be saved.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.EditableButNoSubsetting">
      <summary>The font may be embedded but must only be installed temporarily on other systems. Documents containing the font may be opened for reading, editing is permitted, and changes may be saved. The font may not be subsetted prior to embedding.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.EditableButWithBitmapsOnly">
      <summary>The font may be embedded but must only be installed temporarily on other systems. Documents containing the font may be opened for reading, editing is permitted, and changes may be saved. Only bitmaps contained in the font may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="F:System.Windows.Media.FontEmbeddingRight.EditableButNoSubsettingAndWithBitmapsOnly">
      <summary>The font may be embedded but must only be installed temporarily on other systems. Documents containing the font may be opened for reading, editing is permitted, and changes may be saved. The font may not be subsetted prior to embedding. Only bitmaps contained in the font may be embedded. No outline data may be embedded.</summary>
    </member>
    <member name="T:System.Windows.Media.FontFamily">
      <summary>Represents a family of related fonts.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor">
      <summary>Initializes a new instance of an anonymous <see cref="T:System.Windows.Media.FontFamily" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name.</summary>
      <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="familyName" /> cannot be null.</exception>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name and an optional base uniform resource identifier (URI) value.</summary>
      <param name="baseUri">Specifies the base URIÂ that is used to resolve <paramref name="familyName" />.</param>
      <param name="familyName">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />. Multiple family names should be separated by commas.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamily.Baseline">
      <summary>Gets or sets the distance between the baseline and the character cell top.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the distance between the baseline and the character cell top, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.BaseUri">
      <summary>Gets the base uniform resource identifier (URI) that is used to resolve a font family name.</summary>
      <returns>A value of type <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.Equals(System.Object)">
      <summary>Gets a value that indicates whether the current font family object and the specified font family object are the same.</summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.FontFamily" /> object; otherwise, false. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.FontFamily" /> object, false is returned.</returns>
      <param name="o">The <see cref="T:System.Windows.Media.FontFamily" /> object to compare.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamily.FamilyMaps">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects. </summary>
      <returns>A <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> that contains <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.FamilyNames">
      <summary>Gets a collection of strings and <see cref="T:System.Globalization.CultureInfo" /> values that represent the font family names of the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> that represents the font family names.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.FamilyTypefaces">
      <summary>Gets a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> that represents a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.FontFamily" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.GetTypefaces">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the type faces in the default system font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.LineSpacing">
      <summary>Gets or sets the line spacing value for the <see cref="T:System.Windows.Media.FontFamily" /> object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the line spacing for the <see cref="T:System.Windows.Media.FontFamily" /> object.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.Source">
      <summary>Gets the font family name that is used to construct the <see cref="T:System.Windows.Media.FontFamily" /> object.</summary>
      <returns>The font family name of the <see cref="T:System.Windows.Media.FontFamily" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.ToString">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.FontFamily.Source" /> property.</summary>
      <returns>The source location of the <see cref="T:System.Windows.Media.FontFamily" /> object, including the directory or uniform resource identifier (URI) location reference.</returns>
    </member>
    <member name="T:System.Windows.Media.FontFamilyConverter">
      <summary>Converts instances of the <see cref="T:System.String" /> type to and from <see cref="T:System.Windows.Media.FontFamily" /> instances.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamilyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether a class can be converted from a given type to an instance of <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>true if the converter can convert from the specified type to an instance of <see cref="T:System.Windows.Media.FontFamily" />; otherwise, false.</returns>
      <param name="td">Describes the context information of a type.</param>
      <param name="t">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.Media.FontFamily" /> can be converted to a different type.</summary>
      <returns>true if the converter can convert this instance of <see cref="T:System.Windows.Media.FontFamily" /> to the specified type; otherwise, false.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type that this instance of <see cref="T:System.Windows.Media.FontFamily" /> is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>The instance of <see cref="T:System.Windows.Media.FontFamily" /> that is created from the converted <paramref name="o" /> parameter.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="cultureInfo">Cultural-specific information that should be respected during conversion.</param>
      <param name="o">The object being converted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> is not null and is not a valid type that can be converted to a <see cref="T:System.Windows.Media.FontFamily" />.</exception>
    </member>
    <member name="M:System.Windows.Media.FontFamilyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>The object that is created from the converted instance of <see cref="T:System.Windows.Media.FontFamily" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Cultural-specific information that should be respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <param name="destinationType">The type that this instance of <see cref="T:System.Windows.Media.FontFamily" /> is converted to.</param>
      <exception cref="T:System.ArgumentException">Occurs if <paramref name="value" /> or <paramref name="destinationType" /> is not a valid type for conversion.</exception>
      <exception cref="T:System.ArgumentNullException">Occurs if <paramref name="value" /> or <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.FontFamilyMap">
      <summary>Defines which <see cref="T:System.Windows.Media.FontFamily" /> to use for a specified set of Unicode code points and a culture-specific language.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamilyMap" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMap.Language">
      <summary>Gets or sets the culture-specific language for the <see cref="T:System.Windows.Media.FontFamilyMap" />.</summary>
      <returns>A <see cref="T:System.Windows.Markup.XmlLanguage" /> value representing the culture-specific language. The default value is a null string.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMap.Scale">
      <summary>Gets or sets the font scale factor for the target <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>A <see cref="T:System.Double" /> value representing the scale factor. The default value is 1.0.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMap.Target">
      <summary>Gets or sets the target font family name for which the Unicode range applies to.</summary>
      <returns>A <see cref="T:System.String" /> value representing the font family name. The default value is a null string.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMap.Unicode">
      <summary>Gets or sets a string value representing one or more Unicode code point ranges.</summary>
      <returns>A <see cref="T:System.String" /> value representing Unicode code point ranges. The default value is "0000-10ffff".</returns>
      <exception cref="T:System.FormatException">Unicode range not valid.</exception>
    </member>
    <member name="T:System.Windows.Media.FontFamilyMapCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.Add(System.Windows.Media.FontFamilyMap)">
      <summary>Inserts the specified <see cref="T:System.Windows.Media.FontFamilyMap" /> object into the collection.</summary>
      <param name="item">The object to insert.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.FontFamilyMap" /> objects from the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.Contains(System.Windows.Media.FontFamilyMap)">
      <summary>Indicates whether the <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> contains the specified <see cref="T:System.Windows.Media.FontFamilyMap" /> object.</summary>
      <returns>true if the collection contains <paramref name="item" />; otherwise false.</returns>
      <param name="item">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.FontFamilyMap" /> objects in the collection into an array of FontFamilyMaps, starting at the specified index position.</summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects in the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</summary>
      <returns>The number of objects in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.IndexOf(System.Windows.Media.FontFamilyMap)">
      <summary>Returns the index of the specified <see cref="T:System.Windows.Media.FontFamilyMap" /> object within the collection.</summary>
      <returns>The zero-based index of <paramref name="item" />, if found; otherwise -1;</returns>
      <param name="item">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.Insert(System.Int32,System.Windows.Media.FontFamilyMap)">
      <summary>Inserts the specified <see cref="T:System.Windows.Media.FontFamilyMap" /> object at the specified index position in the collection.</summary>
      <param name="index">The zero-based index position to insert the object.</param>
      <param name="item">The object to insert.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.IsReadOnly">
      <summary>Gets a value that indicates if a <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> is read only.</summary>
      <returns>true if the collection is read only; otherwise false.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.FontFamilyMap" /> object at the specified index position.</summary>
      <returns>The <see cref="T:System.Windows.Media.FontFamilyMap" /> object at the <paramref name="index" /> position.</returns>
      <param name="index">The zero-based index position of the object to get or set.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.Remove(System.Windows.Media.FontFamilyMap)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.FontFamilyMap" /> object from the collection.</summary>
      <returns>true if <paramref name="item" /> was successfully deleted; otherwise false.</returns>
      <param name="item">The object to remove.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.RemoveAt(System.Int32)">
      <summary>Deletes a <see cref="T:System.Windows.Media.FontFamilyMap" /> object from the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</summary>
      <param name="index">The zero-based index position to remove the object.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="item">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.FontFamilyMapCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.FontFamilyValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.FontFamily" />.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamilyValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamilyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if conversion from a given <see cref="T:System.String" /> to an instance of <see cref="T:System.Windows.Media.FontFamily" /> is possible.</summary>
      <returns>true if <paramref name="value" /> can be converted; otherwise, false.</returns>
      <param name="value">String to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.FontFamily" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.FontFamily" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.FontFamilyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> into a <see cref="T:System.Windows.Media.FontFamily" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.FontFamily" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">
        <see cref="T:System.String" /> value to convert into a <see cref="T:System.Windows.Media.FontFamily" />.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.NotSupportedException">Occurs when <paramref name="value" /> is null or equal to <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Windows.Media.FontFamilyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.FontFamily" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.FontFamily" /> object.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.FontFamily" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
      <exception cref="T:System.NotSupportedException">Occurs when <paramref name="value" /> is null or equal to <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="T:System.Windows.Media.Fonts">
      <summary>Provides enumeration support for <see cref="T:System.Windows.Media.FontFamily" /> and <see cref="T:System.Windows.Media.Typeface" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.String)">
      <summary>Returns the collection of <see cref="T:System.Windows.Media.FontFamily" /> objects from a string value that represents the location of the fonts.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.FontFamily" /> objects that represent the fonts in <paramref name="location" />.</returns>
      <param name="location">The location that contains the fonts.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="location" /> is null. You cannot pass null, because this parameter is treated as a path or URI.</exception>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.Uri)">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.FontFamily" /> objects from a uniform resource identifier (URI) value that represents the location of the fonts.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.FontFamily" /> objects that represent the fonts in <paramref name="baseUri" />.</returns>
      <param name="baseUri">The base URI value of the location of the fonts.</param>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.Uri,System.String)">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.FontFamily" /> objects using a base uniform resource identifier (URI) value to resolve the font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.FontFamily" /> objects that represent the fonts in the resolved font location.</returns>
      <param name="baseUri">The base URI value of the location of the fonts.</param>
      <param name="location">The location that contains the fonts.</param>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.String)">
      <summary>Returns the collection of <see cref="T:System.Windows.Media.Typeface" /> objects from a string value that represents the font directory location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the fonts in <paramref name="location" />.</returns>
      <param name="location">The location that contains the fonts.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="location" /> is null. You cannot pass null, because this parameter is treated as a path or URI.</exception>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.Uri)">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects from a uniform resource identifier (URI) value that represents the font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the fonts in <paramref name="baseUri" />.</returns>
      <param name="baseUri">The base URI value of the location of the fonts.</param>
    </member>
    <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.Uri,System.String)">
      <summary>Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects using a base uniform resource identifier (URI) value to resolve the font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the fonts in the resolved font location.</returns>
      <param name="baseUri">The base URI value of the location of the fonts.</param>
      <param name="location">The location that contains the fonts.</param>
    </member>
    <member name="P:System.Windows.Media.Fonts.SystemFontFamilies">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.FontFamily" /> objects from the default system font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.FontFamily" /> objects that represent the fonts in the system fonts collection.</returns>
    </member>
    <member name="P:System.Windows.Media.Fonts.SystemTypefaces">
      <summary>Gets the collection of <see cref="T:System.Windows.Media.Typeface" /> objects from the default system font location.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the fonts in the system fonts collection.</returns>
    </member>
    <member name="T:System.Windows.Media.FormattedText">
      <summary>Provides low-level control for drawing text in Windows Presentation Foundation (WPF) applications.</summary>
    </member>
    <member name="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, and brush.</summary>
      <param name="textToFormat">The text to be displayed.</param>
      <param name="culture">The specific culture of the text.</param>
      <param name="flowDirection">The direction the text is read.</param>
      <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
      <param name="emSize">The font size the text should be formatted at.</param>
      <param name="foreground">The brush used to paint the each glyph.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, brush, and number substitution behavior.</summary>
      <param name="textToFormat">The text to be displayed.</param>
      <param name="culture">The specific culture of the text.</param>
      <param name="flowDirection">The direction the text is read.</param>
      <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
      <param name="emSize">The font size for the text's em measure, provided in device-independent units (1/96th inch per unit).</param>
      <param name="foreground">The brush used to paint the each glyph.</param>
      <param name="numberSubstitution">The number substitution behavior to apply to the text.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, brush, number substitution behavior, and text formatting mode.</summary>
      <param name="textToFormat">The text to be displayed.</param>
      <param name="culture">The specific culture of the text.</param>
      <param name="flowDirection">The direction the text is read.</param>
      <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
      <param name="emSize">The font size for the text's em measure, provided in device-independent units (1/96th inch per unit).</param>
      <param name="foreground">The brush used to paint the each glyph.</param>
      <param name="numberSubstitution">The number substitution behavior to apply to the text.</param>
      <param name="textFormattingMode">The <see cref="T:System.Windows.Media.TextFormattingMode" />  to apply to the text.</param>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Baseline">
      <summary>Gets the distance from the top of the first line to the baseline of the first line of a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <returns>The distance from the top of the first line to the baseline of the first line, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the formatted text, including all glyphs and text decorations.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> object representation of the formatted text.</returns>
      <param name="origin">The top-left origin of the resulting geometry.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text.</returns>
      <param name="origin">The origin of the highlight region.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box for a specified substring of the formatted text.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text substring.</returns>
      <param name="origin">The origin of the highlight region.</param>
      <param name="startIndex">The index of the initial character the highlight bounds should be obtained for.</param>
      <param name="count">The number of characters the highlight bounds should contain.</param>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Extent">
      <summary>Gets the distance from the topmost drawn pixel of the first line to the bottommost drawn pixel of the last line.</summary>
      <returns>The distance from the topmost drawn pixel of the first line to the bottommost drawn pixel of the last line, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.FlowDirection">
      <summary>Gets or sets the <see cref="T:System.Windows.FlowDirection" /> of a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <returns>The <see cref="T:System.Windows.FlowDirection" /> of the formatted text.</returns>
    </member>
    <member name="M:System.Windows.Media.FormattedText.GetMaxTextWidths">
      <summary>Retrieves an array of text widths. Each element in the array represents the maximum text width of sequential lines of text.</summary>
      <returns>An array of maximum text widths, each width provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Height">
      <summary>Gets the distance from the top of the first line to the bottom of the last line of the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <returns>The distance from the top of the first line to the bottom of the last line, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.LineHeight">
      <summary>Gets the line height, or line spacing, between lines of text.</summary>
      <returns>The line spacing between lines of text, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.MaxLineCount">
      <summary>Gets or sets the maximum number of lines to display. Text exceeding the <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" />  will not be displayed. </summary>
      <returns>The maximum number of lines to display.</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.MaxTextHeight">
      <summary>Gets or sets the maximum height of a text column.</summary>
      <returns>The maximum height of a text column, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.MaxTextWidth">
      <summary>Gets or sets the maximum text width (length) for a line of text.</summary>
      <returns>The maximum text width for a line of text, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.MinWidth">
      <summary>Gets the smallest possible text width that can fully contain the specified text content.</summary>
      <returns>The minimum text width of the text source, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.OverhangAfter">
      <summary>Gets the distance from the bottom of the last line of text to the bottommost drawn pixel.</summary>
      <returns>The distance from the bottom of the last line to the bottommost inked pixel, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.OverhangLeading">
      <summary>Gets the maximum distance from the leading alignment point to the leading drawn pixel of a line.</summary>
      <returns>The maximum distance from the leading alignment point to the leading drawn pixel of a line, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.OverhangTrailing">
      <summary>Gets the maximum distance from the trailing inked pixel to the trailing alignment point of a line.</summary>
      <returns>The maximum distance from the trailing inked pixel to the trailing alignment point of a line, provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)">
      <summary>Sets the <see cref="T:System.Globalization.CultureInfo" /> for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Globalization.CultureInfo" /> for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for text formatting.</param>
      <param name="startIndex">The start index of initial character to apply the change to.</param>
      <param name="count">The number of characters the change should be applied to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)">
      <summary>Sets the font family for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="fontFamily">A string that constructs the <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting. Fallbacks are permitted; for details, see <see cref="T:System.Windows.Media.FontFamily" />.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)">
      <summary>Sets the font family for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="fontFamily">A string that constructs the <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting. Fallbacks are permitted; for details, see <see cref="T:System.Windows.Media.FontFamily" />.</param>
      <param name="startIndex">The starting index of the initial character to apply the font family change to.</param>
      <param name="count">The number of characters the change should apply to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)">
      <summary>Sets the font family for a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="fontFamily">The <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)">
      <summary>Sets the font family for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="fontFamily">The <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting.</param>
      <param name="startIndex">The starting index of the initial character to apply the font family change to.</param>
      <param name="count">The number of characters the change should apply to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)">
      <summary>Sets the font size for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="emSize">The font 'em' measure size, provided in device-independent units (1/96th inch per unit).</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)">
      <summary>Sets the font size for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="emSize">The font 'em' measure size, provided in device-independent units (1/96th inch per unit).</param>
      <param name="startIndex">The start index of the initial character to apply the font size to.</param>
      <param name="count">The number of characters to apply the font size to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)">
      <summary>Sets the font stretch value for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="stretch">The desired <see cref="T:System.Windows.FontStretch" /> value to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)">
      <summary>Sets the font stretch value for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="stretch">The desired <see cref="T:System.Windows.FontStretch" /> value to use for text formatting.</param>
      <param name="startIndex">The start index of the initial character to apply the font stretch to.</param>
      <param name="count">The number of characters to apply the font stretch to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)">
      <summary>Sets the font style for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="style">The <see cref="T:System.Windows.FontStyle" /> value to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)">
      <summary>Sets the font style for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="style">The <see cref="T:System.Windows.FontStyle" /> value to use for text formatting.</param>
      <param name="startIndex">The start index of the initial character to apply the font style to.</param>
      <param name="count">The number of characters to apply the font style to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)">
      <summary>Sets the font typeface for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="typeface">The <see cref="T:System.Windows.Media.Typeface" /> to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)">
      <summary>Sets the font typeface for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="typeface">The <see cref="T:System.Windows.Media.Typeface" /> to use for text formatting.</param>
      <param name="startIndex">The start index of the initial character to apply the typeface to.</param>
      <param name="count">The number of characters to apply the typeface to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)">
      <summary>Sets the font weight for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="weight">The <see cref="T:System.Windows.FontWeight" /> to use for text formatting.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)">
      <summary>Changes the <see cref="T:System.Windows.FontWeight" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object. </summary>
      <param name="weight">The font weight to use for text formatting.</param>
      <param name="startIndex">The start index of the initial character to apply the font weight to.</param>
      <param name="count">The number of characters to apply the font weight to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)">
      <summary>Changes the foreground <see cref="T:System.Windows.Media.Brush" /> for an entire <see cref="T:System.Windows.Media.FormattedText" /> object. </summary>
      <param name="foregroundBrush">The brush to use for the text foreground.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)">
      <summary>Changes the foreground <see cref="T:System.Windows.Media.Brush" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object. </summary>
      <param name="foregroundBrush">The brush to use for the text foreground.</param>
      <param name="startIndex">The start index of the initial character to apply the foreground brush to.</param>
      <param name="count">The number of characters to apply the foreground brush to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])">
      <summary>Sets an array of maximum text widths within the <see cref="T:System.Windows.Media.FormattedText" />, on a per-line basis. Each element in the array represents the maximum text width of sequential lines of text. </summary>
      <param name="maxTextWidths">An array of maximum text widths, each width provided in device-independent units (1/96th inch per unit).</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)">
      <summary>Sets the number substitution behavior for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="numberSubstitution">Number substitution behavior to apply to the text; can be null, in which case the default number substitution method for the text culture is used.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)">
      <summary>Sets the number substitution behavior for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="numberSubstitution">Number substitution behavior to apply to the text; can be null, in which case the default number substitution method for the text culture is used.</param>
      <param name="startIndex">The start index of initial character to apply the change to.</param>
      <param name="count">The number of characters the change should be applied to.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)">
      <summary>Sets the <see cref="T:System.Windows.TextDecorationCollection" /> for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="textDecorations">The <see cref="T:System.Windows.TextDecorationCollection" /> to apply to the text.</param>
    </member>
    <member name="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)">
      <summary>Sets the <see cref="T:System.Windows.TextDecorationCollection" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <param name="textDecorations">The <see cref="T:System.Windows.TextDecorationCollection" /> to apply to the text.</param>
      <param name="startIndex">The start index of the initial character to apply the text decorations to.</param>
      <param name="count">The number of characters to apply the text decorations to.</param>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Text">
      <summary>Gets the string of text to be displayed.</summary>
      <returns>The string of text to be displayed.</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.TextAlignment">
      <summary>Gets or sets the alignment of text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      <returns>One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the alignment of text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Trimming">
      <summary>Gets or sets the means by which the omission of text is indicated.</summary>
      <returns>One of the <see cref="T:System.Windows.TextTrimming" /> values that specifies how the omission of text is indicated. The default is <see cref="F:System.Windows.TextTrimming.WordEllipsis" />.</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.Width">
      <summary>Gets the width between the leading and trailing alignment points of a line, excluding any trailing white-space characters.</summary>
      <returns>The width between the leading and trailing alignment points of a line, excluding any trailing white-space characters. Provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace">
      <summary>Gets the width between the leading and trailing alignment points of a line, including any trailing white-space characters.</summary>
      <returns>The width between the leading and trailing alignment points of a line, including any trailing white-space characters. Provided in device-independent units (1/96th inch per unit).</returns>
    </member>
    <member name="T:System.Windows.Media.GeneralTransform">
      <summary>Provides generalized transformation support for objects, such as points and rectangles. This is an abstract class. </summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransform" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransform" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransform" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GeneralTransform.Inverse">
      <summary>Gets the inverse transformation of this <see cref="T:System.Windows.Media.GeneralTransform" />, if possible.</summary>
      <returns>An inverse of this instance, if possible; otherwise null.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.ToString">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.GeneralTransform" />.</summary>
      <returns>A string representation of this instance.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this instance, based on the passed <see cref="T:System.IFormatProvider" /> parameter.</summary>
      <returns>A string representation of this instance, based on <paramref name="provider" />.</returns>
      <param name="provider">
        <see cref="T:System.IFormatProvider" /> instance used to process this instance.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)">
      <summary>Transforms the specified point and returns the result.</summary>
      <returns>The result of transforming <paramref name="point" />.</returns>
      <param name="point">The point to transform.</param>
      <exception cref="T:System.InvalidOperationException">The transform did not succeed.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TransformBounds(System.Windows.Rect)">
      <summary>When overridden in a derived class, transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned bounding box possible that contains the transformed <paramref name="rect" />.</returns>
      <param name="rect">The bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>When overridden in a derived class, attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.GeneralTransformCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.GeneralTransform" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.GeneralTransform})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> class.</summary>
      <param name="collection">Initial object in the new collection class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> class with the specified capacity, or the number of <see cref="T:System.Windows.Media.GeneralTransform" /> objects the collection is initially capable of storing.</summary>
      <param name="capacity">   The number of <see cref="T:System.Windows.Media.GeneralTransform" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Add(System.Windows.Media.GeneralTransform)">
      <summary>Adds a <see cref="T:System.Windows.Media.GeneralTransform" /> object to the end of the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <param name="value">The <see cref="T:System.Windows.Media.GeneralTransform" /> to add to the end of the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.GeneralTransform" /> objects from the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransformCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransformCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Contains(System.Windows.Media.GeneralTransform)">
      <summary>Indicates whether the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> contains the specified <see cref="T:System.Windows.Media.GeneralTransform" /> object.</summary>
      <returns>true if the collection contains <paramref name="value" />; otherwise false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.GeneralTransform" /> to locate in the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.CopyTo(System.Windows.Media.GeneralTransform[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.GeneralTransform" /> objects in the collection into an array of GeneralTransforms, starting at the specified index position. </summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.Count">
      <summary>Gets the number of <see cref="T:System.Windows.Media.GeneralTransform" /> objects in the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An enumerator that can iterate the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.IndexOf(System.Windows.Media.GeneralTransform)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.GeneralTransform" /> object within a <see cref="T:System.Windows.Media.GeneralTransformCollection" />. </summary>
      <returns>The zero-based index position of <paramref name="value" />, if found; otherwise -1;</returns>
      <param name="value">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Insert(System.Int32,System.Windows.Media.GeneralTransform)">
      <summary>Inserts a <see cref="T:System.Windows.Media.GeneralTransform" /> object into the specified index position within the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <param name="index">The zero-based index position to insert the object.</param>
      <param name="value">The object to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.GeneralTransform" /> object at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.GeneralTransform" /> object at the <paramref name="index" /> position.</returns>
      <param name="index">The zero-based index position of the object to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Remove(System.Windows.Media.GeneralTransform)">
      <summary>Deletes a <see cref="T:System.Windows.Media.GeneralTransform" /> object from the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <returns>true if <paramref name="value" /> was successfully deleted; otherwise false.</returns>
      <param name="value">The object to remove.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GeneralTransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.RemoveAt(System.Int32)">
      <summary>Deletes a <see cref="T:System.Windows.Media.GeneralTransform" /> object from the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
      <param name="index">The zero-based index position to remove the object.</param>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeneralTransformCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.GeneralTransformCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.GeneralTransform" /> items in a <see cref="T:System.Windows.Media.GeneralTransformCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.GeneralTransformGroup">
      <summary>Represents a <see cref="T:System.Windows.Media.GeneralTransform" /> that is a composite of the transforms in its <see cref="T:System.Windows.Media.GeneralTransformCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeneralTransformGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformGroup.Children">
      <summary>Gets or sets the collection of <see cref="T:System.Windows.Media.GeneralTransformGroup" /> objects that form this <see cref="T:System.Windows.Media.GeneralTransformGroup" />.  </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.GeneralTransformGroup" /> objects that form this <see cref="T:System.Windows.Media.GeneralTransformGroup" />. The default value is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.GeneralTransformGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeneralTransformGroup.Children" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeneralTransformGroup.Children" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransformGroup" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeneralTransformGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GeneralTransformGroup.Inverse">
      <summary>Gets the inverse transform of this <see cref="T:System.Windows.Media.GeneralTransformGroup" />, if it has an inverse.</summary>
      <returns>The inverse transform of this <see cref="T:System.Windows.Media.GeneralTransformGroup" />, if it has an inverse; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformGroup.TransformBounds(System.Windows.Rect)">
      <summary>Transforms the specified bounding box to the smallest axis-aligned bounding box possible that contains all the points in the original bounding box.</summary>
      <returns>The transformed bounding box, which is the smallest axis-aligned bounding box possible that contains all the points in the original bounding box.</returns>
      <param name="rect">The bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransformGroup.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>Attempts to transform the specified point.</summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="T:System.Windows.Media.Geometry">
      <summary>Classes that derive from this abstract base class define geometric shapes. <see cref="T:System.Windows.Media.Geometry" /> objects can be used for clipping, hit-testing, and rendering 2-D graphic data. </summary>
    </member>
    <member name="P:System.Windows.Media.Geometry.Bounds">
      <summary>Gets a <see cref="T:System.Windows.Rect" /> that specifies the axis-aligned bounding box of the <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>The axis-aligned bounding box of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.Clone">
      <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Media.Geometry" />, making deep copies of the object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of the <see cref="T:System.Windows.Media.Geometry" /> object, making deep copies of the object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)">
      <summary>Combines the two geometries using the specified <see cref="T:System.Windows.Media.GeometryCombineMode" /> and applies the specified transform to the resulting geometry.</summary>
      <returns>The combined geometry.</returns>
      <param name="geometry1">The first geometry to combine.</param>
      <param name="geometry2">The second geometry to combine.</param>
      <param name="mode">One of the enumeration values that specifies how the geometries are combined.</param>
      <param name="transform">A transformation to apply to the combined geometry, or null.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Combines the two geometries using the specified <see cref="T:System.Windows.Media.GeometryCombineMode" /> and tolerance factor, and applies the specified transform to the resulting geometry.</summary>
      <returns>The combined geometry.</returns>
      <param name="geometry1">The first geometry to combine.</param>
      <param name="geometry2">The second geometry to combine.</param>
      <param name="mode">One of the enumeration values that specifies how the geometries are combined.</param>
      <param name="transform">A transformation to apply to the combined geometry, or null.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="P:System.Windows.Media.Geometry.Empty">
      <summary>Gets an empty object. </summary>
      <returns>The empty geometry object.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)">
      <summary>Indicates whether the current geometry completely contains the specified <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <returns>true if the current geometry completely contains <paramref name="geometry" />; otherwise, false.</returns>
      <param name="geometry">The geometry to test for containment.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Indicates whether the current geometry contains the specified <see cref="T:System.Windows.Media.Geometry" />, given the specified margin of error.</summary>
      <returns>true if the current geometry contains <paramref name="geometry" />, given the specified margin of error; otherwise, false.</returns>
      <param name="geometry">The geometry to test for containment.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContains(System.Windows.Point)">
      <summary>Indicates whether the geometry contains the specified <see cref="T:System.Windows.Point" />.</summary>
      <returns>true if the geometry contains <paramref name="hitPoint" />; otherwise, false.</returns>
      <param name="hitPoint">The point to test for containment.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Indicates whether the geometry contains the specified <see cref="T:System.Windows.Point" />, given the specified margin of error.</summary>
      <returns>true if the geometry contains <paramref name="hitPoint" />, given the specified margin of error; otherwise, false.</returns>
      <param name="hitPoint">The point to test for containment.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)">
      <summary>Returns a value that describes the intersection between the current geometry and the specified geometry.</summary>
      <returns>One of the enumeration values.</returns>
      <param name="geometry">The geometry to test for containment.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Returns a value that describes the intersection between the current geometry and the specified geometry, given the specified margin of error.</summary>
      <returns>One of the enumeration values.</returns>
      <param name="geometry">The geometry to test for containment.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetArea">
      <summary>Gets the area of the filled region of the <see cref="T:System.Windows.Media.Geometry" /> object. </summary>
      <returns>The area of the filled region of the geometry.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets the area, within the specified tolerance, of the filled region of the <see cref="T:System.Windows.Media.Geometry" /> object. </summary>
      <returns>The area of the filled region of the geometry.</returns>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" /> that is a polygonal approximation of the <see cref="T:System.Windows.Media.Geometry" /> object. </summary>
      <returns>The polygonal approximation of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" />, within the specified tolerance, that is a polygonal approximation of the <see cref="T:System.Windows.Media.Geometry" /> object. </summary>
      <returns>The polygonal approximation of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" /> that is a simplified outline of the filled region of the <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>A simplified outline of the filled region of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" />, within the specified tolerance, that is a simplified outline of the filled region of the <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>A simplified outline of the filled region of the <see cref="T:System.Windows.Media.Geometry" />.</returns>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)">
      <summary>Returns an axis-aligned rectangle that is exactly large enough to contain the geometry after it has been outlined with the specified <see cref="T:System.Windows.Media.Pen" />. </summary>
      <returns>An axis aligned rectangle that is exactly large enough to contain the outlined geometry.</returns>
      <param name="pen">An object that describes the area of the geometry's stroke.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Returns an axis-aligned rectangle that is exactly large enough to contain the geometry after it has been outlined with the specified <see cref="T:System.Windows.Media.Pen" />, given the specified tolerance factor.</summary>
      <returns>An axis aligned rectangle that is exactly large enough to contain the outlined geometry.</returns>
      <param name="pen">An object that describes the area of the geometry's stroke.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" /> that is the shape defined by the stroke on the <see cref="T:System.Windows.Media.Geometry" /> produced by the specified <see cref="T:System.Windows.Media.Pen" />. </summary>
      <returns>The outlined geometry.</returns>
      <param name="pen">An object that describes the area of the geometry's stroke.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets a <see cref="T:System.Windows.Media.PathGeometry" /> that is the shape defined by the stroke on the <see cref="T:System.Windows.Media.Geometry" /> produced by the specified <see cref="T:System.Windows.Media.Pen" />, given the specified tolerance factor.</summary>
      <returns>The geometry, widened by <paramref name="pen" />.</returns>
      <param name="pen">The object used to define the area of the geometry's stroke.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.IsEmpty">
      <summary>Determines whether the object is empty. </summary>
      <returns>true if the geometry is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.MayHaveCurves">
      <summary>Determines whether the object might have curved segments. </summary>
      <returns>true if the geometry object might have curved segments; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.Parse(System.String)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Geometry" /> instance from the specified string using the current culture.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Geometry" /> instance created from the specified string.</returns>
      <param name="source">A string that describes the geometry to be created. See Path Markup Syntax for information about how this string is formatted. </param>
    </member>
    <member name="M:System.Windows.Media.Geometry.ShouldSerializeTransform">
      <summary>Gets a value that indicates whether the value of the <see cref="P:System.Windows.Media.Geometry.Transform" /> property should be serialized.</summary>
      <returns>true if the value of the geometry's <see cref="P:System.Windows.Media.Geometry.Transform" /> property should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.StandardFlatteningTolerance">
      <summary>Gets the standard tolerance used for polygonal approximation. </summary>
      <returns>The standard tolerance, 0.25.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Point" /> is contained in the stroke produced by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the geometry. </summary>
      <returns>true if <paramref name="hitPoint" /> is contained in the stroke produced by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the geometry; otherwise, false.</returns>
      <param name="pen">An object that determines the area of the geometry's stroke.</param>
      <param name="hitPoint">The point to test for containment.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Determines whether the specified <see cref="T:System.Windows.Point" /> is contained in the stroke produced by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the geometry, given the specified margin of error.</summary>
      <returns>true if the stroke created by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the geometry contains the specified point, given the specified tolerance factor; otherwise, false.</returns>
      <param name="pen">An object that defines the stroke of a geometry.</param>
      <param name="hitPoint">The point to test for containment.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)">
      <summary>Returns a value that describes the intersection between the specified <see cref="T:System.Windows.Media.Geometry" /> and the stroke created by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the current geometry.</summary>
      <returns>One of the enumeration values.</returns>
      <param name="pen">An object that determines the area of the current geometry's stroke.</param>
      <param name="geometry">The geometry to test for containment.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets a value that describes the intersection between the specified <see cref="T:System.Windows.Media.Geometry" /> and the stroke created by applying the specified <see cref="T:System.Windows.Media.Pen" /> to the current geometry, given the specified margin of error.</summary>
      <returns>One of the enumeration values.</returns>
      <param name="pen">An object that determines the area of the current geometry's stroke.</param>
      <param name="geometry">The geometry to test for containment.</param>
      <param name="tolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If <paramref name="tolerance" /> is less than 10-6, 10-6 is used instead.</param>
      <param name="type">One of the <see cref="T:System.Windows.Media.ToleranceType" /> values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.</param>
    </member>
    <member name="M:System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.Geometry.ToString">
      <summary>Creates a string representation of the object based on the current culture. </summary>
      <returns>A string representation of the object.</returns>
    </member>
    <member name="M:System.Windows.Media.Geometry.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of the object using the specified culture-specific formatting information. </summary>
      <returns>A string representation of the object.</returns>
      <param name="provider">Culture-specific formatting information, or null to use the current culture.</param>
    </member>
    <member name="P:System.Windows.Media.Geometry.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" /> object applied to a <see cref="T:System.Windows.Media.Geometry" />.  </summary>
      <returns>The transformation applied to the <see cref="T:System.Windows.Media.Geometry" />. Note that this value may be a single <see cref="T:System.Windows.Media.Transform" /> or a <see cref="T:System.Windows.Media.TransformCollection" /> cast as a <see cref="T:System.Windows.Media.Transform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Geometry.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Geometry.Transform" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Geometry.Transform" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryCollection">
      <summary> Represents a collection of <see cref="T:System.Windows.Media.Geometry" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryCollection" /> class with the specified collection of <see cref="T:System.Windows.Media.Geometry" /> objects.</summary>
      <param name="collection">The collection of <see cref="T:System.Windows.Media.Geometry" /> objects that make up the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryCollection" /> class with the specified capacity, or the number of <see cref="T:System.Windows.Media.Geometry" /> objects the collection is initially capable of storing.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Media.Geometry" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Add(System.Windows.Media.Geometry)">
      <summary>Adds a <see cref="T:System.Windows.Media.Geometry" /> to the end of the collection. </summary>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Geometry" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Contains(System.Windows.Media.Geometry)">
      <summary>Returns a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <returns>true if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.CopyTo(System.Windows.Media.Geometry[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Geometry" /> objects in a collection to a specified array.</summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.Count">
      <summary> Gets the number of geometries contained in the <see cref="T:System.Windows.Media.GeometryCollection" />.  </summary>
      <returns>The number of geometries contained in the <see cref="T:System.Windows.Media.GeometryCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Windows.Media.GeometryCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.IndexOf(System.Windows.Media.Geometry)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Geometry" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Insert(System.Int32,System.Windows.Media.Geometry)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Geometry" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Geometry" /> is inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Geometry" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> at the specified index.</returns>
      <param name="index">    The zero-based index of the <see cref="T:System.Windows.Media.Geometry" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Remove(System.Windows.Media.Geometry)">
      <summary> Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Geometry" />  from this <see cref="T:System.Windows.Media.GeometryCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" />  to remove from this <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Media.Geometry" />  at the specified index from this <see cref="T:System.Windows.Media.GeometryCollection" />. </summary>
      <param name="index">The index of the <see cref="T:System.Windows.Media.Geometry" />  to remove.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeometryCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.GeometryCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.GeometryCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.GeometryCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeometryCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GeometryCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.GeometryCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.GeometryCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Geometry" /> items in a <see cref="T:System.Windows.Media.GeometryCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.GeometryCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.GeometryCombineMode">
      <summary>Specifies the different methods by which two geometries can be combined.  </summary>
    </member>
    <member name="F:System.Windows.Media.GeometryCombineMode.Union">
      <summary>The two regions are combined by taking the union of both.  The resulting geometry is geometry <paramref name="A" /> + geometry <paramref name="B" />.</summary>
    </member>
    <member name="F:System.Windows.Media.GeometryCombineMode.Intersect">
      <summary>The two regions are combined by taking their intersection.  The new area consists of the overlapping region between the two geometries.  </summary>
    </member>
    <member name="F:System.Windows.Media.GeometryCombineMode.Xor">
      <summary>The two regions are combined by taking the area that exists in the first region but not the second and the area that exists in the second region but not the first.  The new region consists of <paramref name="(A-B)" /> + <paramref name="(B-A)" />, where <paramref name="A" /> and <paramref name="B" /> are geometries.  </summary>
    </member>
    <member name="F:System.Windows.Media.GeometryCombineMode.Exclude">
      <summary>The second region is excluded from the first.  Given two geometries, <paramref name="A" /> and <paramref name="B" />, the area of geometry <paramref name="B" /> is removed from the area of geometry <paramref name="A" />, producing a region that is <paramref name="A-B" />.</summary>
    </member>
    <member name="T:System.Windows.Media.GeometryConverter">
      <summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Geometry" />.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Geometry" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>true if object of the specified type can be converted to a <see cref="T:System.Windows.Media.Geometry" />; otherwise, false.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="sourceType">The source <see cref="T:System.Type" /> that is being queried for conversion support.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether instances of <see cref="T:System.Windows.Media.Geometry" /> can be converted to the specified type. </summary>
      <returns>true if instances of <see cref="T:System.Windows.Media.Geometry" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.Media.Geometry" /> is being evaluated to be converted to.</param>
    </member>
    <member name="M:System.Windows.Media.GeometryConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> created from converting <paramref name="value" />.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="culture">Cultural information respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">Thrown if <paramref name="value" /> is null or is not a valid type which can be converted to a <see cref="T:System.Windows.Media.Geometry" />.</exception>
    </member>
    <member name="M:System.Windows.Media.GeometryConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Media.Geometry" /> to the specified type.</summary>
      <returns>The object created from converting this <see cref="T:System.Windows.Media.Geometry" />.</returns>
      <param name="context">Context information required for conversion.</param>
      <param name="culture">Cultural information respected during conversion.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Geometry" /> to convert.</param>
      <param name="destinationType">The type to convert the <see cref="T:System.Windows.Media.Geometry" /> to.</param>
      <exception cref="T:System.NotSupportedException">Thrown if <paramref name="value" /> is null or is not a <see cref="T:System.Windows.Media.Geometry" />, or if the <paramref name="destinationType" /> cannot be converted into a <see cref="T:System.Windows.Media.Geometry" />.</exception>
    </member>
    <member name="T:System.Windows.Media.GeometryDrawing">
      <summary>Draws a <see cref="T:System.Windows.Media.Geometry" /> using the specified <see cref="P:System.Windows.Media.GeometryDrawing.Brush" /> and <see cref="P:System.Windows.Media.GeometryDrawing.Pen" />.  </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryDrawing.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryDrawing" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryDrawing.#ctor(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryDrawing" /> class with the specified <see cref="T:System.Windows.Media.Brush" />, <see cref="T:System.Windows.Media.Pen" />, and <see cref="T:System.Windows.Media.Geometry" />. </summary>
      <param name="brush">The brush used to fill this <see cref="T:System.Windows.Media.GeometryDrawing" />.</param>
      <param name="pen">The pen used to stroke this <see cref="T:System.Windows.Media.GeometryDrawing" />.</param>
      <param name="geometry">The geometry </param>
    </member>
    <member name="P:System.Windows.Media.GeometryDrawing.Brush">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.Brush" /> used to fill the interior of the shape described by this <see cref="T:System.Windows.Media.GeometryDrawing" />.   </summary>
      <returns>The brush used to fill this <see cref="T:System.Windows.Media.GeometryDrawing" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryDrawing.BrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryDrawing.Brush" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryDrawing.Brush" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryDrawing.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryDrawing" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryDrawing.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryDrawing" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryDrawing.Geometry">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Geometry" /> that describes the shape of this <see cref="T:System.Windows.Media.GeometryDrawing" />.   </summary>
      <returns>The shape described by this <see cref="T:System.Windows.Media.GeometryDrawing" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryDrawing.GeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryDrawing.Geometry" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryDrawing.Geometry" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryDrawing.Pen">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.Pen" /> used to stroke this <see cref="T:System.Windows.Media.GeometryDrawing" />.   </summary>
      <returns>The pen used to stroke this <see cref="T:System.Windows.Media.GeometryDrawing" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryDrawing.PenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryDrawing.Pen" />Â dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.GeometryDrawing.Pen" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryGroup">
      <summary>Represents a composite geometry, composed of other <see cref="T:System.Windows.Media.Geometry" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryGroup" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.Children">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.GeometryCollection" /> that contains the objects that define this <see cref="T:System.Windows.Media.GeometryGroup" />.   </summary>
      <returns>A collection containing the children of this <see cref="T:System.Windows.Media.GeometryGroup" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryGroup.Children" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryGroup.Children" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryGroup" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GeometryGroup" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.FillRule">
      <summary> Gets or sets how the intersecting areas of the objects contained in this <see cref="T:System.Windows.Media.GeometryGroup" /> are combined.   </summary>
      <returns>Specifies how the intersecting areas are combined to form the resulting area.  The default value is EvenOdd.</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GeometryGroup.FillRule" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GeometryGroup.FillRule" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.IsEmpty">
      <summary> Determines whether this <see cref="T:System.Windows.Media.GeometryGroup" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.GeometryGroup" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.MayHaveCurves">
      <summary> Determines whether this <see cref="T:System.Windows.Media.GeometryGroup" /> object may have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.GeometryGroup" /> object may have curved segments; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryHitTestParameters">
      <summary>Specifies a <see cref="T:System.Windows.Media.Geometry" /> as the parameter to be used for hit testing a visual tree.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryHitTestParameters.#ctor(System.Windows.Media.Geometry)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> class, using the specified <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <param name="geometry">The <see cref="T:System.Windows.Media.Geometry" /> value to use for the hit test geometry.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryHitTestParameters.HitGeometry">
      <summary>Gets the <see cref="T:System.Windows.Media.Geometry" /> that defines the hit test geometry for this <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> instance.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> that defines the hit test region.</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryHitTestResult">
      <summary>Returns the results of a hit test that uses a <see cref="T:System.Windows.Media.Geometry" /> as a hit test parameter.</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryHitTestResult.#ctor(System.Windows.Media.Visual,System.Windows.Media.IntersectionDetail)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GeometryHitTestResult" /> class by using a specified visual object and <see cref="T:System.Windows.Media.IntersectionDetail" /> value.</summary>
      <param name="visualHit">The visual object that is hit during a hit test.</param>
      <param name="intersectionDetail">Describes the intersection between a <see cref="T:System.Windows.Media.Geometry" /> and <paramref name="visualHit" />.</param>
    </member>
    <member name="P:System.Windows.Media.GeometryHitTestResult.IntersectionDetail">
      <summary>Gets the <see cref="T:System.Windows.Media.IntersectionDetail" /> value of the hit test.</summary>
      <returns>The <see cref="T:System.Windows.Media.IntersectionDetail" /> value of the hit test.</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryHitTestResult.VisualHit">
      <summary>Gets the visual object that is returned from a hit test result.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> object that represents the hit test result.</returns>
    </member>
    <member name="T:System.Windows.Media.GlyphRun">
      <summary>Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},System.Windows.Point,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Windows.Point},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRun" /> class by specifying properties of the class.</summary>
      <param name="glyphTypeface">A value of type <see cref="T:System.Windows.Media.GlyphTypeface" />.</param>
      <param name="bidiLevel">A value of type <see cref="T:System.Int32" />.</param>
      <param name="isSideways">A value of type <see cref="T:System.Boolean" />.</param>
      <param name="renderingEmSize">A value of type <see cref="T:System.Double" />.</param>
      <param name="glyphIndices">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="baselineOrigin">A value of type <see cref="T:System.Windows.Point" />.</param>
      <param name="advanceWidths">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="glyphOffsets">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="characters">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="deviceFontName">A value of type <see cref="T:System.String" />.</param>
      <param name="clusterMap">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="caretStops">An array of type <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <param name="language">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.AdvanceWidths">
      <summary>Gets or sets the list of <see cref="T:System.Double" /> values that represent the advance widths corresponding to the glyph indices.</summary>
      <returns>A list of <see cref="T:System.Double" /> values that represent the advance widths.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.BaselineOrigin">
      <summary>Gets or sets the baseline origin of the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> value representing the baseline origin.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.BidiLevel">
      <summary>Gets or sets the bidirectional nesting level of the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the bidirectional nesting level.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.BuildGeometry">
      <summary>Retrieves the <see cref="T:System.Windows.Media.Geometry" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> corresponding to the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.CaretStops">
      <summary>Gets or sets the list of <see cref="T:System.Boolean" /> values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A list of <see cref="T:System.Boolean" /> values that represent whether there are caret stops.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.Characters">
      <summary>Gets or sets the list of UTF16 code points that represent the Unicode content of the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A list of <see cref="T:System.Char" /> values that represent Unicode content.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.ClusterMap">
      <summary>Gets or sets the list of <see cref="T:System.UInt16" /> values that maps characters in the <see cref="T:System.Windows.Media.GlyphRun" /> to glyph indices.</summary>
      <returns>A list of <see cref="T:System.UInt16" /> values that represent mapped glyph indices.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox">
      <summary>Retrieves the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the alignment box for the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.ComputeInkBoundingBox">
      <summary>Retrieves the ink bounding box for the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the ink bounding box the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.DeviceFontName">
      <summary>Gets or sets the specific device font for which the <see cref="T:System.Windows.Media.GlyphRun" /> has been optimized.</summary>
      <returns>A <see cref="T:System.String" /> value that represents the device font.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.FontRenderingEmSize">
      <summary>Gets or sets the em size used for rendering the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the em size used for rendering.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.GetCaretCharacterHitFromDistance(System.Double,System.Boolean@)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit of the caret of the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> value that represents the character hit that is closest to the <paramref name="distance" /> value. The out parameter <paramref name="isInside" /> returns true if the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />; otherwise, false.</returns>
      <param name="distance">Offset to use for computing the caret character hit.</param>
      <param name="isInside">Determines whether the character hit is inside the <see cref="T:System.Windows.Media.GlyphRun" />.</param>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.GetDistanceFromCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Retrieves the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the specified character hit.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the offset from the leading edge of the <see cref="T:System.Windows.Media.GlyphRun" /> to the leading or trailing edge of a caret stop containing the character hit.</returns>
      <param name="characterHit">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the offset.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The character hit is outside the range specified by the <see cref="T:System.Windows.Media.GlyphRun" /> Unicode string.</exception>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.GetNextCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Retrieves the next valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the next valid caret character hit in the logical direction. If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
      <param name="characterHit">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the next hit value.</param>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.GetPreviousCaretCharacterHit(System.Windows.Media.TextFormatting.CharacterHit)">
      <summary>Retrieves the previous valid caret character hit in the logical direction in the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> that represents the previous valid caret character hit in the logical direction. If the return value is equal to <paramref name="characterHit" />, no further navigation is possible in the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
      <param name="characterHit">The <see cref="T:System.Windows.Media.TextFormatting.CharacterHit" /> to use for computing the previous hit value.</param>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.GlyphIndices">
      <summary>Gets or sets an array of <see cref="T:System.UInt16" /> values that represent the glyph indices in the rendering physical font.</summary>
      <returns>A list of <see cref="T:System.UInt16" /> values that represent the glyph indices.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.GlyphOffsets">
      <summary>Gets or sets an array of <see cref="T:System.Windows.Point" /> values representing the offsets of the glyphs in the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>A list of <see cref="T:System.Windows.Point" /> values representing the offsets of glyph.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.GlyphTypeface">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.GlyphTypeface" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.IsHitTestable">
      <summary>Gets a value indicating whether there are any valid caret character hits within the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>true if there are valid caret character hits; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.IsSideways">
      <summary>Gets or sets a value indicating whether to rotate glyphs.</summary>
      <returns>true if the glyphs are rotated; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRun.Language">
      <summary>Gets or sets the <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <returns>The <see cref="T:System.Windows.Markup.XmlLanguage" /> for the <see cref="T:System.Windows.Media.GlyphRun" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphRun.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="T:System.Windows.Media.GlyphRunDrawing">
      <summary>Represents a <see cref="T:System.Windows.Media.Drawing" /> object that renders a <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphRunDrawing.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRunDrawing" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphRunDrawing.#ctor(System.Windows.Media.Brush,System.Windows.Media.GlyphRun)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphRunDrawing" /> class by specifying the foreground brush and <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
      <param name="foregroundBrush">The foreground brush to use for the <see cref="T:System.Windows.Media.GlyphRunDrawing" />.</param>
      <param name="glyphRun">The <see cref="T:System.Windows.Media.GlyphRun" /> to use in this <see cref="T:System.Windows.Media.GlyphRunDrawing" />.</param>
    </member>
    <member name="M:System.Windows.Media.GlyphRunDrawing.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GlyphRunDrawing" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphRunDrawing.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GlyphRunDrawing" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRunDrawing.ForegroundBrush">
      <summary>Gets or sets the foreground brush of the <see cref="T:System.Windows.Media.GlyphRunDrawing" />.  </summary>
      <returns>The brush that paints the <see cref="T:System.Windows.Media.GlyphRun" />. The default value is null. </returns>
    </member>
    <member name="F:System.Windows.Media.GlyphRunDrawing.ForegroundBrushProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GlyphRunDrawing.ForegroundBrush" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GlyphRunDrawing.ForegroundBrush" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphRunDrawing.GlyphRun">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.GlyphRun" /> that describes the text to draw.  </summary>
      <returns>The <see cref="T:System.Windows.Media.GlyphRun" /> that describes the text to draw. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.GlyphRunDrawing.GlyphRunProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GlyphRunDrawing.GlyphRun" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GlyphRunDrawing.GlyphRun" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GlyphTypeface">
      <summary>Specifies a physical font face that corresponds to a font file on the disk.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class using the specified font file location.</summary>
      <param name="typefaceSource">The URIÂ that specifies the location of the font file.</param>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.#ctor(System.Uri,System.Windows.Media.StyleSimulations)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GlyphTypeface" /> class using the specified font file location and <see cref="T:System.Windows.Media.StyleSimulations" /> value.</summary>
      <param name="typefaceSource">The URI that specifies the location of the font file.</param>
      <param name="styleSimulations">One of the <see cref="T:System.Windows.Media.StyleSimulations" /> values.</param>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.AdvanceHeights">
      <summary>Gets the advance heights for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key-value pairs that represents advance height information for the glyphs. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the advance height.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.AdvanceWidths">
      <summary>Gets the advance widths for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represents advance width information for the glyphs. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the advance width.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Baseline">
      <summary>Gets the baseline value for the <see cref="T:System.Windows.Media.GlyphTypeface" />.</summary>
      <returns>A value of type <see cref="T:System.Double" /> that represents the baseline.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.BottomSideBearings">
      <summary>Gets the distance from bottom edge of the black box to the bottom end of the advance vector for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent distance information. The key is a <see cref="T:System.UInt16" /> that identifies the glyph. The value is a <see cref="T:System.Double" /> that represents the distance.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.CapsHeight">
      <summary>Gets the distance from the baseline to the top of an English capital, relative to em size, for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the distance from the baseline to the top of an English capital letter, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.CharacterToGlyphMap">
      <summary>Gets the nominal mapping of a Unicode code point to a glyph index as defined by the font 'CMAP' table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains the mapping of a Unicode code points to glyph indices for all glyphs in the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.ComputeSubset(System.Collections.Generic.ICollection{System.UInt16})">
      <summary>Returns the binary image of the font subset based on a specified collection of glyphs.</summary>
      <returns>A <see cref="T:System.Byte" /> array that represents the binary image of the font subset.</returns>
      <param name="glyphs">The collection of glyph indices to be included in the subset.</param>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Copyrights">
      <summary>Gets the copyright information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent copyright information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a copyright information string.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Descriptions">
      <summary>Gets the description information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a description information string.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.DesignerNames">
      <summary>Gets the designer information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent designer information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a designer information string.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.DesignerUrls">
      <summary>Gets the designer URL information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent designer information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that references a designer URL.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.DistancesFromHorizontalBaselineToBlackBoxBottom">
      <summary>Gets the offset value from the horizontal Western baseline to the bottom of the glyph black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent offsets for the glyphs. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the offset value.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.EmbeddingRights">
      <summary>Gets the font embedding permission for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.FontEmbeddingRight" /> values that represents the font embedding permission</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>true if <paramref name="o" /> is a <see cref="T:System.Windows.Media.GlyphTypeface" /> and is equal to the current <see cref="T:System.Windows.Media.GlyphTypeface" />; otherwise, false. </returns>
      <param name="o">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</param>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FaceNames">
      <summary>Gets the face name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent face name information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string containing the face name.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FamilyNames">
      <summary>Gets the family name for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent family name information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string containing the family name.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FontUri">
      <summary>Gets or sets the URIÂ for the <see cref="T:System.Windows.Media.GlyphTypeface" />Â object.</summary>
      <returns>The URI for the <see cref="T:System.Windows.Media.GlyphTypeface" />Â object.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.GetFontStream">
      <summary>Returns the font file stream represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> value that represents the font file.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.GetGlyphOutline(System.UInt16,System.Double,System.Double)">
      <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> value describing the path for a single glyph in the font.</summary>
      <returns>A <see cref="T:System.Windows.Media.Geometry" /> value that represents the path of the glyph.</returns>
      <param name="glyphIndex">The index of the glyph to get the outline for.</param>
      <param name="renderingEmSize">The font size in drawing surface units.</param>
      <param name="hintingEmSize">The size to hint for in points.</param>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.GlyphTypeface" />. </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.GlyphCount">
      <summary>Gets the number of glyphs for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>The total number of glyphs.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Height">
      <summary>Gets the height of the character cell relative to the em size.</summary>
      <returns>An <see cref="T:System.Double" /> value that represents the height of the character cell.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.LeftSideBearings">
      <summary>Gets the distance from the leading end of the advance vector to the left edge of the black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent distance information for the glyphs. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the distance.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.LicenseDescriptions">
      <summary>Gets the font license description information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs font license information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that describes the font license information.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.ManufacturerNames">
      <summary>Gets the font manufacturer information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs for the font manufacturer information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that describes the font manufacturer information.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.RightSideBearings">
      <summary>Gets the distance from the right edge of the black box to the right end of the advance vector for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent distance information. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the distance.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.SampleTexts">
      <summary>Gets the sample text information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs sample text information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that describes the sample text information.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Stretch">
      <summary>Gets the <see cref="T:System.Windows.FontStretch" /> value for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> value that represents the font stretch.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.StrikethroughPosition">
      <summary>Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.</summary>
      <returns>A <see cref="T:System.Double" /> that represents the strikethrough position.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.StrikethroughThickness">
      <summary>Gets a value that indicates the thickness of the strikethrough relative to the font em size.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the strikethrough thickness, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Style">
      <summary>Gets the style for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A <see cref="T:System.Windows.FontStyle" /> value that represents the style value.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.StyleSimulations">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.StyleSimulations" /> for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>One of the <see cref="T:System.Windows.Media.StyleSimulations" /> values that represents the style simulation for the font.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Symbol">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.GlyphTypeface" /> font conforms to Unicode encoding.</summary>
      <returns>true if the font conforms to Unicode encoding; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
    </member>
    <member name="M:System.Windows.Media.GlyphTypeface.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.TopSideBearings">
      <summary>Gets the distance from the top end of the vertical advance vector to the top edge of the black box for the glyphs represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent distance information. The key is a <see cref="T:System.UInt16" /> that identifies the glyph index. The value is a <see cref="T:System.Double" /> that represents the distance.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Trademarks">
      <summary>Gets the trademark notice information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent trademark notice information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that the trademark notice information.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.UnderlinePosition">
      <summary>Gets the position of the underline in the <see cref="T:System.Windows.Media.GlyphTypeface" />.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the position of the underline.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.UnderlineThickness">
      <summary>Gets the thickness of the underline relative to em size.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.VendorUrls">
      <summary>Gets the vendor URL information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent vendor URL information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that references a vendor URL.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Version">
      <summary>Gets the font face version interpreted from the font's 'NAME' table.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the version.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.VersionStrings">
      <summary>Gets the version string information for the <see cref="T:System.Windows.Media.GlyphTypeface" /> object interpreted from the font's 'NAME' table.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent version string information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that represents the version.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Weight">
      <summary>Gets the designed weight of the font represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A value of type <see cref="T:System.Windows.FontWeight" /> that represents the font weight.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Win32FaceNames">
      <summary>Gets the Win32 face name for the font represented by the  <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent Win32 face name information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that represents the Win32 face name.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Win32FamilyNames">
      <summary>Gets the Win32 family name for the font represented by the  <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains key/value pairs that represent Win32 family name information. The key is a <see cref="T:System.Globalization.CultureInfo" /> object that identifies the culture. The value is a string that represents the Win32 family name.</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.XHeight">
      <summary>Gets the Western x-height relative to em size for the font represented by the <see cref="T:System.Windows.Media.GlyphTypeface" /> object.</summary>
      <returns>A value of type <see cref="T:System.Double" />.</returns>
    </member>
    <member name="T:System.Windows.Media.GradientBrush">
      <summary> An abstract class that describes a gradient, composed of gradient stops. Classes that inherit from <see cref="T:System.Windows.Media.GradientBrush" /> describe different ways of interpreting gradient stops. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientBrush" /> class with the specified <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <param name="gradientStopCollection">The <see cref="T:System.Windows.Media.GradientStopCollection" /> used to specify the location and color of the transition points in a gradient.</param>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientBrush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientBrush" /> object, making deep copies of this object's current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.ColorInterpolationMode">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.ColorInterpolationMode" /> enumeration that specifies how the gradient's colors are interpolated.   </summary>
      <returns>Specifies how the colors in a gradient are interpolated. The default is <see cref="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation" />. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.ColorInterpolationModeProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.GradientStops">
      <summary>Gets or sets the brush's gradient stops. </summary>
      <returns>A collection of the <see cref="T:System.Windows.Media.GradientStop" /> objects associated with the brush, each of which specifies a color and an offset along the brush's gradient axis. The default is an empty <see cref="T:System.Windows.Media.GradientStopCollection" />. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.GradientStopsProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientBrush.GradientStops" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.GradientStops" />Â dependency property .</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.MappingMode">
      <summary> Gets or sets a <see cref="T:System.Windows.Media.BrushMappingMode" /> enumeration that specifies whether the gradient brush's positioning coordinates are absolute or relative to the output area.   </summary>
      <returns>A <see cref="T:System.Windows.Media.BrushMappingMode" /> value that specifies how the gradient brush's positioning coordinates are interpreted. The default is <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.MappingModeProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientBrush.MappingMode" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.MappingMode" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.SpreadMethod">
      <summary> Gets or sets the type of spread method that specifies how to draw a gradient that starts or ends inside the bounds of the object to be painted. </summary>
      <returns>The type of spread method used to paint the gradient. The default is <see cref="F:System.Windows.Media.GradientSpreadMethod.Pad" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.SpreadMethodProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.GradientSpreadMethod">
      <summary>Specifies how to draw the gradient outside a gradient brush's gradient vector or space.  </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Pad">
      <summary>Default value. The color values at the ends of the gradient vector fill the remaining space. </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Reflect">
      <summary>The gradient is repeated in the reverse direction until the space is filled. </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Repeat">
      <summary>The gradient is repeated in the original direction until the space is filled. </summary>
    </member>
    <member name="T:System.Windows.Media.GradientStop">
      <summary> Describes the location and color of a transition point in a gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStop.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStop" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStop.#ctor(System.Windows.Media.Color,System.Double)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStop" /> class with the specified color and offset. </summary>
      <param name="color">The color value of the gradient stop.</param>
      <param name="offset">The location in the gradient where the gradient stop is placed.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStop.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientStop" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStop.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientStop" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Color">
      <summary> Gets or sets the color of the gradient stop. </summary>
      <returns>The color of the gradient stop. The default value is <see cref="P:System.Windows.Media.Colors.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.ColorProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientStop.Color" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.GradientStop.Color" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Offset">
      <summary> Gets the location of the gradient stop within the gradient vector. </summary>
      <returns>The relative location of this gradient stop along the gradient vector. The default value is 0.0. </returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.OffsetProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.GradientStop.Offset" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.GradientStop.Offset" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStop.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.GradientStop.ToString">
      <summary> Creates a string representation of this object based on the current culture. </summary>
      <returns>A string representation of this object that contains its <see cref="P:System.Windows.Media.GradientStop.Color" /> and <see cref="P:System.Windows.Media.GradientStop.Offset" /> values. </returns>
    </member>
    <member name="M:System.Windows.Media.GradientStop.ToString(System.IFormatProvider)">
      <summary> Creates a string representation of this object based on the specified culture-specific formatting information. </summary>
      <returns>A string representation of this object that contains its <see cref="P:System.Windows.Media.GradientStop.Color" /> and <see cref="P:System.Windows.Media.GradientStop.Offset" /> values.</returns>
      <param name="provider">Culture specific formatting information, or null to use the current culture.</param>
    </member>
    <member name="T:System.Windows.Media.GradientStopCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.GradientStop" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStopCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.GradientStop})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStopCollection" /> class that contains the elements in the specified collection.</summary>
      <param name="collection">The collection to copy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GradientStopCollection" /> class that is initially capable of storing the specified number of items.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Media.GradientStop" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Add(System.Windows.Media.GradientStop)">
      <summary> Adds a <see cref="T:System.Windows.Media.GradientStop" /> to the gradient stop collection. </summary>
      <param name="value">The <see cref="T:System.Windows.Media.GradientStop" /> to add to the end of the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GradientStopCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Clear">
      <summary> Removes all items from the gradient stop list. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientStopCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GradientStopCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Contains(System.Windows.Media.GradientStop)">
      <summary> Determines whether the collection contains the specified <see cref="T:System.Windows.Media.GradientStop" />. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.GradientStop" /> is found in the <see cref="T:System.Windows.Media.GradientStopCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.GradientStop" /> to locate in the <see cref="T:System.Windows.Media.GradientStopCollection" />. </param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.CopyTo(System.Windows.Media.GradientStop[],System.Int32)">
      <summary> Copies the entire <see cref="T:System.Windows.Media.GradientStopCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array. </summary>
      <param name="array">The one-dimensional array that is the destination of the items copied from the <see cref="T:System.Windows.Media.GradientStopCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.GradientStopCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.Count">
      <summary> Gets the number of items contained in a <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <returns>The number of items in a <see cref="T:System.Windows.Media.GradientStopCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.GetEnumerator">
      <summary>  Returns an enumerator that can iterate through the collection.  </summary>
      <returns>An <see cref="T:System.Windows.Media.GradientStopCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.IndexOf(System.Windows.Media.GradientStop)">
      <summary>Returns the zero-based index of the specified <see cref="T:System.Windows.Media.GradientStop" />. </summary>
      <returns>The index if the object was found; otherwise, -1.</returns>
      <param name="value">The item to search for.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Insert(System.Int32,System.Windows.Media.GradientStop)">
      <summary> Inserts a <see cref="T:System.Windows.Media.GradientStop" /> at the specified position in the gradient stop list. </summary>
      <param name="index">The zero-based index at which to insert the object.</param>
      <param name="value">The <see cref="T:System.Windows.Media.GradientStop" /> to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.GradientStopCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GradientStopCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.GradientStop" /> at the specified zero-based index. </summary>
      <returns>The <see cref="T:System.Windows.Media.GradientStop" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.GradientStop" /> to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.GradientStopCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GradientStopCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Parse(System.String)">
      <summary> Converts a <see cref="T:System.String" /> representation of a GradientStopCollection into the equivalent <see cref="T:System.Windows.Media.GradientStopCollection" />.      </summary>
      <returns>Returns the equivalent <see cref="T:System.Windows.Media.GradientStopCollection" />. </returns>
      <param name="source">The <see cref="T:System.String" /> representation of the GradientStopCollection. </param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Remove(System.Windows.Media.GradientStop)">
      <summary> Removes the first occurrence of the specified <see cref="T:System.Windows.Media.GradientStop" />  from this <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.GradientStopCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.GradientStop" />  to remove from this <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.GradientStopCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Media.GradientStop" />  at the specified index from this <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <param name="index">The index of the <see cref="T:System.Windows.Media.GradientStop" />  to remove.</param>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.GradientStopCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.GradientStopCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.GradientStopCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GradientStopCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.GradientStopCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.GradientStopCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.ToString">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.GradientStopCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.ToString(System.IFormatProvider)">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the values of this <see cref="T:System.Windows.Media.GradientStopCollection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.GradientStopCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.GradientStop" /> items in a <see cref="T:System.Windows.Media.GradientStopCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.GradientStopCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.GuidelineSet">
      <summary>Represents a collection of guide lines that can assist in adjusting rendered figures to a device pixel grid.</summary>
    </member>
    <member name="M:System.Windows.Media.GuidelineSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GuidelineSet" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.GuidelineSet.#ctor(System.Double[],System.Double[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.GuidelineSet" /> class with the specified <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesX" /> and <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesY" /> values.</summary>
      <param name="guidelinesX">The value of the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesX" /> property.</param>
      <param name="guidelinesY">The value of the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesY" /> property.</param>
    </member>
    <member name="M:System.Windows.Media.GuidelineSet.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GuidelineSet" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.GuidelineSet.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.GuidelineSet" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.GuidelineSet.GuidelinesX">
      <summary>Gets or sets a series of coordinate values that represent guide lines on the X-axis.  </summary>
      <returns>A <see cref="T:System.Windows.Media.DoubleCollection" /> of values that represent guide lines on the X-axis.</returns>
    </member>
    <member name="F:System.Windows.Media.GuidelineSet.GuidelinesXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesX" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.GuidelineSet.GuidelinesY">
      <summary>Gets or sets a series of coordinate values that represent guide lines on the Y-axis.  </summary>
      <returns>A <see cref="T:System.Windows.Media.DoubleCollection" /> of values that represent guide lines on the Y-axis.</returns>
    </member>
    <member name="F:System.Windows.Media.GuidelineSet.GuidelinesYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesY" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.GuidelineSet.GuidelinesY" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.HitTestFilterBehavior">
      <summary>Specifies the return behavior of a hit test in a hit test filter callback method.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestFilterBehavior.ContinueSkipChildren">
      <summary>Hit test against the current <see cref="T:System.Windows.Media.Visual" />, but not its descendants.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren">
      <summary>Do not hit test against the current <see cref="T:System.Windows.Media.Visual" /> or its descendants.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelf">
      <summary>Do not hit test against the current <see cref="T:System.Windows.Media.Visual" />, but hit test against its descendants.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestFilterBehavior.Continue">
      <summary>Hit test against the current <see cref="T:System.Windows.Media.Visual" /> and its descendants.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestFilterBehavior.Stop">
      <summary>Stop hit testing at the current <see cref="T:System.Windows.Media.Visual" />.</summary>
    </member>
    <member name="T:System.Windows.Media.HitTestFilterCallback">
      <summary>Represents the callback method that specifies parts of the visual tree to omit from hit test processing</summary>
      <returns>A <see cref="T:System.Windows.Media.HitTestFilterBehavior" /> that represents the action resulting from the hit test.</returns>
      <param name="potentialHitTestTarget">The visual to hit test. </param>
    </member>
    <member name="T:System.Windows.Media.HitTestParameters">
      <summary>Defines parameters for hit testing. Classes derived from this common base class that can be used for practical hit testing include <see cref="T:System.Windows.Media.PointHitTestParameters" /> and <see cref="T:System.Windows.Media.GeometryHitTestParameters" />.</summary>
    </member>
    <member name="T:System.Windows.Media.HitTestResult">
      <summary>Provides the base class for several derived classes that represents the return value from a hit test.</summary>
    </member>
    <member name="P:System.Windows.Media.HitTestResult.VisualHit">
      <summary>Gets the visual object that was hit.</summary>
      <returns>A <see cref="T:System.Windows.DependencyObject" /> value that represents the visual object that was hit.</returns>
    </member>
    <member name="T:System.Windows.Media.HitTestResultBehavior">
      <summary>Determines whether to continue the enumeration of any remaining visual objects during a hit test.</summary>
    </member>
    <member name="F:System.Windows.Media.HitTestResultBehavior.Stop">
      <summary>Stop any further hit testing and return from the callback. </summary>
    </member>
    <member name="F:System.Windows.Media.HitTestResultBehavior.Continue">
      <summary>Continue hit testing against the next visual in the visual tree hierarchy.</summary>
    </member>
    <member name="T:System.Windows.Media.HitTestResultCallback">
      <summary>Represents a callback that is used to customize hit testing. WPF invokes the <see cref="T:System.Windows.Media.HitTestResultCallback" /> to report hit test intersections to the user.</summary>
      <returns>A <see cref="T:System.Windows.Media.HitTestFilterBehavior" /> that represents the action resulting from the hit test.</returns>
      <param name="result">The <see cref="T:System.Windows.Media.HitTestResult" /> value that represents a visual object that is returned from a hit test.</param>
    </member>
    <member name="T:System.Windows.Media.HostVisual">
      <summary>Represents a <see cref="T:System.Windows.Media.Visual" /> object that can be connected anywhere to a parent visual tree.</summary>
    </member>
    <member name="M:System.Windows.Media.HostVisual.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.HostVisual" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
      <summary>Implements <see cref="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestParameters" />).</summary>
      <returns>Returns a value of type <see cref="T:System.Windows.Media.GeometryHitTestResult" />. The <see cref="P:System.Windows.Media.GeometryHitTestResult.VisualHit" /> property contains the visual that was hit.</returns>
      <param name="hitTestParameters">A value of type <see cref="T:System.Windows.Media.GeometryHitTestParameters" />.</param>
    </member>
    <member name="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Implements <see cref="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base hit testing behavior (returning <see cref="T:System.Windows.Media.PointHitTestParameters" />).</summary>
      <returns>Returns a value of type <see cref="T:System.Windows.Media.HitTestResult" />. The <see cref="P:System.Windows.Media.HitTestResult.VisualHit" /> property contains the visual object that was hit.</returns>
      <param name="hitTestParameters">A value of type <see cref="T:System.Windows.Media.PointHitTestParameters" />.</param>
    </member>
    <member name="T:System.Windows.Media.ImageBrush">
      <summary>Paints an area with an image. </summary>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageBrush" /> class with no content. </summary>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.#ctor(System.Windows.Media.ImageSource)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageBrush" /> class that paints an area with the specified image. </summary>
      <param name="image">The image to display.</param>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageBrush" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageBrush" /> object, making deep copies of this object's current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.ImageBrush.ImageSource">
      <summary>Gets or sets the image displayed by this <see cref="T:System.Windows.Media.ImageBrush" />.</summary>
      <returns>The image displayed by this <see cref="T:System.Windows.Media.ImageBrush" />.</returns>
    </member>
    <member name="F:System.Windows.Media.ImageBrush.ImageSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ImageBrush.ImageSource" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.ImageBrush.ImageSource" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.ImageDrawing">
      <summary> Draws an image within a region defined by a <see cref="T:System.Windows.Rect" />. </summary>
    </member>
    <member name="M:System.Windows.Media.ImageDrawing.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.ImageDrawing" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageDrawing.#ctor(System.Windows.Media.ImageSource,System.Windows.Rect)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.ImageDrawing" /> class that has the specified target <see cref="P:System.Windows.Media.ImageDrawing.ImageSource" /> and <see cref="P:System.Windows.Media.ImageDrawing.Rect" />. </summary>
      <param name="imageSource">Source of the image that is drawn.</param>
      <param name="rect">Defines the rectangular area in which the image is drawn.</param>
    </member>
    <member name="M:System.Windows.Media.ImageDrawing.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageDrawing" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.ImageDrawing.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageDrawing" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.ImageDrawing.ImageSource">
      <summary> Gets or sets the source of the image </summary>
      <returns>The source of the image. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.ImageDrawing.ImageSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ImageDrawing.ImageSource" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ImageDrawing.ImageSource" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ImageDrawing.Rect">
      <summary> Gets or sets the region in which the image is drawn. </summary>
      <returns>The region in which the image is drawn. The default is Empty.</returns>
    </member>
    <member name="F:System.Windows.Media.ImageDrawing.RectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ImageDrawing.Rect" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ImageDrawing.Rect" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.ImageMetadata">
      <summary>Defines a base class for all metadata operations on imaging related APIs.Â This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageMetadata.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageMetadata" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="T:System.Windows.Media.ImageSource">
      <summary>Represents a object type that has a width, height, and <see cref="T:System.Windows.Media.ImageMetadata" /> such as a  <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> and a <see cref="T:System.Windows.Media.DrawingImage" />. This is an abstract class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSource.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageSource" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.ImageSource.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.ImageSource" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.ImageSource.Height">
      <summary>When overridden in a derived class, gets the height of the image in measure units (96ths of an inch). </summary>
      <returns>The height of the image.</returns>
    </member>
    <member name="P:System.Windows.Media.ImageSource.Metadata">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Windows.Media.ImageMetadata" /> associated with the image.</summary>
      <returns>The metadata associated with the image.</returns>
    </member>
    <member name="M:System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)">
      <summary>Converts pixels to DIPs in a way that is consistent with MIL.</summary>
      <returns>The natural size of the bitmap in MIL Device Independent Pixels (DIPs, or 1/96").</returns>
      <param name="dpi">Width of the bitmap, in dots per inch. </param>
      <param name="pixels">Width of the bitmap, in pixels.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.ImageSource.ToString">
      <summary> Creates a string representation of this object based on the current culture. </summary>
      <returns>A string representation of this object.</returns>
    </member>
    <member name="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this object based on the <see cref="T:System.IFormatProvider" /> passed in. If the provider is null, the <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> is used. </summary>
      <returns>A string representation of this object.</returns>
      <param name="provider">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.  </param>
    </member>
    <member name="P:System.Windows.Media.ImageSource.Width">
      <summary>When overridden in a derived class, gets the width of the image in measure units (96ths of an inch). </summary>
      <returns>The </returns>
    </member>
    <member name="T:System.Windows.Media.ImageSourceConverter">
      <summary>Converts a <see cref="T:System.Windows.Media.ImageSource" /> to and from other data types. </summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the converter can convert an object of the given type to an instance of <see cref="T:System.Windows.Media.ImageSource" />. </summary>
      <returns>true if the converter can convert the provided type to an instance of <see cref="T:System.Windows.Media.ImageSource" />; otherwise, false.</returns>
      <param name="context">Type context information used to evaluate conversion.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.Media.ImageSource" /> can be converted to a different type. </summary>
      <returns>true if the converter can convert this instance of <see cref="T:System.Windows.Media.ImageSource" />; otherwise, false.</returns>
      <param name="context">Type context information used to evaluate conversion.</param>
      <param name="destinationType">The desired type to evaluate the conversion to.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="context" /> instance is not an <see cref="T:System.Windows.Media.ImageSource" />.</exception>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.ImageSource" />.  </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.ImageSource" />.</returns>
      <param name="context">Type context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is an invalid type.</exception>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.ImageSource" /> to a specified type.</summary>
      <returns>A new instance of the <paramref name="destinationType" />.</returns>
      <param name="context">Context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Media.ImageSource" /> to convert.</param>
      <param name="destinationType">Type being evaluated for conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a valid type.-or-<paramref name="context" /> instance cannot serialize to a string.</exception>
    </member>
    <member name="T:System.Windows.Media.ImageSourceValueSerializer">
      <summary>Converts instances of <see cref="T:System.String" /> to and from instances of <see cref="T:System.Windows.Media.ImageSource" />.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceValueSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ImageSourceValueSerializer" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if a <see cref="T:System.String" /> can be converted to an instance of <see cref="T:System.Windows.Media.ImageSource" />.</summary>
      <returns>true if value can be converted; otherwise, false.</returns>
      <param name="value">
        <see cref="T:System.String" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determines if an instance of <see cref="T:System.Windows.Media.ImageSource" /> can be converted to a <see cref="T:System.String" />.</summary>
      <returns>true if <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, false.</returns>
      <param name="value">Instance of <see cref="T:System.Windows.Media.ImageSource" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Windows.Media.ImageSource" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.ImageSource" /> based on the supplied <paramref name="value" />.</returns>
      <param name="value">String value to convert into an <see cref="T:System.Windows.Media.ImageSource" />.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Converts an instance of <see cref="T:System.Windows.Media.ImageSource" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.Windows.Media.ImageSource" /> object.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.ImageSource" /> to evaluate for conversion.</param>
      <param name="context">Context information used for conversion.</param>
    </member>
    <member name="T:System.Windows.Media.Int32Collection">
      <summary>Represents a collection of <see cref="T:System.Int32" /> values. </summary>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Int32Collection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Int32Collection" /> class with the specified collection of <see cref="T:System.Int32" /> values.</summary>
      <param name="collection">The collection of <see cref="T:System.Int32" /> values that make up the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Int32Collection" /> class with the specified capacity, or the number of <see cref="T:System.Int32" /> values the collection is initially capable of storing.</summary>
      <param name="capacity">The number of <see cref="T:System.Int32" /> values that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Add(System.Int32)">
      <summary>Adds an <see cref="T:System.Int32" /> to the end of the collection.</summary>
      <param name="value">The <see cref="T:System.Int32" /> to add to the end of the collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.Int32Collection" /> is read-only.- or -The <see cref="T:System.Windows.Media.Int32Collection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Clear">
      <summary>Removes all <see cref="T:System.Int32" /> values from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Int32Collection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Int32Collection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Contains(System.Int32)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Int32" />.</summary>
      <returns>true if the <see cref="T:System.Int32" /> is found in the <see cref="T:System.Windows.Media.Int32Collection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Int32" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.CopyTo(System.Int32[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Int32" /> values in a collection to a specified array.</summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.Int32Collection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.Count">
      <summary>Gets the number of <see cref="T:System.Int32" /> values contained in the <see cref="T:System.Windows.Media.Int32Collection" />.</summary>
      <returns>The number of <see cref="T:System.Int32" /> values contained in the <see cref="T:System.Windows.Media.Int32Collection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Windows.Media.Int32Collection.Enumerator" /> that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Windows.Media.Int32Collection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.IndexOf(System.Int32)">
      <summary>Searches for the specified <see cref="T:System.Int32" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Int32" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Insert(System.Int32,System.Int32)">
      <summary>Inserts an <see cref="T:System.Int32" /> into a specific location within the collection.</summary>
      <param name="index">The index position at which the <see cref="T:System.Int32" /> is inserted.</param>
      <param name="value">The <see cref="T:System.Int32" /> to insert in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.Int32Collection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.Int32Collection" /> is read-only.- or -The <see cref="T:System.Windows.Media.Int32Collection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Int32" /> at the specified index position.</summary>
      <returns>The <see cref="T:System.Int32" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Int32" /> to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than the <see cref="P:System.Windows.Media.Int32Collection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Parse(System.String)">
      <summary>      Returns an instance of <see cref="T:System.Windows.Media.Int32Collection" /> created from a specified string.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.Int32Collection" /> created from <paramref name="source" />.</returns>
      <param name="source">The string that is converted to an <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Remove(System.Int32)">
      <summary>Removes an <see cref="T:System.Int32" /> from the collection.</summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.Int32Collection" />; otherwise, false.</returns>
      <param name="value">Identifies the <see cref="T:System.Int32" /> to remove from the collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.Int32Collection" /> is read-only.- or -The <see cref="T:System.Windows.Media.Int32Collection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Int32" /> at the specified index position from the collection.</summary>
      <param name="index">Index position of the <see cref="T:System.Int32" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Int32Collection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.Int32Collection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Int32Collection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.Int32Collection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Int32Collection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.Int32Collection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.Int32Collection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.ToString">
      <summary>Converts the current value of a <see cref="T:System.Windows.Media.Int32Collection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Int32Collection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.ToString(System.IFormatProvider)">
      <summary>Converts the current value of a <see cref="T:System.Windows.Media.Int32Collection" /> to a <see cref="T:System.String" /> using the specified culture-specific formatting information.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.Int32Collection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.Int32Collection.Enumerator">
      <summary>Enumerates <see cref="T:System.Int32" /> items in a <see cref="T:System.Windows.Media.Int32Collection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.Int32Collection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.Int32Collection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Int32CollectionConverter">
      <summary>Converts an <see cref="T:System.Windows.Media.Int32Collection" /> to and from other data types.</summary>
    </member>
    <member name="M:System.Windows.Media.Int32CollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Int32Collection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Int32CollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if the converter can convert an object of the given type to an instance of <see cref="T:System.Windows.Media.Int32Collection" />.</summary>
      <returns>true if the converter can convert the provided type to an instance of <see cref="T:System.Windows.Media.Int32Collection" />; otherwise, false.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.Int32CollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines if the converter can convert an <see cref="T:System.Windows.Media.Int32Collection" /> to a given data type.</summary>
      <returns>true if an <see cref="T:System.Windows.Media.Int32Collection" /> can convert to <paramref name="destinationType" />; otherwise false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="destinationType">The desired type to evaluate the conversion to.</param>
    </member>
    <member name="M:System.Windows.Media.Int32CollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an <see cref="T:System.Windows.Media.Int32Collection" /> instance.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Int32Collection" />.</returns>
      <param name="context">Context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or the type invalid.</exception>
    </member>
    <member name="M:System.Windows.Media.Int32CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.Int32Collection" /> to a specified type.</summary>
      <returns>A new instance of the <paramref name="destinationType" />.</returns>
      <param name="context">Context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Media.Int32Collection" /> to convert.</param>
      <param name="destinationType">Type being evaluated for conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or the type invalid.</exception>
    </member>
    <member name="T:System.Windows.Media.IntersectionDetail">
      <summary>Provides information about the intersection between the geometries in the <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> and the visual which was hit.</summary>
    </member>
    <member name="F:System.Windows.Media.IntersectionDetail.NotCalculated">
      <summary>The <see cref="T:System.Windows.Media.IntersectionDetail" /> value is not calculated.</summary>
    </member>
    <member name="F:System.Windows.Media.IntersectionDetail.Empty">
      <summary>The <see cref="T:System.Windows.Media.Geometry" /> hit test parameter and the target visual, or geometry, do not intersect.</summary>
    </member>
    <member name="F:System.Windows.Media.IntersectionDetail.FullyInside">
      <summary>The target visual, or geometry, is fully inside the <see cref="T:System.Windows.Media.Geometry" /> hit test parameter.</summary>
    </member>
    <member name="F:System.Windows.Media.IntersectionDetail.FullyContains">
      <summary>The <see cref="T:System.Windows.Media.Geometry" /> hit test parameter is fully contained within the boundary of the target visual or geometry.</summary>
    </member>
    <member name="F:System.Windows.Media.IntersectionDetail.Intersects">
      <summary>The <see cref="T:System.Windows.Media.Geometry" /> hit test parameter and the target visual, or geometry, intersect. This means that the two elements overlap, but neither element contains the other.</summary>
    </member>
    <member name="T:System.Windows.Media.InvalidWmpVersionException">
      <summary>The exception that is thrown when the installed Microsoft Windows Media Player version is not supported.Â </summary>
    </member>
    <member name="M:System.Windows.Media.InvalidWmpVersionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.InvalidWmpVersionException" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.InvalidWmpVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.InvalidWmpVersionException" /> class with serialization information.</summary>
      <param name="info">Serialization information about the object.</param>
      <param name="context">Context information about the serialized stream.</param>
    </member>
    <member name="M:System.Windows.Media.InvalidWmpVersionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.InvalidWmpVersionException" /> class with the given error message.</summary>
      <param name="message">The error message used to initialize the exception.</param>
    </member>
    <member name="M:System.Windows.Media.InvalidWmpVersionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.InvalidWmpVersionException" /> class with the given error message and a reference to the inner exception that caused this exception.</summary>
      <param name="message">The description of the error.</param>
      <param name="innerException">The inner exception that caused this exception.</param>
    </member>
    <member name="T:System.Windows.Media.LanguageSpecificStringDictionary">
      <summary>Represents a dictionary of strings that are used to represent the name of an object in different languages.</summary>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Add(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String})">
      <summary>Adds a key/value pair to the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</summary>
      <param name="item">An array of key/value pairs. The key is an object of type <see cref="T:System.Windows.Markup.XmlLanguage" />. The value is an associated string.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Add(System.Windows.Markup.XmlLanguage,System.String)">
      <summary>Adds a language and associated string to the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</summary>
      <param name="key">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
      <param name="value">A value of type <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String})">
      <summary>Determines whether the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> contains the key/value pair.</summary>
      <returns>true if the collection contains the key/value pair; otherwise, false.</returns>
      <param name="item">The key/pair to locate. The key is an object of type <see cref="T:System.Windows.Markup.XmlLanguage" />. The value is an associated string.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ContainsKey(System.Windows.Markup.XmlLanguage)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> contains the specified language.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> contains <paramref name="key" />; otherwise, false.</returns>
      <param name="key">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> to an array, starting at a specific array index.</summary>
      <param name="array">The destination array to copy to.</param>
      <param name="index">The index within the source <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> to start copying from.</param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.Count">
      <summary>Gets the number of strings in the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</summary>
      <returns>A value of type <see cref="T:System.Int32" /> representing the total number of strings.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that iterates through the collection.</returns>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> is read-only.</summary>
      <returns>true if the dictionary is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.Item(System.Windows.Markup.XmlLanguage)">
      <summary>Gets or sets the string associated with the specified language.</summary>
      <returns>A value of type <see cref="T:System.String" />.</returns>
      <param name="key">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.Keys">
      <summary>Gets a collection containing the keys, or <see cref="T:System.Windows.Markup.XmlLanguage" /> objects, in the dictionary.</summary>
      <returns>A collection of objects of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String})">
      <summary>Removes the element with the specified key/value pair from the collection.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This method also returns false if <paramref name="item" /> was not found in the original collection.</returns>
      <param name="item">The key/value pair of the element to remove.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Remove(System.Windows.Markup.XmlLanguage)">
      <summary>Removes the element from <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> based on the specified key value.</summary>
      <returns>true if the element referenced by <paramref name="key" /> was successfully deleted; otherwise false.</returns>
      <param name="key">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />; otherwise, false.</returns>
      <param name="key">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</param>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Item(System.Object)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
      <returns>The element with the specified key.</returns>
      <param name="key">The key of the element to get or set. </param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Keys">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Keys" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IDictionary.Remove(System.Object)" />.</summary>
      <param name="key">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />.</param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Values">
      <summary>For a description of this member, see <see cref="P:System.Collections.IDictionary.Values" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.TryGetValue(System.Windows.Markup.XmlLanguage,System.String@)">
      <summary>Retrieves the string value in the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> for a specified key, or language.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> contains an entry for <paramref name="key" />; otherwise false.</returns>
      <param name="key">A value of type <see cref="T:System.Windows.Markup.XmlLanguage" />.</param>
      <param name="value">A value of type <see cref="T:System.String" />.</param>
    </member>
    <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.Values">
      <summary>Gets a collection containing the values, or strings, in the dictionary.</summary>
      <returns>A collection containing the strings in the dictionary.</returns>
    </member>
    <member name="T:System.Windows.Media.LinearGradientBrush">
      <summary>Paints an area with a linear gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified start <see cref="T:System.Windows.Media.Color" />, end <see cref="T:System.Windows.Media.Color" />, and angle. </summary>
      <param name="startColor">The <see cref="T:System.Windows.Media.Color" /> at offset 0.0.</param>
      <param name="endColor">The <see cref="T:System.Windows.Media.Color" /> at offset 1.0.  </param>
      <param name="angle">A <see cref="T:System.Double" /> that represents the angle, in degrees, of the gradient. A value of 0.0 creates a horizontal gradient, and a value of 90.0 creates a vertical gradient.</param>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified start <see cref="T:System.Windows.Media.Color" />, end <see cref="T:System.Windows.Media.Color" />, <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" />, and <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" />. </summary>
      <param name="startColor">The <see cref="T:System.Windows.Media.Color" /> at offset 0.0.</param>
      <param name="endColor">The <see cref="T:System.Windows.Media.Color" /> at offset 1.0. </param>
      <param name="startPoint">The <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> of the gradient.</param>
      <param name="endPoint">The <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> of the gradient.</param>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified gradient stops. </summary>
      <param name="gradientStopCollection">The <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> to set on this brush.</param>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified <see cref="T:System.Windows.Media.GradientStopCollection" /> and angle. </summary>
      <param name="gradientStopCollection">The <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> to set on this brush.</param>
      <param name="angle">A <see cref="T:System.Double" /> that represents the angle, in degrees, of the gradient. A value of 0.0 creates a horizontal gradient, and a value of 90.0 creates a vertical gradient.</param>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection,System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LinearGradientBrush" /> class that has the specified gradient stops, <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" />, and <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" />. </summary>
      <param name="gradientStopCollection">The <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> to set on this brush.</param>
      <param name="startPoint">The <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> of the gradient.</param>
      <param name="endPoint">The <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> of the gradient.</param>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.LinearGradientBrush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.LinearGradientBrush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.EndPoint">
      <summary>Gets or sets the ending two-dimensional coordinates of the linear gradient.  </summary>
      <returns>The ending two-dimensional coordinates of the linear gradient. The default is (1,1).  </returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.EndPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" />Â dependency property.  </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.StartPoint">
      <summary>Gets or sets the starting two-dimensional coordinates of the linear gradient.  </summary>
      <returns>The starting two-dimensional coordinates for the linear gradient. The default is (0, 0). </returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.StartPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.LineGeometry">
      <summary>Represents the geometry of a line. </summary>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineGeometry" /> class that has no length. </summary>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineGeometry" /> class that has the specified start and end points.  </summary>
      <param name="startPoint">The start point of the line. </param>
      <param name="endPoint">The end point of the line. </param>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineGeometry" /> class. </summary>
      <param name="startPoint">The start point. </param>
      <param name="endPoint">The end point. </param>
      <param name="transform">The transformation to apply to the line.</param>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.Bounds">
      <summary>Gets the axis-aligned bounding box of this <see cref="T:System.Windows.Media.LineGeometry" />. </summary>
      <returns>The axis-aligned bounding box of this <see cref="T:System.Windows.Media.LineGeometry" />. </returns>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.LineGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.LineGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.EndPoint">
      <summary>Gets or sets the end point of a line.  </summary>
      <returns>The end point of the line. The default is (0,0). </returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.EndPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineGeometry.EndPoint" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineGeometry.EndPoint" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)">
      <summary>Gets the area of the filled region of this <see cref="T:System.Windows.Media.LineGeometry" /> object.  </summary>
      <returns>The area of the filled region of this <see cref="T:System.Windows.Media.LineGeometry" /> object, which is always 0 because a line contains no area.</returns>
      <param name="tolerance">The computational tolerance of error.</param>
      <param name="type">The specified type for interpreting the error tolerance.</param>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.IsEmpty">
      <summary>Determines whether this <see cref="T:System.Windows.Media.LineGeometry" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.LineGeometry" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.MayHaveCurves">
      <summary>Determines whether this <see cref="T:System.Windows.Media.LineGeometry" /> object can have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.LineGeometry" /> object can have curved segments; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.StartPoint">
      <summary>Gets or sets the start point of the line.  </summary>
      <returns>The start point of the line. The default is (0,0).</returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.StartPointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineGeometry.StartPoint" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineGeometry.StartPoint" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.LineSegment">
      <summary>Creates a line between two points in a <see cref="T:System.Windows.Media.PathFigure" />.  </summary>
    </member>
    <member name="M:System.Windows.Media.LineSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.LineSegment.#ctor(System.Windows.Point,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.LineSegment" /> class that has the specified end <see cref="T:System.Windows.Point" /> and Boolean that determines whether this <see cref="T:System.Windows.Media.LineSegment" /> is stroked. </summary>
      <param name="point">The end point of this <see cref="T:System.Windows.Media.LineSegment" />.</param>
      <param name="isStroked">true to stroke this <see cref="T:System.Windows.Media.LineSegment" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.LineSegment.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.LineSegment" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.LineSegment.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.LineSegment" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.LineSegment.Point">
      <summary>Gets or sets the end point of the line segment.  </summary>
      <returns>The end point of the line segment.</returns>
    </member>
    <member name="F:System.Windows.Media.LineSegment.PointProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.LineSegment.Point" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.LineSegment.Point" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixTransform">
      <summary>Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a 2-DÂ plane.Â </summary>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MatrixTransform" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MatrixTransform" /> class with the specified transformation matrix values. </summary>
      <param name="m11">The value at position (1, 1) in the transformation matrix.</param>
      <param name="m12">The value at position (1, 2) in the transformation matrix.</param>
      <param name="m21">The value at position (2, 1) in the transformation matrix.</param>
      <param name="m22">The value at position (2, 2) in the transformation matrix.</param>
      <param name="offsetX">The X-axis translation factor, which is located at position (3,1) in the transformation matrix.</param>
      <param name="offsetY">The Y-axis translation factor, which is located at position (3,2) in the transformation matrix.</param>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor(System.Windows.Media.Matrix)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MatrixTransform" /> class with the specified transformation matrix. </summary>
      <param name="matrix">The transformation matrix of the new <see cref="T:System.Windows.Media.MatrixTransform" />.</param>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.MatrixTransform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.MatrixTransform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.MatrixTransform.Matrix">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Matrix" /> structure that defines this transformation.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Matrix" /> structure that defines this transformation. The default value is an identity <see cref="T:System.Windows.Media.Matrix" />. An identity matrix has a value of 1 in coefficients [1,1], [2,2], and [3,3]; and a value of 0 in the rest of the coefficients.</returns>
    </member>
    <member name="F:System.Windows.Media.MatrixTransform.MatrixProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.MatrixTransform.Matrix" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.MatrixTransform.Matrix" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.MatrixTransform.Value">
      <summary>Gets the <see cref="P:System.Windows.Media.MatrixTransform.Matrix" /> that represents this <see cref="T:System.Windows.Media.MatrixTransform" />.</summary>
      <returns>The matrix that represents this <see cref="T:System.Windows.Media.MatrixTransform" />.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaClock">
      <summary>Maintains the timing state for media through a <see cref="T:System.Windows.Media.MediaTimeline" />.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaClock.#ctor(System.Windows.Media.MediaTimeline)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.MediaClock" /> class. </summary>
      <param name="media">The timeline to use as a template for the media clock.</param>
    </member>
    <member name="M:System.Windows.Media.MediaClock.DiscontinuousTimeMovement">
      <summary>Invoked when movement is discontinues.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaClock.GetCanSlip">
      <summary>Retrieves a value that indicates whether the media clock can slip.</summary>
      <returns>true if the media clock can slip; otherwise false.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaClock.GetCurrentTimeCore">
      <summary>Retrieves a value that identifies the actual media time. This value can be used for slip synchronization.</summary>
      <returns>The actual media time.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaClock.SpeedChanged">
      <summary>Invoked when the clock speed has changed.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaClock.Stopped">
      <summary>Invoked when the clock is stopped.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaClock.Timeline">
      <summary>Gets the <see cref="T:System.Windows.Media.MediaTimeline" /> that describes the controlling behavior of the clock. </summary>
      <returns>The <see cref="T:System.Windows.Media.MediaTimeline" /> that describes the controlling behavior of the clock.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaPlayer">
      <summary>Provides media playback for drawings. </summary>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaPlayer" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.Balance">
      <summary>Gets or sets the balance between the left and right speaker volumes.</summary>
      <returns>The ratio of volume across the left and right speakers in a range between -1 and 1. The default is 0.</returns>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.BufferingEnded">
      <summary>Occurs when buffering has finished.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.BufferingProgress">
      <summary>Gets the percentage of buffering completed for streaming content.</summary>
      <returns>The percentage of buffering completed for streaming content represented in a value between 0 and 1.</returns>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.BufferingStarted">
      <summary>Occurs when buffering has started.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.CanPause">
      <summary>Gets a value indicating whether the media can be paused.</summary>
      <returns>true if the media can be paused; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.Clock">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.MediaClock" /> associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</summary>
      <returns>The clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played. The default is null.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.Close">
      <summary>Closes the underlying media. </summary>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.CreateInstanceCore">
      <summary>Creates a new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</summary>
      <returns>A new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.DownloadProgress">
      <summary>Gets the percentage of download progress for content located at a remote server.</summary>
      <returns>The percentage of download progress for content located at a remote server represented by a value between 0 and 1. The default is 0.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.MediaPlayer" /> object to clone and freeze.</param>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.HasAudio">
      <summary>Gets a value that indicating whether the media has audio output.</summary>
      <returns>true if the media has audio output; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.HasVideo">
      <summary>Gets a value that indicates whether the media has video output.</summary>
      <returns>true if the media has video output; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.IsBuffering">
      <summary>Gets a value that indicates whether the media is buffering.</summary>
      <returns>true if the media is buffering; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.IsMuted">
      <summary>Gets a value that indicates whether the media is muted.</summary>
      <returns>true if the media is muted; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.MediaEnded">
      <summary>Occurs when the media has finished playback.</summary>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.MediaFailed">
      <summary>Occurs when an error is encountered </summary>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.MediaOpened">
      <summary>Occurs when the media is opened.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.NaturalDuration">
      <summary>Gets the natural duration of the media.</summary>
      <returns>The natural duration of the media. The default is <see cref="P:System.Windows.Duration.Automatic" />.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight">
      <summary>Gets the pixel height of the video. </summary>
      <returns>The pixel height of the video. </returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth">
      <summary>Gets the pixel width of the video.</summary>
      <returns>The pixel width of the video.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.Open(System.Uri)">
      <summary>Opens the given <see cref="T:System.Uri" /> for media playback.</summary>
      <param name="source">The media source <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.Pause">
      <summary>Pauses media playback.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.Play">
      <summary>Plays media from the current <see cref="P:System.Windows.Media.MediaPlayer.Position" />.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.Position">
      <summary>Gets or sets the current position of the media.</summary>
      <returns>The current position of the media.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.ReadPreamble">
      <summary>Ensures that the MediaPlayer is being accessed from a valid thread.</summary>
    </member>
    <member name="E:System.Windows.Media.MediaPlayer.ScriptCommand">
      <summary>Occurs when a script command has been encountered within the media.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled">
      <summary>Gets or sets a value that indicates whether scrubbing is enabled.</summary>
      <returns>true if scrubbing is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.Source">
      <summary>Gets the media <see cref="T:System.Uri" />.</summary>
      <returns>The current media <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.SpeedRatio">
      <summary>Gets or sets the ratio of speed that media is played at.</summary>
      <returns>The ratio of speed that media is played back represented by a value between 0 and the largest double value. The default is 1.0.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.Stop">
      <summary>Stops media playback.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaPlayer.Volume">
      <summary>Gets or sets the media's volume.</summary>
      <returns>The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaPlayer.WritePreamble">
      <summary>Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context. </summary>
    </member>
    <member name="T:System.Windows.Media.MediaScriptCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand" /> and <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand" /> events.</summary>
    </member>
    <member name="P:System.Windows.Media.MediaScriptCommandEventArgs.ParameterType">
      <summary>Gets the type of script command that was raised.</summary>
      <returns>The type of script command.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaScriptCommandEventArgs.ParameterValue">
      <summary>Gets the arguments associated with the script command type.</summary>
      <returns>The arguments associated with the script command type.</returns>
    </member>
    <member name="T:System.Windows.Media.MediaTimeline">
      <summary>Provides a <see cref="T:System.Windows.Media.Animation.Timeline" /> for media content.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaTimeline" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.#ctor(System.Nullable{System.TimeSpan})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaTimeline" /> that begins at the specified time.</summary>
      <param name="beginTime">The time to begin the timeline.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaTimeline" /> that begins at the specified time and lasts for the specified duration.</summary>
      <param name="beginTime">The time to begin media playback.</param>
      <param name="duration">The length of time for media playback.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.MediaTimeline" /> class that begins at the specified time over the specified time and has the specified repeat behavior.</summary>
      <param name="beginTime">The time to begin media playback.</param>
      <param name="duration">The length of time for media playback.</param>
      <param name="repeatBehavior">The repeat behavior to use when the playback duration has been reached.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.#ctor(System.Uri)">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.MediaTimeline" /> class using the supplied Uri as the media source.</summary>
      <param name="source">The media source for the timeline.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.AllocateClock">
      <summary>Creates a <see cref="T:System.Windows.Media.MediaClock" /> for this timeline.</summary>
      <returns>A new <see cref="T:System.Windows.Media.MediaClock" /> for this timeline.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.MediaTimeline" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaTimeline" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.MediaTimeline" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.MediaTimeline" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaTimeline" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.MediaTimeline" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.CreateClock">
      <summary>Creates a new <see cref="T:System.Windows.Media.MediaClock" /> associated with the <see cref="T:System.Windows.Media.MediaTimeline" />.</summary>
      <returns>The new <see cref="T:System.Windows.Media.MediaClock" />.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.CreateInstanceCore">
      <summary>Creates a new instance of the MediaTimeline.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.FreezeCore(System.Boolean)">
      <summary>Makes this instance of MediaTimeline unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this <see cref="T:System.Windows.Media.MediaTimeline" /> can be made unmodifiable, or false if it cannot be made unmodifiable. If <paramref name="isChecking" /> is false, this method returns true if the specified <see cref="T:System.Windows.Media.MediaTimeline" /> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this object.</returns>
      <param name="isChecking">true to check if the timeline can be frozen; false to freeze the timeline. </param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaTimeline" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.MediaTimeline" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.MediaTimeline" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.MediaTimeline" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Retrieves the <see cref="T:System.Windows.Duration" /> from a specified clock.</summary>
      <returns>If <paramref name="clock" /> is a <see cref="T:System.Windows.Media.MediaClock" />, the <see cref="P:System.Windows.Media.MediaPlayer.NaturalDuration" /> value of the <see cref="T:System.Windows.Media.MediaPlayer" /> associated with <paramref name="clock" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the <paramref name="clock" /> is not a <see cref="T:System.Windows.Media.MediaClock" />. </returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.MediaTimeline.Source">
      <summary>Gets or sets the media source associated with the timeline.  </summary>
      <returns>The media source associated with the timeline. The default is null. </returns>
    </member>
    <member name="F:System.Windows.Media.MediaTimeline.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.MediaTimeline.Source" />Â dependency property.</summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.MediaTimeline.Source" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.MediaTimeline.System#Windows#Markup#IUriContext#BaseUri">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.MediaTimeline.ToString">
      <summary>Returns the string that represents the media source.</summary>
      <returns>The string that represents the media source.</returns>
    </member>
    <member name="T:System.Windows.Media.NumberCultureSource">
      <summary>Specifies how the culture for numbers in a text run is determined.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberCultureSource.Text">
      <summary>Default. Number culture is derived from the value of the <see cref="P:System.Windows.Media.TextFormatting.TextRunProperties.CultureInfo" /> property, which is the culture of the text run. In markup, this is represented by the xml:lang attribute.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberCultureSource.User">
      <summary>Number culture is derived from the culture value of the current thread, which by default is the user default culture.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberCultureSource.Override">
      <summary>Number culture is derived from the <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" /> property.</summary>
    </member>
    <member name="T:System.Windows.Media.NumberSubstitution">
      <summary>Specifies how numbers in text are displayed in different cultures.</summary>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.NumberSubstitution" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.#ctor(System.Windows.Media.NumberCultureSource,System.Globalization.CultureInfo,System.Windows.Media.NumberSubstitutionMethod)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.NumberSubstitution" /> class with explicit property values.</summary>
      <param name="source">Identifies the source of the culture value that is used to determine number substitution.</param>
      <param name="cultureOverride">Identifies which culture to use when the value of the <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" /> property is set to <see cref="F:System.Windows.Media.NumberCultureSource.Override" />.</param>
      <param name="substitution">Identifies the substitution method that is used to determine number substitution.</param>
    </member>
    <member name="P:System.Windows.Media.NumberSubstitution.CultureOverride">
      <summary>Gets or sets a value which identifies which culture to use when the value of the <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" /> property is set to <see cref="F:System.Windows.Media.NumberCultureSource.Override" />.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> value that represents the culture that is used as an override.</returns>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitution.CultureOverrideProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.NumberSubstitution.CultureSource">
      <summary>Gets or sets a value which identifies the source of the culture value that is used to determine number substitution.  </summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.NumberCultureSource" />.</returns>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitution.CultureSourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Windows.Media.NumberSubstitution" /> object.</summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.NumberSubstitution" /> object; otherwise, false. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.NumberSubstitution" /> object, false is returned.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Windows.Media.NumberSubstitution" /> object.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.GetCultureOverride(System.Windows.DependencyObject)">
      <summary>Returns the value of <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" /> from the provided element.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> value that represents the culture that is used as an override.</returns>
      <param name="target">The element to return a <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" /> value for.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.GetCultureSource(System.Windows.DependencyObject)">
      <summary>Returns the value of <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" /> from the provided element.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.NumberCultureSource" />.</returns>
      <param name="target">The element to return a <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" /> value for.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.NumberSubstitution" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.GetSubstitution(System.Windows.DependencyObject)">
      <summary>Returns the value of <see cref="P:System.Windows.Media.NumberSubstitution.Substitution" /> from the provided element.</summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.NumberSubstitutionMethod" />.</returns>
      <param name="target">The element to return a <see cref="P:System.Windows.Media.NumberSubstitution.Substitution" /> value for.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.SetCultureOverride(System.Windows.DependencyObject,System.Globalization.CultureInfo)">
      <summary>Sets the value of <see cref="P:System.Windows.Media.NumberSubstitution.CultureOverride" /> for a provided element.</summary>
      <param name="target">Element that is specifying a culture override.</param>
      <param name="value">A culture override value of type <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.SetCultureSource(System.Windows.DependencyObject,System.Windows.Media.NumberCultureSource)">
      <summary>Sets the value of <see cref="P:System.Windows.Media.NumberSubstitution.CultureSource" /> for a provided element.</summary>
      <param name="target">Element that is specifying a culture override.</param>
      <param name="value">A culture source value of type <see cref="T:System.Windows.Media.NumberCultureSource" />.</param>
    </member>
    <member name="M:System.Windows.Media.NumberSubstitution.SetSubstitution(System.Windows.DependencyObject,System.Windows.Media.NumberSubstitutionMethod)">
      <summary>Sets the value of <see cref="P:System.Windows.Media.NumberSubstitution.Substitution" /> for a provided element.</summary>
      <param name="target">Element that is specifying a substitution method.</param>
      <param name="value">A substitution method value of type <see cref="T:System.Windows.Media.NumberSubstitutionMethod" />.</param>
    </member>
    <member name="P:System.Windows.Media.NumberSubstitution.Substitution">
      <summary>Gets or sets a value which identifies the substitution method that is used to determine number substitution.  </summary>
      <returns>An enumerated value of <see cref="T:System.Windows.Media.NumberSubstitutionMethod" />.</returns>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitution.SubstitutionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.NumberSubstitution.Substitution" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.NumberSubstitution.Substitution" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.NumberSubstitutionMethod">
      <summary>Defines an enumerator class that specifies the type of number substitution to perform on numbers in a text run.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitutionMethod.AsCulture">
      <summary>Default. Specifies that the substitution method should be determined based on the number culture's <see cref="P:System.Globalization.NumberFormatInfo.DigitSubstitution" /> property value.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitutionMethod.Context">
      <summary>If the number culture is an Arabic or Farsi culture, specifies that the digits depend on the context. Either traditional or Latin digits are used depending on the nearest preceding strong character, or, if there is none, the text direction of the paragraph.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitutionMethod.European">
      <summary>Specifies that code points 0x30-0x39 are always rendered as European digits, in which case, no number substitution is performed.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitutionMethod.NativeNational">
      <summary>Specifies that numbers are rendered using the national digits for the number culture, as specified by the culture's <see cref="P:System.Globalization.NumberFormatInfo.NativeDigits" /> property value.</summary>
    </member>
    <member name="F:System.Windows.Media.NumberSubstitutionMethod.Traditional">
      <summary>Specifies that numbers are rendered using the traditional digits for the number culture. For most cultures, this is the same as the <see cref="F:System.Globalization.DigitShapes.NativeNational" /> enumeration value. However, using <see cref="F:System.Windows.Media.NumberSubstitutionMethod.NativeNational" /> can result in Latin digits for some Arabic cultures, whereas using <see cref="F:System.Windows.Media.NumberSubstitutionMethod.Traditional" /> results in Arabic digits for all Arabic cultures.</summary>
    </member>
    <member name="T:System.Windows.Media.PathFigure">
      <summary>Represents a subsection of a geometry, a single connected series of two-dimensional geometric segments. </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigure.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigure" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigure.#ctor(System.Windows.Point,System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigure" /> class with the specified <see cref="P:System.Windows.Media.PathFigure.StartPoint" />, <see cref="P:System.Windows.Media.PathFigure.Segments" />, and <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> values.</summary>
      <param name="start">The <see cref="P:System.Windows.Media.PathFigure.StartPoint" /> for the <see cref="T:System.Windows.Media.PathFigure" />.</param>
      <param name="segments">The <see cref="P:System.Windows.Media.PathFigure.Segments" /> for the <see cref="T:System.Windows.Media.PathFigure" />.</param>
      <param name="closed">The <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> for the <see cref="T:System.Windows.Media.PathFigure" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigure.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathFigure" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathFigure" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.GetFlattenedPathFigure">
      <summary>Gets a <see cref="T:System.Windows.Media.PathFigure" /> object that is an polygonal approximation of this <see cref="T:System.Windows.Media.PathFigure" /> object. </summary>
      <returns>The polygonal approximation of this <see cref="T:System.Windows.Media.PathFigure" /> object.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.GetFlattenedPathFigure(System.Double,System.Windows.Media.ToleranceType)">
      <summary> Gets a <see cref="T:System.Windows.Media.PathFigure" /> object, within the specified error of tolerance, that is an polygonal approximation of this <see cref="T:System.Windows.Media.PathFigure" /> object. </summary>
      <returns>The polygonal approximation of this <see cref="T:System.Windows.Media.PathFigure" /> object.</returns>
      <param name="tolerance">The computational tolerance of error.</param>
      <param name="type">Specifies how the error of tolerance is interpreted.</param>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsClosed">
      <summary>Gets or sets a value that specifies whether this figures first and last segments are connected.</summary>
      <returns>true if this figure's first and last segments are connected; otherwise, false. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsClosedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.IsClosed" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.IsClosed" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsFilled">
      <summary>Gets or sets whether the contained area of this <see cref="T:System.Windows.Media.PathFigure" /> is to be used for hit-testing, rendering, and clipping.   </summary>
      <returns>Determines whether the contained area of this <see cref="T:System.Windows.Media.PathFigure" /> is to be used for hit-testing, rendering, and clipping.  The default value is true.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsFilledProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathFigure.IsFilled" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.PathFigure.IsFilled" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.MayHaveCurves">
      <summary>Determines whether this <see cref="T:System.Windows.Media.PathFigure" /> object may have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.PathFigure" /> object may have curved segments; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.Segments">
      <summary>Gets or sets the collection of segments that define the shape of this <see cref="T:System.Windows.Media.PathFigure" /> object.   </summary>
      <returns>The collection of segments that define the shape of this <see cref="T:System.Windows.Media.PathFigure" /> object. The default value is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.SegmentsProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PathFigure.Segments" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.PathFigure.Segments" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.StartPoint">
      <summary>Gets or sets the <see cref="T:System.Windows.Point" /> where the <see cref="T:System.Windows.Media.PathFigure" /> begins.  </summary>
      <returns>The <see cref="T:System.Windows.Point" /> where the <see cref="T:System.Windows.Media.PathFigure" /> begins. The default value is 0,0.</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.StartPointProperty">
      <summary>The identifier for the <see cref="P:System.Windows.Media.PathFigure.StartPoint" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathFigure.StartPoint" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>See <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>Â </returns>
      <param name="format"></param>
      <param name="provider"></param>
    </member>
    <member name="M:System.Windows.Media.PathFigure.ToString">
      <summary>Creates a string representation of this object.</summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.PathFigure" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigure.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this object using the specified culture-specific formatting. </summary>
      <returns>A formatted string representation of this <see cref="T:System.Windows.Media.PathFigure" />.</returns>
      <param name="provider">Culture-specific formatting information; otherwise, null to use the current culture and default formatting settings.</param>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollection">
      <summary> Represents a collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that collectively make up the geometry of a <see cref="T:System.Windows.Media.PathGeometry" />. </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigureCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigureCollection" /> class that contains the specified <see cref="T:System.Windows.Media.PathFigure" /> objects. </summary>
      <param name="collection">The collection of <see cref="T:System.Windows.Media.PathFigure" /> objects which collectively make up the geometry of the <see cref="T:System.Windows.Shapes.Path" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigureCollection" /> class that can initially contain the specified number of <see cref="T:System.Windows.Media.PathFigure" /> objects. </summary>
      <param name="capacity">The initial capacity of this <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Add(System.Windows.Media.PathFigure)">
      <summary> Adds a <see cref="T:System.Windows.Media.PathFigure" /> to the end of the collection. </summary>
      <param name="value">The <see cref="T:System.Windows.Media.PathFigure" /> to add to the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only.-or-The <see cref="T:System.Windows.Media.PathFigureCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Media.PathFigureCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathFigureCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathFigureCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Contains(System.Windows.Media.PathFigure)">
      <summary> Determines whether the collection contains the specified <see cref="T:System.Windows.Media.PathFigure" />. </summary>
      <returns>true if <paramref name="value" /> is in the <see cref="T:System.Windows.Media.PathFigureCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.PathFigure" /> being queried for. </param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.CopyTo(System.Windows.Media.PathFigure[],System.Int32)">
      <summary> Copies the entire <see cref="T:System.Windows.Media.PathFigureCollection" /> to a one-dimensional array of type <see cref="T:System.Windows.Media.PathFigure" />, starting at the specified index of the target array. </summary>
      <param name="array">The array into which the collection's items are to be copied.</param>
      <param name="index">The index of <paramref name="array" /> at which to start copying the contents of the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.PathFigureCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.Count">
      <summary> Gets the number of path figures contained in the <see cref="T:System.Windows.Media.PathFigureCollection" />.  </summary>
      <returns>The number of path figures contained in the <see cref="T:System.Windows.Media.PathFigureCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Windows.Media.PathFigureCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.IndexOf(System.Windows.Media.PathFigure)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.PathFigure" /> and returns the zero-based index of the first occurrence within the entire collection.  </summary>
      <returns>The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.PathFigureCollection" />; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.PathFigure" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Insert(System.Int32,System.Windows.Media.PathFigure)">
      <summary>Inserts a <see cref="T:System.Windows.Media.PathFigure" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.PathFigure" /> is inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.PathFigure" /> object to insert in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathFigureCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only.-or-The <see cref="T:System.Windows.Media.PathFigureCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.PathFigure" /> at the specified index position.</summary>
      <returns>The <see cref="T:System.Windows.Media.PathFigure" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.PathFigure" /> to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathFigureCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only.-or-The <see cref="T:System.Windows.Media.PathFigureCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Parse(System.String)">
      <summary>      Returns an instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> created from a specified string.</summary>
      <returns>An instance of <see cref="T:System.Windows.Media.PathFigureCollection" /> created from <paramref name="source" />.</returns>
      <param name="source">The string that is converted to a <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Remove(System.Windows.Media.PathFigure)">
      <summary>Removes a <see cref="T:System.Windows.Media.PathFigure" /> object from the collection. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.PathFigureCollection" />; otherwise, false.</returns>
      <param name="value">Identifies the <see cref="T:System.Windows.Media.PathFigure" /> to remove from the collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only.-or-The <see cref="T:System.Windows.Media.PathFigureCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.PathFigure" /> at the specified index position from the collection.</summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.PathFigure" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.PathFigureCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.PathFigureCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.PathFigureCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.PathFigureCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.PathFigureCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.PathFigureCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.ToString">
      <summary>Converts the current value of a <see cref="T:System.Windows.Media.PathFigureCollection" /> to a <see cref="T:System.String" />.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.PathFigureCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.ToString(System.IFormatProvider)">
      <summary>Converts the current value of a <see cref="T:System.Windows.Media.PathFigureCollection" /> to a <see cref="T:System.String" /> using the specified culture-specific formatting information.</summary>
      <returns>A string representation of the <see cref="T:System.Windows.Media.PathFigureCollection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.PathFigure" /> items in a <see cref="T:System.Windows.Media.PathFigureCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
    </member>
    <member name="P:System.Windows.Media.PathFigureCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollectionConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.Media.PathFigureCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathFigureCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Media.PathFigureCollection" />.</summary>
      <returns>true if object of the specified type can be converted to a <see cref="T:System.Windows.Media.PathFigureCollection" />; otherwise, false.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="sourceType">The source <see cref="T:System.Type" /> that is being queried for conversion support.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether instances of <see cref="T:System.Windows.Media.PathFigureCollection" /> can be converted to the specified type.</summary>
      <returns>true if instances of <see cref="T:System.Windows.Media.PathFigureCollection" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="destinationType">The desired type this <see cref="T:System.Windows.Media.PathFigureCollection" /> is being evaluated to be converted to.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Windows.Media.PathFigureCollection" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.PathFigureCollection" /> created from converting <paramref name="value" />.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Media.PathFigureCollection" /> to the specified type.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">Describes the context information of a type.</param>
      <param name="culture">Describes the <see cref="T:System.Globalization.CultureInfo" /> of the type being converted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.PathFigureCollection" /> to convert.</param>
      <param name="destinationType">The type to convert the <see cref="T:System.Windows.Media.PathFigureCollection" /> to.</param>
    </member>
    <member name="T:System.Windows.Media.PathGeometry">
      <summary>Represents a complex shape that may be composed of arcs, curves, ellipses, lines, and rectangles. </summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.PathGeometry" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathGeometry" /> class with the specified <see cref="P:System.Windows.Media.PathGeometry.Figures" />. </summary>
      <param name="figures">The <see cref="P:System.Windows.Media.PathGeometry.Figures" /> of the <see cref="T:System.Windows.Media.PathGeometry" /> which describes the contents of the <see cref="T:System.Windows.Shapes.Path" />. </param>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure},System.Windows.Media.FillRule,System.Windows.Media.Transform)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathGeometry" /> class with the specified <see cref="P:System.Windows.Media.PathGeometry.Figures" />, <see cref="P:System.Windows.Media.PathGeometry.FillRule" />, and <see cref="P:System.Windows.Media.Geometry.Transform" />.</summary>
      <param name="figures">The <see cref="P:System.Windows.Media.PathGeometry.Figures" /> of the <see cref="T:System.Windows.Media.PathGeometry" /> which describes the contents of the <see cref="T:System.Windows.Shapes.Path" />.</param>
      <param name="fillRule">The <see cref="P:System.Windows.Media.PathGeometry.FillRule" /> of the <see cref="T:System.Windows.Media.PathGeometry" />.</param>
      <param name="transform">The <see cref="P:System.Windows.Media.Geometry.Transform" /> which specifies the transform applied.</param>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.AddGeometry(System.Windows.Media.Geometry)">
      <summary> Converts the specified <see cref="T:System.Windows.Media.Geometry" /> into a collection of <see cref="T:System.Windows.Media.PathFigure" /> objects and adds it to the path.   Note: If the specified <see cref="T:System.Windows.Media.Geometry" /> is animated, the conversion from <see cref="T:System.Windows.Media.Geometry" /> to <see cref="T:System.Windows.Media.PathFigure" /> may result in some loss of information. </summary>
      <param name="geometry">The geometry to add to the path.</param>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.Bounds">
      <summary> Gets a <see cref="T:System.Windows.Rect" /> that specifies the bounding box of this <see cref="T:System.Windows.Media.PathGeometry" /> object.   Note: This method does not take any pens into account.    </summary>
      <returns>The bounding box of this <see cref="T:System.Windows.Media.PathGeometry" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.Clear">
      <summary> Removes all <see cref="T:System.Windows.Media.PathFigure" /> objects from this <see cref="T:System.Windows.Media.PathGeometry" />. </summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.CreateFromGeometry(System.Windows.Media.Geometry)">
      <summary>Creates a <see cref="T:System.Windows.Media.PathGeometry" /> version of the specified <see cref="T:System.Windows.Media.Geometry" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.PathGeometry" /> created from the current values of the specified <see cref="T:System.Windows.Media.Geometry" />.</returns>
      <param name="geometry">The geometry from which to create a <see cref="T:System.Windows.Media.PathGeometry" />.</param>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.Figures">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that describe the path's contents.  </summary>
      <returns>A collection of <see cref="T:System.Windows.Media.PathFigure" /> objects that describe the path's contents. Each individual <see cref="T:System.Windows.Media.PathFigure" /> describes a shape.</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FiguresProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PathGeometry.Figures" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.PathGeometry.Figures" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.FillRule">
      <summary> Gets or sets a value that determines how the intersecting areas contained in this <see cref="T:System.Windows.Media.PathGeometry" /> are combined.  </summary>
      <returns>Indicates how the intersecting areas of this <see cref="T:System.Windows.Media.PathGeometry" /> are combined.  The default value is EvenOdd.</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FillRuleProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PathGeometry.FillRule" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.PathGeometry.FillRule" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.GetPointAtFractionLength(System.Double,System.Windows.Point@,System.Windows.Point@)">
      <summary> Gets the <see cref="T:System.Windows.Point" /> and a tangent vector on this <see cref="T:System.Windows.Media.PathGeometry" /> at the specified fraction of its length. </summary>
      <param name="progress">The fraction of the length of this <see cref="T:System.Windows.Media.PathGeometry" />.</param>
      <param name="point">When this method returns, contains the location on this <see cref="T:System.Windows.Media.PathGeometry" /> at the specified fraction of its length. This parameter is passed uninitialized.</param>
      <param name="tangent">When this method returns, contains the tangent vector. This parameter is passed uninitialized. </param>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.IsEmpty">
      <summary> Determines whether this <see cref="T:System.Windows.Media.PathGeometry" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.PathGeometry" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.MayHaveCurves">
      <summary> Determines whether this <see cref="T:System.Windows.Media.PathGeometry" /> object may have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.PathGeometry" /> object may have curved segments; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Media.PathSegment">
      <summary>Represents a segment of a <see cref="T:System.Windows.Media.PathFigure" /> object.  </summary>
    </member>
    <member name="M:System.Windows.Media.PathSegment.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.PathSegment" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegment.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.PathSegment" /> object by making deep copies of its values. This method does not copy resource references, data bindings, and animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.PathSegment.IsSmoothJoin">
      <summary>Gets or sets a value that indicates whether the join between this <see cref="T:System.Windows.Media.PathSegment" /> and the previous <see cref="T:System.Windows.Media.PathSegment" /> is treated as a corner when it is stroked with a <see cref="T:System.Windows.Media.Pen" />.  </summary>
      <returns>true if the join between this <see cref="T:System.Windows.Media.PathSegment" /> and the previous <see cref="T:System.Windows.Media.PathSegment" /> is not to be treated as a corner; otherwise, false. The default is false. </returns>
    </member>
    <member name="F:System.Windows.Media.PathSegment.IsSmoothJoinProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathSegment.IsSmoothJoin" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathSegment.IsSmoothJoin" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.PathSegment.IsStroked">
      <summary>Gets or sets a value that indicates whether the segment is stroked. </summary>
      <returns>true if the segment is stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, the segment is not stroked. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Media.PathSegment.IsStrokedProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.PathSegment.IsStroked" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PathSegment.IsStroked" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PathSegmentCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.PathSegment" /> objects that can be individually accessed by index.</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Windows.Media.PathSegmentCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathSegmentCollection" /> class with the specified collection of <see cref="T:System.Windows.Media.PathSegment" /> objects.</summary>
      <param name="collection">The collection of <see cref="T:System.Windows.Media.PathSegment" /> objects that make up the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PathSegmentCollection" /> class with the specified capacity, or the number of <see cref="T:System.Windows.Media.PathSegment" /> objects the collection is initially capable of storing.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Media.PathSegment" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)">
      <summary>Adds a <see cref="T:System.Windows.Media.PathSegment" /> to the end of the collection. </summary>
      <param name="value">The segment to add to the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Clear">
      <summary> Clears the collection of all segments and resets <see cref="P:System.Windows.Media.PathSegmentCollection.Count" /> to zero. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathSegmentCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathSegmentCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)">
      <summary> Returns a <see cref="T:System.Boolean" /> that indicates whether the specified <see cref="T:System.Windows.Media.PathSegment" /> is contained within the collection. </summary>
      <returns>true if the specified <see cref="T:System.Windows.Media.PathSegment" /> is contained within the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.PathSegment" /> to search for.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)">
      <summary> Copies the entire <see cref="T:System.Windows.Media.PathSegmentCollection" /> to a one-dimensional <see cref="T:System.Windows.Media.PathSegment" /> array, starting at the specified index of the target array. </summary>
      <param name="array">The array into which the collection's items are to be copied.</param>
      <param name="index">The index of <paramref name="array" /> at which to start copying the contents of the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.PathSegmentCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.Count">
      <summary> Gets the number of path segments contained in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.  </summary>
      <returns>The number of path segments contained in the <see cref="T:System.Windows.Media.PathSegmentCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Windows.Media.PathSegmentCollection.Enumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.Windows.Media.PathSegment" />. </summary>
      <returns>The index of the specified <see cref="T:System.Windows.Media.PathSegment" />.</returns>
      <param name="value">The item to search for.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)">
      <summary>Inserts a <see cref="T:System.Windows.Media.PathSegment" /> into this <see cref="T:System.Windows.Media.PathSegmentCollection" /> at the specified index.</summary>
      <param name="index">The index at which to insert <paramref name="value" />, the specified <see cref="T:System.Windows.Media.PathSegment" />.</param>
      <param name="value">The item to insert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.PathSegment" /> at the specified zero-based index. </summary>
      <returns>The item at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.PathSegment" /> object to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.PathSegment" /> from this <see cref="T:System.Windows.Media.PathSegmentCollection" />.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Media.PathSegment" /> is removed from the collection; otherwise, false.</returns>
      <param name="value">The item to remove from this collection.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.PathSegment" /> at the specified index from this <see cref="T:System.Windows.Media.PathSegmentCollection" />.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.PathSegmentCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.PathSegmentCollection.Enumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Windows.Media.PathSegmentCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.Enumerator.Current">
      <summary>Gets the current item in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</summary>
      <returns>The current item in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first item in the <see cref="T:System.Windows.Media.PathSegmentCollection" />. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Windows.Media.PathSegmentCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Pen">
      <summary> Describes how a shape is outlined. </summary>
    </member>
    <member name="M:System.Windows.Media.Pen.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Pen" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Pen.#ctor(System.Windows.Media.Brush,System.Double)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Pen" /> class with the specified <see cref="T:System.Windows.Media.Brush" /> and thickness. </summary>
      <param name="brush">The Brush for this Pen.</param>
      <param name="thickness">The thickness of the Pen. </param>
    </member>
    <member name="P:System.Windows.Media.Pen.Brush">
      <summary> Gets or sets the fill the outline produced by this <see cref="T:System.Windows.Media.Pen" />.  </summary>
      <returns>The fill of the outline produced by this <see cref="T:System.Windows.Media.Pen" />. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.BrushProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.Brush" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Pen.Brush" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Pen.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Pen" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Pen.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Pen" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.DashCap">
      <summary> Gets or sets a value that specifies how the ends of each dash are drawn.  </summary>
      <returns>Specifies how the ends of each dash are drawn.  This setting applies to both ends of each dash. The default value is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.DashCapProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.DashCap" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.DashCap" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.DashStyle">
      <summary>Gets or sets a value that describes the pattern of dashes generated by this <see cref="T:System.Windows.Media.Pen" />.  </summary>
      <returns>A value that describes the pattern of dashes generated by this <see cref="T:System.Windows.Media.Pen" />. The default is <see cref="P:System.Windows.Media.DashStyles.Solid" />, which indicates that there should be no dashes.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.DashStyleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Pen.DashStyle" />Â dependency property.</summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.DashStyle" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.EndLineCap">
      <summary> Gets or sets the type of shape to use at the end of a stroke.  </summary>
      <returns>The type of shape that ends the stroke. The default value is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.EndLineCapProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.EndLineCap" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.EndLineCap" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.LineJoin">
      <summary> Gets or sets the type of joint used at the vertices of a shape's outline.   </summary>
      <returns>The type of joint used at the vertices of a shape's outline. The default value is <see cref="F:System.Windows.Media.PenLineJoin.Miter" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.LineJoinProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.LineJoin" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.LineJoin" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.MiterLimit">
      <summary> Gets or sets the limit on the ratio of the miter length to half this pen's <see cref="P:System.Windows.Media.Pen.Thickness" />.  </summary>
      <returns>The limit on the ratio of the miter length to half the pen's <see cref="P:System.Windows.Media.Pen.Thickness" />. This value is always a positive number greater than or equal to 1.  The default value is 10.0.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.MiterLimitProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.MiterLimit" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.MiterLimit" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.StartLineCap">
      <summary> Gets or sets the type of shape to use at the beginning of a stroke.  </summary>
      <returns>The type of shape that starts the stroke. The default value is <see cref="F:System.Windows.Media.PenLineCap.Flat" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.StartLineCapProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.StartLineCap" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.StartLineCap" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Pen.Thickness">
      <summary> Gets or sets the thickness of the stroke produced by this <see cref="T:System.Windows.Media.Pen" />.  </summary>
      <returns>The thickness of the stroke produced by this <see cref="T:System.Windows.Media.Pen" />. Default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Pen.ThicknessProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Pen.Thickness" />Â dependency property. </summary>
      <returns>The identifier for the  <see cref="P:System.Windows.Media.Pen.Thickness" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PenLineCap">
      <summary>Describes the shape at the end of a line or segment. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Flat">
      <summary>A cap that does not extend past the last point of the line. Comparable to no line cap.</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Square">
      <summary>A rectangle that has a height equal to the line thickness and a length equal to half the line thickness. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Round">
      <summary>A semicircle that has a diameter equal to the line thickness. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Triangle">
      <summary>An isosceles right triangle whose base length is equal to the thickness of the line.     </summary>
    </member>
    <member name="T:System.Windows.Media.PenLineJoin">
      <summary>Describes the shape that joins two lines or segments. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Miter">
      <summary>Regular angular vertices. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Bevel">
      <summary>Beveled vertices. </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Round">
      <summary>Rounded vertices. </summary>
    </member>
    <member name="T:System.Windows.Media.PixelFormat">
      <summary>Defines a pixel format for images and pixel-based surfaces. </summary>
    </member>
    <member name="P:System.Windows.Media.PixelFormat.BitsPerPixel">
      <summary> Gets the number of bits-per-pixel (bpp) for this <see cref="T:System.Windows.Media.PixelFormat" />. </summary>
      <returns>The number of bits-per-pixel (bpp) for this <see cref="T:System.Windows.Media.PixelFormat" />.  </returns>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.Equals(System.Object)">
      <summary> Determines whether the specified object is equal to the current object. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.PixelFormat" /> is equal to <paramref name="obj" />; otherwise, false.</returns>
      <param name="obj">The Object to compare with the current Object.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.Equals(System.Windows.Media.PixelFormat)">
      <summary>Determines whether the pixel format equals the given <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>true if the pixel formats are equal; otherwise, false.</returns>
      <param name="pixelFormat">The pixel format to compare.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.Equals(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)">
      <summary> Determines whether the specified <see cref="T:System.Windows.Media.PixelFormat" /> instances are considered equal.</summary>
      <returns>true if the two parameters are equal; otherwise, false.</returns>
      <param name="left">The first <see cref="T:System.Windows.Media.PixelFormat" /> objects to compare for equality.</param>
      <param name="right">The second <see cref="T:System.Windows.Media.PixelFormat" /> object to compare for equality.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.GetHashCode">
      <summary>Creates a hash code from this pixel format's <see cref="P:System.Windows.Media.PixelFormat.Masks" /> value.</summary>
      <returns>The pixel format's hash code.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormat.Masks">
      <summary>Gets a collection of bit masks associated with the <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>The collection of bit masks and shifts associated with the <see cref="T:System.Windows.Media.PixelFormat" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.op_Equality(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)">
      <summary> Compares two <see cref="T:System.Windows.Media.PixelFormat" /> instances for equality. </summary>
      <returns>true if the two <see cref="T:System.Windows.Media.PixelFormat" /> objects are equal; otherwise, false.</returns>
      <param name="left">The first <see cref="T:System.Windows.Media.PixelFormat" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Windows.Media.PixelFormat" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.op_Inequality(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)">
      <summary> Compares two <see cref="T:System.Windows.Media.PixelFormat" /> instances for inequality.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PixelFormat" /> objects are not equal; otherwise, false.</returns>
      <param name="left">The first <see cref="T:System.Windows.Media.PixelFormat" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Windows.Media.PixelFormat" /> to compare.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormat.ToString">
      <summary> Creates a string representation of this <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>A <see cref="T:System.String" /> containing a representation of the <see cref="T:System.Windows.Media.PixelFormat" />.</returns>
    </member>
    <member name="T:System.Windows.Media.PixelFormatChannelMask">
      <summary>Defines the bit mask and shift for a specific pixel formats </summary>
    </member>
    <member name="M:System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PixelFormatChannelMask" /> is equal to <paramref name="obj" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current mask.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormatChannelMask.Equals(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)">
      <summary>Determines if two pixel format channel masks are equal.</summary>
      <returns>true if the masks are equal; otherwise, false.</returns>
      <param name="left">The first mask to compare.</param>
      <param name="right">The second mask to compare.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormatChannelMask.GetHashCode">
      <summary>Retrieves a hash code for the mask.</summary>
      <returns>A mask's hash code.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormatChannelMask.Mask">
      <summary>Gets the bitmask for a color channel. The value will never be greater then 0xffffffff </summary>
      <returns>The bitmask for a color channel.</returns>
    </member>
    <member name="M:System.Windows.Media.PixelFormatChannelMask.op_Equality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)">
      <summary> Compares two <see cref="T:System.Windows.Media.PixelFormatChannelMask" /> instances for equality.</summary>
      <returns>true if the two masks are equal; otherwise, false.</returns>
      <param name="left">The first mask to compare.</param>
      <param name="right">The second mask to compare.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormatChannelMask.op_Inequality(System.Windows.Media.PixelFormatChannelMask,System.Windows.Media.PixelFormatChannelMask)">
      <summary>Compares two <see cref="T:System.Windows.Media.PixelFormatChannelMask" /> instances for inequality.</summary>
      <returns>true if the two <see cref="T:System.Windows.Media.PixelFormatChannelMask" /> objects are not equal; otherwise, false.</returns>
      <param name="left">The first mask to compare.</param>
      <param name="right">The second mask to compare.</param>
    </member>
    <member name="T:System.Windows.Media.PixelFormatConverter">
      <summary>Converts a <see cref="T:System.Windows.Media.PixelFormat" /> to and from other data types.</summary>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.#ctor">
      <summary>Creates a new instance of a <see cref="T:System.Windows.Media.PixelFormatConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether the converter can convert an object of the given type to an instance of <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>true if the converter can convert the provided type to an instance of <see cref="T:System.Windows.Media.PixelFormat" />; otherwise, false.</returns>
      <param name="td">Type context information used to evaluate conversion.</param>
      <param name="t">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of <see cref="T:System.Windows.Media.PixelFormat" /> can be converted to a different type. </summary>
      <returns>true if the converter can convert this instance of <see cref="T:System.Windows.Media.PixelFormat" />; otherwise, false.</returns>
      <param name="context">Type context information used to evaluate conversion.</param>
      <param name="destinationType">The desired type to evaluate the conversion to.</param>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="td">Type context information used for conversion.</param>
      <param name="ci">Cultural information that is respected during conversion.</param>
      <param name="o">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="o" /> is null or is an invalid type.</exception>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.ConvertFromString(System.String)">
      <summary>Attempts to convert a string to a <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.PixelFormat" />.</returns>
      <param name="value">The string to convert to a <see cref="T:System.Windows.Media.PixelFormat" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> could not be converted to a known <see cref="T:System.Windows.Media.PixelFormat" />.</exception>
    </member>
    <member name="M:System.Windows.Media.PixelFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert an instance of <see cref="T:System.Windows.Media.PixelFormat" /> to a specified type.</summary>
      <returns>A new instance of the <paramref name="destinationType" />.</returns>
      <param name="context">Context information used for conversion.</param>
      <param name="culture">Cultural information that is respected during conversion.</param>
      <param name="value">
        <see cref="T:System.Windows.Media.PixelFormat" /> to convert.</param>
      <param name="destinationType">Type being evaluated for conversion.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a valid type.</exception>
    </member>
    <member name="T:System.Windows.Media.PixelFormats">
      <summary>Represents the collection of supported pixel formats. </summary>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgr101010">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgr101010" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgr101010" /> is a sRGB format with 32Â bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 10Â bits per pixel (BPP).</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgr101010" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgr24">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgr24" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgr24" /> is a sRGB format with 24Â bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 8Â bits per pixel (BPP). </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgr24" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgr32">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgr32" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgr32" /> is a sRGB format with 32Â bits per pixel (BPP).Â Each color channel (blue, green, and red) is allocated 8Â bits per pixel (BPP).</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgr32" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgr555">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgr555" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgr555" /> is a sRGB format with 16Â bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 5Â bits per pixel (BPP).</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgr555" /> pixel format </returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgr565">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgr565" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgr565" /> is a sRGB format with 16Â bits per pixel (BPP). Each color channel (blue, green, and red) is allocated 5, 6, and 5Â bits per pixel (BPP) respectively.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgr565" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Bgra32">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Bgra32" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Bgra32" /> is a sRGB format with 32Â bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 8Â bits per pixel (BPP).</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Bgra32" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.BlackWhite">
      <summary>Gets the black and white pixel format which displays one bit of data per pixel as either black or white. </summary>
      <returns>The pixel format Black-and-White. </returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Cmyk32">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Cmyk32" /> pixel format which displays 32Â bits per pixel (BPP) with each color channel (cyan, magenta, yellow, and black) allocated 8 bits per pixel (BPP). </summary>
      <returns>The CMYK32 pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Default">
      <summary>Gets the pixel format that is best suited for the particular operation. </summary>
      <returns>The <see cref="T:System.Windows.Media.PixelFormat" /> best suited for the particular operation.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PixelFormat" /> properties are accessed.</exception>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Gray16">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Gray16" /> pixel format which displays a 16 bits-per-pixel grayscale channel, allowing 65536 shades of gray. This format has a gamma of 1.0. </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Gray16" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Gray2">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Gray2" /> pixel format which displays a 2 bits-per-pixel grayscale channel, allowing 4 shades of gray.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Gray2" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Gray32Float">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Gray32Float" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Gray32Float" /> displays a 32Â bits per pixel (BPP)Â grayscale channel, allowing over 4 billion shades of gray. This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Gray32Float" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Gray4">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Gray4" /> pixel format which displays a 4 bits-per-pixel grayscale channel, allowing 16 shades of gray. </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Gray4" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Gray8">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Gray8" /> pixel format which displays an 8 bits-per-pixel grayscale channel, allowing 256 shades of gray. </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Gray8" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Indexed1">
      <summary>Gets the pixel format specifying a paletted bitmap with 2 colors. </summary>
      <returns>The pixel format which specifying a paletted bitmap with 2 colors.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Indexed2">
      <summary>Gets the pixel format specifying a paletted bitmap with 4 colors. </summary>
      <returns>The pixel format which specifying a paletted bitmap with 4 colors.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Indexed4">
      <summary>Gets the pixel format specifying a paletted bitmap with 16 colors. </summary>
      <returns>The pixel format which specifying a paletted bitmap with 16 colors.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Indexed8">
      <summary>Gets the pixel format specifying a paletted bitmap with 256 colors. </summary>
      <returns>The pixel format which specifying a paletted bitmap with 256 colors.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Pbgra32">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Pbgra32" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Pbgra32" /> is a sRGB format with 32Â bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 8Â bits per pixel (BPP). Each color channel is pre-multiplied by the alpha value. </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Pbgra32" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Prgba128Float">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Prgba128Float" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Prgba128Float" /> is a ScRGB format with 128Â bits per pixel (BPP). Each channel (red, green, blue, and alpha) is allocated 32Â bits per pixel (BPP). Each color channel is pre-multiplied by the alpha value. This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Prgba128Float" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Prgba64">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Prgba64" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Prgba64" /> is a sRGB format with 64Â bits per pixel (BPP). Each channel (blue, green, red, and alpha) is allocated 32Â bits per pixel (BPP). Each color channel is pre-multiplied by the alpha value. This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Prgba64" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Rgb128Float">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Rgb128Float" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Rgb128Float" /> is a ScRGB format with 128Â bits per pixel (BPP). Each color channel is allocated 32Â BPP. This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Rgb128Float" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Rgb24">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Rgb24" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Rgb24" /> is a sRGB format with 24Â bits per pixel (BPP). Each color channel (red, green, and blue) is allocated 8 bits per pixel (BPP). </summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Rgb24" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Rgb48">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Rgb48" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Rgb48" /> is a sRGB format with 48Â bits per pixel (BPP). Each color channel (red, green, and blue) is allocated 16Â bits per pixel (BPP). This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Rgb48" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Rgba128Float">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Rgba128Float" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Rgba128Float" /> is a ScRGB format with 128Â bits per pixel (BPP). Each color channel is allocated 32Â bits per pixel (BPP). This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Rgba128Float" /> pixel format.</returns>
    </member>
    <member name="P:System.Windows.Media.PixelFormats.Rgba64">
      <summary>Gets the <see cref="P:System.Windows.Media.PixelFormats.Rgba64" /> pixel format. <see cref="P:System.Windows.Media.PixelFormats.Rgba64" /> is an sRGB format with 64Â bits per pixel (BPP). Each channel (red, green, blue, and alpha) is allocated 16Â bits per pixel (BPP). This format has a gamma of 1.0.</summary>
      <returns>The <see cref="P:System.Windows.Media.PixelFormats.Rgba64" /> pixel format.</returns>
    </member>
    <member name="T:System.Windows.Media.PointCollection">
      <summary> Represents a collection of <see cref="T:System.Windows.Point" /> values that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.PointCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointCollection" /> class that contains items copied from the specified collection of <see cref="T:System.Windows.Point" /> values and has the same initial capacity as the number of items copied.</summary>
      <param name="collection">The collection whose items are copied to the new <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointCollection" /> class with the specified capacity.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Point" /> values that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Add(System.Windows.Point)">
      <summary>Adds a <see cref="T:System.Windows.Point" /> to the end of the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <param name="value">The <see cref="T:System.Windows.Point" /> to add to the end of the <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PointCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PointCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PointCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PointCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PointCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Contains(System.Windows.Point)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.PointCollection" /> contains the specified <see cref="T:System.Windows.Point" />. </summary>
      <returns>true if the <see cref="T:System.Windows.Point" /> is found in the <see cref="T:System.Windows.Media.PointCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Point" /> to locate in the <see cref="T:System.Windows.Media.PointCollection" />. </param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.CopyTo(System.Windows.Point[],System.Int32)">
      <summary>Copies the items of the <see cref="T:System.Windows.Media.PointCollection" /> to an array, starting at the specified array index. </summary>
      <param name="array">The one-dimensional array that is the destination of the items copied from the <see cref="T:System.Windows.Media.PointCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.PointCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.PointCollection.Count">
      <summary> Gets the number of items contained in the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>The number of items in the <see cref="T:System.Windows.Media.PointCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>An <see cref="T:System.Windows.Media.PointCollection.Enumerator" /> that can be used to iterate through the <see cref="T:System.Windows.Media.PointCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.IndexOf(System.Windows.Point)">
      <summary>Determines the index of the specified item in the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.PointCollection" />; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Point" /> to locate in the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Insert(System.Int32,System.Windows.Point)">
      <summary> Inserts a <see cref="T:System.Windows.Point" /> into the <see cref="T:System.Windows.Media.PointCollection" /> at the specified index. </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Point" /> to insert into the <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PointCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PointCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PointCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.PointCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Windows.Point" /> at the specified index. </summary>
      <returns>The <see cref="T:System.Windows.Point" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Point" /> to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PointCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PointCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PointCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Parse(System.String)">
      <summary>Converts a <see cref="T:System.String" /> representation of a collection of points into an equivalent <see cref="T:System.Windows.Media.PointCollection" />.      </summary>
      <returns>The equivalent <see cref="T:System.Windows.Media.PointCollection" />.</returns>
      <param name="source">The <see cref="T:System.String" /> representation of the collection of points.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Remove(System.Windows.Point)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Point" /> from the <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.PointCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Point" /> to remove from the <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.PointCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.PointCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Point" /> at the specified index. </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Point" /> to remove.</param>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.PointCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.PointCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.PointCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.PointCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.PointCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.PointCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.PointCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.PointCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.PointCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollection.ToString">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of the <see cref="T:System.Windows.Point" /> structures in this <see cref="T:System.Windows.Media.PointCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.PointCollection.ToString(System.IFormatProvider)">
      <summary>Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values of the <see cref="T:System.Windows.Point" /> structures in this <see cref="T:System.Windows.Media.PointCollection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.PointCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Point" /> items in a <see cref="T:System.Windows.Media.PointCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.PointCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PointCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PointCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.PointCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Windows.Media.PointCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.PointCollectionConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.Media.PointCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.PointCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointCollectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PointCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object can be converted from a specified type to an instance of a <see cref="T:System.Windows.Media.PointCollection" />.  </summary>
      <returns>true if the type can be converted to a <see cref="T:System.Windows.Media.PointCollection" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="sourceType">The type of the source that is being evaluated for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of a <see cref="T:System.Windows.Media.PointCollection" /> can be converted to a different type. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.PointCollection" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="destinationType">The needed type for which you are evaluating this <see cref="T:System.Windows.Media.PointCollection" /> for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.PointCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.Media.PointCollection" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.PointCollection" /> that is created from converting <paramref name="value" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The object being converted.</param>
      <exception cref="T:System.NotSupportedException">The specified object is null or is a type that cannot be converted to a <see cref="T:System.Windows.Media.PointCollection" />.</exception>
    </member>
    <member name="M:System.Windows.Media.PointCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.Media.PointCollection" /> to a specified type. </summary>
      <returns>The object that is created from converting this <see cref="T:System.Windows.Media.PointCollection" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The <see cref="T:System.Windows.Media.PointCollection" /> to convert.</param>
      <param name="destinationType">The type to convert this <see cref="T:System.Windows.Media.PointCollection" /> to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a <see cref="T:System.Windows.Media.PointCollection" />; or the <paramref name="destinationType" /> is not one of the valid types for conversion.</exception>
    </member>
    <member name="T:System.Windows.Media.PointHitTestParameters">
      <summary>Specifies a <see cref="T:System.Windows.Point" /> as the parameter to be used for hit testing of a visual object.</summary>
    </member>
    <member name="M:System.Windows.Media.PointHitTestParameters.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointHitTestParameters" /> class, using a <see cref="T:System.Windows.Point" />.</summary>
      <param name="point">The parameter that is specified as the <see cref="T:System.Windows.Point" /> value.</param>
    </member>
    <member name="P:System.Windows.Media.PointHitTestParameters.HitPoint">
      <summary>Gets the <see cref="T:System.Windows.Point" /> against which to hit test. </summary>
      <returns>The <see cref="T:System.Windows.Point" /> against which to hit test.</returns>
    </member>
    <member name="T:System.Windows.Media.PointHitTestResult">
      <summary>Represents the results of a hit test that uses a <see cref="T:System.Windows.Point" /> as a hit test parameter.</summary>
    </member>
    <member name="M:System.Windows.Media.PointHitTestResult.#ctor(System.Windows.Media.Visual,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PointHitTestResult" /> class.</summary>
      <param name="visualHit">The <see cref="T:System.Windows.Media.Visual" /> object that represents the hit test result.</param>
      <param name="pointHit">The <see cref="T:System.Windows.Point" /> object that represents the hit test result.</param>
    </member>
    <member name="P:System.Windows.Media.PointHitTestResult.PointHit">
      <summary>Gets the point value that is returned from a hit test result.</summary>
      <returns>A <see cref="T:System.Windows.Point" /> object that represents the hit test result.</returns>
    </member>
    <member name="P:System.Windows.Media.PointHitTestResult.VisualHit">
      <summary>Gets the visual object that is returned from a hit test result.</summary>
      <returns>A <see cref="T:System.Windows.Media.Visual" /> object that represents the hit test result.</returns>
    </member>
    <member name="T:System.Windows.Media.PolyBezierSegment">
      <summary>Represents one or more cubic Bezier curves.</summary>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.PolyBezierSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyBezierSegment" /> class with the specified collection of <see cref="T:System.Windows.Point" /> objects and a value specifying whether the segments are stroked.</summary>
      <param name="points">The collection of points that specify the geometry of the cubic Bezier curve segments.</param>
      <param name="isStroked">Value specifying whether the segments are stroked.</param>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyBezierSegment" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyBezierSegment" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.PolyBezierSegment.Points">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.PointCollection" /> that define this <see cref="T:System.Windows.Media.PolyBezierSegment" /> object.   </summary>
      <returns>Collection that define this <see cref="T:System.Windows.Media.PolyBezierSegment" /> object.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyBezierSegment.PointsProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PolyBezierSegment.Points" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyBezierSegment.Points" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PolyLineSegment">
      <summary> Represents a set of line segments defined by a <see cref="T:System.Windows.Media.PointCollection" /> with each <see cref="T:System.Windows.Point" /> specifying the end point of a line segment. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.PolyLineSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyLineSegment" /> class with the specified list of points that determine the line segments and a value indicating whether the segments are stroked.</summary>
      <param name="points">A collection of points that determine the line segments of the <see cref="T:System.Windows.Media.PolyLineSegment" />.</param>
      <param name="isStroked">true to make the segment stroked; otherwise, false..</param>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyLineSegment" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyLineSegment" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.PolyLineSegment.Points">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Point" /> structures that defines this <see cref="T:System.Windows.Media.PolyLineSegment" /> object.  </summary>
      <returns>The shape of this <see cref="T:System.Windows.Media.PolyLineSegment" /> object.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyLineSegment.PointsProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PolyLineSegment.Points" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyLineSegment.Points" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.PolyQuadraticBezierSegment">
      <summary> Represents a set of quadratic Bezier segments. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> class with the specified collection of <see cref="T:System.Windows.Point" /> objects and a value specifying whether the segments are stroked.</summary>
      <param name="points">The collection of points that specify the geometry of the Bezier curve segments.</param>
      <param name="isStroked">true to stroke the segments; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.PolyQuadraticBezierSegment.Points">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.PointCollection" /> that defines this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> object.  </summary>
      <returns>A collection that defines the shape of this <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> object. The default value is an empty collection.</returns>
    </member>
    <member name="F:System.Windows.Media.PolyQuadraticBezierSegment.PointsProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.QuadraticBezierSegment">
      <summary>Creates a quadratic Bezier curve between two points in a <see cref="T:System.Windows.Media.PathFigure" />. </summary>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> class with the specified control point, end point, and Boolean indicating whether to stroke this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.  </summary>
      <param name="point1">The control point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.</param>
      <param name="point2">The end point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.</param>
      <param name="isStroked">true if this <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> is to be stroked; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> object, making deep copies of this object's current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point1">
      <summary>Gets or sets the control <see cref="T:System.Windows.Point" /> of the curve.  </summary>
      <returns>The control point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point1Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point2">
      <summary>Gets or sets the end <see cref="T:System.Windows.Point" /> of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.  </summary>
      <returns>The end point of this <see cref="T:System.Windows.Media.QuadraticBezierSegment" />.</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point2Property">
      <summary>Identifies the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.RadialGradientBrush">
      <summary>Paints an area with a radial gradient. A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient. </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class with the specified start and stop colors. </summary>
      <param name="startColor">Color value at the focus (<see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" />) of the radial gradient.</param>
      <param name="endColor">Color value at the outer edge of the radial gradient.</param>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RadialGradientBrush" /> class that has the specified gradient stops. </summary>
      <param name="gradientStopCollection">The gradient stops to set on this brush.</param>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.Center">
      <summary> Gets or sets the center of the outermost circle of the radial gradient. </summary>
      <returns>The two-dimensional point located at the center of the radial gradient.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.CenterProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.Center" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.RadialGradientBrush.Center" />Â dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.RadialGradientBrush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.RadialGradientBrush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.GradientOrigin">
      <summary> Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient. </summary>
      <returns>The location of the two-dimensional focal point of the gradient. The default is (0.5, 0.5).</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.GradientOriginProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" />Â dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusX">
      <summary> Gets or sets the horizontal radius of the outermost circle of the radial gradient. </summary>
      <returns>The horizontal radius of the outermost circle of the radial gradient. The default is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusXProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" />Â dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusY">
      <summary> Gets or sets the vertical radius of the outermost circle of a radial gradient. </summary>
      <returns>The vertical radius of the outermost circle of a radial gradient. The default is 0.5.</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusYProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" />Â dependency property. </summary>
      <returns>The <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" />Â dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.RectangleGeometry">
      <summary> Describes a two-dimensional rectangle. </summary>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RectangleGeometry" /> class, and creates a rectangle with zero area. </summary>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor(System.Windows.Rect)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RectangleGeometry" /> class and specifies its dimensions. </summary>
      <param name="rect">A <see cref="T:System.Windows.Rect" /> structure with the rectangle's dimensions.</param>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor(System.Windows.Rect,System.Double,System.Double)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RectangleGeometry" /> class. </summary>
      <param name="rect">A <see cref="T:System.Windows.Rect" /> structure with the rectangle's dimensions.</param>
      <param name="radiusX">The radius of the rounded corner where it connects with the upper and lower edges of the rectangle.</param>
      <param name="radiusY">The radius of the rounded corner where it connects with the left and right edges of the rectangle.</param>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor(System.Windows.Rect,System.Double,System.Double,System.Windows.Media.Transform)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.RectangleGeometry" /> class. </summary>
      <param name="rect">A <see cref="T:System.Windows.Rect" /> structure with the rectangle's dimensions.</param>
      <param name="radiusX">The radius of the rounded corner where it connects with the upper and lower edges of the rectangle.</param>
      <param name="radiusY">The radius of the rounded corner where it connects with the left and right edges of the rectangle.</param>
      <param name="transform">The transformation to apply to the geometry.</param>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.Bounds">
      <summary> Gets a <see cref="T:System.Windows.Rect" /> that specifies the bounding box of a <see cref="T:System.Windows.Media.RectangleGeometry" />. This method does not take any pens into account. </summary>
      <returns>The bounding box of the <see cref="T:System.Windows.Media.RectangleGeometry" />. </returns>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.RectangleGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.RectangleGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)">
      <summary> Gets the area of the filled region of this <see cref="T:System.Windows.Media.RectangleGeometry" /> object. </summary>
      <returns>The area of the filled region of this <see cref="T:System.Windows.Media.RectangleGeometry" /> object.</returns>
      <param name="tolerance">The computational tolerance of error.</param>
      <param name="type">Specifies how the error tolerance will be interpreted.</param>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.IsEmpty">
      <summary> Determines whether this <see cref="T:System.Windows.Media.RectangleGeometry" /> object is empty. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.RectangleGeometry" /> is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.MayHaveCurves">
      <summary> Determines whether this <see cref="T:System.Windows.Media.RectangleGeometry" /> object may have curved segments. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.RectangleGeometry" /> object may have curved segments; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusX">
      <summary>Gets or sets the x-radius of the ellipse use to round the corners of the rectangle.   </summary>
      <returns>A value greater than or equal to zero and less than or equal to half the rectangle's width that describes the x-radius of the ellipse use to round the corners of the rectangle. Values greater than half the rectangle's width are treated as though equal to half the rectangle's width. Negative values are treated as positive values. The default is 0.0. </returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusXProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusY">
      <summary>Gets or sets the y-radius of the ellipse use to round the corners of the rectangle.   </summary>
      <returns>A value greater than or equal to zero and less than or equal to half the rectangle's width that describes the y-radius of the ellipse use to round the corners of the rectangle. Values greater than half the rectangle's width are treated as though equal to half the rectangle's width. Negative values are treated as positive values. The default is 0.0. </returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusYProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.Rect">
      <summary>Gets or sets the dimensions of the rectangle.   </summary>
      <returns>The position and size of the rectangle. The default is <see cref="P:System.Windows.Rect.Empty" />.</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RectProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.RectangleGeometry.Rect" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RectangleGeometry.Rect" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.RenderCapability">
      <summary>Enables WPF applications to query for the current rendering tier for their associated <see cref="T:System.Windows.Threading.Dispatcher" /> object and to register for notification of changes. </summary>
    </member>
    <member name="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)">
      <summary>Gets a value that indicates whether the specified pixel shader version is supported. </summary>
      <returns>true if the pixel shader version is supported by the current version of WPF; otherwise, false. </returns>
      <param name="majorVersionRequested">The major version of the pixel shader.</param>
      <param name="minorVersionRequested">The minor version of the pixel shader.</param>
    </member>
    <member name="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)">
      <summary>Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system. </summary>
      <returns>true if the pixel shader can be rendered in software on the current system; otherwise, false.</returns>
      <param name="majorVersionRequested">The major version of the pixel shader.</param>
      <param name="minorVersionRequested">The minor version of the pixel shader.</param>
    </member>
    <member name="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported">
      <summary>Gets a value that indicates whether the system can render bitmap effects in software.</summary>
      <returns>true if the system can render bitmap effects in software; otherwise, false. </returns>
    </member>
    <member name="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize">
      <summary>Gets the maximum width and height for bitmap creation of the underlying hardware device.  </summary>
      <returns>A <see cref="T:System.Windows.Size" /> that represents the maximum width and height for hardware bitmap creation.</returns>
    </member>
    <member name="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)">
      <summary>Gets the maximum number of instruction slots supported by the specified pixel shader version.</summary>
      <returns>96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.</returns>
      <param name="majorVersionRequested">The major version of the pixel shader.</param>
      <param name="minorVersionRequested">The minor version of the pixel shader.</param>
    </member>
    <member name="P:System.Windows.Media.RenderCapability.Tier">
      <summary>Gets a value that indicates the rendering tier for the current thread.</summary>
      <returns>An <see cref="T:System.Int32" /> value whose high-order word corresponds to the rendering tier for the current thread.</returns>
    </member>
    <member name="E:System.Windows.Media.RenderCapability.TierChanged">
      <summary>Occurs when the rendering tier has changed for the <see cref="T:System.Windows.Threading.Dispatcher" /> object of the current thread.</summary>
    </member>
    <member name="T:System.Windows.Media.RenderingEventArgs">
      <summary>Required arguments for the <see cref="E:System.Windows.Media.CompositionTarget.Rendering" /> event.</summary>
    </member>
    <member name="P:System.Windows.Media.RenderingEventArgs.RenderingTime">
      <summary>Gets the estimated target time at which the next frame of an animation will be rendered.</summary>
      <returns>The estimated target time at which the next frame of an animation will be rendered.</returns>
    </member>
    <member name="T:System.Windows.Media.RenderOptions">
      <summary>Provides options for controlling the rendering behavior of objects.</summary>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.BitmapScalingMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for a given <see cref="T:System.Windows.DependencyObject" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value associated with this <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.BitmapScalingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" />Â attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum">
      <summary>Gets or sets the cache invalidation threshold maximum value for a given <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the cache invalidation threshold maximum.</returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />Â attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum">
      <summary>Gets or sets the cache invalidation threshold minimum value for a given <see cref="T:System.Windows.DependencyObject" />.</summary>
      <returns>A <see cref="T:System.Double" /> value that represents the cache invalidation threshold minimum.</returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimumProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />Â attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />Â attached property. </returns>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.CachingHint">
      <summary>Gets or sets a value that indicates that rendered content should be cached when possible.</summary>
      <returns>A <see cref="T:System.Windows.Media.CachingHint" /> value for the associated <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.CachingHintProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" />Â attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" />Â attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.ClearTypeHint">
      <summary>Gets or sets a value that indicates to the rendering engine whether text can be rendered with ClearType.</summary>
      <returns>A <see cref="T:System.Windows.Media.ClearTypeHint" /> that indicates whether text can be rendered with ClearType. </returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.ClearTypeHintProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property.</returns>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.EdgeMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.EdgeMode" /> enumeration value for a non-text primitive that determines how its edges are rendered.</summary>
      <returns>An <see cref="T:System.Windows.Media.EdgeMode" /> value for the associated <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="F:System.Windows.Media.RenderOptions.EdgeModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" />Â attached property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" />Â attached property. </returns>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetBitmapScalingMode(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" />Â attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> attached property on the specified dependency object.</returns>
      <param name="target">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> attached property.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />Â attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> attached property on the specified dependency object.</returns>
      <param name="target">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> attached property.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />Â attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> attached property on the specified dependency object.</returns>
      <param name="target">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> attached property.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetCachingHint(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" />Â attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> attached property on the specified dependency object.</returns>
      <param name="target">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> attached property.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetClearTypeHint(System.Windows.DependencyObject)">
      <summary>Gets the value of the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property of the specified element.</summary>
      <returns>The value of the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property for <paramref name="target" />.</returns>
      <param name="target">The <see cref="T:System.Windows.DependencyObject" /> to retrieve the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property for. </param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.GetEdgeMode(System.Windows.DependencyObject)">
      <summary>Returns the value of the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" />Â attached property for a specified dependency object.</summary>
      <returns>The current value of the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> attached property on the specified dependency object.</returns>
      <param name="target">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> attached property.</param>
    </member>
    <member name="P:System.Windows.Media.RenderOptions.ProcessRenderMode">
      <summary>Specifies the render mode preference for the current process. </summary>
      <returns>The <see cref="T:System.Windows.Interop.RenderMode" /> preference for the current process. </returns>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetBitmapScalingMode(System.Windows.DependencyObject,System.Windows.Media.BitmapScalingMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" />Â attached property on a specified dependency object.</summary>
      <param name="target">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.Media.DrawingGroup" /> descendant on which to set the value of the <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> property.</param>
      <param name="bitmapScalingMode">The new value to set the property to.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />Â attached property on a specified dependency object.</summary>
      <param name="target">The dependency object on which to set the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> property</param>
      <param name="cacheInvalidationThresholdMaximum">The new value to set the property to.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject,System.Double)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />Â attached property on a specified dependency object.</summary>
      <param name="target">The dependency object on which to set the value of the <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> property</param>
      <param name="cacheInvalidationThresholdMinimum">The new value to set the property to.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetCachingHint(System.Windows.DependencyObject,System.Windows.Media.CachingHint)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" />Â attached property on a specified dependency object.</summary>
      <param name="target">The dependency object on which to set the value of the <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> property</param>
      <param name="cachingHint">The new value to set the property to.</param>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetClearTypeHint(System.Windows.DependencyObject,System.Windows.Media.ClearTypeHint)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property of the specified element.</summary>
      <param name="target">The <see cref="T:System.Windows.DependencyObject" /> to set the <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> attached property on.</param>
      <param name="clearTypeHint">The new <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> value. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.RenderOptions.SetEdgeMode(System.Windows.DependencyObject,System.Windows.Media.EdgeMode)">
      <summary>Sets the value of the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" />Â attached property on a specified dependency object.</summary>
      <param name="target">The dependency object on which to set the value of the <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> property</param>
      <param name="edgeMode">The new value to set the property to.</param>
    </member>
    <member name="T:System.Windows.Media.RequestCachePolicyConverter">
      <summary>Parses a <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Windows.Media.RequestCachePolicyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RequestCachePolicyConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.RequestCachePolicyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this converter can convert an object of the specified type to the type of this converter, using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="td">The format context.</param>
      <param name="t">The type to convert from.</param>
    </member>
    <member name="M:System.Windows.Media.RequestCachePolicyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value that indicates whether this converter can convert the object to the specified type, using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="typeDescriptorContext">The format context.</param>
      <param name="destinationType">The type being queried for support.</param>
    </member>
    <member name="M:System.Windows.Media.RequestCachePolicyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to a <see cref="T:System.Net.Cache.RequestCachePolicy" /> object.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="td">The format context.</param>
      <param name="ci">The current culture.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null or is not of a valid type.</exception>
    </member>
    <member name="M:System.Windows.Media.RequestCachePolicyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts this object to the specified type.</summary>
      <returns>The object that is constructed from the conversion.</returns>
      <param name="typeDescriptorContext">The format context.</param>
      <param name="cultureInfo">The culture to use for the conversion. </param>
      <param name="value">The policy to convert.</param>
      <param name="destinationType">The type to convert to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Media.RotateTransform">
      <summary>Rotates an object clockwise about a specified point in a 2-D x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RotateTransform" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RotateTransform" /> class that has the specified angle, in degrees, of clockwise rotation. The rotation is centered on the origin, (0,0).  </summary>
      <param name="angle">The clockwise rotation angle, in degrees.</param>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.RotateTransform" /> class that has the specified angle and center point.</summary>
      <param name="angle">The clockwise rotation angle, in degrees. For more information, see the <see cref="P:System.Windows.Media.RotateTransform.Angle" /> property.</param>
      <param name="centerX">The x-coordinate of the center point for the <see cref="T:System.Windows.Media.RotateTransform" />. For more information, see the <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> property.</param>
      <param name="centerY">The y-coordinate of the center point for the <see cref="T:System.Windows.Media.RotateTransform" />. For more information, see the <see cref="P:System.Windows.Media.RotateTransform.CenterY" /> property.</param>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.Angle">
      <summary>Gets or sets the angle, in degrees, of clockwise rotation.  </summary>
      <returns>The angle, in degrees, of clockwise rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.AngleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.Angle" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RotateTransform.Angle" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the rotation center point.  </summary>
      <returns>The x-coordinate of the center of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.CenterX" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.RotateTransform.CenterX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the rotation center point.  </summary>
      <returns>The y-coordinate of the center of rotation. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.RotateTransform.CenterY" />Â dependency property.</summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.RotateTransform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.RotateTransform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.Value">
      <summary>Gets the current rotation transformation as a <see cref="T:System.Windows.Media.Matrix" /> object. </summary>
      <returns>The current rotation transformation as a <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.ScaleTransform">
      <summary>Scales an object in the 2-DÂ x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ScaleTransform" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ScaleTransform" /> class with the specified x- and y- scale factors. The scale operation is centered on (0,0). </summary>
      <param name="scaleX">The x-axis scale factor.</param>
      <param name="scaleY">The y-axis scale factor.</param>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.ScaleTransform" /> class that has the specified scale factors and center point.</summary>
      <param name="scaleX">The x-axis scale factor. For more information, see the <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" /> property.</param>
      <param name="scaleY">The y-axis scale factor. For more information, see the <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" /> property.</param>
      <param name="centerX">The x-coordinate of the center of this <see cref="T:System.Windows.Media.ScaleTransform" />. For more information, see the <see cref="P:System.Windows.Media.ScaleTransform.CenterX" /> property.</param>
      <param name="centerY">The y-coordinate of the center of this <see cref="T:System.Windows.Media.ScaleTransform" />. For more information, see the <see cref="P:System.Windows.Media.ScaleTransform.CenterY" /> property.</param>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />.  </summary>
      <returns>The x-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.CenterX" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.CenterX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />.  </summary>
      <returns>The y-coordinate of the center point of this <see cref="T:System.Windows.Media.ScaleTransform" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.CenterY" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.CenterY" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.ScaleTransform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.ScaleTransform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleX">
      <summary>Gets or sets the x-axis scale factor.  </summary>
      <returns>The scale factor along the x-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleY">
      <summary>Gets or sets the y-axis scale factor.  </summary>
      <returns>The scale factor along the y-axis. The default is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.Value">
      <summary>Gets the current scaling transformation as a <see cref="T:System.Windows.Media.Matrix" /> object. </summary>
      <returns>The current scaling transformation returned as a <see cref="T:System.Windows.Media.Matrix" /> object.</returns>
    </member>
    <member name="T:System.Windows.Media.SkewTransform">
      <summary>Represents a 2-DÂ skew. </summary>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SkewTransform" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SkewTransform" /> class that has the specified x- and y-axes angles and is centered on the origin.</summary>
      <param name="angleX">The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> property.</param>
      <param name="angleY">The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> property.</param>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.SkewTransform" /> class that has the specified x- and y-axes angles and center. </summary>
      <param name="angleX">The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> property.</param>
      <param name="angleY">The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> property.</param>
      <param name="centerX">The x-coordinate of the transform center. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.CenterX" /> property.</param>
      <param name="centerY">The y-coordinate of the transform center. For more information, see the <see cref="P:System.Windows.Media.SkewTransform.CenterY" /> property.</param>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleX">
      <summary>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.  </summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the y-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.AngleX" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.AngleX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleY">
      <summary>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.  </summary>
      <returns>The skew angle, which is measured in degrees counterclockwise from the x-axis. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.AngleY" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.AngleY" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterX">
      <summary>Gets or sets the x-coordinate of the transform center.  </summary>
      <returns>The x-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.CenterX" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.CenterX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterY">
      <summary>Gets or sets the y-coordinate of the transform center.  </summary>
      <returns>The y-coordinate of the transform center. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.SkewTransform.CenterY" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SkewTransform.CenterY" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.SkewTransform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.SkewTransform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.Value">
      <summary>Gets the current transformation value as a <see cref="T:System.Windows.Media.Matrix" />. </summary>
      <returns>The current skewing transformation value as a <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.SolidColorBrush">
      <summary> Paints an area with a solid color. </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.SolidColorBrush" /> class with no color or animations. </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor(System.Windows.Media.Color)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.SolidColorBrush" /> class with the specified <see cref="T:System.Windows.Media.Color" />. </summary>
      <param name="color">The color to apply to the fill.</param>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.SolidColorBrush" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.SolidColorBrush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.SolidColorBrush.Color">
      <summary>Gets or sets the color of this <see cref="T:System.Windows.Media.SolidColorBrush" />.  </summary>
      <returns>The brush's color. The default value is <see cref="P:System.Windows.Media.Colors.Transparent" />.</returns>
    </member>
    <member name="F:System.Windows.Media.SolidColorBrush.ColorProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.SolidColorBrush.Color" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.SolidColorBrush.Color" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.DeserializeFrom(System.IO.BinaryReader)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <returns>The deserialized <see cref="T:System.Windows.Media.SolidColorBrush" />.</returns>
      <param name="reader">The binary reader to read the <see cref="T:System.Windows.Media.SolidColorBrush" /> from.</param>
    </member>
    <member name="T:System.Windows.Media.StreamGeometry">
      <summary>Defines a geometric shape, described using a <see cref="T:System.Windows.Media.StreamGeometryContext" />. This geometry is light-weight alternative to <see cref="T:System.Windows.Media.PathGeometry" />: it does not support data binding, animation, or modification.</summary>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.#ctor">
      <summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Media.StreamGeometry" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.StreamGeometry.Bounds">
      <summary>Gets a <see cref="T:System.Windows.Rect" /> that is exactly large enough to contain this <see cref="T:System.Windows.Media.StreamGeometry" />.</summary>
      <returns>The bounding box of this <see cref="T:System.Windows.Media.StreamGeometry" />. </returns>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.Clear">
      <summary>Removes all geometric information from this <see cref="T:System.Windows.Media.StreamGeometry" />.</summary>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.StreamGeometry" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.StreamGeometry" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.StreamGeometry.FillRule">
      <summary>Gets or sets a value that determines how the intersecting areas contained in this <see cref="T:System.Windows.Media.StreamGeometry" /> are combined.  </summary>
      <returns>Indicates how the intersecting areas of this <see cref="T:System.Windows.Media.StreamGeometry" /> are combined.  The default value is EvenOdd.</returns>
    </member>
    <member name="F:System.Windows.Media.StreamGeometry.FillRuleProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.StreamGeometry.FillRule" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.StreamGeometry.FillRule" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.IsEmpty">
      <summary>Determines whether this <see cref="T:System.Windows.Media.StreamGeometry" /> describes a geometric shape.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.StreamGeometry" /> describes a geometry shape; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.MayHaveCurves">
      <summary>Determines whether this <see cref="T:System.Windows.Media.StreamGeometry" /> contains a curved segment.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.StreamGeometry" /> object has a curved segment; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.StreamGeometry.Open">
      <summary>Opens a <see cref="T:System.Windows.Media.StreamGeometryContext" /> that can be used to describe this <see cref="T:System.Windows.Media.StreamGeometry" /> object's contents.</summary>
      <returns>A <see cref="T:System.Windows.Media.StreamGeometryContext" /> that can be used to describe this <see cref="T:System.Windows.Media.StreamGeometry" /> object's contents.</returns>
    </member>
    <member name="T:System.Windows.Media.StreamGeometryContext">
      <summary>Describes a geometry using drawing commands. This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)">
      <summary>Draws an arc to the specified point.</summary>
      <param name="point">The destination point for the end of the arc.</param>
      <param name="size">The width and height of an oval whose perimeter is used to draw the angle. If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</param>
      <param name="rotationAngle">The rotation angle of the oval that specifies the curve. The curvature of the arc can be rotated with this parameter.</param>
      <param name="isLargeArc">true to draw the arc greater than 180 degrees; otherwise, false.</param>
      <param name="sweepDirection">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>Specifies the starting point for a new figure.</summary>
      <param name="startPoint">The <see cref="T:System.Windows.Point" /> where the figure begins.</param>
      <param name="isFilled">true to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, false.</param>
      <param name="isClosed">true to close the figure; otherwise, false. For example, if two connecting lines are drawn, and <paramref name="isClosed" /> is set to false, the drawing will just be of two lines but if <paramref name="isClosed" /> is set to true, the two lines will be closed to create a triangle.</param>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>Draws a Bezier curve to the specified point.</summary>
      <param name="point1">The first control point used to specify the shape of the curve.</param>
      <param name="point2">The second control point used to specify the shape of the curve.</param>
      <param name="point3">The destination point for the end of the curve.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.Close">
      <summary>Closes this context and flushes its content so that it can be rendered. </summary>
      <exception cref="T:System.ObjectDisposedException">This context has already been closed or disposed.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</summary>
      <param name="point">The destination point for the end of the line.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
      <summary>Draws one or more connected Bezier curves.</summary>
      <param name="points">The list of points that specify control points and destination points for one or more Bezier curves. The number of points in this list should be a multiple of three.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
      <summary>Draws one or more connected straight lines.</summary>
      <param name="points">The collection of points that specify destination points for one or more connected straight lines.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
      <summary>Draws one or more connected quadratic Bezier curves.</summary>
      <param name="points">The collection of points that specify control points and destination points for one or more quadratic Bezier curves. The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on. The list must contain an even number of points. </param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)">
      <summary>Draws a quadratic Bezier curve.</summary>
      <param name="point1">The control point used to specify the shape of the curve.</param>
      <param name="point2">The destination point for the end of the curve.</param>
      <param name="isStroked">true to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, false.</param>
      <param name="isSmoothJoin">true to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</exception>
    </member>
    <member name="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Stretch">
      <summary>Describes how content is resized to fill its allocated space.</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.None">
      <summary>The content preserves its original size. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Fill">
      <summary>The content is resized to fill the destination dimensions. The aspect ratio is not preserved. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Uniform">
      <summary>The content is resized to fit in the destination dimensions while it preserves its native aspect ratio. </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.UniformToFill">
      <summary>The content is resized to fill the destination dimensions while it preserves its native aspect ratio. If the aspect ratio of the destination rectangle differs from the source, the source content is clipped to fit in the destination dimensions.</summary>
    </member>
    <member name="T:System.Windows.Media.StyleSimulations">
      <summary>Defines an enumerator class that describes the simulation style of a font.</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.None">
      <summary>No font style simulation.</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldSimulation">
      <summary>Bold style simulation.</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.ItalicSimulation">
      <summary>Italic style simulation.</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldItalicSimulation">
      <summary>Bold and Italic style simulation.</summary>
    </member>
    <member name="T:System.Windows.Media.SweepDirection">
      <summary>Defines the direction an elliptical arc is drawn.</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Counterclockwise">
      <summary>Specifies that arcs are drawn in a counter clockwise (negative-angle) direction.</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Clockwise">
      <summary>Specifies that arcs are drawn in a clockwise (positive-angle) direction.</summary>
    </member>
    <member name="T:System.Windows.Media.TextEffect">
      <summary>Represents a text effect that can be applied to text objects.</summary>
    </member>
    <member name="M:System.Windows.Media.TextEffect.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffect" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.TextEffect.#ctor(System.Windows.Media.Transform,System.Windows.Media.Brush,System.Windows.Media.Geometry,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffect" /> class by specifying class property values.</summary>
      <param name="transform">The <see cref="T:System.Windows.Media.Transform" /> that is applied to the <see cref="T:System.Windows.Media.TextEffect" />.</param>
      <param name="foreground">The <see cref="T:System.Windows.Media.Brush" /> to apply to the content of the <see cref="T:System.Windows.Media.TextEffect" />.</param>
      <param name="clip">The clipping region of the <see cref="T:System.Windows.Media.TextEffect" />.</param>
      <param name="positionStart">The starting position in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.</param>
      <param name="positionCount">The number of positions in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffect.Clip">
      <summary>Gets or sets the clipping region of the <see cref="T:System.Windows.Media.TextEffect" />.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Geometry" /> that defines the clipping region.</returns>
    </member>
    <member name="F:System.Windows.Media.TextEffect.ClipProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextEffect.Clip" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextEffect.Clip" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffect.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffect.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffect.Foreground">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> to apply to the content of the <see cref="T:System.Windows.Media.TextEffect" />.  </summary>
      <returns>The brush used to apply to the <see cref="T:System.Windows.Media.TextEffect" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TextEffect.ForegroundProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextEffect.Foreground" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextEffect.Foreground" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffect.PositionCount">
      <summary>Gets or sets the position in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.  </summary>
      <returns>The <see cref="T:System.Int32" /> value representing the position in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.</returns>
    </member>
    <member name="F:System.Windows.Media.TextEffect.PositionCountProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextEffect.PositionCount" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextEffect.PositionCount" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffect.PositionStart">
      <summary>Gets or sets the starting position in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.  </summary>
      <returns>The <see cref="T:System.Int32" /> value representing the starting position in the text that the <see cref="T:System.Windows.Media.TextEffect" /> applies to.</returns>
    </member>
    <member name="F:System.Windows.Media.TextEffect.PositionStartProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextEffect.PositionStart" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextEffect.PositionStart" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffect.Transform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" /> that is applied to the <see cref="T:System.Windows.Media.TextEffect" />.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Transform" /> value of the <see cref="T:System.Windows.Media.TextEffect" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TextEffect.TransformProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TextEffect.Transform" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TextEffect.Transform" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.TextEffectCollection">
      <summary>Provides collection support for a collection of <see cref="T:System.Windows.Media.TextEffect" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffectCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TextEffectCollection" /> class.</summary>
      <param name="collection">An enumerator of type <see cref="T:System.Collections.IEnumerable" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.#ctor(System.Int32)">
      <summary>Initializes a new <see cref="T:System.Windows.Media.TextEffectCollection" /> instance that is empty and has the specified initial capacity. </summary>
      <param name="capacity">The number of elements that the new collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)">
      <summary>Adds a <see cref="T:System.Windows.Media.TextEffect" /> to the end of the collection.</summary>
      <param name="value">The <see cref="T:System.Windows.Media.TextEffect" /> to add to the collection.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Clear">
      <summary>Removes all elements from the list.</summary>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffectCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TextEffectCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)">
      <summary>Determines if the specified item is in the collection.</summary>
      <returns>true if the collection contains <paramref name="value" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextEffect" /> to locate in the collection</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Windows.Media.TextEffectCollection" /> to a one-dimensional array of type <see cref="T:System.Windows.Media.TextEffect" />, starting at the specified index of the target array.</summary>
      <param name="array">The array into which the collection's items are to be copied.</param>
      <param name="index">The index of <paramref name="array" /> at which to start copying the contents of the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.TextEffect" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextEffect" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)">
      <summary>Inserts a <see cref="T:System.Windows.Media.TextEffect" /> into a specific location in the collection.</summary>
      <param name="index">The zero-based index at which the value <see cref="T:System.Windows.Media.TextEffect" /> be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.TextEffect" /> to insert into the collection.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.Item(System.Int32)">
      <summary>Gets or sets the item that is stored at the zero-based index of the collection.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the collection from which to get or set the item.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.TextEffect" /> object from the collection.</summary>
      <returns>true if <paramref name="value" /> was removed fro the collection; otherwise, false. </returns>
      <param name="value">The <see cref="T:System.Windows.Media.TextEffect" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.TextEffect" /> at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.TextEffect" /> to remove.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.TextEffectCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.TextEffectCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.TextEffectCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.TextEffectCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.TextEffectCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the <see cref="T:System.Windows.Media.TextEffectCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.TextEffectCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.TextEffectCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.TextEffect" /> items in a <see cref="T:System.Windows.Media.TextEffectCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.TextEffectCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TextEffectCollection.Enumerator.System#IDisposable#Dispose">
      <summary>For a description of this members, see <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary>Defines the formatting methods supported by the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> class.</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary>Indicates that the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> lays out text by using GDI-compatible font metrics. </summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary>Indicates that the <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> lays out text by using ideal font metrics. </summary>
    </member>
    <member name="T:System.Windows.Media.TextHintingMode">
      <summary>Defines the rendering behavior of static or animated text.</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Auto">
      <summary>The rendering engine automatically determines whether to draw text with quality settings appropriate for animated or static text.</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Fixed">
      <summary>The rendering engine renders text with the highest static quality.</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Animated">
      <summary>The rendering engine renders text with the highest animated quality. </summary>
    </member>
    <member name="T:System.Windows.Media.TextRenderingMode">
      <summary>Defines the supported rendering modes for text.</summary>
    </member>
    <member name="F:System.Windows.Media.TextRenderingMode.Auto">
      <summary>Text is rendered with the most appropriate rendering algorithm based on the layout mode that was used to format the text.</summary>
    </member>
    <member name="F:System.Windows.Media.TextRenderingMode.Aliased">
      <summary>Text is rendered with bilevel anti-aliasing.</summary>
    </member>
    <member name="F:System.Windows.Media.TextRenderingMode.Grayscale">
      <summary>Text is rendered with grayscale anti-aliasing.</summary>
    </member>
    <member name="F:System.Windows.Media.TextRenderingMode.ClearType">
      <summary>Text is rendered with the most appropriate ClearType rendering algorithm based on the layout mode that was used to format the text.</summary>
    </member>
    <member name="T:System.Windows.Media.TileBrush">
      <summary>Describes a way to paint a region by using one or more tiles. </summary>
    </member>
    <member name="M:System.Windows.Media.TileBrush.#ctor">
      <summary>Provides initialization for base class values when called by the constructor of a derived class.  </summary>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentX">
      <summary>Gets or sets the horizontal alignment of content in the <see cref="T:System.Windows.Media.TileBrush" /> base tile.  </summary>
      <returns>A value that specifies the horizontal position of <see cref="T:System.Windows.Media.TileBrush" /> content in its base tile. The default value is <see cref="F:System.Windows.HorizontalAlignment.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentXProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.AlignmentX" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.AlignmentX" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentY">
      <summary>Gets or sets the vertical alignment of content in the <see cref="T:System.Windows.Media.TileBrush" /> base tile.  </summary>
      <returns>A value that specifies the vertical position of <see cref="T:System.Windows.Media.TileBrush" /> content in its base tile. The default value is <see cref="F:System.Windows.Media.AlignmentY.Center" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentYProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.AlignmentY" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.AlignmentY" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.TileBrush.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TileBrush" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.TileBrush.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TileBrush" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values.</summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> prope-rty of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.TileBrush.GetContentBounds(System.Windows.Rect@)">
      <summary>Obtains the current bounds of the <see cref="T:System.Windows.Media.TileBrush" /> content </summary>
      <param name="contentBounds">The output bounds of the <see cref="T:System.Windows.Media.TileBrush" /> content.</param>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Stretch">
      <summary>Gets or sets a value that specifies how the content of this <see cref="T:System.Windows.Media.TileBrush" /> stretches to fit its tiles.  </summary>
      <returns>A value that specifies how this <see cref="T:System.Windows.Media.TileBrush" /> content is projected onto its base tile. The default value is <see cref="F:System.Windows.Media.Stretch.Fill" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.StretchProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.Stretch" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.Stretch" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.TileMode">
      <summary>Gets or sets a value that specifies how a <see cref="T:System.Windows.Media.TileBrush" /> fills the area that you are painting if the base tile is smaller than the output area.  </summary>
      <returns>A value that specifies how the <see cref="T:System.Windows.Media.TileBrush" /> tiles fill the output area when the base tile, which is specified by the <see cref="P:System.Windows.Media.TileBrush.Viewport" /> property, is smaller than the output area. The default value is <see cref="F:System.Windows.Media.TileMode.None" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.TileModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.TileMode" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.TileMode" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Viewbox">
      <summary>Gets or sets the position and dimensions of the content in a <see cref="T:System.Windows.Media.TileBrush" /> tile.  </summary>
      <returns>The position and dimensions of the <see cref="T:System.Windows.Media.TileBrush" /> content. The default value is a rectangle (<see cref="T:System.Windows.Rect" />) that has a <see cref="P:System.Windows.Rect.TopLeft" /> of (0,0), and a <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> of 1.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.ViewboxProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.Viewbox" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.Viewbox" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.ViewboxUnits">
      <summary>Gets or sets a value that specifies whether the <see cref="P:System.Windows.Media.TileBrush.Viewbox" /> value is relative to the bounding box of the <see cref="T:System.Windows.Media.TileBrush" /> contents or whether the value is absolute.  </summary>
      <returns>A value that indicates whether the <see cref="P:System.Windows.Media.TileBrush.Viewbox" /> value is relative to the bounding box of the <see cref="T:System.Windows.Media.TileBrush" /> contents or whether it is an absolute value. The default value is <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.ViewboxUnitsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.ViewboxUnits" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.ViewboxUnits" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Viewport">
      <summary>Gets or sets the position and dimensions of the base tile for a <see cref="T:System.Windows.Media.TileBrush" />.  </summary>
      <returns>The position and dimensions of the base tile for a <see cref="T:System.Windows.Media.TileBrush" />. The default value is a rectangle (<see cref="T:System.Windows.Rect" />) with a <see cref="P:System.Windows.Rect.TopLeft" /> of (0,0) and a <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> of 1. </returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.ViewportProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.Viewport" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.Viewport" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.ViewportUnits">
      <summary>Gets or sets a <see cref="T:System.Windows.Media.BrushMappingMode" /> enumeration that specifies whether the value of the <see cref="P:System.Windows.Media.TileBrush.Viewport" />, which indicates the size and position of the <see cref="T:System.Windows.Media.TileBrush" /> base tile, is relative to the size of the output area.  </summary>
      <returns>Indicates whether the value of the <see cref="P:System.Windows.Media.TileBrush.Viewport" />, which describes the size and position of the <see cref="T:System.Windows.Media.TileBrush" /> tiles, is relative to the size of the whole output area. The default value is <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" />.</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.ViewportUnitsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TileBrush.ViewportUnits" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TileBrush.ViewportUnits" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.TileMode">
      <summary>Describes how a <see cref="T:System.Windows.Media.TileBrush" /> paints tiles onto an output area. </summary>
    </member>
    <member name="F:System.Windows.Media.TileMode.None">
      <summary>The base tile is drawn but not repeated. The remaining area is transparent </summary>
    </member>
    <member name="F:System.Windows.Media.TileMode.Tile">
      <summary>The base tile is drawn and the remaining area is filled by repeating the base tile. The right edge of one tile meets the left edge of the next, and similarly for the bottom and top edges.</summary>
    </member>
    <member name="F:System.Windows.Media.TileMode.FlipX">
      <summary>The same as <see cref="F:System.Windows.Media.TileMode.Tile" /> except that alternate columns of tiles are flipped horizontally. The base tile itself is not flipped. </summary>
    </member>
    <member name="F:System.Windows.Media.TileMode.FlipY">
      <summary>The same as <see cref="F:System.Windows.Media.TileMode.Tile" /> except that alternate rows of tiles are flipped vertically. The base tile itself is not flipped. </summary>
    </member>
    <member name="F:System.Windows.Media.TileMode.FlipXY">
      <summary>The combination of <see cref="F:System.Windows.Media.TileMode.FlipX" /> and <see cref="F:System.Windows.Media.TileMode.FlipY" />. The base tile itself is not flipped. </summary>
    </member>
    <member name="T:System.Windows.Media.ToleranceType">
      <summary>Determines the means by which an error tolerance value is interpreted. </summary>
    </member>
    <member name="F:System.Windows.Media.ToleranceType.Absolute">
      <summary>Error tolerance is treated as an absolute value.</summary>
    </member>
    <member name="F:System.Windows.Media.ToleranceType.Relative">
      <summary>Error tolerance is treated as a relative value.</summary>
    </member>
    <member name="T:System.Windows.Media.Transform">
      <summary>Defines functionality that enables transformations in a 2-D plane.Â Transformations include rotation (<see cref="T:System.Windows.Media.RotateTransform" />), scale (<see cref="T:System.Windows.Media.ScaleTransform" />), skew (<see cref="T:System.Windows.Media.SkewTransform" />), and translation (<see cref="T:System.Windows.Media.TranslateTransform" />). This class hierarchy differs from the <see cref="T:System.Windows.Media.Matrix" /> structure because it is a class and it supports animation and enumeration semantics. </summary>
    </member>
    <member name="M:System.Windows.Media.Transform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.Transform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.Transform.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Transform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.Transform.Identity">
      <summary>Gets an identity transform. </summary>
      <returns>An identity transform.</returns>
    </member>
    <member name="P:System.Windows.Media.Transform.Inverse">
      <summary>Gets the inverse of this transform, if it exists.</summary>
      <returns>The inverse of this transform, if it exists; otherwise, null.</returns>
    </member>
    <member name="M:System.Windows.Media.Transform.Parse(System.String)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Transform" /> from the specified string representation of a transformation matrix.</summary>
      <returns>A new transform that is constructed from the specified string.</returns>
      <param name="source">Six comma-delimited <see cref="T:System.Double" /> values that describe the new <see cref="T:System.Windows.Media.Transform" />. See also Remarks.</param>
    </member>
    <member name="M:System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)">
      <summary>Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</summary>
      <returns>The smallest axis-aligned bounding box that can contain the transformed <paramref name="rect" />.</returns>
      <param name="rect">The bounding box to transform.</param>
    </member>
    <member name="M:System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>Attempts to transform the specified point and returns a value that indicates whether the transformation was successful. </summary>
      <returns>true if <paramref name="inPoint" /> was transformed; otherwise, false.</returns>
      <param name="inPoint">The point to transform.</param>
      <param name="result">The result of transforming <paramref name="inPoint" />.</param>
    </member>
    <member name="P:System.Windows.Media.Transform.Value">
      <summary>Gets the current transformation as a <see cref="T:System.Windows.Media.Matrix" /> object. </summary>
      <returns>The current matrix transformation.</returns>
    </member>
    <member name="T:System.Windows.Media.TransformCollection">
      <summary> Represents a collection of <see cref="T:System.Windows.Media.Transform" /> objects that can be individually accessed by index. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.TransformCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformCollection" /> class that contains items copied from the specified collection of <see cref="T:System.Windows.Media.Transform" /> objects and has the same initial capacity as the number of items copied.</summary>
      <param name="collection">The collection whose items are copied to the new <see cref="T:System.Windows.Media.TransformCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformCollection" /> class with the specified capacity.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Media.Transform" /> objects that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Add(System.Windows.Media.Transform)">
      <summary>Adds a <see cref="T:System.Windows.Media.Transform" /> to the end of the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to add to the end of the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.TransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.TransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.TransformCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TransformCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.TransformCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Contains(System.Windows.Media.Transform)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.TransformCollection" /> contains the specified <see cref="T:System.Windows.Media.Transform" />. </summary>
      <returns>true if the <see cref="T:System.Windows.Media.Transform" /> is found in the <see cref="T:System.Windows.Media.TransformCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to locate in the <see cref="T:System.Windows.Media.TransformCollection" />. </param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.CopyTo(System.Windows.Media.Transform[],System.Int32)">
      <summary>Copies the items of the <see cref="T:System.Windows.Media.TransformCollection" /> to an array, starting at the specified array index. </summary>
      <param name="array">The one-dimensional array that is the destination of the items copied from the <see cref="T:System.Windows.Media.TransformCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.TransformCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.Count">
      <summary> Gets the number of items contained in the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <returns>The number of items in the <see cref="T:System.Windows.Media.TransformCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.TransformCollection.Enumerator" /> that can be used to iterate through the <see cref="T:System.Windows.Media.TransformCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.IndexOf(System.Windows.Media.Transform)">
      <summary>Determines the index of the specified item in the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <returns>The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.TransformCollection" />; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to locate in the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Insert(System.Int32,System.Windows.Media.Transform)">
      <summary> Inserts a <see cref="T:System.Windows.Media.Transform" /> into the <see cref="T:System.Windows.Media.TransformCollection" /> at the specified index. </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to insert into the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.TransformCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.TransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.TransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Windows.Media.Transform" /> at the specified index. </summary>
      <returns>The <see cref="T:System.Windows.Media.Transform" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Transform" /> to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.TransformCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.TransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.TransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Remove(System.Windows.Media.Transform)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Transform" /> from the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.TransformCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to remove from the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.TransformCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.TransformCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Media.Transform" /> at the specified index. </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Transform" /> to remove.</param>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.TransformCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.TransformCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.TransformCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.TransformCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.TransformCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.TransformCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.TransformCollection" />.</param>
    </member>
    <member name="T:System.Windows.Media.TransformCollection.Enumerator">
      <summary>Supports a simple iteration over a <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.Enumerator.Current">
      <summary>Gets the current item in the <see cref="T:System.Windows.Media.TransformCollection" />.</summary>
      <returns>The current item in the <see cref="T:System.Windows.Media.TransformCollection" />.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.TransformCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.TransformCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first item in the <see cref="T:System.Windows.Media.TransformCollection" />. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.TransformCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Windows.Media.TransformCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.TransformConverter">
      <summary>Converts a <see cref="T:System.Windows.Media.Transform" /> object to or from another object type. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformConverter" /> class as a <see cref="T:System.ComponentModel.TypeConverter" /> object. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this class can convert an object of a specified type to a <see cref="T:System.Windows.Media.Transform" /> type. </summary>
      <returns>true if conversion is possible; otherwise, false.</returns>
      <param name="context">The conversion context.</param>
      <param name="sourceType">The type from which to convert.</param>
    </member>
    <member name="M:System.Windows.Media.TransformConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this class can convert an object of a specified type to the specified destination type. </summary>
      <returns>true if conversion is possible; otherwise, false.</returns>
      <param name="context">The conversion context.</param>
      <param name="destinationType">The destination type.</param>
    </member>
    <member name="M:System.Windows.Media.TransformConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts from an object of a specified type to a <see cref="T:System.Windows.Media.Transform" /> object. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Transform" /> object.</returns>
      <param name="context">The conversion context.</param>
      <param name="culture">The culture information that applies to the conversion.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or cannot be converted to a <see cref="T:System.Windows.Media.Transform" />.</exception>
    </member>
    <member name="M:System.Windows.Media.TransformConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified <see cref="T:System.Windows.Media.Transform" /> to the specified type by using the specified context and culture information. </summary>
      <returns>An object that represents the converted <paramref name="value" />.</returns>
      <param name="context">The conversion context.</param>
      <param name="culture">The culture information that applies to the conversion.</param>
      <param name="value">The <see cref="T:System.Windows.Media.Transform" /> to convert.</param>
      <param name="destinationType">The destination type that the <paramref name="value" /> object is converted to.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is null or is not a <see cref="T:System.Windows.Media.Transform" />.-or-<paramref name="destinationType" /> is not a valid destination type.</exception>
    </member>
    <member name="T:System.Windows.Media.TransformGroup">
      <summary>Represents a composite <see cref="T:System.Windows.Media.Transform" /> composed of other <see cref="T:System.Windows.Media.Transform" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TransformGroup" /> class.</summary>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Children">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.TransformCollection" /> that defines this <see cref="T:System.Windows.Media.TransformGroup" />.  </summary>
      <returns>A collection of <see cref="T:System.Windows.Media.Transform" /> objects that define this <see cref="T:System.Windows.Media.TransformGroup" />. The default is an empty collection. </returns>
    </member>
    <member name="F:System.Windows.Media.TransformGroup.ChildrenProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TransformGroup.Children" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TransformGroup.Children" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TransformGroup" /> by making deep copies of its values.</summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TransformGroup" /> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Value">
      <summary>Gets the <see cref="T:System.Windows.Media.Matrix" /> structure that describes the transformation represented by this <see cref="T:System.Windows.Media.TransformGroup" />. </summary>
      <returns>A composite of the <see cref="T:System.Windows.Media.Transform" /> objects in this <see cref="T:System.Windows.Media.TransformGroup" />.</returns>
    </member>
    <member name="T:System.Windows.Media.TranslateTransform">
      <summary>Translates (moves) an object in the 2-D x-y coordinate system. </summary>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TranslateTransform" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.TranslateTransform" /> class and specifies the displacements in the direction of the x- and y- axes. </summary>
      <param name="offsetX">The displacement in the direction of the x-axis.</param>
      <param name="offsetY">The displacement in the direction of the y-axis.</param>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.Clone">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TranslateTransform" /> by making deep copies of its values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object returns false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.CloneCurrentValue">
      <summary>Creates a modifiable copy of this <see cref="T:System.Windows.Media.TranslateTransform" /> object by making deep copies of its values. This method does not copy resource references, data bindings, and animations, although it does copy their current values. </summary>
      <returns>A modifiable deep copy of the current object. The <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the cloned object is false even if the <see cref="P:System.Windows.Freezable.IsFrozen" /> property of the source is true.</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.Value">
      <summary>Gets a <see cref="T:System.Windows.Media.Matrix" /> representation of this <see cref="T:System.Windows.Media.TranslateTransform" />.</summary>
      <returns>A matrix that represents this <see cref="T:System.Windows.Media.TranslateTransform" />.</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.X">
      <summary>Gets or sets the distance to translate along the x-axis.  </summary>
      <returns>The distance to translate (move) an object along the x-axis. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.XProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TranslateTransform.X" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TranslateTransform.X" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.Y">
      <summary>Gets or sets the distance to translate (move) an object along the y-axis.  </summary>
      <returns>The distance to translate (move) an object along the y-axis. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.YProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.TranslateTransform.Y" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.TranslateTransform.Y" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Typeface">
      <summary>Represents a combination of <see cref="T:System.Windows.Media.FontFamily" />, <see cref="T:System.Windows.FontWeight" />, <see cref="T:System.Windows.FontStyle" />, and <see cref="T:System.Windows.FontStretch" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Typeface.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Typeface" /> class for the specified font family typeface name.</summary>
      <param name="typefaceName">The typeface name for the specified font family.</param>
    </member>
    <member name="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Typeface" /> class for the specified font family name, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, and <see cref="P:System.Windows.Media.Typeface.Stretch" /> values.</summary>
      <param name="fontFamily">The font family of the typeface.</param>
      <param name="style">The style of the typeface.</param>
      <param name="weight">The relative weight of the typeface.</param>
      <param name="stretch">The degree to which the typeface is stretched.</param>
    </member>
    <member name="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Typeface" /> class for the specified font family name, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, and <see cref="P:System.Windows.Media.Typeface.Stretch" /> values. In addition, a fallback font family is specified. </summary>
      <param name="fontFamily">The font family of the typeface.</param>
      <param name="style">The style of the typeface.</param>
      <param name="weight">The relative weight of the typeface.</param>
      <param name="stretch">The degree to which the typeface is stretched.</param>
      <param name="fallbackFontFamily">The font family that is used when a character is encountered that the primary font family (specified by the <paramref name="fontFamily" /> parameter) cannot display.</param>
    </member>
    <member name="P:System.Windows.Media.Typeface.CapsHeight">
      <summary>Gets the distance from the baseline to the top of an English capital letter for the typeface.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the distance from the baseline to the top of an English capital letter, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="M:System.Windows.Media.Typeface.Equals(System.Object)">
      <summary>Gets a value that indicates whether the current typeface and the specified typeface have the same <see cref="P:System.Windows.Media.Typeface.FontFamily" />, <see cref="P:System.Windows.Media.Typeface.Style" />, <see cref="P:System.Windows.Media.Typeface.Weight" />, <see cref="P:System.Windows.Media.Typeface.Stretch" />, and fallback font values. </summary>
      <returns>true if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.Typeface" /> object; otherwise, false. If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.Typeface" /> object, false is returned.</returns>
      <param name="o">The <see cref="T:System.Windows.Media.Typeface" /> to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Typeface.FaceNames">
      <summary>Gets a collection of culture-specific names for the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> value that represents the culture-specific names for the typeface.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.FontFamily">
      <summary>Gets the name of the font family from which the typeface was constructed. </summary>
      <returns>The <see cref="T:System.Windows.Media.FontFamily" /> from which the typeface was constructed.</returns>
    </member>
    <member name="M:System.Windows.Media.Typeface.GetHashCode">
      <summary>Serves as a hash function for <see cref="T:System.Windows.Media.Typeface" />. It is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
      <returns>An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.IsBoldSimulated">
      <summary>Determines whether to simulate a bold weight for the glyphs represented by the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>true if bold simulation is used for glyphs; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.IsObliqueSimulated">
      <summary>Determines whether to simulate an italic style for the glyphs represented by the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>true if italic simulation is used for glyphs; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.Stretch">
      <summary>Gets the stretch value for the <see cref="T:System.Windows.Media.Typeface" />. The stretch value determines whether a typeface is expanded or condensed when it is displayed.</summary>
      <returns>A <see cref="T:System.Windows.FontStretch" /> value that represents the stretch value for the typeface.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.StrikethroughPosition">
      <summary>Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the strikethrough position, measured from the baseline and expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.StrikethroughThickness">
      <summary>Gets a value that indicates the thickness of the strikethrough relative to the font em size.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the strikethrough thickness, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.Style">
      <summary>Gets the style of the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>A <see cref="T:System.Windows.FontStyle" /> value that represents the style value for the typeface.</returns>
    </member>
    <member name="M:System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)">
      <summary>Retrieves the <see cref="T:System.Windows.Media.GlyphTypeface" /> that corresponds to the <see cref="T:System.Windows.Media.Typeface" />.</summary>
      <returns>true if the out parameter is set to a <see cref="T:System.Windows.Media.GlyphTypeface" /> value; otherwise, false.</returns>
      <param name="glyphTypeface">
        <see cref="T:System.Windows.Media.GlyphTypeface" /> object that corresponds to this typeface, or null if the typeface was constructed from a composite font.</param>
    </member>
    <member name="P:System.Windows.Media.Typeface.UnderlinePosition">
      <summary>Gets a value that indicates the distance of the underline from the baseline for the typeface.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the underline position, measured from the baseline and expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.UnderlineThickness">
      <summary>Gets a value that indicates the thickness of the underline relative to the font em size for the typeface.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the underline thickness, expressed as a fraction of the font em size.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.Weight">
      <summary>Gets the relative weight of the typeface.</summary>
      <returns>A <see cref="T:System.Windows.FontWeight" /> value that represents the relative weight of the typeface.</returns>
    </member>
    <member name="P:System.Windows.Media.Typeface.XHeight">
      <summary>Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders.</summary>
      <returns>A <see cref="T:System.Double" /> that indicates the distance from the baseline to the top of an English lowercase letter (excluding ascenders), expressed as a fraction of the font em size.</returns>
    </member>
    <member name="T:System.Windows.Media.VectorCollection">
      <summary> Represents an ordered collection of <see cref="T:System.Windows.Vector" /> values. </summary>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.VectorCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Vector})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VectorCollection" /> class that contains items copied from the specified collection of <see cref="T:System.Windows.Vector" /> values and has the same initial capacity as the number of items copied.</summary>
      <param name="collection">The collection whose items are copied to the new <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VectorCollection" /> class with the specified capacity.</summary>
      <param name="capacity">The number of <see cref="T:System.Windows.Vector" /> values that the collection is initially capable of storing.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Add(System.Windows.Vector)">
      <summary>Adds a <see cref="T:System.Windows.Vector" /> to the end of the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <param name="value">The <see cref="T:System.Windows.Vector" /> to add to the end of the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.VectorCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.VectorCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Clear">
      <summary>Removes all items from the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.VectorCollection" /> is read-only.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VectorCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VectorCollection" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Contains(System.Windows.Vector)">
      <summary>Determines whether the <see cref="T:System.Windows.Media.VectorCollection" /> contains the specified <see cref="T:System.Windows.Vector" />. </summary>
      <returns>true if the <see cref="T:System.Windows.Vector" /> is found in the <see cref="T:System.Windows.Media.VectorCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Vector" /> to locate in the <see cref="T:System.Windows.Media.VectorCollection" />. </param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.CopyTo(System.Windows.Vector[],System.Int32)">
      <summary>Copies the items of the <see cref="T:System.Windows.Media.VectorCollection" /> to an array, starting at the specified array index. </summary>
      <param name="array">The one-dimensional array that is the destination of the items copied from the <see cref="T:System.Windows.Media.VectorCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional. -or-The number of items in the source <see cref="T:System.Windows.Media.VectorCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.Count">
      <summary> Gets the number of items contained in the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>The number of items in the <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>An <see cref="T:System.Windows.Media.VectorCollection.Enumerator" /> that can be used to iterate through the <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.IndexOf(System.Windows.Vector)">
      <summary>Determines the index of the specified item in the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>The index of <paramref name="value" /> if found in the <see cref="T:System.Windows.Media.VectorCollection" />; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Windows.Vector" /> to locate in the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Insert(System.Int32,System.Windows.Vector)">
      <summary> Inserts a <see cref="T:System.Windows.Vector" /> into the <see cref="T:System.Windows.Media.VectorCollection" /> at the specified index. </summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Windows.Vector" /> to insert into the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.VectorCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.VectorCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.VectorCollection" /> has a fixed size.</exception>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.Item(System.Int32)">
      <summary> Gets or sets the <see cref="T:System.Windows.Vector" /> at the specified index. </summary>
      <returns>The <see cref="T:System.Windows.Vector" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Vector" /> to get or set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.VectorCollection" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.VectorCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.VectorCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Parse(System.String)">
      <summary> Converts a <see cref="T:System.String" /> representation of a collection of vectors into an equivalent <see cref="T:System.Windows.Media.VectorCollection" />.      </summary>
      <returns>Returns the equivalent <see cref="T:System.Windows.Media.VectorCollection" />. </returns>
      <param name="source">The <see cref="T:System.String" /> representation of the collection of vectors. </param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Remove(System.Windows.Vector)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Windows.Vector" /> from the <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>true if <paramref name="value" /> was removed from the <see cref="T:System.Windows.Media.VectorCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Windows.Vector" /> to remove from the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Media.VectorCollection" /> is read-only.- or -The <see cref="T:System.Windows.Media.VectorCollection" /> has a fixed size.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.RemoveAt(System.Int32)">
      <summary> Removes the <see cref="T:System.Windows.Vector" /> at the specified index. </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Vector" /> to remove.</param>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.VectorCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</param>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Media.VectorCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.VectorCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Object" />.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.VectorCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>true if the the <see cref="T:System.Windows.Media.VectorCollection" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.VectorCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>For a description of this member, see <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
      <returns>A <see cref="T:System.String" /> containing the value of the current instance in the specified format.</returns>
      <param name="format">The <see cref="T:System.String" /> specifying the format to use.-or- null (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.-or- null (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.ToString">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of the <see cref="T:System.Windows.Vector" /> structures in this <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.ToString(System.IFormatProvider)">
      <summary> Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>Returns a <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Vector.X" /> and <see cref="P:System.Windows.Vector.Y" /> values of the <see cref="T:System.Windows.Vector" /> structures in this <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
      <param name="provider">Culture-specific formatting information.</param>
    </member>
    <member name="T:System.Windows.Media.VectorCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Vector" /> items in a <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.VectorCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection. </summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.VectorCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Media.VectorCollection" /> was modified after the enumerator was created.</exception>
    </member>
    <member name="P:System.Windows.Media.VectorCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:System.Windows.Media.VectorCollection.Enumerator.System#IDisposable#Dispose">
      <summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.VectorCollectionConverter">
      <summary>Converts instances of other types to and from a <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
    </member>
    <member name="M:System.Windows.Media.VectorCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VectorCollection" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.VectorCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an object can be converted from a specified type to an instance of a <see cref="T:System.Windows.Media.VectorCollection" />.  </summary>
      <returns>true if you can convert the type to a <see cref="T:System.Windows.Media.VectorCollection" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="sourceType">The type of the source to evaluate for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether an instance of a <see cref="T:System.Windows.Media.VectorCollection" /> can be converted to a different type. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.VectorCollection" /> can be converted to <paramref name="destinationType" />; otherwise, false.</returns>
      <param name="context">The context information of a type.</param>
      <param name="destinationType">The needed type for which you are evaluating this <see cref="T:System.Windows.Media.VectorCollection" /> for conversion.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Attempts to convert the specified object to a <see cref="T:System.Windows.Media.VectorCollection" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.VectorCollection" /> that is created from converting <paramref name="value" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The object being converted.</param>
    </member>
    <member name="M:System.Windows.Media.VectorCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Attempts to convert a <see cref="T:System.Windows.Media.VectorCollection" /> to a specified type. </summary>
      <returns>The object that is created from converting this <see cref="T:System.Windows.Media.VectorCollection" />.</returns>
      <param name="context">The context information of a type.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> of the type you want to convert.</param>
      <param name="value">The <see cref="T:System.Windows.Media.VectorCollection" /> to convert.</param>
      <param name="destinationType">The type to convert this <see cref="T:System.Windows.Media.VectorCollection" /> to.</param>
    </member>
    <member name="T:System.Windows.Media.VideoDrawing">
      <summary>Plays a media file. If the media is a video file, the <see cref="T:System.Windows.Media.VideoDrawing" /> draws it to the specified rectangle.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoDrawing.#ctor">
      <summary>Initializes a new instance of the VideoDrawing class.</summary>
    </member>
    <member name="M:System.Windows.Media.VideoDrawing.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VideoDrawing" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.VideoDrawing.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VideoDrawing" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoDrawing.Player">
      <summary>Gets or sets the media player associated with the drawing. </summary>
      <returns>The media player associated with the drawing.</returns>
    </member>
    <member name="F:System.Windows.Media.VideoDrawing.PlayerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.VideoDrawing.Player" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.VideoDrawing.Player" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.VideoDrawing.Rect">
      <summary>Gets or sets the rectangular area in which the video is drawn. </summary>
      <returns>The rectangle in which the video is drawn.</returns>
    </member>
    <member name="F:System.Windows.Media.VideoDrawing.RectProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.VideoDrawing.Rect" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.VideoDrawing.Rect" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Visual">
      <summary>Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</summary>
    </member>
    <member name="M:System.Windows.Media.Visual.#ctor">
      <summary>Provides the base initialization for objects derived from the <see cref="T:System.Windows.Media.Visual" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)">
      <summary>Defines the parent-child relationship between two visuals.</summary>
      <param name="child">The child visual object to add to parent visual.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)">
      <summary>Returns the common ancestor of two visual objects.</summary>
      <returns>The common ancestor of the visual object and <paramref name="otherVisual" /> if one exists; otherwise, null.</returns>
      <param name="otherVisual">A visual object of type <see cref="T:System.Windows.DependencyObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)">
      <summary>Returns the specified <see cref="T:System.Windows.Media.Visual" /> in the parent <see cref="T:System.Windows.Media.VisualCollection" />. </summary>
      <returns>The child in the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified <paramref name="index" /> value.</returns>
      <param name="index">The index of the visual object in the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
      <summary>Determines whether a geometry value is within the bounds of the visual object.</summary>
      <returns>A <see cref="T:System.Windows.Media.GeometryHitTestResult" /> that represents the result of the hit test.</returns>
      <param name="hitTestParameters">A <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
      <summary>Determines whether a point coordinate value is within the bounds of the visual object.</summary>
      <returns>A <see cref="T:System.Windows.Media.HitTestResult" /> that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</returns>
      <param name="hitTestParameters">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)">
      <summary>Determines whether the visual object is an ancestor of the descendant visual object.</summary>
      <returns>true if the visual object is an ancestor of <paramref name="descendant" />; otherwise, false.</returns>
      <param name="descendant">A value of type <see cref="T:System.Windows.DependencyObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)">
      <summary>Determines whether the visual object is a descendant of the ancestor visual object.</summary>
      <returns>true if the visual object is a descendant of <paramref name="ancestor" />; otherwise, false.</returns>
      <param name="ancestor">A value of type <see cref="T:System.Windows.DependencyObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of the visual object is modified.</summary>
      <param name="visualAdded">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection</param>
      <param name="visualRemoved">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection</param>
    </member>
    <member name="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>Called when the parent of the visual object is changed.</summary>
      <param name="oldParent">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Visual" /> object. If the <see cref="T:System.Windows.Media.Visual" /> object did not have a previous parent, the value of the parameter is null.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)">
      <summary>Converts a <see cref="T:System.Windows.Point" /> in screen coordinates into a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The converted <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="point">The <see cref="T:System.Windows.Point" /> value in screen coordinates.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)">
      <summary>Converts a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" /> into a <see cref="T:System.Windows.Point" /> in screen coordinates.</summary>
      <returns>The converted <see cref="T:System.Windows.Point" /> value in screen coordinates.</returns>
      <param name="point">The <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)">
      <summary>Removes the parent-child relationship between two visuals.</summary>
      <param name="child">The child visual object to remove from the parent visual.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
      <summary>Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</summary>
      <returns>A <see cref="T:System.Windows.Media.Media3D.GeneralTransform2DTo3D" />.</returns>
      <param name="ancestor">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</param>
    </member>
    <member name="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
      <summary>Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the visual object.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</returns>
      <param name="ancestor">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ancestor" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ancestor" /> is not an ancestor of the visual.</exception>
      <exception cref="T:System.InvalidOperationException">The visual objects are not related.</exception>
    </member>
    <member name="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
      <summary>Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object descendant.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</returns>
      <param name="descendant">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descendant" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The visual is not an ancestor of the <paramref name="descendant" /> visual.</exception>
      <exception cref="T:System.InvalidOperationException">The visual objects are not related.</exception>
    </member>
    <member name="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
      <summary>Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</returns>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visual" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The visual objects are not related.</exception>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualBitmapEffect">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The bitmap effect for this visual object.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualBitmapEffectInput">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The bitmap effect input value for this visual object.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualBitmapScalingMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value for the <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualCacheMode">
      <summary>Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualChildrenCount">
      <summary>Gets the number of child elements for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The number of child elements.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualClearTypeHint">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.ClearTypeHint" /> that determines how ClearType is rendered in the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.ClearTypeHint" /> of the <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualClip">
      <summary>Gets or sets the clip region of the <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</summary>
      <returns>The clip region value of the visual as a <see cref="T:System.Windows.Media.Geometry" /> type.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualEdgeMode">
      <summary>Gets or sets the edge mode of the <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</summary>
      <returns>The <see cref="T:System.Windows.Media.EdgeMode" /> value of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualEffect">
      <summary>Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualOffset">
      <summary>Gets or sets the offset value of the visual object.</summary>
      <returns>A <see cref="T:System.Windows.Vector" /> that specifies the offset value.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualOpacity">
      <summary>Gets or sets the opacity of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The opacity value of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualOpacityMask">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualParent">
      <summary>Gets the visual tree parent of the visual object.</summary>
      <returns>The <see cref="T:System.Windows.Media.Visual" /> parent.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualScrollableAreaClip">
      <summary>Gets or sets a clipped scrollable area for the <see cref="T:System.Windows.Media.Visual" />. </summary>
      <returns>A <see cref="T:System.Windows.Rect" /> that represents the scrollable clipping area, or null if no clipping area is assigned. </returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualTextHintingMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.TextHintingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextHintingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualTextRenderingMode">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.TextRenderingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualTransform">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The transform value of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualXSnappingGuidelines">
      <summary>Gets or sets the x-coordinate (vertical) guideline collection.</summary>
      <returns>The x-coordinate guideline collection of the visual.</returns>
    </member>
    <member name="P:System.Windows.Media.Visual.VisualYSnappingGuidelines">
      <summary>Gets or sets the y-coordinate (horizontal) guideline collection.</summary>
      <returns>The y-coordinate guideline collection of the visual.</returns>
    </member>
    <member name="T:System.Windows.Media.VisualBrush">
      <summary>Paints an area with a <see cref="P:System.Windows.Media.VisualBrush.Visual" />. </summary>
    </member>
    <member name="M:System.Windows.Media.VisualBrush.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VisualBrush" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VisualBrush" /> class that contains the specified <see cref="P:System.Windows.Media.VisualBrush.Visual" />.</summary>
      <param name="visual">The contents of the new <see cref="T:System.Windows.Media.VisualBrush" />.</param>
    </member>
    <member name="P:System.Windows.Media.VisualBrush.AutoLayoutContent">
      <summary>Gets or sets a value that specifies whether this <see cref="T:System.Windows.Media.VisualBrush" /> will run layout its <see cref="P:System.Windows.Media.VisualBrush.Visual" />. </summary>
      <returns>true if this Brush should run layout on its <see cref="P:System.Windows.Media.VisualBrush.Visual" />; otherwise, false. The default is true.</returns>
    </member>
    <member name="F:System.Windows.Media.VisualBrush.AutoLayoutContentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualBrush.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VisualBrush" />, making deep copies of this object's values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualBrush.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.VisualBrush" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="P:System.Windows.Media.VisualBrush.Visual">
      <summary>Gets or sets the brush's content. </summary>
      <returns>The brush's content. The default is null. </returns>
    </member>
    <member name="F:System.Windows.Media.VisualBrush.VisualProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.VisualBrush.Visual" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.VisualBrush.Visual" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.VisualCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</summary>
      <param name="parent">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
      <summary>Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <returns>The index in the collection at which <paramref name="visual" /> was added.</returns>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
      <exception cref="T:System.ArgumentException">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</exception>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.Capacity">
      <summary>Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</summary>
      <returns>The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Clear">
      <summary>Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
      <summary>Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</summary>
      <returns>true if <paramref name="visual" /> is contained in the collection; otherwise, false.</returns>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the items in the collection to an array, starting at a specific array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
      <summary>Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</summary>
      <param name="array">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</param>
      <param name="index">The index to start copying from within <paramref name="array" />.</param>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.GetEnumerator">
      <summary>Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
      <summary>Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The index of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
      <summary>Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which the value should be inserted.</param>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</summary>
      <returns>The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</returns>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe). </summary>
      <returns>The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</returns>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">The new child element already has a parent, or the value at the specified index is not null.</exception>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <param name="visual">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</param>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
      <summary>Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <param name="index">The zero-based index of the visual to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <param name="index">The zero-based index of the range of elements to remove.</param>
      <param name="count">The number of elements to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</exception>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
      <returns>A value of type <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An object that can be used to iterate through the collection. </returns>
    </member>
    <member name="T:System.Windows.Media.VisualCollection.Enumerator">
      <summary>Enumerates <see cref="T:System.Windows.Media.Visual" /> items in a <see cref="T:System.Windows.Media.VisualCollection" />.</summary>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.Enumerator.Current">
      <summary>Gets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Enumerator.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator successfully advanced to the next element; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.VisualCollection.Enumerator.Reset">
      <summary>Resets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="P:System.Windows.Media.VisualCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="T:System.Windows.Media.VisualTarget">
      <summary>Provides functionality for connecting one visual tree to another visual tree across thread boundaries.</summary>
    </member>
    <member name="M:System.Windows.Media.VisualTarget.#ctor(System.Windows.Media.HostVisual)">
      <summary>Constructor that creates a new <see cref="T:System.Windows.Media.VisualTarget" />.</summary>
      <param name="hostVisual">A value of type <see cref="T:System.Windows.Media.HostVisual" />.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTarget.Dispose">
      <summary>Cleans up the state associated with the <see cref="T:System.Windows.Interop.HwndTarget" />.</summary>
    </member>
    <member name="P:System.Windows.Media.VisualTarget.TransformFromDevice">
      <summary>Returns a matrix that can be used to transform coordinates from the rendering destination device to the <see cref="T:System.Windows.Media.VisualTarget" />.</summary>
      <returns>Gets a value of type <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="P:System.Windows.Media.VisualTarget.TransformToDevice">
      <summary>Returns a matrix that can be used to transform coordinates from the <see cref="T:System.Windows.Media.VisualTarget" /> to the rendering destination device.</summary>
      <returns>Gets a value of type <see cref="T:System.Windows.Media.Matrix" />.</returns>
    </member>
    <member name="T:System.Windows.Media.VisualTreeHelper">
      <summary>Provides utility methods that perform common tasks involving nodes in a visual tree.</summary>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
      <summary>Returns the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> for this <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> that contains the bitmap effect.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
      <summary>Returns the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> for this <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> that contains the bitmap effect input value.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
      <summary>Retrieves the cached representation of the specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.CacheMode" /> for <paramref name="reference" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> to get the <see cref="T:System.Windows.Media.CacheMode" /> for.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
      <summary>Returns the child visual object from the specified collection index within a specified parent.</summary>
      <returns>The index value of the child visual object.</returns>
      <param name="reference">The parent visual, referenced as a <see cref="T:System.Windows.DependencyObject" />.</param>
      <param name="childIndex">The index that represents the child visual that is contained by <paramref name="reference" />.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
      <summary>Returns the number of children that the specified visual object contains.</summary>
      <returns>The number of child visuals that the parent visual contains.</returns>
      <param name="reference">The parent visual that is referenced as a <see cref="T:System.Windows.DependencyObject" />.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
      <summary>Return the clip region of the specified <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</summary>
      <returns>The clip region value of the <see cref="T:System.Windows.Media.Visual" /> returned as a <see cref="T:System.Windows.Media.Geometry" /> type.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose clip region value is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
      <summary>Returns the cached bounding box rectangle for the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</summary>
      <returns>The bounding box 3D rectangle for the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</returns>
      <param name="reference">The 3D visual whose bounding box value is computed.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
      <summary>Returns the cached bounding box rectangle for the specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The bounding box rectangle for the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose bounding box value is computed.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
      <summary>Returns the union of all the content bounding boxes for all the descendants of the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />, which includes the content bounding box of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</summary>
      <returns>Returns the bounding box 3D rectangle for the 3D visual.</returns>
      <param name="reference">The 3D visual whose bounding box value for all descendants is computed.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
      <summary>Returns the union of all the content bounding boxes for all the descendants of the <see cref="T:System.Windows.Media.Visual" />, which includes the content bounding box of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The bounding box rectangle for the specified <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose bounding box value for all descendants is computed.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
      <summary>Returns the drawing content of the specified <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The drawing content of the <see cref="T:System.Windows.Media.Visual" /> returned as a <see cref="T:System.Windows.Media.DrawingGroup" /> type.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose drawing content is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
      <summary>Returns the edge mode of the specified <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</summary>
      <returns>The <see cref="T:System.Windows.Media.EdgeMode" /> value of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose edge mode value is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
      <summary>Gets the bitmap effect for the specified <see cref="T:System.Windows.Media.Visual" />. </summary>
      <returns>The <see cref="T:System.Windows.Media.Effects.Effect" /> applied to <paramref name="reference" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> to get the bitmap effect for.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
      <summary>Returns the offset of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A <see cref="T:System.Windows.Vector" /> that represents the offset value of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose offset is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
      <summary>Returns the opacity of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A value of type <see cref="T:System.Double" /> that represents the opacity value of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose opacity value is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
      <summary>Returns a <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>A value of type <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose opacity mask value is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>Returns a <see cref="T:System.Windows.DependencyObject" /> value that represents the parent of the visual object.</summary>
      <returns>The parent of the visual.</returns>
      <param name="reference">The visual whose parent is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
      <summary>Returns a <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</summary>
      <returns>The transform value of the <see cref="T:System.Windows.Media.Visual" />, or null if <paramref name="reference" /> does not have a transform defined.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose transform value is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
      <summary>Returns an X-coordinate (vertical) guideline collection.</summary>
      <returns>The X-coordinate guideline collection of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose X-coordinate guideline collection is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
      <summary>Returns a Y-coordinate (horizontal) guideline collection.</summary>
      <returns>The Y-coordinate guideline collection of the <see cref="T:System.Windows.Media.Visual" />.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> whose Y-coordinate guideline collection is returned.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
      <summary>Initiates a hit test on the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />, with caller-defined <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> methods.</summary>
      <param name="reference">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to hit test.</param>
      <param name="filterCallback">The method that represents the hit test filter callback value.</param>
      <param name="resultCallback">The method that represents the hit test result callback value.</param>
      <param name="hitTestParameters">The 3D parameter value to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
      <summary>Initiates a hit test on the specified <see cref="T:System.Windows.Media.Visual" />, with caller-defined <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> methods.</summary>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> to hit test.</param>
      <param name="filterCallback">The method that represents the hit test filter callback value.</param>
      <param name="resultCallback">The method that represents the hit test result callback value.</param>
      <param name="hitTestParameters">The parameter value to hit test against.</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
      <summary>Returns the topmost <see cref="T:System.Windows.Media.Visual" /> object of a hit test by specifying a <see cref="T:System.Windows.Point" />.</summary>
      <returns>The hit test result of the <see cref="T:System.Windows.Media.Visual" />, returned as a <see cref="T:System.Windows.Media.HitTestResult" /> type.</returns>
      <param name="reference">The <see cref="T:System.Windows.Media.Visual" /> to hit test.</param>
      <param name="point">The point value to hit test against.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.Animatable">
      <summary>Abstract class that provides animation support. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Animatable" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
      <summary>Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />. If the property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</summary>
      <param name="dp">The property to animate.</param>
      <param name="clock">The clock with which to animate the specified property. If <paramref name="clock" /> is null, all animations will be removed from the specified property (but not stopped). </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies an <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to the specified <see cref="T:System.Windows.DependencyProperty" />. If the property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used.</summary>
      <param name="dp">The property to animate.</param>
      <param name="clock">The clock with which to animate the specified property. If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <paramref name="clock" /> is null, all animations will be removed from the specified property (but not stopped). If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /> and clock is null, this method has no effect.</param>
      <param name="handoffBehavior">A value that specifies how the new animation should interact with any current animations already affecting the property value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
      <summary>Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />. The animation is started when the next frame is rendered. If the specified property is already animated, the <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> handoff behavior is used.</summary>
      <param name="dp">The property to animate.</param>
      <param name="animation">The animation used to animate the specified property.If the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is null, any current animations will be removed and the current value of the property will be held.If <paramref name="animation" /> is null, all animations will be removed from the property and the property value will revert back to its base value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies an animation to the specified <see cref="T:System.Windows.DependencyProperty" />. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior" /> is used. </summary>
      <param name="dp">The property to animate.</param>
      <param name="animation">The animation used to animate the specified property.If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and the animation's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is null, any current animations will be removed and the current value of the property will be held. If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /> and <paramref name="animation" /> is a null reference, all animations will be removed from the property and the property value will revert back to its base value.If <paramref name="handoffBehavior" /> is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" />, this method will have no effect if the animation or its <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> is null.</param>
      <param name="handoffBehavior">A value that specifies how the new animation should interact with any current animations already affecting the property value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Animatable" />, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
      <summary>Makes this <see cref="T:System.Windows.Media.Animation.Animatable" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this <see cref="T:System.Windows.Media.Animation.Animatable" /> can be made unmodifiable, or false if it cannot be made unmodifiable. If <paramref name="isChecking" /> is false, this method returns true if the if this <see cref="T:System.Windows.Media.Animation.Animatable" /> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <summary>Returns the non-animated value of the specified <see cref="T:System.Windows.DependencyProperty" />.</summary>
      <returns>The value that would be returned if the specified property were not animated. </returns>
      <param name="dp">Identifies the property whose base (non-animated) value should be retrieved. </param>
    </member>
    <member name="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
      <summary>Gets a value that indicates whether one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties.</summary>
      <returns>true if one or more <see cref="T:System.Windows.Media.Animation.AnimationClock" /> objects is associated with any of this object's dependency properties; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="target"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.AnimationClock">
      <summary>Maintains the run-time state of an <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and processes its output values. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationClock.#ctor(System.Windows.Media.Animation.AnimationTimeline)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.AnimationClock" /> class. </summary>
      <param name="animation">The animation that describes this clock's output values and timing behaviors.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationClock.GetCurrentValue(System.Object,System.Object)">
      <summary>Gets the current output value of the <see cref="T:System.Windows.Media.Animation.AnimationClock" />.</summary>
      <returns>The current value of this <see cref="T:System.Windows.Media.Animation.AnimationClock" />. </returns>
      <param name="defaultOriginValue">The origin value provided to the clock if its animation does not have its own start value. If this clock is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous clock in the chain</param>
      <param name="defaultDestinationValue">The destination value provided to the clock if its animation does not have its own destination value. If this clock is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous clock in the chain </param>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationClock.Timeline">
      <summary>Gets the <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> that describes this clock's behavior.</summary>
      <returns>The animation that describes this clock's behavior.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.AnimationException">
      <summary>The exception that is thrown when an error occurs while animating a property.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationException.Clock">
      <summary>Gets the clock that generates the animated values. </summary>
      <returns>The clock that generates the animated values.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationException.Property">
      <summary>Gets the animated dependency property.</summary>
      <returns>The animated dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationException.Target">
      <summary>Gets the animated object.</summary>
      <returns>The animated object.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.AnimationTimeline">
      <summary>Defines a segment of time over which output values are produced. These values are used to animate a target property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.AllocateClock">
      <summary>Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> for this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</summary>
      <returns>A clock for this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.CreateClock">
      <summary>Creates a new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> from this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />. </summary>
      <returns>A new clock, created from this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property. </returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. If this animation is the first in a composition chain it will be the base value of the property being animated; otherwise it will be the value returned by the previous animation in the chain.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />. </summary>
      <returns>The animation's natural duration. This method always returns a <see cref="T:System.Windows.Duration" /> of 1 second. </returns>
      <param name="clock">The clock that was created for this <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />.</param>
    </member>
    <member name="F:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty">
      <summary>Identifies the IsAdditiveÂ dependency property.</summary>
      <returns>The IsAdditiveÂ dependency property identifier. </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty">
      <summary>Identifies the IsCumulativeÂ dependency property.</summary>
      <returns>The IsCumulativeÂ dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault">
      <summary>Gets a value that indicates whether this animation uses the defaultDestinationValue parameter of the <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> method as its destination value.</summary>
      <returns>true if the defaultDesintationValue parameter of the <see cref="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)" /> method is the value of this animation when reaches the end of its simple duration (its clock has a <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> of 1); otherwise, false. The default implementation always returns false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.AnimationTimeline.TargetPropertyType">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Type" /> of property that can be animated.</summary>
      <returns>The type of property that can be animated by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BackEase">
      <summary>Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BackEase" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BackEase.Amplitude">
      <summary>Gets or sets the amplitude of retraction associated with a <see cref="T:System.Windows.Media.Animation.BackEase" /> animation.</summary>
      <returns>The amplitude of retraction associated with a <see cref="T:System.Windows.Media.Animation.BackEase" /> animation. This value must be greater than or equal to 0.The default value is 1.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.BooleanAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Boolean" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.BooleanAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.GetCurrentValue(System.Boolean,System.Boolean,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.GetCurrentValueCore(System.Boolean,System.Boolean,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames">
      <summary> Animates the value of a property that takes a <see cref="T:System.Boolean" /> along a set of <see cref="P:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this object can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this object is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> object to be cloned.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.GetCurrentValueCore(System.Boolean,System.Boolean,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.BooleanKeyFrame">
      <summary>Abstract class that, when implemented, defines a segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrame.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrame.#ctor(System.Boolean,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrame.InterpolateValue(System.Boolean,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrame.InterpolateValueCore(System.Boolean,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> should be reached  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BooleanKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.KeyTime" />. The default value is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BooleanKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BooleanKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Add(System.Windows.Media.Animation.BooleanKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Clear">
      <summary> Removes all <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Contains(System.Windows.Media.Animation.BooleanKeyFrame)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The key frame to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CopyTo(System.Windows.Media.Animation.BooleanKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />. </summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.IndexOf(System.Windows.Media.Animation.BooleanKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.BooleanKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.IsSynchronized">
      <summary> Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Remove(System.Windows.Media.Animation.BooleanKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.BooleanKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.BounceEase">
      <summary>Represents an easing function that creates an animated bouncing effect.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.BounceEase" /> class. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounces">
      <summary>Gets or sets the number of bounces. </summary>
      <returns>The number of bounces. The value must be greater than or equal to zero. Negative values resolve to zero. The default is 3. </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncesProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounciness">
      <summary>Gets or sets a value that specifies how bouncy the bounce animation is. Low values of this property result in bounces with little lose of height between bounces (more bouncy) while high values result in dampened bounces (less bouncy). </summary>
      <returns>The value that specifies how bouncy the bounce animation is. This value must be positive. The default value is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncinessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.ByteAnimation">
      <summary>Animates the value of a <see cref="T:System.Byte" /> property between two target values using linear interpolation over a specified <see cref="T:System.Windows.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.#ctor(System.Byte,System.Byte,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.#ctor(System.Byte,System.Byte,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.#ctor(System.Byte,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.#ctor(System.Byte,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ByteAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimation" />.     </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ByteAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ByteAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimation.GetCurrentValueCore(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.ByteAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ByteAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ByteAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Byte" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationBase.GetCurrentValue(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value.</param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationBase.GetCurrentValueCore(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation. </returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Byte" /> property along a set of <see cref="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.GetCurrentValueCore(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ByteKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ByteKeyFrame">
      <summary> Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrame.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrame.InterpolateValue(System.Byte,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrame.InterpolateValueCore(System.Byte,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ByteKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ByteKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Add(System.Windows.Media.Animation.ByteKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Contains(System.Windows.Media.Animation.ByteKeyFrame)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The key frame to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ByteKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ByteKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ByteKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> at the specified index position.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ByteKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Remove(System.Windows.Media.Animation.ByteKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> object from the collection.</summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ByteKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.CharAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Char" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.CharAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationBase.GetCurrentValue(System.Char,System.Char,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationBase.GetCurrentValueCore(System.Char,System.Char,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Char" /> property along a set of <see cref="P:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.CharKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.GetCurrentValueCore(System.Char,System.Char,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.CharKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.CharKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.CharAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrame.#ctor(System.Char)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrame.#ctor(System.Char,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrame.InterpolateValue(System.Char,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrame.InterpolateValueCore(System.Char,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.CharKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.CharKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.CharKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.CharKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Add(System.Windows.Media.Animation.CharKeyFrame)">
      <summary> Adds a <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Clear">
      <summary> Removes all <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Contains(System.Windows.Media.Animation.CharKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CopyTo(System.Windows.Media.Animation.CharKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.CharKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.IndexOf(System.Windows.Media.Animation.CharKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.CharKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.IsSynchronized">
      <summary> Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.CharKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Remove(System.Windows.Media.Animation.CharKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> object from the collection.</summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.CharKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.CircleEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CircleEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime"> Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.Clock">
      <summary>Maintains run-time timing state for a <see cref="T:System.Windows.Media.Animation.Timeline" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Clock" /> class, using the specified <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> as a template. The new <see cref="T:System.Windows.Media.Animation.Clock" /> object has no children. </summary>
      <param name="timeline">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this clock should be constructed. Clocks are not created for any child <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> objects, if they exist.</param>
    </member>
    <member name="E:System.Windows.Media.Animation.Clock.Completed">
      <summary>Occurs when this clock has completely finished playing.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.Controller">
      <summary>Gets a <see cref="T:System.Windows.Media.Animation.ClockController" /> that can be used to start, pause, resume, seek, skip, stop, or remove this <see cref="T:System.Windows.Media.Animation.Clock" />. </summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.ClockController" /> if this is a root clock; otherwise, null. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
      <summary>Gets the rate at which the clock's time is currently progressing, compared to real-world time.</summary>
      <returns>The rate at which this clock's time is current progressing, compared to real-world time. If the clock is stopped, this property returns null.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated">
      <summary>Occurs when the clock's speed is updated.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime">
      <summary>Gets the current global time, as established by the WPF timing system.Â </summary>
      <returns>The current global time for the WPF timing system.Â </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentIteration">
      <summary>Get the current iteration of this clock. </summary>
      <returns>This clock's current iteration within its current active period, or null if this clock is stopped. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentProgress">
      <summary>Gets the current progress of this <see cref="T:System.Windows.Media.Animation.Clock" /> within its current iteration. </summary>
      <returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentState">
      <summary>Gets a value indicating whether the clock is currently <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />. </summary>
      <returns>The current state of the clock: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated">
      <summary>Occurs when the clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property is updated. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.CurrentTime">
      <summary>Gets this clock's current time within its current iteration.</summary>
      <returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of this clock.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated">
      <summary>Occurs when this clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> becomes invalid. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement">
      <summary>When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.GetCanSlip">
      <summary>Returns whether the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external time source, which may require synchronization with the timing system.</summary>
      <returns>Returns true if the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external source for time, which may require synchronization with the timing system; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore">
      <summary>Gets this clock's current time within its current iteration.</summary>
      <returns>The current time of this clock if it is active or filling; otherwise, <see cref="F:System.TimeSpan.Zero" />. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.HasControllableRoot">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" /> is part of a controllable clock tree.</summary>
      <returns>true if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.IsPaused">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" />, or any of its parents, is paused. </summary>
      <returns>true if this <see cref="T:System.Windows.Media.Animation.Clock" /> or any of its parents is paused; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.NaturalDuration">
      <summary>Gets the natural duration of this clock's <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</summary>
      <returns>The natural duration of this clock, as determined by its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.Parent">
      <summary>Gets the clock that is the parent of this clock. </summary>
      <returns>The parent of this clock or null if this clock is a root.</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Clock.RemoveRequested">
      <summary>Occurs when the <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> method is called on this <see cref="T:System.Windows.Media.Animation.Clock" /> or one of its parent clocks. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.SpeedChanged">
      <summary>When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Clock.Stopped">
      <summary>When implemented in a derived class, will be invoked whenever a clock is stopped using the <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> method.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Clock.Timeline">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockCollection">
      <summary>Represents an ordered collection of <see cref="T:System.Windows.Media.Animation.Clock" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Add(System.Windows.Media.Animation.Clock)">
      <summary>Adds a new <see cref="T:System.Windows.Media.Animation.Clock" /> object to the end of this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</summary>
      <param name="item">The object to add.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Clear">
      <summary>Removes all items from this <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Contains(System.Windows.Media.Animation.Clock)">
      <summary>Indicates whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> contains the specified <see cref="T:System.Windows.Media.Animation.Clock" /> object.</summary>
      <returns>true if <paramref name="item" /> is found; otherwise, false.</returns>
      <param name="item">The object to locate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.CopyTo(System.Windows.Media.Animation.Clock[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.Animation.Clock" /> objects of this <see cref="T:System.Windows.Media.Animation.ClockCollection" /> to an array of Clocks, starting at the specified index position. </summary>
      <param name="array">The destination array.</param>
      <param name="index">The zero-based index position where copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockCollection.Count">
      <summary>Gets the number of items contained in this <see cref="T:System.Windows.Media.Animation.ClockCollection" />. </summary>
      <returns>The number of items contained in this instance. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Object)">
      <summary>Indicates whether this instance is equal to the specified object. </summary>
      <returns>true if <paramref name="obj" /> is equal to this instance; otherwise false.</returns>
      <param name="obj">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections are equal.</summary>
      <returns>true if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise, false.</returns>
      <param name="objA">The first value to compare.</param>
      <param name="objB">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.GetHashCode">
      <summary>Returns a 32-bit signed integer hash code representing this instance.</summary>
      <returns>A 32-bit signed integer.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Media.Animation.ClockCollection" /> is read-only.</summary>
      <returns>true if this instance is read-only; otherwise false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Clock" /> object at the specified <paramref name="index" /> position.</returns>
      <param name="index">The index position to access.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.op_Equality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)">
      <summary>Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for equality.</summary>
      <returns>true if <paramref name="objA" /> and <paramref name="objB" /> are equal; otherwise false.</returns>
      <param name="objA">The first object to compare.</param>
      <param name="objB">The second object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.op_Inequality(System.Windows.Media.Animation.ClockCollection,System.Windows.Media.Animation.ClockCollection)">
      <summary>Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.ClockCollection" /> collections for inequality.</summary>
      <returns>true if <paramref name="objA" /> and <paramref name="objB" /> are not equal; otherwise false.</returns>
      <param name="objA">The first object to compare.</param>
      <param name="objB">The second object to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.Remove(System.Windows.Media.Animation.Clock)">
      <summary>Removes the specified <see cref="T:System.Windows.Media.Animation.Clock" /> from the <see cref="T:System.Windows.Media.Animation.ClockCollection" />.</summary>
      <returns>true if <paramref name="item" /> was successfully removed; otherwise, false.</returns>
      <param name="item">The object to remove.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockController">
      <summary>Interactively controls a <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Begin">
      <summary>Sets the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> to begin at the next tick.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockController.Clock">
      <summary>Gets the <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Clock" /> controlled by this <see cref="T:System.Windows.Media.Animation.ClockController" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Pause">
      <summary>Stops the target <see cref="T:System.Windows.Media.Animation.Clock" /> from progressing. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Remove">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Clock" /> associated with this <see cref="T:System.Windows.Media.Animation.ClockController" /> from the properties it animates. The clock and its child clocks will no longer affect these properties. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Resume">
      <summary>Enables a <see cref="T:System.Windows.Media.Animation.Clock" /> that was previously paused to resume progressing.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks the target <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> by the specified amount when the next tick occurs. If the target clock is stopped, seeking makes it active again.</summary>
      <param name="offset">The seek offset, measured in the target clock's time. This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />. </param>
      <param name="origin">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
      <summary>Seeks the target <see cref="T:System.Windows.Media.Animation.Clock" /> by the specified amount immediately. If the target clock is stopped, seeking makes it active again.</summary>
      <param name="offset">The seek offset, measured in the target clock's time. This offset is relative to the clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />, depending on the value of <paramref name="origin" />.</param>
      <param name="origin">A value that indicates whether the specified offset is relative to the target clock's <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> or <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.SkipToFill">
      <summary>Advances the current time of the target <see cref="T:System.Windows.Media.Animation.Clock" /> to the end of its active period. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockController.SpeedRatio">
      <summary>Gets or sets the interactive speed of the target <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
      <returns>A finite value greater than zero that describes the interactive speed of the target clock. This value is multiplied against the value of the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> of the clock's <see cref="T:System.Windows.Media.Animation.Timeline" />. For example, if the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is 0.5 and the <see cref="T:System.Windows.Media.Animation.ClockController" /> object's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0). The default value is 1.0.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockController.Stop">
      <summary>Stops the target <see cref="T:System.Windows.Media.Animation.Clock" />. </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockGroup">
      <summary>An assemblage of <see cref="T:System.Windows.Media.Animation.Clock" /> types with behavior based off of a <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ClockGroup.#ctor(System.Windows.Media.Animation.TimelineGroup)">
      <summary>Instantiates a new instance of the <see cref="T:System.Windows.Media.Animation.ClockGroup" /> class.</summary>
      <param name="timelineGroup">The object defining the characteristics of the new class.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockGroup.Children">
      <summary>Gets the children collection of this <see cref="T:System.Windows.Media.Animation.ClockGroup" />.</summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.ClockCollection" /> that represents the children of this <see cref="T:System.Windows.Media.Animation.ClockGroup" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ClockGroup.Timeline">
      <summary>Gets the <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> object that dictates the behavior of this <see cref="T:System.Windows.Media.Animation.ClockGroup" /> instance.</summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> object.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockState">
      <summary>Describes the potential states of a timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> object. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Active">
      <summary>The current <see cref="T:System.Windows.Media.Animation.Clock" /> time changes in direct relation to that of its parent. If the timeline is an animation, it is actively affecting targeted properties, so their value may change from tick (a sampling point in time) to tick. If the timeline has children, they may be <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Filling">
      <summary>The <see cref="T:System.Windows.Media.Animation.Clock" /> timing continues, but does not change in relation to that of its parent. If the timeline is an animation, it is actively affecting targeted properties, but its values don't change from tick to tick. If the timeline has children, they may be <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Stopped">
      <summary>The <see cref="T:System.Windows.Media.Animation.Clock" /> timing is halted, making the clock's current time and progress values undefined. If this timeline is an animation, it no longer affects targeted properties. If this timeline has children, they are also <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimation">
      <summary> Animates the value of a  <see cref="T:System.Windows.Media.Color" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from an another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.   </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ColorAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.ColorAnimation" />.   </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.To">
      <summary> Gets or sets the animation's ending value.   </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Color" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ColorAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValue(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Color" /> property along a set of <see cref="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="T:System.Windows.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ColorKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.InterpolateValue(System.Windows.Media.Color,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.InterpolateValueCore(System.Windows.Media.Color,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" />. The default value is a <see cref="T:System.Windows.Media.Color" /> with a hexadecimal value of #00000000.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Add(System.Windows.Media.Animation.ColorKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Contains(System.Windows.Media.Animation.ColorKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ColorKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ColorKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ColorKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.IsSynchronized">
      <summary> Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false..</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ColorKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Remove(System.Windows.Media.Animation.ColorKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.CubicEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t3.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.CubicEase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime"> Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DecimalAnimation">
      <summary> Animates the value of a  <see cref="T:System.Decimal" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.#ctor(System.Decimal,System.Decimal,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.#ctor(System.Decimal,System.Decimal,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.#ctor(System.Decimal,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.#ctor(System.Decimal,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.   </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DecimalAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" />.       </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimation.GetCurrentValueCore(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.DecimalAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimation.To">
      <summary> Gets or sets the animation's ending value.   </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DecimalAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Decimal" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DecimalAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.GetCurrentValue(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.GetCurrentValueCore(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Decimal" /> property along a set of <see cref="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a copy of the specified <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> to copy and freeze</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.GetCurrentValueCore(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DecimalKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrame.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrame.InterpolateValue(System.Decimal,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrame.InterpolateValueCore(System.Decimal,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DecimalKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DecimalKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Add(System.Windows.Media.Animation.DecimalKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Contains(System.Windows.Media.Animation.DecimalKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DecimalKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DecimalKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DecimalKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.IsSynchronized">
      <summary> Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Remove(System.Windows.Media.Animation.DecimalKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.DecimalKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame">
      <summary>Animates from the <see cref="T:System.Boolean" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.BooleanKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.#ctor(System.Boolean,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteBooleanKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.InterpolateValueCore(System.Boolean,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteByteKeyFrame">
      <summary>Animates from the <see cref="T:System.Byte" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteByteKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteByteKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteByteKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteByteKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteByteKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.InterpolateValueCore(System.Byte,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteCharKeyFrame">
      <summary>Animates from the <see cref="T:System.Char" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.CharKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteCharKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.#ctor(System.Char)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteCharKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.#ctor(System.Char,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteCharKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteCharKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteCharKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.InterpolateValueCore(System.Char,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.InterpolateValueCore(System.Windows.Media.Color,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame">
      <summary>Animates from the <see cref="T:System.Decimal" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteDecimalKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.InterpolateValueCore(System.Decimal,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.InterpolateValueCore(System.Double,System.Double)">
      <summary>Interpolates between the previous key frame value and the value of the current key frame using discrete interpolation.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame">
      <summary>Animates from the <see cref="T:System.Int16" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.#ctor(System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteInt16KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.InterpolateValueCore(System.Int16,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame">
      <summary>Animates from the <see cref="T:System.Int32" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteInt32KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.InterpolateValueCore(System.Int32,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame">
      <summary>Animates from the <see cref="T:System.Int64" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteInt64KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.InterpolateValueCore(System.Int64,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Matrix" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.#ctor(System.Windows.Media.Matrix)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.#ctor(System.Windows.Media.Matrix,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteMatrixKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.InterpolateValueCore(System.Windows.Media.Matrix,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame">
      <summary>Animates from the <see cref="T:System.Object" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor(System.Object,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.InterpolateValueCore(System.Object,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Point3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame" /> class.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscretePoint3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Interpolates, in a discrete fashion, between the previous key frame value and the value of the current key frame, using the specified progress increment. </summary>
      <returns>The output value of this key frame, given the specified base value and progress.</returns>
      <param name="baseValue">The value from which to animate.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscretePointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame" /> class with the specified ending value.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteRectKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Rect" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRectKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRectKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteRectKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteRectKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.InterpolateValueCore(System.Windows.Rect,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame">
      <summary> Animates from the <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame" /> class with the specified ending value and key time. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame" /> class.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Computes a discrete interpolation between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame">
      <summary>Animates from the <see cref="T:System.Single" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteSingleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.InterpolateValueCore(System.Single,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Size" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteSizeKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteStringKeyFrame">
      <summary>Animates from the <see cref="T:System.String" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.StringKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteStringKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteStringKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.#ctor(System.String,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteStringKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteStringKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteStringKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.InterpolateValueCore(System.String,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteVector3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Vector" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> using discrete interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteVectorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Uses discrete interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimation">
      <summary> Animates the value of a  <see cref="T:System.Double" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor(System.Double,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" />.       </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.From">
      <summary> Gets or sets the animation's starting value. </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.DoubleAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value. </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats. </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.To">
      <summary> Gets or sets the animation's ending value. </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Double" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Double" /> property along a set of <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> to copy and freeze</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationUsingPath">
      <summary>Animates the value of a <see cref="T:System.Double" /> property between two or more target values using a <see cref="T:System.Windows.Media.PathGeometry" /> to specify those values. This animation can be used to move a visual object along a path. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor">
      <summary>  Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore">
      <summary>Implementation of <see cref="M:System.Windows.Freezable.CreateInstanceCore" />.              </summary>
      <returns>The new <see cref="T:System.Windows.Freezable" /> created.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" />.   </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged">
      <summary>Called when this <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingPath" /> is modified.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry">
      <summary>Specifies the geometry used to generate this animation's output values.  </summary>
      <returns>The path used to generate this animation's output values. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source">
      <summary>Gets or sets the aspect of this animation's <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> that determines its output value.  </summary>
      <returns>The aspect of this animation's <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry" /> that determines its output value. The default value is <see cref="F:System.Windows.Media.Animation.PathAnimationSource.X" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.InterpolateValue(System.Double,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.InterpolateValueCore(System.Double,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(System.Windows.Media.Animation.DoubleKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(System.Windows.Media.Animation.DoubleKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingByteKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingByteKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingByteKeyFrame" /> class with the specified <see cref="T:System.Byte" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Byte" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingByteKeyFrame" /> class with the specified <see cref="T:System.Byte" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Byte" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingByteKeyFrame" /> class with the specified <see cref="T:System.Byte" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Byte" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingByteKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingByteKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingByteKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingByteKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingByteKeyFrame.InterpolateValueCore(System.Byte,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingColorKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Color" />.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Color" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Color" /> and key time.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Color" />.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Color" />, key time, and easing function.</summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Color" />.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.InterpolateValueCore(System.Windows.Media.Color,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingDecimalKeyFrame">
      <summary>An abstract class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDecimalKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDecimalKeyFrame" /> class with the specified value.</summary>
      <param name="value">The initial value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDecimalKeyFrame" /> class with the specified value and key time.</summary>
      <param name="value">The initial value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDecimalKeyFrame" /> class with the specified value, key time, and easing function.</summary>
      <param name="value">The initial value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingDecimalKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingDecimalKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingDecimalKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingDecimalKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDecimalKeyFrame.InterpolateValueCore(System.Decimal,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingDoubleKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> class with the specified <see cref="T:System.Double" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Double" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> class with the specified <see cref="T:System.Double" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Double" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> class with the specified <see cref="T:System.Double" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Double" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.InterpolateValueCore(System.Double,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingFunctionBase">
      <summary>Provides the base class for all the easing functions. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingFunctionBase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)">
      <summary>Transforms normalized time to control the pace of an animation.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation, which is a value from 0 through 1.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.  </summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation, which is a value from 0 through 1.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode">
      <summary>Gets or sets a value that specifies how the animation interpolates. </summary>
      <returns>One of the enumeration values that specifies how the animation interpolates. The default is <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingInt16KeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt16KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.#ctor(System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt16KeyFrame" /> class with the specified <see cref="T:System.Int16" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Int16" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt16KeyFrame" /> class with the specified <see cref="T:System.Int16" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Int16" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt16KeyFrame" /> class with the specified <see cref="T:System.Int16" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Int16" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingInt16KeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingInt16KeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingInt16KeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingInt16KeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt16KeyFrame.InterpolateValueCore(System.Int16,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingInt32KeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt32KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt32KeyFrame" /> class with the specified <see cref="T:System.Int32" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Int32" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt32KeyFrame" /> class with the specified <see cref="T:System.Int32" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Int32" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt32KeyFrame" /> class with the specified <see cref="T:System.Int32" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Int32" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingInt32KeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingInt32KeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingInt32KeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingInt32KeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt32KeyFrame.InterpolateValueCore(System.Int32,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingInt64KeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt64KeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt64KeyFrame" /> class with the specified <see cref="T:System.Int64" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Int64" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt64KeyFrame" /> class with the specified <see cref="T:System.Int64" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Int64" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingInt64KeyFrame" /> class with the specified <see cref="T:System.Int64" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Int64" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingInt64KeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingInt64KeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingInt64KeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingInt64KeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingInt64KeyFrame.InterpolateValueCore(System.Int64,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingMode">
      <summary>Defines the modes in which classes derived from <see cref="T:System.Windows.Media.Animation.EasingFunctionBase" /> perform their easing.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseIn">
      <summary>Interpolation follows the mathematical formula associated with the easing function.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseOut">
      <summary>Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseInOut">
      <summary>Interpolation uses <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> for the first half of the animation and <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" /> for the second half.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingPoint3DKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPoint3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPoint3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Point3D" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPoint3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Point3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPoint3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Point3D" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Point3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingPoint3DKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingPoint3DKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingPoint3DKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingPoint3DKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPoint3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingPointKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> class with the specified <see cref="T:System.Windows.Point" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Point" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> class with the specified <see cref="T:System.Windows.Point" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Point" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> class with the specified <see cref="T:System.Windows.Point" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Point" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingQuaternionKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingQuaternionKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingQuaternionKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingQuaternionKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingQuaternionKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingQuaternionKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingQuaternionKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.UseShortestPath">
      <summary>Gets or sets a value that indicates whether the animation will automatically flip the sign of the destination quaternion to ensure the shortest path is taken. </summary>
      <returns>true if the animation will automatically flip the sign of the destination quaternion to ensure the shortest path is taken; otherwise, false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingQuaternionKeyFrame.UseShortestPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.UseShortestPath" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingQuaternionKeyFrame.UseShortestPath" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingRectKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.RectAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRectKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRectKeyFrame" /> class with the specified <see cref="T:System.Windows.Rect" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Rect" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRectKeyFrame" /> class with the specified <see cref="T:System.Windows.Rect" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Rect" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRectKeyFrame" /> class with the specified <see cref="T:System.Windows.Rect" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Rect" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingRectKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingRectKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingRectKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingRectKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRectKeyFrame.InterpolateValueCore(System.Windows.Rect,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingRotation3DKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRotation3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRotation3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRotation3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingRotation3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingRotation3DKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingRotation3DKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingRotation3DKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingRotation3DKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingRotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingSingleKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSingleKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSingleKeyFrame" /> class with the specified <see cref="T:System.Single" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Single" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSingleKeyFrame" /> class with the specified <see cref="T:System.Single" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Single" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSingleKeyFrame" /> class with the specified <see cref="T:System.Single" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Single" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingSingleKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingSingleKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingSingleKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingSingleKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSingleKeyFrame.InterpolateValueCore(System.Single,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingSizeKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSizeKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSizeKeyFrame" /> class with the specified <see cref="T:System.Windows.Size" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Size" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSizeKeyFrame" /> class with the specified <see cref="T:System.Windows.Size" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Size" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingSizeKeyFrame" /> class with the specified <see cref="T:System.Windows.Size" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Size" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingSizeKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingSizeKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingSizeKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingSizeKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingSizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingVector3DKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVector3DKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVector3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVector3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVector3DKeyFrame" /> class with the specified <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingVector3DKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingVector3DKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingVector3DKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingVector3DKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingVectorKeyFrame">
      <summary>A class that enables you to associate easing functions with a <see cref="T:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames" /> key frame animation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVectorKeyFrame" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVectorKeyFrame" /> class with the specified <see cref="T:System.Windows.Vector" /> value. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Vector" /> value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVectorKeyFrame" /> class with the specified <see cref="T:System.Windows.Vector" /> value and key time. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Vector" /> value.</param>
      <param name="keyTime">The initial key time.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.IEasingFunction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.EasingVectorKeyFrame" /> class with the specified <see cref="T:System.Windows.Vector" /> value, key time, and easing function. </summary>
      <param name="value">The initial <see cref="T:System.Windows.Vector" /> value.</param>
      <param name="keyTime">The initial key time.</param>
      <param name="easingFunction">The easing function.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingVectorKeyFrame.EasingFunction">
      <summary>Gets or sets the easing function applied to the key frame.</summary>
      <returns>The easing function applied to the key frame.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingVectorKeyFrame.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.EasingVectorKeyFrame.EasingFunction" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.EasingVectorKeyFrame.EasingFunction" /> dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingVectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Interpolates, according to the easing function used, between the previous key frame value and the value of the current key frame, using the supplied progress increment.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue"> The value to animate from.</param>
      <param name="keyFrameProgress"> A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.ElasticEase">
      <summary>Represents an easing function that creates an animation that resembles a spring oscillating back and forth until it comes to rest.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ElasticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Oscillations">
      <summary>Gets or sets the number of times the target slides back and forth over the animation destination.</summary>
      <returns>The number of times the target slides back and forth over the animation destination. This value must be greater than or equal to 0. The default is 3.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Springiness">
      <summary>Gets or sets the stiffness of the spring. The smaller the Springiness value is, the stiffer the spring and the faster the elasticity decreases in intensity over each oscillation.</summary>
      <returns>A positive number that specifies the stiffness of the spring. The default value is 3.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ExponentialEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ExponentialEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ExponentialEase.Exponent">
      <summary>Gets or sets the exponent used to determine the interpolation of the animation.</summary>
      <returns>The exponent used to determine the interpolation of the animation. The default is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ExponentialEase.ExponentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.FillBehavior">
      <summary>Specifies how a <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves when it is outside its active period but its parent is inside its active or hold period. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.HoldEnd">
      <summary>After it reaches the end of its active period, the timeline holds its progress until the end of its parent's active and hold periods. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.Stop">
      <summary>The timeline stops if it is outside its active period while its parent is inside its active period.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.HandoffBehavior">
      <summary>Specifies how new animations interact with any existing ones that are already applied to a property. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace">
      <summary>New animations replace any existing animations on the properties to which they are applied.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.HandoffBehavior.Compose">
      <summary>New animations are combined with existing animations by appending the new animations to the end of the composition chain.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.IAnimatable">
      <summary>This type supports the WPF infrastructure and is not intended to be used directly from your code. To make a class animatable, it should derive from <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.ContentElement" />, or <see cref="T:System.Windows.Media.Animation.Animatable" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
      <summary>Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property.</summary>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</param>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Applies the effect of a given <see cref="T:System.Windows.Media.Animation.AnimationClock" /> to a given dependency property. The effect of the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> on any current animations is determined by the value of the <paramref name="handoffBehavior" /> parameter.</summary>
      <param name="dp">The <see cref="T:System.Windows.DependencyProperty" /> to animate.</param>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that animates the property.</param>
      <param name="handoffBehavior">Determines how the new <see cref="T:System.Windows.Media.Animation.AnimationClock" /> will transition from or affect any current animations on the property.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
      <summary>Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" /> object, based on the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" />. </summary>
      <param name="dp">The object to animate.</param>
      <param name="animation">The timeline with the necessary functionality to animate the property.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
      <summary>Initiates an animation sequence for the <see cref="T:System.Windows.DependencyProperty" />.object, based on both the specified <see cref="T:System.Windows.Media.Animation.AnimationTimeline" /> and <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />. </summary>
      <param name="dp">The object to animate.</param>
      <param name="animation">The timeline with the necessary functionality to tailor the new animation.</param>
      <param name="handoffBehavior">The object specifying the manner in which to interact with all relevant animation sequences.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <summary>Retrieves the base value of the specified <see cref="T:System.Windows.DependencyProperty" /> object. </summary>
      <returns>The object representing the base value of <paramref name="Dp" />.</returns>
      <param name="dp">The object for which the base value is being requested.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties">
      <summary>Gets a value that indicates whether this instance has any animated properties. </summary>
      <returns>true if a <see cref="T:System.Windows.Media.Animation.Clock" /> is associated with at least one of the current object's properties; otherwise false. </returns>
    </member>
    <member name="T:System.Windows.Media.Animation.IEasingFunction">
      <summary>Defines the basic functionality of an easing function.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.IEasingFunction.Ease(System.Double)">
      <summary>Transforms normalized time to control the pace of an animation.</summary>
      <returns>The transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.IKeyFrame">
      <summary>An <see cref="T:System.Windows.Media.Animation.IKeyFrame" /> interface implementation provides un-typed access to <see cref="T:System.Windows.Media.Animation.KeyTime" /> properties. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.IKeyFrame.KeyTime">
      <summary>Gets or sets <see cref="P:System.Windows.Media.Animation.IKeyFrame.KeyTime" /> values associated with a KeyFrame object. </summary>
      <returns>A <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.IKeyFrame.Value">
      <summary>Gets or sets the value associated with a <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance. </summary>
      <returns>The current value for this property. </returns>
    </member>
    <member name="T:System.Windows.Media.Animation.IKeyFrameAnimation">
      <summary>An <see cref="T:System.Windows.Media.Animation.IKeyFrameAnimation" /> interface implementation provides untyped access to key frame collection members. </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames">
      <summary>Gets or sets an ordered collection <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" /> associated with this animation sequence. </summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="P:System.Windows.Media.Animation.IKeyFrameAnimation.KeyFrames" />.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int16Animation">
      <summary> Animates the value of a  <see cref="T:System.Int16" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.#ctor(System.Int16,System.Int16,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.#ctor(System.Int16,System.Int16,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.#ctor(System.Int16,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.#ctor(System.Int16,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.   </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16Animation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int16Animation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16Animation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int16Animation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Int16Animation" />.       </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16Animation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int16Animation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16Animation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.From">
      <summary>  Gets or sets the animation's starting value.    </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16Animation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int16Animation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16Animation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16Animation.GetCurrentValueCore(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Int16Animation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16Animation.To">
      <summary> Gets or sets the animation's ending value.   </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16Animation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int16Animation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16Animation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int16AnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Int16" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16AnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int16AnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationBase.GetCurrentValue(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationBase.GetCurrentValueCore(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16AnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Int16" /> property along a set of <see cref="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames" /> object to clone and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> to copy and freeze</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.GetCurrentValueCore(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Int16KeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Int16KeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrame.#ctor(System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrame.InterpolateValue(System.Int16,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrame.InterpolateValueCore(System.Int16,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16KeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int16KeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int16KeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Add(System.Windows.Media.Animation.Int16KeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Contains(System.Windows.Media.Animation.Int16KeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CopyTo(System.Windows.Media.Animation.Int16KeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.IndexOf(System.Windows.Media.Animation.Int16KeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int16KeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Int16KeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Remove(System.Windows.Media.Animation.Int16KeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Int16KeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.Int32Animation">
      <summary>Animates the value of an  <see cref="T:System.Int32" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.#ctor(System.Int32,System.Int32,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.#ctor(System.Int32,System.Int32,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.#ctor(System.Int32,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.#ctor(System.Int32,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.   </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32Animation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int32Animation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32Animation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int32Animation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Int32Animation" />.     </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32Animation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int32Animation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32Animation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32Animation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int32Animation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32Animation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32Animation.GetCurrentValueCore(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Int32Animation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.IsAdditive">
      <summary> Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32Animation.To">
      <summary> Gets or sets the animation's ending value.   </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32Animation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int32Animation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32Animation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int32AnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Int32" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32AnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int32AnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationBase.GetCurrentValue(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationBase.GetCurrentValueCore(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32AnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Int32" /> property along a set of <see cref="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.GetCurrentValueCore(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Int32KeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Int32KeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrame.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrame.InterpolateValue(System.Int32,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrame.InterpolateValueCore(System.Int32,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32KeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>See <see cref="P:System.Windows.Media.Animation.IKeyFrame.Value" />.</summary>
      <returns>Â </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int32KeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int32KeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Add(System.Windows.Media.Animation.Int32KeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Contains(System.Windows.Media.Animation.Int32KeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CopyTo(System.Windows.Media.Animation.Int32KeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.IndexOf(System.Windows.Media.Animation.Int32KeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int32KeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection is frozen. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.IsSynchronized">
      <summary> Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Int32KeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Remove(System.Windows.Media.Animation.Int32KeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Int32KeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.Â </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.Int64Animation">
      <summary>Animates the value of a  <see cref="T:System.Int64" /> property between two target values using linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64Animation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.#ctor(System.Int64,System.Int64,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.#ctor(System.Int64,System.Int64,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64Animation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.#ctor(System.Int64,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64Animation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.#ctor(System.Int64,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64Animation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.   </summary>
      <returns>The total amount by which the animation changes its starting value.     The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64Animation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int64Animation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64Animation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int64Animation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.CreateInstanceCore">
      <summary>Implementation of <see cref="M:System.Windows.Freezable.CreateInstanceCore" />.              </summary>
      <returns>The new <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64Animation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int64Animation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64Animation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64Animation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int64Animation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64Animation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64Animation.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates the value this animation believes should be the current value for the property. </summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">This value is the suggested origin value provided to the animation to be used if the animation does not have its own concept of a start value. If this animation is the first in a composition chain this value will be the snapshot value if one is available or the base property value if it is not; otherwise this value will be the value returned by the previous animation in the chain with an animationClock that is not Stopped.</param>
      <param name="defaultDestinationValue">This value is the suggested destination value provided to the animation to be used if the animation does not have its own concept of an end value. This value will be the base value if the animation is in the first composition layer of animations on a property; otherwise this value will be the output value from the previous composition layer of animations for the property.</param>
      <param name="animationClock">This is the animationClock which can generate the CurrentTime or CurrentProgress value to be used by the animation to generate its output value.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.   </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64Animation.To">
      <summary> Gets or sets the animation's ending value.   </summary>
      <returns>The ending value of the animation. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64Animation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Int64Animation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64Animation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int64AnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Int64" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64AnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int64AnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Int64" /> property along a set of <see cref="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Int64KeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Int64KeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrame.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrame.InterpolateValue(System.Int64,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrame.InterpolateValueCore(System.Int64,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> should be reached.   </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64KeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrame.Value">
      <summary> Gets or sets the key frame's target value.   </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Int64KeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Int64KeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Add(System.Windows.Media.Animation.Int64KeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Contains(System.Windows.Media.Animation.Int64KeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CopyTo(System.Windows.Media.Animation.Int64KeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.IndexOf(System.Windows.Media.Animation.Int64KeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int64KeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Int64KeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Remove(System.Windows.Media.Animation.Int64KeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Int64KeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.KeySpline">
      <summary>This class is used by a spline key frame to define animation progress. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.KeySpline" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.KeySpline" /> class with the specified coordinates for the control points. </summary>
      <param name="x1">The x-coordinate for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint1" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
      <param name="y1">The y-coordinate for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint1" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
      <param name="x2">The x-coordinate for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint2" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
      <param name="y2">The y-coordinate for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint2" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.KeySpline" /> class with the specified control points. </summary>
      <param name="controlPoint1">The control point for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint1" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
      <param name="controlPoint2">The control point for the <see cref="P:System.Windows.Media.Animation.KeySpline.ControlPoint2" /> of the <see cref="T:System.Windows.Media.Animation.KeySpline" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.KeySpline" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.KeySpline" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.KeySpline" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.KeySpline" /> to clone.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint1">
      <summary>The first control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <returns>The Bezier curve's first control point. The point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values must each be between 0 and 1, inclusive. The default value is (0,0). </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint2">
      <summary>The second control point used to define a Bezier curve that describes a <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <returns>The Bezier curve's second control point. The point's <see cref="P:System.Windows.Point.X" /> and <see cref="P:System.Windows.Point.Y" /> values must each be between 0 and 1, inclusive. The default value is (1,1). </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.KeySpline" />.</summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.KeySpline" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.KeySpline" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.KeySpline" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.KeySpline" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.KeySpline" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.GetSplineProgress(System.Double)">
      <summary>Calculates spline progress from a supplied linear progress. </summary>
      <returns>The calculated spline progress.</returns>
      <param name="linearProgress">The linear progress to evaluate.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.KeySpline" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="format"></param>
      <param name="formatProvider"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.ToString">
      <summary>Creates a string representation of this instance of <see cref="T:System.Windows.Media.Animation.KeySpline" /> based on the current culture. </summary>
      <returns>A string representation of this <see cref="T:System.Windows.Media.Animation.KeySpline" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.ToString(System.IFormatProvider)">
      <summary>Creates a string representation of this <see cref="T:System.Windows.Media.Animation.KeySpline" /> based on the supplied <see cref="T:System.IFormatProvider" />. </summary>
      <returns>A string representation of this instance of <see cref="T:System.Windows.Media.Animation.KeySpline" />.</returns>
      <param name="formatProvider">The format provider to use. If provider is null, the current culture is used.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTime">
      <summary>During the relative course of an animation, a <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance specifies the precise timing when a particular key frame should take place. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)">
      <summary>Indicates whether this instance equals the specified object.</summary>
      <returns>true if <paramref name="value" /> is a <see cref="T:System.Windows.Media.Animation.KeyTime" /> that represents the same length of time as this instance; otherwise false.</returns>
      <param name="value">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime)">
      <summary>Indicates whether this instance is equal to the specified <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>true if <paramref name="value" /> is equal to this instance; otherwise, false.</returns>
      <param name="value">The object to compare with this instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Indicates whether the two specified <see cref="T:System.Windows.Media.Animation.KeyTime" /> structures are equal.</summary>
      <returns>true if the values of <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are equal; otherwise false.</returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.FromPercent(System.Double)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance, with the <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> property initialized to the value of the specified parameter. </summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance, initialized to the value of <paramref name="percent" />. </returns>
      <param name="percent">The value of the new <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="percent" /> is less than 0.0 or greater than 1.0.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.FromTimeSpan(System.TimeSpan)">
      <summary>Creates a new <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance, with the <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> property initialized to the value of the specified parameter.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance, initialized to the value of <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">The value of the new <see cref="T:System.Windows.Media.Animation.KeyTime" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.GetHashCode">
      <summary>Returns an iinteger hash code representing this instance.</summary>
      <returns>An integer hash code.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Equality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.KeyTime" /> structures for equality.</summary>
      <returns>true if <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are equal; otherwise, false.</returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Implicit(System.TimeSpan)~System.Windows.Media.Animation.KeyTime">
      <summary>Overloaded operator that implicitly converts a <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> to a <see cref="T:System.Windows.Media.Animation.KeyTime" />.</summary>
      <returns>The new <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance.</returns>
      <param name="timeSpan">The <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value to convert.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Inequality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>Overloaded operator that compares two <see cref="T:System.Windows.Media.Animation.KeyTime" /> structures for inequality.</summary>
      <returns>true if <paramref name="keyTime1" /> and <paramref name="keyTime2" /> are not equal; otherwise, false. </returns>
      <param name="keyTime1">The first value to compare.</param>
      <param name="keyTime2">The second value to compare.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Paced">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.KeyTime.Paced" /> value which creates timing behavior resulting in an animation that interpolates at a constant rate.</summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.Paced" /> value.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Percent">
      <summary>Gets the time when the key frame ends expressed as a percentage of the total duration of the animation. </summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.Percent" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">If this instance is not of type <see cref="P:System.Windows.Media.Animation.KeyTime.Percent" />.</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.TimeSpan">
      <summary>Gets the time when the key frame ends expressed as a time relative to the beginning of the animation.</summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value.</returns>
      <exception cref="T:System.InvalidOperationException">If this instance is not of type <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.ToString">
      <summary>Returns a string representing this <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance. </summary>
      <returns>A string representation of this instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Type">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.KeyTime.Type" /> value this instance represents. </summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.Type" /> value.  </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Uniform">
      <summary>Gets the <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> value which divides the allotted time of the animation evenly between key frames.</summary>
      <returns>A <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" /> value.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTimeType">
      <summary>Represents the different types that may represent a <see cref="T:System.Windows.Media.Animation.KeyTime" /> instance.</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Uniform">
      <summary>Specifies that the allotted total time for an animation sequence is divided evenly amongst each of the key frames. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Percent">
      <summary>Specifies that each <see cref="T:System.Windows.Media.Animation.KeyTime" /> value is expressed as a percentage of the total time allotted for a given animation sequence. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.TimeSpan">
      <summary>Specifies that each <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.KeyTime" /> is expressed as a <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> value relative to the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> of an animation sequence. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Paced">
      <summary>Specifies that adjacent KeyFrames are each allotted a slice of time proportional to their length, respectively.  The overall goal is to produce a length value that keeps the pace of the animation sequence constant.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearByteKeyFrame">
      <summary>Animates from the <see cref="T:System.Byte" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ByteKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearByteKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.#ctor(System.Byte)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearByteKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearByteKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearByteKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearByteKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.InterpolateValueCore(System.Byte,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearColorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Color" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor(System.Windows.Media.Color)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.InterpolateValueCore(System.Windows.Media.Color,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearDecimalKeyFrame">
      <summary>Animates from the <see cref="T:System.Decimal" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DecimalKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDecimalKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDecimalKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDecimalKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearDecimalKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearDecimalKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.InterpolateValueCore(System.Decimal,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearDoubleKeyFrame">
      <summary>Animates from the <see cref="T:System.Double" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.InterpolateValueCore(System.Double,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearInt16KeyFrame">
      <summary>Animates from the <see cref="T:System.Int16" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int16KeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt16KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.#ctor(System.Int16)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt16KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt16KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearInt16KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearInt16KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.InterpolateValueCore(System.Int16,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearInt32KeyFrame">
      <summary>Animates from the <see cref="T:System.Int32" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int32KeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt32KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt32KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt32KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearInt32KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearInt32KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.InterpolateValueCore(System.Int32,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearInt64KeyFrame">
      <summary>Animates from the <see cref="T:System.Int64" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Int64KeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt64KeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt64KeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearInt64KeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearInt64KeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearInt64KeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.InterpolateValueCore(System.Int64,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Point3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearPoint3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearPointKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Point" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrame.Value" /> using linear interpolation.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearQuaternionKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Quaternion,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.LinearQuaternionKeyFrame.UseShortestPath">
      <summary>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions. This is aÂ dependency property.</summary>
      <returns>Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.LinearQuaternionKeyFrame.UseShortestPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.LinearQuaternionKeyFrame.UseShortestPath" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.LinearQuaternionKeyFrame.UseShortestPath" /> Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearRectKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Rect" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.RectKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.#ctor(System.Windows.Rect)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRectKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.#ctor(System.Windows.Rect,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRectKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearRectKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearRectKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.InterpolateValueCore(System.Windows.Rect,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Rotation3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Rotation3DKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">The ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearRotation3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearSingleKeyFrame">
      <summary>Animates from the <see cref="T:System.Single" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SingleKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSingleKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.#ctor(System.Single)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSingleKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSingleKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearSingleKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearSingleKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.InterpolateValueCore(System.Single,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearSizeKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Size" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.SizeKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.#ctor(System.Windows.Size)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.#ctor(System.Windows.Size,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearSizeKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.InterpolateValueCore(System.Windows.Size,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearVector3DKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Media.Media3D.Vector3D" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearVector3DKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Vector3D,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearVectorKeyFrame">
      <summary>Animates from the <see cref="T:System.Windows.Vector" /> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.VectorKeyFrame.Value" /> using linear interpolation.  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor(System.Windows.Vector)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class with the specified ending value. </summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.#ctor(System.Windows.Vector,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" /> class with the specified ending value and key time.</summary>
      <param name="value">Ending value (also known as "target value") for the key frame.</param>
      <param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" />.</summary>
      <returns>A new <see cref="T:System.Windows.Media.Animation.LinearVectorKeyFrame" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.InterpolateValueCore(System.Windows.Vector,System.Double)">
      <summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Matrix" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>When implemented in a derived class, calculates the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property along a set of <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates the current output value of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixAnimationUsingPath">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Matrix" /> property by using a <see cref="T:System.Windows.Media.PathGeometry" /> to generate the animated values. This animation can be used to move a visual object along a path. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent">
      <summary>Gets or sets a value indicating whether the object rotates along the tangent of the path.  </summary>
      <returns>true if the object will rotate along the tangent of the path; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default is false. </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative">
      <summary>Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.  </summary>
      <returns>true if the animation's rotation angle should accumulate over repetitions; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative">
      <summary>Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.  </summary>
      <returns>true if the object will accumulate over repeats of the animation; otherwise, false. The default is false.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged">
      <summary>Called when this <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingPath" /> is modified.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry">
      <summary>Gets or sets the geometry used to generate this animation's output values.  </summary>
      <returns>The geometry used to generate this animation's output values. The default is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor(System.Windows.Media.Matrix)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.#ctor(System.Windows.Media.Matrix,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.InterpolateValue(System.Windows.Media.Matrix,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrame.InterpolateValueCore(System.Windows.Media.Matrix,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided.</summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.MatrixKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.MatrixKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.MatrixKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Add(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Contains(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CopyTo(System.Windows.Media.Animation.MatrixKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.IndexOf(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Remove(System.Windows.Media.Animation.MatrixKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.MatrixKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Object" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValueCore(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames">
      <summary> Animates the value of an <see cref="T:System.Object" /> property along a set of <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object is read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetCurrentValueCore(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor(System.Object,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.InterpolateValue(System.Object,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.InterpolateValueCore(System.Object,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> objects.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Add(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Adds an <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to the end of this collection.</summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to add.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Clear">
      <summary>Removes all key frames from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Contains(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The key frame to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ObjectKeyFrame[],System.Int32)">
      <summary>Copies the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to the specified one dimensional <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> array, started at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> array that is the destination of the key frames copied from this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>An empty collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Searches for the specified <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> has a fixed size.</summary>
      <returns>true if this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> is read-only.</summary>
      <returns>true if this collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> is synchronized (thread-safe)</summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Remove(System.Windows.Media.Animation.ObjectKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to this <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.ParallelTimeline">
      <summary>Defines a segment of time that may contain child <see cref="T:System.Windows.Media.Animation.Timeline" /> objects. These child timelines become active according to their respective <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> properties. Also, child timelines are able to overlap (run in parallel) with each other.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan})">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</summary>
      <param name="beginTime">The <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="duration">The <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
      <param name="repeatBehavior">The <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> for this <see cref="T:System.Windows.Media.Animation.TimelineGroup" />.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ParallelTimeline" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ParallelTimeline" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore">
      <summary> Creates a new instance of this <see cref="T:System.Windows.Freezable" />.              </summary>
      <returns>The new <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary> Return the natural duration (duration of a single iteration) from a specified <see cref="T:System.Windows.Media.Animation.Clock" />. </summary>
      <returns>The <see cref="T:System.Windows.Duration" /> quantity representing the natural duration.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> to return the natural duration from.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior">
      <summary>Gets or sets a value that specifies how this timeline will behave when one or more of its <see cref="T:System.Windows.Media.Animation.Timeline" /> children slips.  </summary>
      <returns>A value that indicates how this timeline will behave when one or more of its <see cref="T:System.Windows.Media.Animation.Timeline" /> children slips. The default value is <see cref="F:System.Windows.Media.Animation.SlipBehavior.Grow" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ParallelTimeline.SlipBehaviorProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior" />Â dependency property.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PathAnimationSource">
      <summary>Specifies the output property value of the path that is used to drive the animation. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.X">
      <summary>Specifies the x-coordinate offset during the progression along an animation sequence path. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.Y">
      <summary>Specifies the y-coordinate offset during the progression along an animation sequence path. </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.PathAnimationSource.Angle">
      <summary>Specifies the tangent angle of rotation during the progression along an animation sequence path.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> property using linear interpolation between two values. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation.</summary>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Duration)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior.</summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation.</param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />.</summary>
      <returns>The Point3Danimation is created with all properties set to their default value.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.From">
      <summary> Gets or sets the animation's starting value.   </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Point3D" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation. </summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.Point3DAnimation" />. </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Media.Media3D.Point3D" /> property along a set of <see cref="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DKeyFrame">
      <summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Point3D,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime">
      <summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" /> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.Value">
      <summary> Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.KeyTime" />. The default value is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Point3DKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Point3DKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Point3DKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Add(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Contains(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CopyTo(System.Windows.Media.Animation.Point3DKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. </summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.              </summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Empty">
      <summary>Gets an empty <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or false if it cannot be made unmodifiable. If <paramref name="isChecking" /> is false, this method returns true if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this object.</returns>
      <param name="isChecking">true if the <see cref="T:System.Windows.Freezable" /> instance should actually freeze itself when this method is called. false if the <see cref="T:System.Windows.Freezable" /> should simply return whether it can be frozen.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.IndexOf(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection. </summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary> Inserts a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> into a specific location within the collection.  </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection is frozen. </summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsReadOnly">
      <summary>Gets a value that indicates if the collection is read-only. </summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index position. </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Remove(System.Windows.Media.Animation.Point3DKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.Point3DKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary> This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property between two target values using      linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Duration)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary> Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" /> class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
      <param name="fromValue">The starting value of the animation.</param>
      <param name="toValue">The destination value of the animation. </param>
      <param name="duration">The length of time the animation takes to play from start to finish, once. See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</param>
      <param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.By">
      <summary> Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ByProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.By" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimation" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimation" />.       </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.From">
      <summary> Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.FromProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.From" />Â dependency property.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.PointAnimation" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.IsAdditive">
      <summary> Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.To">
      <summary> Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ToProperty">
      <summary> Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimation.To" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Point" /> value. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The value this animation believes should be the current value for the property.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
      <returns>The current value of this animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames">
      <summary> Animates the value of a <see cref="T:System.Windows.Point" /> property along a set of <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable..</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.PointKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
      <summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" /> property of this instance of <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> should be value-serialized.</summary>
      <returns>true if the property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="child"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
      <param name="childText"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Media#Animation#IKeyFrameAnimation#KeyFrames">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingPath">
      <summary>Animates the value of a <see cref="T:System.Windows.Point" /> property between two or more target values using a <see cref="T:System.Windows.Media.PathGeometry" /> to specify those values. This animation can be used to move a visual object along a path.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />.          </summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.GetCurrentValueCore(System.Windows.Point,System.Windows.Point,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" />.  </summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.IsAdditive">
      <summary> Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.IsCumulative">
      <summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.OnChanged">
      <summary>Called when this <see cref="T:System.Windows.Media.Animation.PointAnimationUsingPath" /> is modified.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry">
      <summary>Specifies the geometry used to generate this animation's output values.  </summary>
      <returns>The path used to generate this animation's output values. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometryProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointAnimationUsingPath.PathGeometry" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrame">
      <summary>Defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" />. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor(System.Windows.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor(System.Windows.Point,System.Windows.Media.Animation.KeyTime)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> class that has the specified target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> and <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />.  </summary>
      <param name="value">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
      <param name="keyTime">The <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> of the new <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> instance.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.InterpolateValue(System.Windows.Point,System.Double)">
      <summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Occurs if <paramref name="keyFrameProgress" /> is not between 0.0 and 1.0, inclusive.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.InterpolateValueCore(System.Windows.Point,System.Double)">
      <summary>Calculates the value of a key frame at the progress increment provided. </summary>
      <returns>The output value of this key frame given the specified base value and progress.</returns>
      <param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
      <param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime">
      <summary>Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> should be reached.  </summary>
      <returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> property. The default is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform" />.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.KeyTimeProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
      <summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.Value">
      <summary>Gets or sets the key frame's target value.  </summary>
      <returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" />. The default is 0.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.ValueProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" />Â dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" />Â dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrameCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Add(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Adds a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to the end of the collection. </summary>
      <returns>The index at which the <paramref name="keyFrame" /> was added.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to add to the end of the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Clear">
      <summary>Removes all <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects from the collection. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Clone">
      <summary> Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Contains(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrame" />. </summary>
      <returns>true if the collection contains <paramref name="keyFrame" />; otherwise, false.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CopyTo(System.Windows.Media.Animation.PointKeyFrame[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> objects in a collection to a specified array. </summary>
      <param name="array">Identifies the array to which content is copied.</param>
      <param name="index">Index position in the array to which the contents of the collection are copied.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Count">
      <summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</summary>
      <returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CreateInstanceCore">
      <summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</summary>
      <returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Empty">
      <summary> Gets an empty <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.  </summary>
      <returns>An empty <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> read-only or determines whether it can be made read-only.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> object.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetEnumerator">
      <summary> Returns an enumerator that can iterate through the collection. </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.IndexOf(System.Windows.Media.Animation.PointKeyFrame)">
      <summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, -1.</returns>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Inserts a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> into a specific location within the collection. </summary>
      <param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> is inserted.</param>
      <param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> object to insert in the collection.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsFixedSize">
      <summary>Gets a value that indicates if the collection size can ever change.</summary>
      <returns>true if the collection is frozen; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsReadOnly">
      <summary> Gets a value that indicates if the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
      <returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index position.  </summary>
      <returns>The <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to get or set.</param>
      <exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is true).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.-or-<paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.PointKeyFrameCollection.Count" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Remove(System.Windows.Media.Animation.PointKeyFrame)">
      <summary>Removes a <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> object from the collection. </summary>
      <param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> at the specified index position from the collection. </summary>
      <param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> to be removed.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.SyncRoot">
      <summary> Gets an object that can be used to synchronize access to the collection. </summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Add(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="index"></param>
      <param name="keyFrame"></param>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>This member supports the WPF infrastructure and is not intended to be used directly from your code. </summary>
      <param name="keyFrame"></param>
    </member>
    <member name="T:System.Windows.Media.Animation.PowerEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = tp where p is equal to the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> property.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PowerEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PowerEase.Power">
      <summary>Gets or sets the exponential power of the animation interpolation. For example, a value of 7 will create an animation interpolation curve that follows the formula f(t) = t7.</summary>
      <returns>The exponential power of the animation interpolation. This value must be greater or equal to 0. The default is 2.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PowerEase.PowerProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> dependency property.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuadraticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t2</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuadraticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime">Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuarticEase">
      <summary>Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t4.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuarticEase" /> class. </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class. When creating a derived class, you must override this method.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)">
      <summary>Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> mode of the custom easing function.</summary>
      <returns>A double that represents the transformed progress.</returns>
      <param name="normalizedTime"> Normalized time (progress) of the animation.</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimation">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> property between two target values using    linear interpolation over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Duration)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> and <see cref="T:System.Windows.Duration" />.</summary>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" />, <see cref="T:System.Windows.Duration" />, and <see cref="T:System.Windows.Media.Animation.FillBehavior" />.</summary>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
      <param name="fillBehavior">Behavior of the timeline outside its active period.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Duration)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to another specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> over the specified <see cref="T:System.Windows.Duration" />.</summary>
      <param name="fromValue">Quaternion that from which to animate.</param>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
      <summary>Initializes a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" /> using the specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to another specified <see cref="T:System.Windows.Media.Media3D.Quaternion" /> over the specified <see cref="T:System.Windows.Duration" />, with the specified behavior at the end of the timeline.</summary>
      <param name="fromValue">Quaternion from which to animate.</param>
      <param name="toValue">Quaternion to which to animate.</param>
      <param name="duration">Duration of the QuaternionAnimation.</param>
      <param name="fillBehavior">Behavior of the timeline outside its active period.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.By">
      <summary>Gets or sets the total amount by which the animation changes its starting value.  </summary>
      <returns>The total amount by which the animation changes its starting value. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.ByProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.By" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.By" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Media3D.Quaternion" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.CreateInstanceCore">
      <summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
      <returns>The new instance.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction">
      <summary>Gets or sets the easing function applied to this animation.</summary>
      <returns>The easing function applied to this animation.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.EasingFunctionProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction" />Â dependency property. </summary>
      <returns>The identifier for the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.EasingFunction" />Â dependency property.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.From">
      <summary>Gets or sets the animation's starting value.  </summary>
      <returns>The starting value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.FromProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.From" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.From" /> dependency property identifier.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.QuaternionAnimation" />.</summary>
      <returns>The calculated value of the property, as determined by the current animation.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the animation.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.IsAdditive">
      <summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.  </summary>
      <returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.  </summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.To">
      <summary>  Gets or sets the animation's ending value.  </summary>
      <returns>The ending value of the animation. The default value is null.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.ToProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.To" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.To" /> dependency property identifier.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath">
      <summary>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</summary>
      <returns>Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPathProperty">
      <summary>Identifies the <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath" /> dependency property.</summary>
      <returns>The <see cref="P:System.Windows.Media.Animation.QuaternionAnimation.UseShortestPath" /> dependency property identifier.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimationBase">
      <summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> value.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationBase" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationBase" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary>Gets the current value of the animation.</summary>
      <returns>The current value of the animation.</returns>
      <param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
      <param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
      <param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock" /> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> value to be used by the animation to generate its output value.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationBase.TargetPropertyType">
      <summary>Gets the type of value this animation generates.</summary>
      <returns>The type of value produced by this animation.</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames">
      <summary>Animates the value of a <see cref="T:System.Windows.Media.Media3D.Quaternion" /> property along a set of <see cref="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.KeyFrames" /> over a specified <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> class.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.AddChild(System.Object)">
      <summary>Adds a child <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> to this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </summary>
      <param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </param>
      <exception cref="T:System.ArgumentException">The parameter <paramref name="child" /> is not a <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" />.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.AddText(System.String)">
      <summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</summary>
      <param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</param>
      <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.Clone">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
      <summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCurrentValue">
      <summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
      <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was true.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object. </summary>
      <param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CreateInstanceCore">
      <summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. </summary>
      <returns>A new instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
      <summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object unmodifiable or determines whether it can be made unmodifiable.</summary>
      <returns>If <paramref name="isChecking" /> is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If <paramref name="isChecking" /> is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
      <param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object. </summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object to clone.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
      <param name="source">The <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> to copy and freeze.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
      <summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" />.</summary>
      <returns>The calculated value of the property, as determined by the current instance.</returns>
      <param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
      <param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
      <param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock" /> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> used by the host animation.</param>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
      <summary>Provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="T:System.Windows.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />. </summary>
      <returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime" />, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration" />; otherwise it will be one second.</returns>
      <param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock" /> whose natural duration is desired.</param>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.IsAdditive">
      <summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
      <returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.IsCumulative">
      <summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
      <returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.KeyFrames">
      <summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects that define the animation. </summary>
      <returns>The collection of <see cref="T:System.Windows.Media.Animation.QuaternionKeyFrame" /> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Empty" />.</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.OnChanged">
      <summary>Called when the current <see cref="T:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames" /> object is modified.</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
  