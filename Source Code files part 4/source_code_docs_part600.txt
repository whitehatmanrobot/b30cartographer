osoft.Expression.Media.Effects.SwirlEffect.Center">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmount">
            <summary>
            Gets or sets the SwirlStrength variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequency">
            <summary>
            Gets or sets the AngleFrequency variable within the shader.
            We do not expose this property. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.EffectMapping">
            <summary>
            Gets the GeneralTransform for this effect.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform">
            <summary>
            For transforming input and tree transformations.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.theEffect">
            <summary>
            The instance of the Effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.thisIsInverse">
            <summary>
            The inverse of the transform.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.inverseTransform">
            <summary>
            The inverse of this GeneralTransform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.SwirlEffect)">
            <summary>
            Creates an instance of this class.
            </summary>
            <param name="eff">The effect itself.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            For this operation, the bounds is the bounding box of the 4 transformed points. 
            Need to transform each of them, and then circumscribe.  This is true for both the 
            forward and the inverse.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The transformed rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
            <summary>
            Attempt to transform inPoint with the Swirl effect.
            </summary>
            <param name="targetPoint">The input point.</param>
            <param name="result">The output point after transformed using the Swirl effect.</param>
            <returns>True and throws if false.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.Inverse">
            <summary>
            Gets a clone of the inverse of the current transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WaveTransitionEffect">
            <summary>
            Transition effect that waves the current visual while introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.MagnitudeProperty">
            <summary>
            Dependency property which modifies the Magnitude variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.PhaseProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.FrequencyProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WaveTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WaveTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Magnitude">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Phase">
            <summary>
            Gets or sets the phase of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Frequency">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeDirection">
            <summary>
            Define the wipe direction.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeTransitionEffect">
            <summary>
            Transition effect that wipes the current visual introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirectionProperty">
            <summary>
            Dependency property which modifies the preset of the wipe
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the FuzzyAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOriginProperty">
            <summary>
            Dependency property which modifies the LineOrigin variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormalProperty">
            <summary>
            Dependency property which modifies the LineNormal variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffsetProperty">
            <summary>
            Dependency property which modifies the LineOffset variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WipeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WipeTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirection">
            <summary>
            Gets or sets the direction of the wipe.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOrigin">
            <summary>
            Gets or sets the LineOrigin variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormal">
            <summary>
            Gets or sets the LineNormal variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffset">
            <summary>
            Gets or sets the LineOffset variable within the shader.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ja\Microsoft.Expression.Drawing.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Drawing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Controls.Callout">
            <summary>
            Renders a callout shape supporting several shapes combined with a callout arrow.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeContentShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.ContentControl"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
             
             A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
             It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            
             This class also supports showing content together with the shape.
             </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceParameters">
            <summary>
            Provides an interface to discribe the parameters of a Shape.
            </summary>
            <remarks>
            This interface is the data for communication between Shape and GeometrySource.
            Typically a concrete implementation of IShape will implements this interface and pass it into
            GeometrySource.UpdateGeometry(), who will consume the shape as readonly data provider.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IShape">
            <summary>
            Provides the necessary interface to define a Shape.
            Both primitive and composite shapes need to match this interface, although they might derive from different type of FrameworkElement.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.IShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Fill">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null. See Remarks.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at run time depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Media.IShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.OnContentChanged(System.Object,System.Object)">
            <summary>
            Transforms a string content into <see cref="T:TextBlock"/> with center alignment and mulitple line support.
            </summary>
            <remarks>
            Use template binding to <see cref="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent"/> instead of <see cref="P:Content"/> to enable this method.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent">
            <summary>
            Gets or sets the internal content that converts string into center aligned multiple line textblock.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.AnchorPoint">
            <summary>
            Gets or sets the position of the callout relative to the top and left corner.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.CalloutStyle">
            <summary>
            Gets or sets the callout style.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeShape">
            <summary>
            Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.Control"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.CompositeShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
            and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
            
            A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
            It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LineArrow">
            <summary>
            Renders a bended line segment with optional arrowhead on both end.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.LineArrow.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            A default <see cref="T:LineArrow"/> can render at anysize.
            The <see cref="P:RenderedGeometry"/> will stretch to layout boundary and render to outside if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.BendAmount">
            <summary>
            Gets or sets the amount of bend for the arrow.
            </summary>
            <value>The bend amount between 0 to 1.</value>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the start of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.EndArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the end of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartCorner">
            <summary>
            Gets or sets from which corner to start drawing the arrow.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.ArrowSize">
            <summary>
            Gets or sets the length of the arrow in pixels.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper">
            <summary>
            Helper class to work with PathGeometry
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string in the path mini-langauge into a PathGeometry.
            </summary>
            <param name="abbreviatedGeometry">A string in the path mini-langauge.</param>
            <remarks>
            Algorithm is modified from WPF: MS.Internal.Parsers.ParseStringToStreamGeometryContext.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Convert the given geometry into a single PathGeometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.SyncPolylineGeometry(System.Windows.Media.Geometry@,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Update the given geometry as PathGeometry with polyline matching given point list.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AbbreviatedGeometryParser">
            <summary>
            Parses abbreviated geometry sytax.
            </summary>
            <remarks>
            The algorithm is modified from WPF: MS.Internal.AbbreviatedGeometryParser
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentHelper">
            <summary>
            Helper class to Convert ArcSegment to BezierSegment(s)
            </summary>
            <summary>
            Helper class to work with PathSegment and all variations.
            </summary>
            <summary>
            Strategy classes to handle different types of PathSegment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierSegments(System.Windows.Media.ArcSegment,System.Windows.Point)">
            <summary>
            Convert an Arc segment into Bezier format
            Return BezierSegment, PolyBezierSegment, LineSegment, or null
            When returning null, the Arc degenerated into start point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SetIsStroked(System.Windows.Media.PathSegment,System.Boolean)">
            <summary>
            Avoid calling the three-parameter constructor, since it always sets a local value for IsStroked.
            </summary>
            <param name="segment"></param>
            <param name="isStroked"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the SegmentCollection with given polyline matching given point list.
            Try to keep changes minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolyBezierSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the collection[index] segment with poly bezier segment matching given point list.
            givne point list must contain 3*N points for N Bezier segments.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.IsEmpty(System.Windows.Media.PathSegment)">
            <summary>
            Test if given path segment is empty.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPointCount(System.Windows.Media.PathSegment)">
            <summary>
            Get the point count in given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetLastPoint(System.Windows.Media.PathSegment)">
            <summary>
            Get the last point of given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPoint(System.Windows.Media.PathSegment,System.Int32)">
            <summary>
            Get the point of given index in given segment.
            If input is (-1), return the last point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.FlattenSegment(System.Windows.Media.PathSegment,System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point,System.Double)">
            <summary>
            Flatten given segment and add result points into given point list.
            </summary>
            <param name="segment">The segment to be flatten</param>
            <param name="points">The result point list</param>
            <param name="start">The start point of the segment</param>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.ArcToBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Windows.Point[]@,System.Int32@)">
            <summary>
            ArcToBezier, Compute the Bezier approximation of an arc
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This utility computes the Bezier approximation for an elliptical arc as
            it is defined in the SVG arc spec. The ellipse from which the arc is
            carved is axis-aligned in its own coordinates, and defined there by its
            x and y radii. The rotation angle defines how the ellipse's axes are
            rotated relative to our x axis. The start and end points define one of 4
            possible arcs; the sweep and large-arc flags determine which one of
            these arcs will be chosen. See SVG spec for details.
            
            Returning cPieces = 0 indicates a line instead of an arc
                      cPieces = -1 indicates that the arc degenerates to a point 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetArcAngle(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Get the number of Bezier arcs, and sine/cosine of each.
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This is a private utility used by ArcToBezier.  We break the arc into
            pieces so that no piece will span more than 90 degrees.  The input
            points are on the unit circle.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetBezierDistance(System.Double,System.Double)">
             <summary>
             GetBezierDistance, return the distance as a fraction of the radius
             Adopted from MIL:Graphics\core\geometry\utils.cpp
             </summary>
            <remarks>
                  Get the distance from a circular arc's endpoints to the control points
                  of the Bezier arc that approximates it, as a fraction of the arc's
                  radius.
            
                  Since the result is relative to the arc's radius, it depends strictly on
                  the arc's angle. The arc is assumed to be of 90 degrees of less, so the
                  angle is determined by the cosine of that angle, which is derived from
                  rDot = the dot product of two radius vectors.  We need the Bezier curve
                  that agrees with the arc's points and tangents at the ends and midpoint. 
                  Here we compute the distance from the curve's endpoints to its control
                  points.
            
                  Since we are looking for the relative distance, we can work on the unit
                  circle. Place the center of the circle at the origin, and put the X axis
                  as the bisector between the 2 vectors.  Let a be the angle between the
                  vectors.  Then the X coordinates of the 1st and last points are cos(a/2). 
                  Let x be the X coordinate of the 2nd and 3rd points.  At t=1/2 we have a
                  point at (1,0). But the terms of the polynomial there are all equal:
            
                            (1-t)^3 = t*(1-t)^2 = t^2*(1-t) = t^3 = 1/8,
            
                  so from the Bezier formula there we have:
            
                            1 = (1/8) * (cos(a/2) + 3x + 3x + cos(a/2)), 
            
                  hence
            
                            x = (4 - cos(a/2)) / 3
            
                  The X difference between that and the 1st point is:
                  
                            DX = x - cos(a/2) = 4(1 - cos(a/2)) / 3.
            
                  But DX = distance / sin(a/2), hence the distance is
            
                            dist = (4/3)*(1 - cos(a/2)) / sin(a/2).
            
                  Rather than the angle a, we are given rDot = R^2 * cos(a), so we
                  multiply top and bottom by R:
             
                            dist = (4/3)*(R - Rcos(a/2)) / Rsin(a/2)
             
                  and use some trig:
                                           ________________
                            cos(a/2)   = \/(1 + cos(a)) / 2
                                           ______________________
                            R*cos(a/2) = \/(R^2 + R^2 cos(a)) / 2 
                                           ________________
                                       = \/(R^2 + rDot) / 2
            
                  Let A = (R^2 + rDot)/2.
                                           ____________________
                            R*sin(a/2) = \/R^2 - R^2 cos^2(a/2)
                                           _______
                                       = \/R^2 - A
            
                  so:
                                                      _
                                         4      R - \/A
                                  dist = - * ------------
                                         3      _______
                                              \/R^2 - A
            
              History:
                  5/29/2001 MichKa
                      Created it.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.AcceptRadius(System.Double,System.Double,System.Double@)">
            <summary>
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            Return false if the radius is too small compared to the chord length (returns true on NaNs)
            radius is modified to the value that's accepted.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.BezierCurveFlattener">
            <summary>
            A utility class to flatten Bezier curves.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenCubic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier cubic curve and adds the result polyline to the third parameter.
            </summary>
            <param name="controlPoints">The 4 Bezier cubic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">True to skip the first control point when adding the flattened polyline.
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to 
            each of the polyline vertices</param> 
            If <paramref name="resultPolyline"/> is empty, the first control point 
            and its associated parameter are always added.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenQuadratic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier quadratic curve and adds the result polyline to the third parameter.
            We use degree elevation for Bezier curves to reuse the code for the cubic case.
            </summary>
            <param name="controlPoints">The 3 Bezier quadratic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">Whether to skip the first control point when adding the flattened polyline. 
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to
            each of the polyline vertices</param>
            If <paramref name="resultPolyline"/> is empty, the first control point and 
            its associated parameter are always added.</param>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.CommonExtensions">
            <summary>
            Extension methods supporting non-geometry types
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach(System.Collections.IEnumerable,System.Action{System.Object})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence with the index of each item.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Ensure the count of list to given count.  Create default(T) or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensure the count of list to given count.  Create with given fatory or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used when there's no factory.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the end of a collection.
            If collection is list, List.AddRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Get the last item of given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
            Remove the last item from the given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.DeepCopy``1(``0)">
            <summary>
            Make a copy of obj and all it's public properties, including all collection properties.
            Possible perf optimization: this is used only for Transform and Geometry.
            We should develope a copier for them instead of using reflection.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.SetIfDifferent(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Set the value if different.  Avoid setting local value if possible.
            return true when the value has been changed
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ClearIfSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears the dependency property when it is locally set on the given dependency object.
            Return false if the dependeny property is not locally set.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.FindVisualDesendent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Find all visual desendent of given type and condition using breath first search.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get all visual children in IEnumerable
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.DrawingPropertyMetadata">
            <summary>
            Unify the interface of PropertyMetadata in WPF and Silverlight.
            Providing the necessary notification about render, arrange or measure.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.#ctor(Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Object)">
            <summary>
            This private Ctor should only be used by AttachCallback.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.AttachCallback(System.Object,Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
            <summary>
            Chain InternalCallback() to attach the instance of DrawingPropertyMetadata on property callback.
            In Silverlight4-, the property metadata is thrown away after setting. Use callback to remember it.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.InternalCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before chaining the original callback, trigger DrawingPropertyChangedEvent
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.GeometryHelper">
            <summary>
            Extension methods for Geometry related data structures (Point/Vector/Size/Rect)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Resize(System.Windows.Rect,System.Double)">
            <summary>
            Resize the rectangle to relative size while keeping center invariant.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Subtract(System.Windows.Point,System.Windows.Point)">
            <summary>
            Get the difference Vector between two Points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Plus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise plus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Minus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise minus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string of mini-languages to a <see cref="T:PathGeometry"/>.
            </summary>
            <remarks>See: Path Markup Syntax(http://msdn.microsoft.com/en-us/library/cc189041(VS.95).aspx)</remarks>
            <param name="abbreviatedGeometry">The string of path mini-languages for describing geometric paths.</param>
            <returns>A <see cref="T:PathGeometry"/> converted from the the path mini-languages/></returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double)">
            <summary>
            Flattens a <see cref="T:PathFigure"/> and adds result points to given <paramref name="points"/>.
            </summary>
            <param name="figure">The input <see cref="T:PathFigure"/>.</param>
            <param name="points">The point list to which result points will append.</param>
            <param name="tolerance">A positive number specifying the maximum allowed error from result points to input path figure.  Value 0 allows algorithm to pick the tolerance automatically.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double)">
            <summary>
            Get the normalized arc in (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double,System.Windows.Rect)">
            <summary>
            Get the absolute arc point in given bound with given relative radius.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point)">
            <summary>
            Get the angle on arc relative to (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Get the angle on arc from given absolute point relative to bound
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compute the transform that moves Rect from to Rect to.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Computes the transform from the coordinate space of one <c>UIElement</c> to another.
            </summary>
            <param name="from">The source element.</param>
            <param name="to">The destination element.</param>
            <returns>The transform between the <c>UIElement</c>s, or null if it cannot be computed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeToAbsolutePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map relative point to absolute using the mapping from given bound to (0,0)(1,1) box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.AbsoluteToRelativePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map absolute point to relative using the mapping from (0,0)(1,1) box to given bound.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetStretchBound(System.Windows.Rect,System.Windows.Media.Stretch,System.Windows.Size)">
            <summary>
            Compute the bound after stretch within given logical bound.
            If stretch to uniform, use given aspectRatio.
            If aspectRatio is empty, it's equivalent to Fill.
            If stretch is None, equivalent to Fill or Uniform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Midpoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the mid point of given 2 points
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The mid point between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(Microsoft.Expression.Drawing.Core.Vector,Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Returns the dot product of two vectors.
            </summary>
            <param name="lhs">The first vector.</param>
            <param name="rhs">The second vector.</param>
            <returns>The dot product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the dot product of two Points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.SquaredDistance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The square of the distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Determinant(System.Windows.Point,System.Windows.Point)">
            <summary>
            Determinant of cross product.  Equivalent to directional area
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Normal(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compute the normal direction vector of given line segments
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Perpendicular(Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Compute perpendicular vector, 90 degrees counter-clockwise.
            Vector to right perpendicular result a vector to up.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GeometryEquals(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Returns whether the two geometries are identical.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Windows.Media.Geometry@,System.Func{``0})">
            <summary>
            Ensure the value is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.Geometry},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureSegmentType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.PathSegment},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ComputeBSpline(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Double)">
            <summary>
            de'Boor algorithm to subdevide BSpline into poly Bezier segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MathHelper">
            <summary>
            Helper class providing static properties and methods related to floating point arithmetic.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.Epsilon">
            <summary>
            The minimum distance to consider two values are same.
            Note: internal floating point in MIL/SL is float, not double.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.TwoPI">
            <summary>
            The value of angle of a full circle.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.PentagramInnerRadius">
            <summary>
            The inner radius for pentagram polygon shape, at precision of 3 digits in percentage.
            (1 - Sin36 * Sin72 / Sin54) / (Cos36) ^ 2, which is 0.47210998990512996761913067272407
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsVerySmall(System.Double)">
            <summary>
            Determines whether a <c>System.Double</c> value is small enough to be considered
            equivalent to zero.
            </summary>
            <param name="value"></param>
            <returns><c>true</c> if value is smaller than <c>DoubleTolerance</c>;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.EnsureRange(System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Return the value that's within the given range
            Given min/max is null means no limit.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.Hypotenuse(System.Double,System.Double)">
            <summary>
            Computes the Euclidean norm of the vector (x, y).
            </summary>
            <param name="x">The first component.</param>
            <param name="y">The second component.</param>
            <returns>The Euclidean norm of the vector (x, y).</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.DoubleFromMantissaAndExponent(System.Double,System.Int32)">
            <summary>
            Computes a real number from the mantissa and exponent.
            </summary>
            <param name="x"></param>
            <param name="exp"></param>
            <returns>The value of x * 2^exp if successful.</returns>
            <remarks>See ::ldexp in any decent C language runtime library.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsFiniteDouble(System.Double)">
            <summary>
            Tests a double.
            </summary>
            <param name="x">The double to test.</param>
            <returns><c>true</c> if x is not a NaN and is not equal to plus or minus infinity;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathFigureHelper">
            <summary>
            Helper class to work with PathFigure
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean)">
            <summary>
            Flatten the given figure and add to the point list.
            </summary>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.AllSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterate all segments inside given figure, and returns correct start point for each segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolylineFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single polyline segment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolyBezierFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single PolyBezierSegment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncEllipseFigure(System.Windows.Media.PathFigure,System.Windows.Rect,System.Windows.Media.SweepDirection,System.Boolean)">
            <summary>
            Synchronize the given figure to be a closed ellipse with 2 arc segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentData">
            <summary>
            A Tuple data structure for PathSegment and corresponding StartPoint.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineData">
            <summary>
            Represent a polyline consist with a list of connecting points.
            A closed polygon is represented by repeating the first point at the end.
            The differences, normals, angles, and lengths are computed on Demand.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.#ctor(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Construct a polyline with two or more points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.Difference(System.Int32)">
            The forward difference vector of polyline.
            Points[i] + Differences[i] = Points[i+1]
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.SmoothNormal(System.Int32,System.Double,System.Double)">
            <summary>
            Compute the normal vector of given location (lerp(index, index+1, fraction).
            If the location is within range of cornerRadius, interpolate the normal direction.
            </summary>
            <param name="cornerRadius">The range of normal smoothless.  If zero, no smoothness and return the exact normal on index.</param>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.IsClosed">
            <summary>
            The polyline is closed when first and last point is repeated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Count">
            <summary>
            The count of points in this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.TotalLength">
            <summary>
            The total arc length of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Points">
            <summary>
            The point array of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Lengths">
            <summary>
            The length between line segments, Points[i] to Points[i+1]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Normals">
            <summary>
            The list of normal vectors for each segment.
            Normals[i] is the normal of segment p[i] to p[i + 1].
            Normals[N-1] == Normals[N-2].
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Angles">
            <summary>
            The list of Cos(angle) between 2 line segments on point p[i]
            Note: The value is cos(angle) = Dot(u, v). It's not in degree.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.AccumulatedLength">
            <summary>
            The list of accumulated length from points[i] to points[0]
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MarchLocation">
            <summary>
            The data structure to communicate with PathMarch algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetPoint(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Get the interpolated position of this this MarchLocation on given point list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetNormal(Microsoft.Expression.Drawing.Core.PolylineData,System.Double)">
            <summary>
            Get the interpolated normal direction of this this MarchLocation on given normal vector list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetArcLength(System.Collections.Generic.IList{System.Double})">
            <summary>
            Get the arc length of this MarchLocation to the start of the entire polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Reason">
            <summary>
            The reason why this location is sampled.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Index">
            <summary>
            The index of the point on polyline point list.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Ratio">
            <summary>
            Ratio: [0, 1], which is always before / (before + after)
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Before">
            <summary>
            Arc length before stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.After">
            <summary>
            Arc length after the stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Remain">
            <summary>
            Remaining length within a step to hit next stop.  Positive to go forward. Negative to go backward.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineHelper">
            <summary>
            Helper class to work with list of points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.PathMarch(Microsoft.Expression.Drawing.Core.PolylineData,System.Double,System.Double,System.Func{Microsoft.Expression.Drawing.Core.MarchLocation,System.Double})">
            <summary>
            March the given polyline with given interval and output each stop through callback
            </summary>
            <param name="polyline">The polyline points to march on</param>
            <param name="startArcLength">The arc length to march before stopping at the first point.</param>
            <param name="cornerThreshold">The max angle between edges to be considered a corner vertex</param>
            <param name="stopCallback">Callback when marching algorithm stop at a point.  The callback returns the arc length for next stop.
            If the asked length is negative, march backwards. If callback returns NaN, finish marching.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.GetWrappedPolylines(System.Collections.Generic.IList{Microsoft.Expression.Drawing.Core.PolylineData},System.Double@)">
            <summary>
            Reorders the given list of polylines so that the polyline a given arclength into the list is the first.
            Polylines that preceded this line are concatenated to the end of the list, with the first polyline at the very end. 
            </summary>
            <param name="lines">A list of polylines.</param>
            <param name="startArcLength">The arclength into the entire list of polylines at which to find the start line.
            The arc length into that line is returned in this variable.</param>
            <returns>The reordered and wrapped list.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.RandomEngine">
            <summary>
            A random generator support uniform and gaussian distributions.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.RandomEngine.Gaussian">
            <summary>
            Generate a pair of independent standard normally distributed random numbers,
            zero expectation, unit variance, using polar form of the Box-Muller transformation.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.#ctor">
            <summary>
            Private constructor. Force to use factory methods.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a line segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment from quatratic curve (3 control points)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment with 4 control points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.SimpleSegment.Points">
            <summary>
            Control points of path segment.  Length is variant.
            Line segment has 2 points, Cubic bezier has 4 points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.TransformExtensions.TransformEquals(System.Windows.Media.Transform,System.Windows.Media.Transform)">
            <summary>
            Compares two transforms for an exact match.  Transforms with the same value but different structure(e.g. Translate(0,0) and Rotate(0) are not considered equivalent).
            </summary>
            <param name="firstTransform">The first transform.</param>
            <param name="secondTransform">The second transform.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Expression.Media.UnitType">
            <summary>
            Specifies the unit of thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Pixel">
            <summary>
            Unit in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Percent">
            <summary>
            Unit in percentage relative to bounding box.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometrySource`1">
            <summary>
            Provides the base class of a source of geometry.
            It generate and cache the geometry based on input parameters and layout bounds.
            </summary>
            <remarks>
            A typical implementation will extend the UpdateCachedGeometry() to update this.cachedGeometry.
            This base class will then handle the invalidation, pipeline to geometry effects and caching realtive to layout bounds.
            An implementation should try to reuse the cached geometry as much as possible to avoid reconstruction in rendering thread.
            An implementation can extend the ComputeLogicalBounds to handle Stretch differently.
            </remarks>
            <typeparam name="TParameters">The type of geometry source parameter on which the base class is working on.</typeparam>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySource">
            <summary>
            Provides an interface to describe the source of a geometry.
            </summary>
            <remarks>
            This interface is designed to expose geometry source in a non-generic way.
            Typical implementation should subclass GeometrySource&lt;&gt; instead of implementing this interface directly.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry using given parameter and layout bounds.
            Returns false if nothing has been updated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometrySource`1.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry based on given parameters and layoutBounds.
            Returns false if geometry hasn't been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateCachedGeometry(`0)">
            <summary>
            Extend the way to provide geometry by implementing this function.
            Return true when any of the geometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Extend the way to handle stretch mode.
            Default is to always use Stretch.Fill and center stroke.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ApplyGeometryEffect(Microsoft.Expression.Media.IGeometrySourceParameters,System.Boolean)">
            <summary>
            Apply geometry effect when dirty or forced, update this.Geometry.
            Otherwise, keep this.Geometry as this.cachedGeometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
            <value></value>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Arc think Stretch.None is same as Stretch.Fill, assuming aspect ratio = 1:1
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.NormalizeThickness(Microsoft.Expression.Media.IArcGeometrySourceParameters)">
            <summary>
            Normalize thickness, both relative to bounding box and absolute pixel.
            realtive thickness = 0 -> full circle radius or clamped.
            realtive thickness = 1 -> shrinked to a dot, or degenerated.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowOrientation">
            <summary>
            Specifies the direction the arrow points.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Left">
            <summary>
            The arrow points to left.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Right">
            <summary>
            The arrow points to right.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Up">
            <summary>
            The arrow points up.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Down">
            <summary>
            The arrow points down.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.BlockArrowGeometrySource.ArrowBuilder">
            <summary>
                 B
                /|
               / C--D
              A     |
               \ C--D
                \|
                 B
            Algorithm only use Width/Height assuming top-left at 0,0
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CalloutStyle">
            <summary>
            Specifies the rendering style of a Callout shape
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Rectangle">
            <summary>
            A rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.RoundedRectangle">
            <summary>
            A rounded rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Oval">
            <summary>
            A oval shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Cloud">
            <summary>
            A cloud shaped callout.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateEdge(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Update the edge line, and connect to anchor point if necessary
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdatePolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Update polyline segment, connecting start, anchor and end point with Callout style
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateLineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point)">
            <summary>
            Update the line segment to given point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.ComputeCorners(System.Double)">
            <summary>
            Compute the corner points, clockwise, 8 points for 4 corners
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateCornerArc(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point)">
            <summary>
            Corner Arc is always smaller arc with 90 degree
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffect">
            <summary>
            Provides the base class of GeometryEffect that transform a geometry into another geometry.
            </summary>
            <remarks>
            This class provides the basic implementation of processing the rendered geometry of a IShape before it's passed to rendering.
            A typical implementation will extend the virtual function <see cref="F:ProcessGeometry"/> to transform input geometry.
            <see cref="T:GeometryEffect"/> is typically attached to <see cref="T:IShape"/> as an attached property and activated when <see cref="T:IShape"/> geometry is updated.
            The <see cref="P:OutputGeometry"/> of a <see cref="T:GeometryEffect"/> will replace the rendered geometry in <see cref="T:IShape"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.GetGeometryEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.SetGeometryEffect(System.Windows.DependencyObject,Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Sets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.CloneCurrentValue">
            <summary>
            Creates a modifiable clone (deep copy) of the <see cref="T:GeometryEffect"/> using its current values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect. Implements CloneCurrentValue in Silverlight.
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffect.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateGeometry">
            <summary>
            Invalidate the geometry effect without actually compute the geometry.
            It will notify all parent shapes or effects to invalidate accordingly.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.ProcessGeometry(System.Windows.Media.Geometry)">
            <summary>
            Process geometry effect on given input geometry.
            Result is stored in GeometryEffect.OutputGeometry.
            </summary>
            <returns>Return false if nothing has been changed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Extend the way of updating cachedGeometry based on given input geometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Detach">
            <summary>
            Notified when detached from parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Attach(System.Windows.DependencyObject)">
            <summary>
            Notified when attached to a parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateParent(System.Windows.DependencyObject)">
            <summary>
            Invalidate the geometry on given dependency object when
            the object is a valid parent type (IShape or GeometryEffect).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.DefaultGeometryEffect">
            <summary>
            The default geometry effect that does nothing but passing through the input geometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.OutputGeometry">
            <summary>
            Gets the output geometry of this geometry effect.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.Parent">
            <summary>
            Parent can be either IShape or GeometryEffectGroup.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffectConverter">
            <summary>
            Provides the conversion between string and geometry effect
            </summary>
            <remarks>
            This class enables the brief sytax in xaml like <code>GeometryEffect="Sketch"</code>
            It will create a clone of instance of geometry effect so it can be used as resources.
            </remarks>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffectConverter.registeredEffects">
            <summary>
            Build a preset list of supported geometry effects.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted from string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted to string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a geometry effect.  Fallback value is null.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a geometry effect into a string.  Fallback value is null.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceExtensions">
            <summary>
            Provides helper extension methods to work with IGeometrySource and parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowType">
            <summary>
            Specifies the Arrow head type.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.NoArrow">
            <summary>
            No arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.Arrow">
            <summary>
            A triagle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.StealthArrow">
            <summary>
            A stealth triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OpenArrow">
            <summary>
            An open triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OvalArrow">
            <summary>
            An oval head.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CornerType">
            <summary>
            Specifies the corner location.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopLeft">
            <summary>
            On top left of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopRight">
            <summary>
            On top right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomRight">
            <summary>
            On bottom right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomLeft">
            <summary>
            On bottom left of bounding box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.PolygonGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Polygon think Stretch.None is same as Stretch.Fill
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.SketchGeometryEffect">
            <summary>
            A geometry effect to transform any geometry into a Sketch style as in SketchFlow.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Updating cachedGeometry based on given input geometry.
            </summary>
            <param name="input">A input geometry</param>
            <returns>Returns true when anything on cachedGeometry has been updated.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.SketchGeometryEffect.randomSeed">
            <summary>
            Use the same random seed on creation to keep visual flickering minimum
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.GetEffectiveSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all simple segments in given path figure including the closing chord.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.Arc">
            <summary>
            Renderes an Arc shape supporting Arc, Ring and Pie mode controled by ArcThickness.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.PrimitiveShape">
            <summary>
            Platform neutral implementation of Shape deriving from WPF:Shape or SL:Path
            </summary>
            <summary>
            Provides Silverlight implementation of PrimitiveShape who derives from platform Path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.CreateGeometrySource">
            <summary>
            Extend how the shape is drawn with creating geometry source
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            In WPF, measure override works from Shape.DefiningGeometry which is not always as expected
            see bug 99497 for details where WPF is not having correct measure by default.
            
            In Silverlight, measure override on Path does not work the same as primitive shape works.
            
            We should return the smallest size this shape can correctly render without clipping.
            By default a shape can render as small as a dot, therefore returning the strokethickness.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Shapes.PrimitiveShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry of the primitive shape, mapping to <see cref="P:System.Windows.Shapes.Path.Data"/> in Silverlight.
            </summary>
            <remarks>
            The concept is corresponding to WPF Shape.RenderedGeometry.
            Silverlight must use DP for rendered geometry so that it updates correctly.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.Data">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Geometry"/> that specifies the shape to be drawn.
            </summary>
            <returns>A description of the shape to be drawn.</returns>
            <remarks>
            A new Data property to hide Path.Data property, to avoid being serialized to xaml.
            This property will carry DesignerSerializationVisibilityAttribute.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle in degrees. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle in degree. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThickness">
            <summary>
            Gets or sets the arc thickness.
            </summary>
            <value>The arc thickness in pixels or percentage depending on "ArcThicnessUnit"/>.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThicknessUnit">
            <summary>
            Gets or sets the arc thickness unit.
            </summary>
            <value>The arc thickness unit, either pixel or percentage.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.BlockArrow">
            <summary>
            Renders a block arrow shape supporting resizable arrow head and body.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation where the arrow is pointing to.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowheadAngle">
            <summary>
            Gets or sets the arrowhead angle.
            </summary>
            <value>The arrowhead angle in degrees.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowBodySize">
            <summary>
            Gets or sets the size of the arrow body.
            </summary>
            <value>The size of the arrow body in pixels.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.RegularPolygon">
            <summary>
            Renders a regular polygon shape or corresponding star shape with variable number of points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.PointCount">
            <summary>
            Gets or sets the number of points of the <see cref="T:Microsoft.Expression.Shapes.RegularPolygon"/>
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.InnerRadius">
            <summary>
            Gets or sets the the distance between the center and the innermost point.
            </summary>
            <value>The distance between the center and the innermost point.</value>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.Vector">
            <summary>
            This is ported from WPF implementation of Vector
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\it\System.Windows.Interactivity.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Interactivity</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
            Rappresenta una raccolta di IAttachedObject con un AssociatedObject condiviso e offre notifiche di modifica del suo contenuto quando AssociatedObject cambia.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
            Un&apos;interfaccia per un oggetto che può essere associata a un altro oggetto.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)">
            <summary>
            Associa all&apos;oggetto specificato.
            </summary>
            <param name="dependencyObject">L&apos;oggetto a cui associarsi.</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
            Scollega questa istanza dall&apos;oggetto associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
            <remarks>Rappresenta l&apos;oggetto a cui l&apos;istanza è associata.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.AttachableCollection`1"/>.
            </summary>
            <remarks>Interna, perché non deve essere ereditata al di fuori di questo assembly.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
            Chiamato immediatamente dopo che la raccolta è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
            Chiamato quando la raccolta viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemAdded(`0)">
            <summary>
            Chiamato quando un nuovo elemento viene aggiunto alla raccolta.
            </summary>
            <param name="item">Il nuovo elemento.</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemRemoved(`0)">
            <summary>
            Chiamato quando un elemento viene rimosso dalla raccolta.
            </summary>
            <param name="item">L&apos;elemento rimosso.</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.VerifyAdd(`0)">
            <exception cref="T:System.InvalidOperationException">Impossibile aggiungere l&apos;istanza a una raccolta più di una volta.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(System.Windows.DependencyObject)">
            <summary>
            Associa all&apos;oggetto specificato.
            </summary>
            <param name="dependencyObject">L&apos;oggetto a cui associarsi.</param>
            <exception cref="T:System.InvalidOperationException">IAttachedObject è già collegato a un oggetto diverso.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
            Scollega questa istanza dall&apos;oggetto associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
            L&apos;oggetto su cui la raccolta è ospitata.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            Recupera l&apos;oggetto associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior`1">
            <summary>
            Incapsula informazioni di stato e zero o più ICommands in un oggetto associabile.
            </summary>
            <typeparam name="T">Il tipo a cui <see cref="T:System.Windows.Interactivity.Behavior`1"/> è associabile.</typeparam>
            <remarks>
            	Behavior è la classe base per fornire stato e comandi associabili a un oggetto. I tipi a cui Behavior può essere associato possono essere controllati dal parametro generic. Sottoporre a override i metodi OnAttached() e OnDetaching() per eseguire l&apos;hook e l&apos;unhook degli eventuali gestori necessari dall&apos;elemento AssociatedObject.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
            Incapsula informazioni di stato e zero o più ICommands in un oggetto associabile.
            </summary>
            <remarks>Questa è una classe infrastruttura. Gli autori di comportamenti devono derivare da Behavior&lt;T&gt; invece che da questa classe.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
            Chiamato dopo che il comportamento è associato a un AssociatedObject.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;hook della funzionalità all&apos;elemento AssociatedObject.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
            Chiamato quando il comportamento viene scollegato dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;unhook della funzionalità dall&apos;elemento AssociatedObject.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)">
            <summary>
            Associa all&apos;oggetto specificato.
            </summary>
            <param name="dependencyObject">L&apos;oggetto a cui associarsi.</param>
            <exception cref="T:System.InvalidOperationException">Il Behavior è già ospitato su un elemento diverso.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject non soddisfa il vincolo di tipo Behavior.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
            Scollega questa istanza dall&apos;oggetto associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
            Il tipo a cui è possibile associare questo comportamento.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui questo comportamento è associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            Recupera l&apos;oggetto associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.Behavior`1"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior`1.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui questo <see cref="T:System.Windows.Interactivity.Behavior`1"/> è associato.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
            Rappresenta una raccolta di comportamenti con un AssociatedObject condiviso e offre notifiche di modifica del suo contenuto quando AssociatedObject cambia.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>.
            </summary>
            <remarks>Interna, perché non deve essere ereditata al di fuori di questo assembly.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
            Chiamato immediatamente dopo che la raccolta è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
            Chiamato quando la raccolta viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemAdded(System.Windows.Interactivity.Behavior)">
            <summary>
            Chiamato quando un nuovo elemento viene aggiunto alla raccolta.
            </summary>
            <param name="item">Il nuovo elemento.</param>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemRemoved(System.Windows.Interactivity.Behavior)">
            <summary>
            Chiamato quando un elemento viene rimosso dalla raccolta.
            </summary>
            <param name="item">L&apos;elemento rimosso.</param>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditor">
            <summary>
            Enumera possibili valori per editor del valore di proprietà riutilizzabili.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Element">
            <summary>
            Utilizza la selezione elemento, se supportata, per modificare questa proprietà in fase di progettazione.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Storyboard">
            <summary>
            Utilizza la selezione storyboard, se supportata, per modificare questa proprietà in fase di progettazione.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.StateName">
            <summary>
            Utilizza la selezione stato, se supportata, per modificare questa proprietà in fase di progettazione.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute">
            <summary>
            Associa il tipo di editor specificato con la proprietà in cui CustomPropertyValueEditor è applicato.
            </summary>
            <remarks>Utilizzare questo attributo per ottenere una modifica in fase di progettazione migliorata per proprietà che denotano elementi (per nome), storyboard o stati (per nome).</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.#ctor(System.Windows.Interactivity.CustomPropertyValueEditor)">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute"/>.
            </summary>
            <param name="customPropertyValueEditor">L&apos;editor del valore di proprietà personalizzato.</param>
        </member>
        <member name="P:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.CustomPropertyValueEditor">
            <summary>
            Recupera o imposta l&apos;editor del valore di proprietà personalizzato.
            </summary>
            <value>L&apos;editor del valore di proprietà personalizzato.</value>
        </member>
        <member name="T:System.Windows.Interactivity.DefaultTriggerAttribute">
            <summary>
            Fornisce informazioni strumenti di progettazione su cosa <see cref="T:System.Windows.Interactivity.TriggerBase"/> creare un&apos;istanza per un&apos;azione o comando specificato.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object)">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/>.
            </summary>
            <param name="targetType">Il tipo a cui si applica l&apos;attributo.</param>
            <param name="triggerType">Il tipo di <see cref="T:System.Windows.Interactivity.TriggerBase"/> di cui creare un&apos;istanza.</param>
            <param name="parameters">Un argomento singolo per il <see cref="T:System.Windows.Interactivity.TriggerBase"/> specificato.</param>
            <exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> non è derivato da TriggerBase.</exception>
            <remarks>Questo costruttore è utile se il <see cref="T:System.Windows.Interactivity.TriggerBase"/> specificato dispone di un singolo argomento. Il codice risultante sarà conforme a CLS.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/>.
            </summary>
            <param name="targetType">Il tipo a cui si applica l&apos;attributo.</param>
            <param name="triggerType">Il tipo di <see cref="T:System.Windows.Interactivity.TriggerBase"/> di cui creare un&apos;istanza.</param>
            <param name="parameters">Gli argomenti del costruttore per il <see cref="T:System.Windows.Interactivity.TriggerBase"/> specificato.</param>
            <exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> non è derivato da TriggerBase.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.Instantiate">
            <summary>
            Crea un&apos;istanza di questa istanza.
            </summary>
            <returns>Il <see cref="T:System.Windows.Interactivity.TriggerBase"/> specificato da DefaultTriggerAttribute.</returns>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TargetType">
            <summary>
            Recupera il tipo a cui si applica questo DefaultTriggerAttribute.
            </summary>
            <value>Il tipo a cui si applica questo DefaultTriggerAttribute.</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TriggerType">
            <summary>
            Recupera il tipo di <see cref="T:System.Windows.Interactivity.TriggerBase"/> di cui creare un&apos;istanza.
            </summary>
            <value>Il tipo di <see cref="T:System.Windows.Interactivity.TriggerBase"/> di cui creare un&apos;istanza.</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.Parameters">
            <summary>
            Recupera i parametri da passare al costruttore <see cref="T:System.Windows.Interactivity.TriggerBase"/>.
            </summary>
            <value>I parametri da passare al costruttore <see cref="T:System.Windows.Interactivity.TriggerBase"/>.</value>
        </member>
        <member name="T:System.Windows.Interactivity.EventTrigger">
            <summary>
            Un trigger che ascolta un evento specificato sulla sua origine e si attiva quando l&apos;evento viene attivato.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase`1">
            <summary>
            Rappresenta un trigger che può ascoltare un elemento diverso da AssociatedObject.
            </summary>
            <typeparam name="T">Il tipo a cui è possibile associare il trigger.</typeparam>
            <remarks>
            	EventTriggerBase estende TriggerBase per aggiungere informazioni di un altro elemento rispetto a quello a cui è associato. Questo consente a un utente di associare una coppia trigger/azione a un solo elemento e richiamare l&apos;azione in risposta a una modifica in un altro elemento da qualche altra parte. Sottoporre a override OnSourceChanged per eseguire l&apos;hook e l&apos;unhook del gestori sull&apos;elemento di origine e OnAttached/OnDetaching per l&apos;elemento associato. Il tipo dell&apos;elemento di origine può essere vincolato dal parametro di tipo generic. Se è necessario il controllo sul tipo di AssociatedObject, impostare un TypeConstraintAttribute sul tipo derivato.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase">
            <summary>
            Rappresenta un trigger che può ascoltare un elemento diverso da AssociatedObject.
            </summary>
            <remarks>Questa è una classe infrastruttura. Gli autori di trigger devono derivare da EventTriggerBase&lt;T&gt; invece che da questa classe.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase">
            <summary>
            Rappresenta un oggetto che può richiamare azioni in maniera condizionale.
            </summary>
            <remarks>Questa è una classe infrastruttura. Gli autori di trigger devono derivare da Trigger&lt;T&gt; invece che da questa classe.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)">
            <summary>
            Richiama tutte le azioni associate a questo trigger.
            </summary>
            <remarks>Deve essere chiamato dalle classi derivate per attivare il trigger.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnAttached">
            <summary>
            Chiamato dopo che il trigger è associato a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnDetaching">
            <summary>
            Chiamato quando il trigger viene scollegato dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)">
            <summary>
            Associa all&apos;oggetto specificato.
            </summary>
            <param name="dependencyObject">L&apos;oggetto a cui associarsi.</param>
            <exception cref="T:System.InvalidOperationException">Impossibile ospitare lo stesso Trigger su più di un oggetto per volta.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject non soddisfa il vincolo di tipo Trigger.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Detach">
            <summary>
            Scollega questa istanza dall&apos;oggetto associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui il trigger è associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.Actions">
            <summary>
            Recupera le azioni associate a questo trigger.
            </summary>
            <value>Le azioni associate a questo trigger.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            Recupera l&apos;oggetto associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.GetEventName">
            <summary>
            Specifica il nome dell&apos;evento ascoltato da EventTriggerBase.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)">
            <summary>
            Chiamato quando viene attivato l&apos;evento associato con questo EventTriggerBase. Per impostazione predefinita, questa operazione richiama tutte le azioni sul trigger.
            </summary>
            <param name="eventArgs">L&apos;istanza <see cref="T:System.EventArgs"/> contenente i dati evento.</param>
            <remarks>Eseguire l&apos;override per offrire un controllo più granulare quando le azioni associate a questo trigger vengono richiamate.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnSourceChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Chiamato quando l&apos;origine cambia.
            </summary>
            <param name="oldSource">La vecchia origine.</param>
            <param name="newSource">La nuova origine.</param>
            <remarks>Eseguire l&apos;override di questa funzione in classi derivate per eseguire l&apos;hook e l&apos;unhook della funzionalità dagli oggetti origine modificati.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnAttached">
            <summary>
            Chiamato dopo che il trigger è associato a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnDetaching">
            <summary>
            Chiamato quando il trigger viene scollegato dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.RegisterEvent(System.Object,System.String)">
            <exception cref="T:System.ArgumentException">Impossibile trovare eventName sulla destinazione.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
            <remarks>Definire un TypeConstraintAttribute su un tipo derivato per vincolare i tipi a cui può essere associato.</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint">
            <summary>
            Recupera il vincolo di tipo origine.
            </summary>
            <value>Il vincolo di tipo origine.</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceName">
            <summary>
            Recupera o imposta il nome dell&apos;elemento ascoltato da EventTriggerBase come un&apos;origine. Se l&apos;impostazione del nome è stata annullata o non può essere risolto, verrà utilizzato AssociatedObject.  Si tratta di una proprietà di dipendenza.
            </summary>
            <value>Il nome dell&apos;elemento di origine.</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.Source">
            <summary>
            Recupera l&apos;origine risolta. Se l&apos;impostazione di <c ref="SourceName"/> è stata annullata o non può essere risolto, si assume come valore AssociatedObject.
            </summary>
            <value>L&apos;oggetto di origine risolto.</value>
            <remarks>In generale, questa proprietà deve essere utilizzata al posto di AssociatedObject nelle classi derivate.</remarks>
            <exception cref="T:System.InvalidOperationException">L&apos;elemento a cui <c cref="P:System.Windows.Interactivity.EventTriggerBase.Source"/> fa riferimento non soddisfa il vincolo di tipo.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.EventTriggerBase`1"/>.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.OnSourceChanged(`0,`0)">
            <summary>
            Chiamato quando la proprietà origine cambia.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;hook e l&apos;unhook della funzionalità dall&apos;origine specificata, anziché da AssociatedObject.</remarks>
            <param name="oldSource">La vecchia origine.</param>
            <param name="newSource">La nuova origine.</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase`1.Source">
            <summary>
            Recupera l&apos;origine risolta. Se l&apos;impostazione di <c ref="SourceName"/> è annullata o non può essere risolto, si assume come valore AssociatedObject.
            </summary>
            <value>L&apos;oggetto di origine risolto.</value>
            <remarks>In generale, questa proprietà deve essere utilizzata al posto di AssociatedObject nelle classi derivate.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.EventTrigger"/>.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor(System.String)">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.EventTrigger"/>.
            </summary>
            <param name="eventName">Nome dell&apos;evento.</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTrigger.EventName">
            <summary>
            Recupera o imposta il nome dell&apos;evento da ascoltare. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>Il nome dell&apos;evento.</value>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
            Classe statica a cui appartengono le proprietà associate Triggers e Behaviors. Gestisce la propagazione delle notifiche di modifica AssociatedObject.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.TriggersProperty">
            <summary>
            Questa proprietà è utilizzata come archivio di backup interno per la proprietà associata Triggers pubblica.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
            Questa proprietà è utilizzata come archivio di backup interno per la proprietà associata Behaviors pubblica.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)">
            <summary>
            Recupera la TriggerCollection contenente i trigger associati con l&apos;oggetto specificato.
            </summary>
            <param name="obj">L&apos;oggetto da cui recuperare i trigger.</param>
            <returns>Una TriggerCollection contenente i trigger associati con l&apos;oggetto specificato.</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)">
            <summary>
            Recupera la <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> associata con un oggetto specificato.
            </summary>
            <param name="obj">L&apos;oggetto da cui recuperare la <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>.</param>
            <returns>Una <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> contenente i comportamenti associati con l&apos;oggetto specificato.</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnBehaviorsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exception cref="T:System.InvalidOperationException">Impossibile ospitare la stessa BehaviorCollection su più di un oggetto alla volta.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnTriggersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exception cref="T:System.InvalidOperationException">Impossibile ospitare la stessa TriggerCollection su più di un oggetto alla volta.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
            Un funzione helper per prendere il posto di FrameworkElement.IsLoaded, poiché Silverlight non dispone di una proprietà simile.
            </summary>
            <param name="element">L&apos;elemento di interesse.</param>
            <returns>True se l&apos;elemento è stato caricato; false in caso contrario</returns>
        </member>
        <member name="T:System.Windows.Interactivity.InvokeCommandAction">
            <summary>
            Esegue un&apos;azione specificata sul comportamento host quando richiamata.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction`1">
            <summary>
            Rappresenta un oggetto associabile che incapsula un&apos;unità di funzionalità.
            </summary>
            <typeparam name="T">Il tipo a cui è possibile associare questa azione.</typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction">
            <summary>
            Rappresenta un oggetto associabile che incapsula un&apos;unità di funzionalità.
            </summary>
            <remarks>Questa è una classe infrastruttura. Gli autori di azioni devono derivare da TriggerAction&lt;T&gt; invece che da questa classe.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.CallInvoke(System.Object)">
            <summary>
            Tenta di richiamare l&apos;azione.
            </summary>
            <param name="parameter">Il parametro dell&apos;azione. Se l&apos;azione non richiede un parametro, è possibile impostare il parametro su un riferimento con valore null.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Invoke(System.Object)">
            <summary>
            Richiama l&apos;azione.
            </summary>
            <param name="parameter">Il parametro dell&apos;azione. Se l&apos;azione non richiede un parametro, è possibile impostare il parametro su un riferimento con valore null.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnAttached">
            <summary>
            Chiamato dopo che l&apos;azione è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnDetaching">
            <summary>
            Chiamato quando l&apos;azione viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Attach(System.Windows.DependencyObject)">
            <summary>
            Associa all&apos;oggetto specificato.
            </summary>
            <param name="dependencyObject">L&apos;oggetto a cui associarsi.</param>
            <exception cref="T:System.InvalidOperationException">Impossibile ospitare la stessa TriggerAction su più di un oggetto per volta.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject non soddisfa il vincolo di tipo TriggerAction.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Detach">
            <summary>
            Scollega questa istanza dall&apos;oggetto associato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsEnabled">
            <summary>
            Recupera o imposta un valore che indica se l&apos;azione viene eseguita quando richiamata. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>
            	<c>true</c> se l&apos;azione viene eseguita quando richiamata; <c>false</c> in caso contrario.
            </value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui questa azione è associata.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsHosted">
            <summary>
            Recupera o imposta un valore che indica se questa istanza è associata.
            </summary>
            <value><c>true</c> se questa istanza è associata; <c>false</c> in caso contrario.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            Recupera l&apos;oggetto associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TriggerAction`1"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui questa <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> è associata.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.Invoke(System.Object)">
            <summary>
            Richiama l&apos;azione.
            </summary>
            <param name="parameter">Il parametro dell&apos;azione. Se l&apos;azione non richiede un parametro, è possibile impostare il parametro su un riferimento con valore null.</param>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.OnAttached">
            <summary>
            Chiamato dopo che la raccolta è associata a un AssociatedObject.
            </summary>
            <exception cref="T:System.InvalidOperationException">InvokeActionCommand deve essere ospitato su un Behavior.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandName">
            <summary>
            Recupera o imposta il nome del comando che questa azione deve richiamare.
            </summary>
            <value>Il nome del comando che questa azione deve richiamare.</value>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
            Recupera o imposta il parametro comando.
            </summary>
            <value>Il parametro comando.</value>
            <remarks>Questo è il valore passato a ICommand.CanExecute e ICommand.Execute.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolvedEventArgs">
            <summary>
            Offre dati riguardo gli oggetti interessati durante la risoluzione di una modifica nome.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolver">
            <summary>
            Classe helper per gestire la logica di risoluzione di TargetName in un elemento di destinazione in base al contesto fornito da un elemento host.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.NameResolver.UpdateObjectFromName(System.Windows.DependencyObject)">
            <summary>
            Tenta di aggiornare l&apos;oggetto risolto dal nome all&apos;interno del contesto dell&apos;elemento di riferimento NameScope.
            </summary>
            <param name="oldObject">Il vecchio oggetto risolto.</param>
            <remarks>
            Ripristina la destinazione esistente e tenta di risolvere il TargetName corrente dal contesto dell&apos;host corrente. Se non può essere risolto dal contesto dell&apos;host, continua a risalire la struttura ad albero visuale fino a quando non viene risolto. Se non è stato risolto quando raggiunge la radice, imposta la destinazione su null e scrive un messaggio di avviso nell&apos;output di debug.
            </remarks>
        </member>
        <member name="E:System.Windows.Interactivity.NameResolver.ResolvedElementChanged">
            <summary>
            Si verifica quando l&apos;elemento risolto è cambiato.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Name">
            <summary>
            Recupera o imposta il nome dell&apos;elemento per cercare di risolverlo.
            </summary>
            <value>Il nome che si tenta di risolvere.</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Object">
            <summary>
            L&apos;oggetto risolto. Restituisce l&apos;elemento di riferimento se TargetName è nullo o vuoto, oppure se non è stata tentata una risoluzione.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.NameScopeReferenceElement">
            <summary>
            Recupera o imposta l&apos;elemento di riferimento da cui eseguire la risoluzione del nome.
            </summary>
            <value>L&apos;elemento di riferimento.</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.PendingReferenceElementLoad">
            <summary>
            Recupera o imposta un valore che indica se il caricamento dell&apos;elemento di riferimento è sospeso.
            </summary>
            <value>
            	<c>true</c> se [caricamento elemento di riferimento sospeso]; <c>false</c> in caso contrario.
            </value>
            <remarks>
            Se l&apos;host non è stato caricato, il nome non verrà risolto. In questo caso, ritardare la risoluzione e tracciare il fatto con questa proprietà.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction`1">
            <summary>
            Rappresenta un&apos;azione che può essere utilizzata come destinazione per influenzare un oggetto diverso dal suo AssociatedObject.
            </summary>
            <typeparam name="T">Il vincolo di tipo sulla destinazione.</typeparam>
            <remarks>
            	TargetedTriggerAction estende TriggerAction per aggiungere informazioni di un altro elemento rispetto a quello a cui è associato. Questo consente a un utente di invocare l&apos;azione su un elemento diverso da quello a cui è associato in risposta a un&apos;attivazione di trigger. Eseguire l&apos;override di OnTargetChanged per eseguire l&apos;hook e l&apos;unhook dei gestori sull&apos;elemento di destinazione e l&apos;override di OnAttached/OnDetaching per l&apos;elemento associato. Il tipo di elemento di destinazione può essere vincolato dal parametro di tipo generic. Se è necessario il controllo sul tipo di AssociatedObject, impostare un TypeConstraintAttribute sul tipo derivato.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction">
            <summary>
            Rappresenta un&apos;azione che può essere utilizzata come destinazione per influenzare un oggetto diverso dal suo AssociatedObject.
            </summary>
            <remarks>Questa è una classe infrastruttura. Gli autori di azioni devono derivare da TargetedTriggerAction&lt;T&gt; invece che da questa classe.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnTargetChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Chiamato quando la destinazione cambia.
            </summary>
            <param name="oldTarget">La vecchia destinazione.</param>
            <param name="newTarget">La nuova destinazione.</param>
            <remarks>Eseguire l&apos;override di questa funzione in classi derivate per eseguire l&apos;hook e l&apos;unhook della funzionalità dagli oggetti origine modificati.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnAttached">
            <summary>
            Chiamato dopo che l&apos;azione è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnDetaching">
            <summary>
            Chiamato quando l&apos;azione viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetName">
            <summary>
            Recupera o imposta il nome della destinazione. Se l&apos;impostazione di TargetName è stata annullata o non può essere risolto, la destinazione verrà impostata su AssociatedObject. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>Il nome della destinazione.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.Target">
            <summary>
            Recupera l&apos;oggetto di destinazione. Se l&apos;impostazione di TargetName è stata annullata o non può essere risolto, si assume come valore AssociatedObject.
            </summary>
            <value>La destinazione.</value>
            <remarks>In generale, questa proprietà deve essere utilizzata al posto di AssociatedObject nelle classi derivate.</remarks>
            <exception cref="T:System.InvalidOperationException">L&apos;elemento di destinazione non soddisfa il vincolo di tipo.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
            <remarks>Definire un TypeConstraintAttribute su un tipo derivato per vincolare i tipi a cui può essere associato.</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetTypeConstraint">
            <summary>
            Recupera il vincolo di tipo destinazione.
            </summary>
            <value>Il vincolo di tipo destinazione.</value>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TargetedTriggerAction`1"/>.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.OnTargetChanged(`0,`0)">
            <summary>
            Chiamato quando la proprietà di destinazione cambia.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;hook e l&apos;unhook della funzionalità sulla destinazione specificata, anziché su AssociatedObject.</remarks>
            <param name="oldTarget">La vecchia destinazione.</param>
            <param name="newTarget">La nuova destinazione.</param>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction`1.Target">
            <summary>
            Recupera l&apos;oggetto di destinazione. Se l&apos;impostazione di TargetName è stata annullata o non può essere risolto, si assume come valore AssociatedObject.
            </summary>
            <value>La destinazione.</value>
            <remarks>In generale, questa proprietà deve essere utilizzata al posto di AssociatedObject nelle classi derivate.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerActionCollection">
            <summary>
            Rappresenta una raccolta di azioni con un AssociatedObject condiviso e offre notifiche di modifica al suo contenuto quando AssociatedObject cambia.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TriggerActionCollection"/>.
            </summary>
            <remarks>Interna, perché non deve essere ereditata al di fuori di questo assembly.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnAttached">
            <summary>
            Chiamato immediatamente dopo che la raccolta è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnDetaching">
            <summary>
            Chiamato quando la raccolta viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemAdded(System.Windows.Interactivity.TriggerAction)">
            <summary>
            Chiamato quando un nuovo elemento viene aggiunto alla raccolta.
            </summary>
            <param name="item">Il nuovo elemento.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemRemoved(System.Windows.Interactivity.TriggerAction)">
            <summary>
            Chiamato quando un elemento viene rimosso dalla raccolta.
            </summary>
            <param name="item">L&apos;elemento rimosso.</param>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase`1">
            <summary>
            Rappresenta un oggetto che può richiamare azioni in maniera condizionale.
            </summary>
            <typeparam name="T">Il tipo a cui è possibile associare questo trigger.</typeparam>
            <remarks>
            	TriggerBase è la classe base per il controllo delle azioni. Eseguire l&apos;override dei metodi OnAttached() e OnDetaching() per eseguire l&apos;hook e l&apos;unhook dei gestori sull&apos;elemento AssociatedObject. È possibile vincolare i tipi a cui associare un TriggerBase derivato specificando il parametro generic. Richiamare InvokeActions() per attivare tutte le azioni associate con questo TriggerBase.
            </remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase`1.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TriggerBase`1"/>.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObject">
            <summary>
            Recupera l&apos;oggetto a cui il trigger è associato.
            </summary>
            <value>L&apos;oggetto associato.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObjectTypeConstraint">
            <summary>
            Recupera il vincolo di tipo dell&apos;oggetto associato.
            </summary>
            <value>Il vincolo di tipo dell&apos;oggetto associato.</value>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerCollection">
            <summary>
             Rappresenta una raccolta di trigger con un AssociatedObject condiviso e offre notifiche di modifica del suo contenuto quando AssociatedObject cambia.
             </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TriggerCollection"/>.
            </summary>
            <remarks>Interna, perché non deve essere ereditata al di fuori di questo assembly.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnAttached">
            <summary>
            Chiamato immediatamente dopo che la raccolta è associata a un AssociatedObject.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnDetaching">
            <summary>
            Chiamato quando la raccolta viene scollegata dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemAdded(System.Windows.Interactivity.TriggerBase)">
            <summary>
            Chiamato quando un nuovo elemento viene aggiunto alla raccolta.
            </summary>
            <param name="item">Il nuovo elemento.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemRemoved(System.Windows.Interactivity.TriggerBase)">
            <summary>
            Chiamato quando un elemento viene rimosso dalla raccolta.
            </summary>
            <param name="item">L&apos;elemento rimosso.</param>
        </member>
        <member name="T:System.Windows.Interactivity.TypeConstraintAttribute">
            <summary>
            Specificare i vincoli di tipo su AssociatedObject di TargetedTriggerAction e EventTriggerBase.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TypeConstraintAttribute.#ctor(System.Type)">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:System.Windows.Interactivity.TypeConstraintAttribute"/>.
            </summary>
            <param name="constraint">Il tipo di vincolo.</param>
        </member>
        <member name="P:System.Windows.Interactivity.TypeConstraintAttribute.Constraint">
            <summary>
            Recupera il tipo di vincolo.
            </summary>
            <value>Il tipo di vincolo.</value>
        </member>
        <member name="T:System.Windows.Interactivity.ExceptionStringTable">
            <summary>
              Una classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
              Restituisce l&apos;istanza ResourceManager memorizzata nella cache utilizzata da questa classe.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.Culture">
            <summary>
              Esegue l&apos;override della proprietà CurrentUICulture del thread corrente per tutte le ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorCollectionMultipleTimesExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile impostare oggetti multipli per la stessa BehaviorCollection.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorMultipleTimesExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile associare un&apos;istanza di un Behavior a più di un oggetto alla volta.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerActionMultipleTimesExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile ospitare un&apos;istanza di TriggerAction in più TriggerCollections simultaneamente. Rimuoverla da una TriggerCollection prima di aggiungerla a un&apos;altra.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerCollectionMultipleTimesExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile impostare oggetti multipli per la stessa TriggerCollection.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerMultipleTimesExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile associare un&apos;istanza di un trigger a più di un oggetto alla volta.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CommandDoesNotExistOnBehaviorWarningMessage">
            <summary>
              Ricerca una stringa localizzata simile a Il comando &quot;{0}&quot; non esiste o non è esposto pubblicamente in {1}.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a &quot;{0}&quot; non è un tipo valido per il parametro TriggerType. Assicurarsi che &quot;{0}&quot; derivi da TriggerBase.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DuplicateItemInCollectionExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile aggiungere la stessa istanza di &quot;{0}&quot; a &quot;{1}&quot; più di una volta.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.EventTriggerCannotFindEventNameExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile trovare un evento denominato &quot;{0}&quot; nel tipo &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.InvokeActionCommandMustBeHostedOnBehaviorExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a InvokeCommandAction deve essere associato a un Behavior. Per eseguire questa operazione, aggiungerlo alla raccolta Actions di un Trigger nella raccolta Triggers di un oggetto Behavior.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.RetargetedTypeConstraintViolatedExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile per un oggetto di tipo &quot;{0}&quot; avere una proprietà {3} di tipo &quot;{1}&quot;. Le istanze di tipo &quot;{0}&quot; possono solo avere una proprietà {3} di tipo &quot;{2}&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.TypeConstraintViolatedExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile associare il tipo &quot;{0}&quot; al tipo &quot;{1}&quot;. È possibile associare istanze di tipo &quot;{0}&quot; solo a oggetti di tipo &quot;{2}&quot;.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.UnableToResolveTargetNameWarningMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile risolvere TargetName &quot;{0}&quot;.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\it\Microsoft.Expression.Interactions.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
            Un&apos;implementazione base di ICommand che esegue il wrapping di un metodo che non accetta parametri o di un metodo che accetta un solo parametro.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/>.
            </summary>
            <param name="action">L&apos;azione.</param>
            <remarks>Utilizzare questo costruttore per implementare un&apos;azione che ignora il parametro ICommand.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/>.
            </summary>
            <param name="objectAction">Un&apos;azione che accetta un parametro oggetto.</param>
            <remarks>Utilizzare questo costruttore per implementare un&apos;azione che utilizza il parametro oggetto passato dal metodo Execute.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
            Definisce il metodo che determina se il comando può essere eseguito nel suo stato corrente.
            </summary>
            <param name="parameter">Dati utilizzati dal comando.  Se il comando non richiede il passaggio di dati, è possibile impostare questo oggetto su null.</param>
            <returns>
            Restituisce sempre true.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
            Definisce il metodo da chiamare quando il comando viene richiamato.
            </summary>
            <param name="parameter">Dati utilizzati dal comando.  Se il comando non richiede il passaggio di dati, è possibile impostare questo oggetto su null.</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
            Si verifica in caso di modifiche che influenzano l&apos;esecuzione del comando. Non è attivato da ActionCommand.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
            Un&apos;azione che modifica una proprietà specificata in un valore specificato quando viene richiamata.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
            Richiama l&apos;azione.
            </summary>
            <param name="parameter">Il parametro dell&apos;azione. Se l&apos;azione non richiede un parametro, è possibile impostare il parametro su un riferimento con valore null.</param>
            <exception cref="T:System.ArgumentException">Impossibile trovare una proprietà con <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> sulla destinazione.</exception>
            <exception cref="T:System.ArgumentException">Impossibile impostare <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> sul valore specificato da <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/>.</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
            Recupera o imposta il nome della proprietà da modificare. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>Il nome della proprietà da modificare.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
            Recupera o imposta il valore da impostare. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>Il valore da impostare.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
            Recupera o imposta la durata dell&apos;animazione che si verifica quando si richiama l&apos;azione ChangePropertyAction.  Si tratta di una proprietà di dipendenza. Se l&apos;impostazione della durata è stata annullata, non viene applicata nessuna animazione.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Ease">
            <summary>
            Recupera o imposta la funzione di interpolazione da utilizzare con l&apos;animazione quando si richiama ChangePropertyAction.  Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
            ExtendedVisualStateManager è un elemento VisualStateManager personalizzato che consente di semplificare l&apos;animazione di proprietà di layout. Grazie a questo elemento VisualStateManager personalizzato, gli stati possono includere modifiche a proprietà come Grid.Column, possono modificare le altezze elementi in o da Auto e così via. Queste modifiche verranno distribuite nel tempo utilizzando le funzioni GeneratedDuration e GeneratedEasingFunction della transizione appropriata. Per una descrizione generale dell&apos;algoritmo, vedere la regione &quot;Override di VisualStateManager&quot; sottostante.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
            Un elemento VisualStateGroup può utilizzare o meno layout fluidi.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
            VisualStateGroup mantiene un elenco di questi valori originali in una proprietà associata.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
            Per ogni stato, le proprietà specifiche del layout vengono estratte e quindi associate allo stato. Queste proprietà vengono rimosse dallo stato stesso.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
            Ricorda lo stato corrente.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
            Insieme di elementi attualmente in movimento.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
            Storyboard che anima la transizione.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
            Questo elenco contiene tutte le proprietà di layout conosciute.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.PathToPropertyMap">
            <summary>
            Silverlight non offre un metodo diretto per recuperare una DependencyProperty da PropertyPath, pertanto questa struttura è utilizzata per individuare percorsi rilevati.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
            Interrompere l&apos;animazione e sostituire le modifiche layout apportate per supportare l&apos;animazione.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
            Individuare la transizione utilizzata da VisualStateManager per animare la modifica, in modo che l&apos;animazione del layout corrisponda a durata e variazione.
            </summary>
            <param name="group">Il gruppo in cui viene eseguita la transazione</param>
            <param name="previousState">Lo stato di provenienza</param>
            <param name="state">Lo stato di destinazione</param>
            <returns>La transizione</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
            Rimuovere tutte le proprietà che influenzano il layout dallo storyboard per lo stato e memorizzarle nella cache in una proprietà associata.
            </summary>
            <param name="state">Lo stato in cui ci si sposta</param>
            <returns>Uno storyboard contenente le proprietà di layout in quello stato</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            L&apos;insieme di elementi di destinazione è l&apos;insieme di tutti gli elementi che possono essersi spostati in una transizione di layout. Questo insieme è la chiusura di: - Elementi con proprietà di layout animate nello stato. - Pari livello di elementi nell&apos;insieme. - Padri di elementi nell&apos;insieme.
             
            Il codice seguente esegue il controllo dei rettangoli prima e dopo la modifica del layout.
            </summary>
            <param name="control">Il controllo il cui layout cambia stato</param>
            <param name="layoutStoryboard">Lo storyboard contenente le modifiche di layout</param>
            <param name="originalValueRecords">Eventuali valori precedenti da spostamenti di stato precedenti che possono essere ripristinati</param>
            <param name="movingElements">L&apos;insieme di elementi attualmente in movimento, se è in corso una transizione di cambiamento di stato</param>
            <returns>L&apos;insieme completo di elementi il cui layout potrebbe essere cambiato</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            Recuperare o impostare rettangoli per tutti gli elementi nell&apos;elenco di destinazione.
            </summary>
            <param name="targets">L&apos;insieme di elementi da considerare</param>
            <param name="movingElements">L&apos;insieme di elementi attualmente in movimento</param>
            <returns>Un dizionario che mappa gli elementi ai rispettivi rettangoli</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
            Recuperare il rettangolo di layout di un elemento, recuperando lo slot di layout e quindi calcolando la porzione dello slot in uso.
            </summary>
            <param name="element">L&apos;elemento di cui si desidera recuperare il rettangolo</param>
            <returns>Il rettangolo di layout dell&apos;elemento</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            Recuperare le opacità degli elementi al momento del cambiamento di stato, anziché le visibilità, poiché il cambiamento di stato può essere in corso e il valore corrente è il più importante.
            </summary>
            <param name="control">Il controllo il cui stato sta cambiando</param>
            <param name="layoutStoryboard">Lo storyboard con le proprietà di layout</param>
            <param name="originalValueRecords">L&apos;insieme di valori originali</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
            Esaminare lo storyboard del layout e impostare tutte le proprietà utilizzando SetValue per abilitare la chiamata UpdateLayout senza eseguire il rendering dell&apos;animazione. Tutti i valori sovrascritti verranno archiviati nella raccolta di OriginalValueRecords in modo da poter essere sostituiti in seguito.
            </summary>
            <param name="control">Il controllo il cui stato sta cambiando</param>
            <param name="layoutStoryboard">Lo storyboard contenente le proprietà del layout</param>
            <param name="originalValueRecords">L&apos;archivio di valori originali</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
            Prendere tutti gli elementi che verranno spostati come risultato dell&apos;animazione layout ed eseguire il wrapping degli stessi in canvas in modo che non influenzino i loro elementi di pari livello.
            </summary>
            <param name="movingElements">L&apos;insieme di elementi che verranno spostati</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            Prendere tutti gli elementi che sono stati spostati come risultato dell&apos;animazione layout e rimuovere il wrapping degli stessi dai loro canvas.
            </summary>
            <param name="movingElements">L&apos;insieme di elementi che sono stati spostati</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Copiare le proprietà del layout dall&apos;elemento di origine nell&apos;elemento di destinazione, cancellandole dall&apos;origine.
            </summary>
            <param name="source">L&apos;origine delle proprietà del layout</param>
            <param name="target">La destinazione delle proprietà del layout</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
            Creare la storyboard effettiva che verrà utilizzata per animare la transizione. Utilizzare tutti i risultati calcolati in precedenza.
            </summary>
            <param name="duration">La durata dell&apos;animazione</param>
            <param name="ease">La funzione di interpolazione da utilizzare nell&apos;animazione</param>
            <param name="movingElements">L&apos;insieme di elementi che verranno spostati</param>
            <param name="oldOpacities">Le vecchie opacità degli elementi la cui visibilità è cambiata</param>
            <returns>Lo storyboard</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
            OriginalValueRecord ricorda il valore originale di una proprietà cambiata in uno stato.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
            Questo tipo enumerato indica se un FluidMoveBehavior si applica all&apos;elemento a cui è associato o al figlio dell&apos;elemento. &quot;Self&quot; è utile quando esiste un singolo elemento che deve comportarsi in maniera speciale; &quot;Children&quot; è utile quando lo stesso comportamento si applica a tutti i figli di un WrapPanel o al pannello ItemsHost di un ItemsControl.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
            Comportamento che controlla un elemento (o un insieme di elementi) per modifiche di layout e sposta l&apos;elemento in modo graduale nella nuova posizione quando richiesto. Questo comportamento non anima la dimensione o visibilità di un elemento ma solo il suo scostamento all&apos;interno del contenitore padre.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
            DependencyProperty per la durata dello spostamento.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesToProperty">
            <summary>
            DependencyProperty per l&apos;ambito del comportamento. Per ulteriori dettagli, vedere FluidMoveScope.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActiveProperty">
            <summary>
            DependencyProperty per lo stato attivo del comportamento.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
            DependencyProperty per la EasingFunction da utilizzare per la componente orizzontale dello spostamento.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
            DependencyProperty per la EasingFunction da utilizzare per la componente verticale dello spostamento.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
            La durata dello spostamento.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesTo">
            <summary>
            Indica se il comportamento si applica solo a questo elemento o a tutti i figli dell&apos;elemento (se l&apos;elemento è un pannello).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActive">
            <summary>
            Indica se il comportamento è attualmente attivo.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
            EasingFunction da utilizzare per la componente orizzontale dello spostamento.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
            EasingFunction da utilizzare per la componente verticale dello spostamento.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
            Un&apos;azione che comporta la transizione di un FrameworkElement a un VisualState specificato quando viene richiamata.
            </summary>
            <remarks>
            Se la proprietà TargetName è impostata, questa azione tenta di modificare lo stato dell&apos;elemento di destinazione. In caso contrario, percorre la struttura di elementi nel tentativo di individuare una destinazione alternativa che definisce gli stati. ControlTemplate e UserControl sono due possibilità comuni.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Chiamato quando la destinazione cambia. Se la proprietà TargetName non è impostata, questa azione ha un comportamento personalizzato.
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
            <exception cref="T:System.InvalidOperationException">Impossibile individuare un FrameworkElement appropriato con stati.</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
            Questo metodo è chiamato quando sono soddisfatti alcuni criteri e richiamata l&apos;azione.
            </summary>
            <param name="parameter"></param>
            <exception cref="T:System.InvalidOperationException">Impossibile modificare la destinazione nell&apos;elemento StateName specificato.</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
            Se utilizzare VisualTransition per la transizione tra stati.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
            Il nome di VisualState.  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.HyperlinkAction">
            <summary>
            Un&apos;azione che consente di spostarsi in un collegamento ipertestuale specifico.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.HyperlinkAction.Invoke(System.Object)">
            <summary>
            Questo metodo è chiamato quando sono soddisfatti alcuni criteri e richiamata l&apos;azione.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.NavigateUri">
            <summary>
            L&apos;Uri della pagina da aprire.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.TargetWindow">
            <summary>
            Il nome della finestra o della scheda in cui aprire NavigateUri. 
            </summary>
            <remarks>
            Diversi valori hanno significati speciali: &quot;_blank&quot; carica in una nuova finestra del browser, &quot;_parent&quot; tenta di caricare nel frame principale e &quot;_self&quot; seleziona la pagina o il frame correnti. 
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
            Un trigger che è attivato da un evento di tastiera.  Viene attivato se vengono rilevati il tasto e i modificatori di destinazione.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
            Il tasto da premere per attivare il trigger.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
            I modificatori che devono essere attivi per attivare il trigger (l&apos;impostazione predefinita è nessun modificatore premuto).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
            Se ascoltare l&apos;evento KeyDown o KeyUp.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
            Riposiziona l&apos;elemento associato in risposta a movimenti di trascinamento con il mouse sull&apos;elemento.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
            DependencyProperty per la posizione X dell&apos;elemento trascinato, relativa al bordo sinistro dell&apos;elemento radice.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
            DependencyProperty per la posizione Y dell&apos;elemento trascinato, relativa al bordo superiore dell&apos;elemento radice.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
            DependencyProperty per la proprietà ConstrainToParentBounds. Se true, l&apos;elemento trascinato verrà vincolato a rimanere entro i limiti del suo contenitore padre.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
            Tentativi di aggiornare la posizione dell&apos;elemento associato alle coordinate specificate.
            </summary>
            <param name="point">La posizione desiderata dell&apos;elemento in coordinate radice.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
            Applica una traslazione di posizione relativa all&apos;elemento associato.
            </summary>
            <param name="x">Il componente X della traslazione desiderata in coordinate radice.</param>
            <param name="y">Il componente Y della traslazione desiderata in coordinate radice.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
            Applica la traslazione specificata alla RenderTransform dell&apos;elemento associato.
            </summary>
            <param name="x">Il componente X della traslazione in coordinate padre.</param>
            <param name="y">Il componente Y della traslazione in coordinate padre.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
            Aggiorna le proprietà X e Y in base alla posizione di rendering corrente dell&apos;elemento associato.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.IsValidConstrainedMove(System.Windows.Point)">
            <summary>
            Determina se la posizione del cursore specificata deve essere considerata come parte dell&apos;operazione di trascinamento.
            </summary>
            <param name="currentPosition">La posizione del cursore.</param>
            <returns>
            	<c>true</c> se la posizione fornita deve essere considerata come parte dell&apos;operazione di trascinamento; <c>false</c> in caso contrario.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Controlla se un rettangolo è contenuto da un altro.
            </summary>
            <param name="rect1">Il rettangolo contenente.</param>
            <param name="rect2">Il rettangolo contenuto.</param>
            <returns><c>true</c> se rect1 contiene rect2; in caso contrario, <c>false</c></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
            Trasforma come vettore.
            </summary>
            <param name="transform">La trasformazione.</param>
            <param name="x">Il componente X del vettore.</param>
            <param name="y">Il componente Y del vettore.</param>
            <returns>Un punto contenente i valori di X e Y trasformati da una trasformazione come un vettore.</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
            Recupera lo scostamento di trasformazione.
            </summary>
            <param name="transform">La trasformazione.</param>
            <returns>Lo scostamento della trasformazione.</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
            Chiamato dopo che il comportamento è associato a un AssociatedObject.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;hook della funzionalità all&apos;elemento AssociatedObject.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
            Chiamato quando il comportamento si sta scollegando dal suo AssociatedObject, ma prima che questo si verifichi.
            </summary>
            <remarks>Sottoporre a override per eseguire l&apos;unhook della funzionalità dall&apos;elemento AssociatedObject.</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
            Si verifica quando viene iniziato un movimento di trascinamento.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
            Si verifica quando viene elaborato un aggiornamento del movimento di trascinamento.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
            Si verifica quando un movimento di trascinamento è terminato.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
            Recupera o imposta la posizione X dell&apos;elemento trascinato, relativa al bordo sinistro dell&apos;elemento radice. Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
            Recupera o imposta la posizione Y dell&apos;elemento trascinato, relativa al bordo sinistro dell&apos;elemento radice. Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
            Recupera o imposta un valore che indica se l&apos;elemento trascinato è vincolato a rimanere entro i limiti del suo contenitore padre. Si tratta di una proprietà di dipendenza.
            </summary>
            <value>
            	<c>true</c> se l&apos;elemento trascinato deve essere vincolato ai suoi limiti padre; <c>false</c> in caso contrario.
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
            Recupera la posizione su schermo dell&apos;elemento associato in coordinate radice.
            </summary>
            <value>La posizione su schermo dell&apos;elemento associato in coordinate radice.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
            Recupera i limiti elemento in coordinate elemento.
            </summary>
            <value>I limiti elemento in coordinate elemento.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
            Recupera l&apos;elemento padre dell&apos;oggetto associato.
            </summary>
            <value>L&apos;elemento padre dell&apos;oggetto associato.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
            Recupera l&apos;elemento radice della scena in cui si trova l&apos;oggetto associato.
            </summary>
            <value>L&apos;elemento radice della scena in cui si trova l&apos;oggetto associato.</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
            Un azione che riproduce un suono al completamento.
            </summary>
            <remarks>
            Questa azione è destinata all&apos;utilizzo con effetti sonori brevi che non devono essere interrotti o controllati. Se si cerca di creare un lettore musicale o un gioco, potrebbe non soddisfare le esigenze dell&apos;utente.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
            Quando viene richiamata l&apos;azione, questo metodo è utilizzato per personalizzare l&apos;elemento MediaElement creato dinamicamente.
            </summary>
            <remarks>
            Questo metodo può essere utile per gli autori di azioni che desiderano estendere PlaySoundAction. Se si desidera controllare la proprietà MediaElement Balance, è possibile ereditare da PlaySoundAction ed eseguire l&apos;override del metodo.
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
            Questo metodo è chiamato quando sono soddisfatti alcuni criteri e deve essere richiamata l&apos;azione. 
            </summary>
            <remarks>
            Ogni chiamata dell&apos;azione genera un nuovo suono.  Sebbene l&apos;implementazione sia soggetta a modifiche, il chiamante deve prevedere che questa azione crea un nuovo MediaElement, che verrà eliminato alla fine del suono o se non è possibile riprodurre dal supporto.
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
            Un Uri che definisce il percorso del file audio.  È utilizzato per impostare la proprietà origine del MediaElement. Si tratta di una proprietà di dipendenza.
            </summary>
            <remarks>
            Il formato file del suono può essere uno di quelli supportati da MediaElement.  Nel caso di un video, verrà riprodotta solo la porzione audio.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
            Controlla il volume del suono.  È utilizzato per impostare la proprietà Volume di MediaElement.  Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
            Un&apos;azione che rimuove l&apos;elemento di destinazione dalla struttura quando richiamata.
            </summary>
            <remarks>
            Questa azione potrebbe non riuscire. L&apos;azione consente di rimuovere elementi da padri comuni ma non da raccolte personalizzate o manipolazione diretta della struttura ad albero visuale.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
            Una classe astratta che offre la possibilità di utilizzare come destinazione uno storyboard.
            </summary>
            <remarks>
            Per gli autori di azioni, questa classe offre un modo standard per utilizzare come destinazione uno storyboard.  È possibile scegliere strumenti di progettazione per offrire un&apos;esperienza di modifica speciale per classi che ereditano da questa azione, migliorando pertanto l&apos;esperienza del progettista. 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Questo metodo viene chiamato quando la proprietà Storyboard viene modificata.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
            Lo storyboard di destinazione.  Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
            Un&apos;azione che cambia lo stato di uno storyboard di destinazione quando richiamata.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
            Questo metodo viene chiamato quando sono soddisfatti alcuni criteri e deve essere richiamata l&apos;azione. Questo metodo tenta di modificare lo storyboard di destinazione in un modo definito da ControlStoryboardOption.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
            Una classe astratta che offre la possibilità di utilizzare come destinazione uno storyboard.
            </summary>
            <remarks>
            Per gli autori di trigger, questa classe offre un modo standard per utilizzare come destinazione uno storyboard.  È possibile scegliere strumenti di progettazione per offrire un&apos;esperienza di modifica speciale per classi che ereditano da questo trigger, migliorando pertanto l&apos;esperienza del progettista. 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Questo metodo viene chiamato quando la proprietà Storyboard viene modificata.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
            Lo storyboard di destinazione.  Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
            Un trigger che rimane in ascolto del completamento di uno storyboard.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
            Un trigger che viene attivato quando si verifica un evento specificato nella sua origine e che si attiva dopo un ritardo quando l&apos;evento viene attivato.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
            Inizializza una nuova istanza della classe <see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
            Recupera o imposta il numero di millisecondi di attesa tra le attivazioni. Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
            Recupera o imposta il numero totale di cicli macchina da attivare prima che il trigger sia terminato.  Si tratta di una proprietà di dipendenza.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.ExceptionStringTable">
            <summary>
              Una classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
              Restituisce l&apos;istanza ResourceManager memorizzata nella cache utilizzata da questa classe.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.Culture">
            <summary>
              Esegue l&apos;override della proprietà CurrentUICulture del thread corrente per tutte le ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile trovare una proprietà denominata &quot;{0}&quot; nel tipo &quot;{1}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile assegnare un valore di tipo &quot;{0}&quot; alla proprietà &quot;{1}&quot; di tipo &quot;{2}&quot;. È possibile assegnare alla proprietà &quot;{1}&quot; solo valori di tipo &quot;{2}&quot;.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a La proprietà &quot;{0}&quot; definita dal tipo &quot;{1}&quot; non espone un metodo set, pertanto non può essere modificata.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionStateChangeFailed">
            <summary>
              Ricerca una stringa localizzata simile a Impossibile modificare lo stato della destinazione da {0} a {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
              Ricerca una stringa localizzata simile a La destinazione {0} non definisce alcun elemento VisualStateGroups. .
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
              Ricerca una stringa localizzata simile a La destinazione di RemoveElementAction non è supportata.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ja\Microsoft.Expression.Interactions.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
パラメーターを取らないメソッド、または 1 つのパラメータを取るメソッドをラップする、ICommand の基本的な実装です。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="action">アクション。</param>
<remarks>このコンストラクタを使用し、ICommand パラメーターを無視するアクションを提供します。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="objectAction">オブジェクト パラメーターを取るアクション。</param>
<remarks>このコンストラクターを使用して、Execute メソッドによって渡されるオブジェクト パラメーターを使用するアクションを提供します。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
現在の状態でコマンドが実行可能かどうかを決定するメソッドを定義します。
            </summary>
<param name="parameter">コマンドにより使用されるデータです。このコマンドが引き渡すデータを要求しない場合、オブジェクトを null に設定できます。</param>
            <returns>
常に真を返します。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
コマンドが起動される際に呼び出すメソッドを定義します。
            </summary>
<param name="parameter">コマンドにより使用されるデータです。このコマンドが引き渡すデータを要求しない場合、オブジェクトを null に設定できます。</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
コマンドを実行すべきかどうかに影響する変更が発生したときに起こります。ActionCommand によっては実行されません。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
起動されたときに、特定のプロパティを特定の値に変更するアクションです。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
アクションを起動します。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
<exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> を伴うプロパティは、ターゲット上で見つかりませんでした。</exception>
<exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/> で指定された値に<c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> を設定できませんでした。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
変更するプロパティの名前を取得または設定します。これは依存関係プロパティです。
            </summary>
<value>変更するプロパティの名前。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
設定する値を取得または設定します。これは依存関係プロパティです。
            </summary>
<value>設定する値。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
ChangePropertyAction が起動されたときに表示されるアニメーションの再生時間を取得または設定します。これは依存関係プロパティです。時間を設定しないと、アニメーションは適用されません。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Ease">
            <summary>
ChangePropertyAction が起動されたときにアニメーションと共に使用されるイージング機能を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
ExtendedVisualStateManager は、レイアウト プロパティのアニメーションを滑らかにするカスタム VisualStateManager です。このカスタム VisualStateManager により、状態は Grid.Column などのプロパティの変更を含むことができ、要素の高さを [自動] に切り替えたり、戻したりできます。これらの変更は、適切な切り替え効果の GeneratedDuration および GeneratedEasingFunction を使用することによって、徐々に滑らかになります。このアルゴリズムの一般的な説明については、以下の "VisualStateManager オーバーライド" を参照してください。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
VisualStateGroup は、場合によっては Fluid Layout を使用できません。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
VisualStateGroup はこれらの元の値のリストをアタッチされたプロパティに保持します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
すべての状態について、レイアウト固有のプロパティを抽出し、状態に添付します。これらのプロパティは、状態自体から削除されます。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
現在の状況を保存します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
これは、現在モーション中の要素のセットです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
これは、移行をアニメーション化するストーリーボードです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
この一覧には、すべての既知のレイアウト プロパティが含まれます。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.PathToPropertyMap">
            <summary>
Silverlight は、PropertyPath から DependencyProperty を取得する直接的手段を提供しませんので、この構造は追跡パスを探すために使用されます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
アニメーションを停止し、アニメーションをサポートするために行ったレイアウト変更を置き換えます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
変更をアニメーション化するために VisualStateManager が使用する移行を見つけ、レイアウト アニメーションがデュレーションおよびイーズに一致するようにします。
            </summary>
<param name="group">移行が発生するグループ</param>
<param name="previousState">移行前の状態</param>
<param name="state">移行後の状態</param>
<returns>移行</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
状態のストーリーボードからレイアウトに影響を及ぼすすべてのプロパティを削除し、アタッチされたプロパティにキャッシュします。
            </summary>
<param name="state">移行後の状態</param>
<returns>状態内にレイアウト プロパティを含むストーリーボード</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
このターゲット要素のセットは、レイアウト移行へ移動した可能性のあるすべての要素です。このセットは次を終了します: 状態内でアニメーション化されるレイアウト プロパティを伴う要素 - セット内の要素の兄弟 - セット内の要素の親
             
以降のコードは、レイアウトの変更前後にこれらの四角形をチェックします。
            </summary>
<param name="control">状態が変化しているレイアウトのコントロール</param>
<param name="layoutStoryboard">レイアウトの変更を含むストーリーボード</param>
<param name="originalValueRecords">戻せる可能性がある、以前の状態ナビゲーションからの前の値</param>
<param name="movingElements">状態の変化が移行中の場合の、現在モーション中の要素のセット</param>
<returns>レイアウトが変更された可能性のあるすべての要素のセット</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
ターゲット一覧内のすべての要素に対して四角形のセットを取得します。
            </summary>
<param name="targets">対象となる要素のセット</param>
<param name="movingElements">現在モーション中の要素のセット</param>
<returns>要素をそれらの四角形にマッピングするディクショナリ</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
レイアウト スロットを取得してからスロットの使用される部分を計算することによって、要素のレイアウト四角形を取得します。
            </summary>
<param name="element">求めている四角形が所属する要素</param>
<returns>要素のレイアウト四角形</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
可視性ではなく状態変化時の要素の不透明度を取得します。これは、状態の変化が途中である可能性があり、現在の値が最も重要であるためです。
            </summary>
<param name="control">状態が変化しているコントロール</param>
<param name="layoutStoryboard">レイアウトのプロパティを伴うストーリーボード</param>
<param name="originalValueRecords">元の値のセット</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
ストーリーボードの中で SetValue を使用してすべてのプロパティを設定し、表示の原因となるタイムラインのティッキングを行わずに UpdateLayout を呼び出せるようにします。上書きされるすべての値は、後で置換できるように OriginalValueRecords のコレクションに保管されます。
            </summary>
<param name="control">状態が変化しているコントロール</param>
<param name="layoutStoryboard">レイアウトのプロパティを保持するストーリーボード</param>
<param name="originalValueRecords">元の値の保管</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
レイアウトのアニメーション化の結果として移動するすべての要素を取得し、それらが兄弟要素に影響を与えないようにキャンバスにラップします。
            </summary>
<param name="movingElements">移動する要素のセット</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
レイアウトのアニメーション化の結果として移動中のすべての要素を取得し、Canvases からラップ解除します。
            </summary>
<param name="movingElements">移動中の要素のセット</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
レイアウト プロパティをソース要素からターゲット要素にコピーし、ソースから削除します。
            </summary>
<param name="source">レイアウト プロパティのソース</param>
<param name="target">レイアウト プロパティのコピー先</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
以降のアニメーション化に使用する実際のストーリーボードを作成します。以前の計算結果をすべて使用します。
            </summary>
<param name="duration">アニメーションの時間</param>
<param name="ease">アニメーションに使用するイージング機能</param>
<param name="movingElements">移動する要素のセット</param>
<param name="oldOpacities">可視性が変化中の要素の元の不透明度</param>
<returns>ストーリーボード</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
OriginalValueRecord は状態に変化のあったプロパティの元の値を保存しています。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
この列挙型は、それが添付されている要素か、またはその要素の子のどちらに FluidMoveBehavior が適用するかを示します。特別なビヘイビアーが必要な単一の要素がある場合は "Self" を使用し、同じ動作を WrapPanel のすべての子または ItemsControl の ItemsHost Panel に適用する場合は "Children" を使用します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
レイアウトの変更について要素 (または要素のセット) を監視し、必要に応じて新しい位置に要素を滑らかに移動するビヘイビアー。この動作は要素のサイズまたは可視性をアニメーション化せず、その親コンテナ内部の要素のオフセットをアニメーション化するだけです。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
移動期間に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesToProperty">
            <summary>
動作のスコープに対する DependencyProperty。詳細については、「FluidMoveScope」を参照してください。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActiveProperty">
            <summary>
動作のアクティブな状態に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
移動の水平方向コンポーネントに使用する EasingFunction の DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
移動の垂直方向コンポーネントに使用する EasingFunction の DependencyProperty。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
移動の時間。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesTo">
            <summary>
動作がこの要素のみに適用するか、または要素のすべての子に適用するかを示します (要素が Panel の場合)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActive">
            <summary>
動作が現在アクティブ化どうかを示します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
移動の水平方向コンポーネントに使用する EasingFunction。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
移動の垂直方向コンポーネントに使用する EasingFunction。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
起動されたときに、FrameworkElement を特定 FrameworkElement に移行するアクションです。
            </summary>
            <remarks>
TargetName プロパティが設定されると、このアクションはターゲット要素の状態の変更を試みます。設定されなければ、要素ツリー上で状態を定義する別のターゲットを検索します。ControlTemplate および UserControl が 可能性の高い 2 つの選択肢です。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
ターゲットが変化すると呼び出されます。TargetName プロパティが設定されない場合、このアクションはカスタム動作を有します。
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
<exception cref="T:System.InvalidOperationException">状態のある適切な FrameworkElement  が見つかりませんでした。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションが起動されると、このメソッドが呼び出されます。
            </summary>
            <param name="parameter"></param>
<exception cref="T:System.InvalidOperationException">ターゲットを指定の StateName に変更できませんでした。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
状態間の移行に VisualTransition を使用するかどうか。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
VisualState の名前。  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.HyperlinkAction">
            <summary>
指定されたハイパーリンクに移動するアクション。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.HyperlinkAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションが起動されると、このメソッドが呼び出されます。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.NavigateUri">
            <summary>
開こうとするページの URI。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.TargetWindow">
            <summary>
NavigateUri を開くためのウィンドウまたはタブの名前。 
            </summary>
            <remarks>
いくつかの値には、特別な意味があります。"_blank" は新規のブラウザ ウィンドウを読み込み、"_parent" は親フレームの読み込みを試行し、"_self" は現在のページまたはフレームを対象とします。 
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
キーボード イベントによってトリガーされる Trigger。ターゲットのキーおよび修飾子が検出されると起動します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
Trigger を起動するために押す必要のあるキー。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
Trigger が起動するためには、修飾子がアクティブである必要があります (既定では修飾子は選択されていません)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
KeyDown または KeyUp イベントにリッスンするかどうか。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
アタッチされた要素をマウスをドラッグのジェスチャに応答して要素の上に再配置します。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
ルート要素の左との相対で、ドラッグされる要素の X 位置に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
ルート要素の上方との相対で、ドラッグされる要素の Y 位置に対する DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
ConstrainToParentBounds プロパティに対する DependencyProperty。true の場合、ドラッグされた要素はその親コンテナーの境界内に固定するように制約されます。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
特定の座標に関連要素の位置を更新しようとします。
            </summary>
<param name="point">ルート座標内の要素の目的の位置。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
関連要素に相対位置移動を適用します。
            </summary>
<param name="x">ルート座標内の X コンポーネントの必要な移動。</param>
<param name="y">ルート座標内の Y コンポーネントの必要な移動。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
特定の移動を関連要素の RenderTransform に適用します。
            </summary>
<param name="x">親座標内の X コンポーネントの移動。</param>
<param name="y">親座標内の Y コンポーネントの移動。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
関連要素の現在レンダリングされた位置に基づいて X および Y のプロパティを更新します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.IsValidConstrainedMove(System.Windows.Point)">
            <summary>
特定のカーソル位置をドラッグ操作の一部としてカウントすべきかどうか決定します。
            </summary>
<param name="currentPosition">カーソル位置。</param>
            <returns>
	提供される位置をドラッグ操作の一部としてカウントする場合は<c>true</c>、それ以外の場合は<c>false</c>。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
1 つの四角形が別の四角形に含まれるかどうかチェックします。
            </summary>
<param name="rect1">含む四角形。</param>
<param name="rect2">含まれる四角形。</param>
<returns><c>true</c> rect1 が rect2 を含む場合、それ以外の場合は <c>false</c></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
ベクターとして変換します。
            </summary>
<param name="transform">変換。</param>
<param name="x">ベクターの X コンポーネント。</param>
<param name="y">ベクターの Y コンポーネント。</param>
<returns>ベクターとしての変換により変換された X 値および Y 値を含む点。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
変換オフセットを取得します。
            </summary>
<param name="transform">変換。</param>
<returns>変換のオフセット。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
ビヘイビアーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これを上書きし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
ビヘイビアーが AssociatedObject からデタッチされるとき、その前に呼び出されます。
            </summary>
<remarks>これを上書きし、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
ドラッグ ジェスチャの開始時に発生します。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
ドラッグ ジェスチャの更新処理時に発生します。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
ドラッグ ジェスチャの終了時に発生します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
ルート要素の左との相対で、ドラッグされる要素の X 位置を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
ルート要素の上方との相対で、ドラッグされる要素の Y 位置を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
ドラッグされる要素がその親コンテナーの境界内に固定するように制約されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。
            </summary>
            <value>
	ドラッグされる要素が親領域内に制約される必要がある場合は<c>true</c>、それ以外の場合は<c>false</c>。
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
ルート座標内の関連要素の画面上の位置を取得します。
            </summary>
<value>ルート座標内の関連要素の画面上の位置。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
要素座標内にバインドする要素を取得します。
            </summary>
<value>要素座標内にバインドする要素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
関連オブジェクトの親要素を取得します。
            </summary>
<value>関連オブジェクトの親要素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
関連オブジェクトがあるシーンのルート要素を取得します。
            </summary>
<value>関連オブジェクトがあるシーンのルート要素。</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
完了時にサウンドを鳴らす Action。
            </summary>
            <remarks>
この Action は、停止または制御する必要のない短いサウンド効果の利用を想定しています。音楽プレーヤやゲームを作成する場合には役に立たないかも知れません。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
Action を起動するとき、動的に作成された MediaElement をカスタマイズするためにこのメソッドが利用されます。
            </summary>
            <remarks>
このメソッドは、Action 作成者が PlaySoundAction を拡張したい場合に役立つ可能性があります。MediaElement バランス プロパティを管理する場合、PlaySoundAction から継承してこのメソッドを上書きすることができます。
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションを呼び出す必要がある場合に、このメソッドが呼び出されます。 
            </summary>
            <remarks>
Action を呼び出すごとに新しいサウンドが再生されます。実装は変更される可能性がありますが、発信者はこれにより新しい MediaElement が作成され、再生の終了時またはメディアが再生に失敗した場合に消去されることを覚えておいてください。
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
サウンド ファイルの場所を定義する URI。これは、MediaElement のソース プロパティの設定に使用します。これは依存関係プロパティです。
            </summary>
            <remarks>
サウンドのファイル形式は MediaElement でサポートされていればどれでも使用できます。動画の場合には、オーディオのみが再生されます。
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
サウンドの音量制御。これは、MediaElement の音量プロパティの設定に使用します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
起動されたときに、ターゲット要素をツリーから削除する Action です。
            </summary>
            <remarks>
この Action は失敗する場合があります。この Action は、共通の親から要素を削除する方法は認識しますが、カスタム コレクションからの削除またはビジュアル ツリーの直接操作は認識しません。
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
ストーリーボードをターゲットにする能力を提供する抽象的なクラス。
            </summary>
            <remarks>
このクラスは、Action 作成者にストーリーボードをターゲットにするための標準的な方法を提供します。設計ツールは、デザイナが腕を磨けるように、この Action から継承するクラスの特殊な編集体験を提供する場合があります。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
このメソッドは、ストーリーボード プロパティが変更される場合に呼び出されます。
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
対象のストーリーボード。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
起動されたときに、ターゲット ストーリーボードの状態を変更する Action です。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
一部の条件が一致し、アクションを起動する必要がある場合に、このメソッドが呼び出されます。このメソッドは、ControlStoryboardOption で定義された方法でターゲット ストーリーボードの変更を試行します。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
ストーリーボードをターゲットにする能力を提供する抽象的なクラス。
            </summary>
            <remarks>
このクラスは、Trigger 作成者にストーリーボードをターゲットにするための標準的な方法を提供します。設計ツールは、デザイナが腕を磨けるように、この Trigger から継承するクラスの特殊な編集体験を提供する場合があります。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
このメソッドは、ストーリーボード プロパティが変更される場合に呼び出されます。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
対象のストーリーボード。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
ストーリーボードの完了をリッスンする Trigger。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
ソース上で発生する指定されたイベントによりトリガーされ、イベントが起動されたときに遅れて起動する Trigger。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
<see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
目盛の間の待ち時間 (ミリ秒) を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
Trigger が終了する前に起動される目盛の合計数を取得または設定します。これは依存関係プロパティです。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.ExceptionStringTable">
            <summary>
ローカライズされた文字列などを調べるために、厳密に型指定されたリソース クラス。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
このクラスで使用される、キャッシュされた ResourceManager インスタンスに戻ります。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.Culture">
            <summary>
この厳密に型指定されたリソース クラスを使用して、すべてのリソース ルックアップに対して現在のスレッドの CurrentUICulture プロパティを上書きします。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
「型 "{1}" に "{0}" という名前のプロパティが見つかりません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
「型 "{2}" の "{1}" プロパティに、型 "{0}" の値を割り当てることはできません。"{1}" プロパティは、型 "{2}" の値のみ割り当てることができます。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
「型 "{1}" で定義されたプロパティ "{0}" は set メソッドを公開しないため、変更できません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionStateChangeFailed">
            <summary>
「ターゲット {0} の状態を {1} に変更できませんでした。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
「ターゲット {0} は VisualStateGroups を定義しません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
「RemoveElementAction のターゲットはサポートされていません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ko\Microsoft.Expression.Controls.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Controls</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Initialize">
            <summary>
            Called before we loop over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.ShouldBreak(System.Int32)">
            <summary>
            Checks whether or not we should continue looping over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineBegin(Microsoft.Expression.Drawing.Core.PolylineData)">
            <summary>
            Called before we begin marching a new polyline.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineCompleted(System.Double)">
            <summary>
            Called when we walk off the end of a polyline.
            </summary>
            <param name="remaingLength">The remaining arclength in the polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnStepCompleted(System.Double)">
            <summary>
            Called when we sucessfully complete a step.
            </summary>
            <param name="actualStepDistance">The actual step distance.
            This may be different than Step if we have wrapped to another polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Distribute(Microsoft.Expression.Controls.PathPanel,System.Int32,System.Int32)">
            <summary>
            Distributes the children of a path panel along a given layout path.
            </summary>
            <param name="pathPanel">The path panel.</param>
            <param name="pathIndex">The index of the path in pathPanel.LayoutPaths.</param>
            <param name="childIndex">The index of the first child to be laid out on this path.</param>
            <returns>The index of the next child to be distributed. If childIndex is returned, this function has done nothing.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.ChildIndex">
            <summary>
            The index of the next child to be arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Span">
            <summary>
            The distance in arclength that we want to use for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Step">
            <summary>
            The distance in arclength to walk along the current polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Capacity">
            <summary>
            The total number of elements to be arranged on the LayoutPath.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.EvenDistributionStrategy">
            <summary>
            Distributes the children of a path panel along a layout path.
            Even distribution means that there is equal arclength between the centers of all
            the elements on the path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathStrategy.HaveStartPointsChanged">
            <summary>
            Changes to StartPoint do no cause LayoutUpdated to fire in Silverlight.
            This allows us to check for changes to StartPoint without the cost of comparing an entire geometry.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.ChangedPathLayoutProperties">
            <summary>
            Specifies which path layout properties have changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.#ctor(Microsoft.Expression.Controls.ChangedPathLayoutProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs"/> class.
            </summary>
            <param name="changedProperties">The data for the event.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.ChangedProperties">
            <summary>
            Gets the properties changed in a <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutData">
            <summary>
            Encapsulates the data needed to update a <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LayoutPathIndex">
            <summary>
            Gets or sets the index of the path on which an element is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalIndex">
            <summary>
            Gets or sets the index of an element in a collection of elements.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalIndex">
            <summary>
            Gets or sets the index of an element on a path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the length of path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.NormalAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.OrientationAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location if the element is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.IPathLayoutItem">
            <summary>
            Represents an element that is arranged by a <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </summary>
            <remarks>
            Implementing this interface enables <see cref="T:Microsoft.Expression.Controls.PathPanel"/> to set these properties when the element is arranged.
            This interface is not intended for general implementation.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            Updates the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties based on the given <see cref="T:Microsoft.Expression.Controls.PathLayoutData"/> and raises the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
            <param name="data">The data needed to update the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.</param>
        </member>
        <member name="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated">
            <summary>
            Occurs when one or more of the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties change.
            </summary>
            <remarks>
            This event is raised whenever the item’s position along the path is updated. This can occur due to changes in the properties on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> or changes to <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex">
            <summary>
            Gets the index of the path on which the item is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex">
            <summary>
            Gets the index of the item in a collection of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex">
            <summary>
            Gets the index of the item on the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset">
            <summary>
            Gets the offset of the item proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset">
            <summary>
            Gets the offset of the item proportional to the length of the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle">
            <summary>
            Gets the angle perpendicular to the path at the item's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle">
            <summary>
            Gets the angle perpendicular to the path at the items's location if the item is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Distribution">
            <summary>
            Specifies the distribution of a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Orientation">
            <summary>
            Specifies the orientation of elements on a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.FillBehavior">
            <summary>
            Specifies the method for altering the <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LayoutPath">
            <summary>
            Describes a path along which elements are arranged.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Controls.LayoutPath.transformedPolylines">
            <summary>
            Ideally, we want to cache the Bezier curves before flattening, because transform will affect flattening.
            That requires us to cache curves that we don't support very well yet.  Instead, we cache the flatten points
            in distribution strategy and transform them on demand.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.SourceElement">
            <summary>
            Gets or sets the element that defines the path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Distribution">
            <summary>
            Gets or sets whether items are laid out evenly or with a fixed padding.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Capacity">
            <summary>
            Gets or sets the maximum number of items displayed on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Padding">
            <summary>
            Gets or sets the distance in pixels along the arc length of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> between two items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Orientation">
            <summary>
            Gets or sets the orientation of the items.
            </summary>
            <remarks>
            This property is supported on <see cref="T:Microsoft.Expression.Controls.PathListBox"/>, but not <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Start">
            <summary>
            Gets or sets the distance from the start of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> to place the first item.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Span">
            <summary>
            Gets or sets the percentage of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> that participates in layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.FillBehavior">
            <summary>
            Gets or set the method to alter <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.ActualCapacity">
            <summary>
            Gets the computed Capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.IsValid">
            <summary>
            Gets whether or not the <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is valid in the context.
            A <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is invalid if it is a descendant of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> in which it used.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PaddedDistributionStrategy">
            <summary>
            Distributes the children of a layout path based on the size of the children and a given padding between the children.
            The distance in arclength between children is determined by the padding plus the sum of the radii of the children's bounding boxes.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBox">
            <summary>
            Contains a list of items that are laid out along one or more paths.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.GetContainerForItemOverride">
            <summary>
            Creates the element used to display a specified item.
            </summary>
            <returns>A <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> corresponding to a specified item.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own item container.
            </summary>
            <returns>true if the item is its own item container; otherwise, false.</returns>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBoxItem">
            <summary>
            Represents an item in a <see cref="T:Microsoft.Expression.Controls.PathListBox"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            For a description of this member, see <see cref="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.PathListBoxItem.PathLayoutUpdated">
            <summary>
            For a description of this member, see <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LayoutPathIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.NormalAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.OrientationAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathPanel">
            <summary>
            Arranges child elements along one or more path.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.PathPanel"/> can be used as an alternative to <see cref="T:Microsoft.Expression.Controls.PathListBox"/> when selection is not necessary.
            The <see cref="P:Microsoft.Expression.Controls.LayoutPath.Orientation"/> property is not supported on <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size required for child elements.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. </param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeChild(System.Int32,System.Int32,Microsoft.Expression.Drawing.Core.PolylineData,Microsoft.Expression.Drawing.Core.MarchLocation,System.Int32)">
            <summary>
            Arranges the child at the given index at a particular location on a LayoutPath.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
            <param name="pathIndex">The index of the layout path on which to arrange the child.</param>
            <param name="polyline">The polyline in the layout path.</param>
            <param name="location">The location on the polyline.</param>
            <param name="localIndex">The index of the child on the LayoutPath.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.GetChildRadius(System.Int32)">
            <summary>
            Calculates the radius of the bounding circle for the child at the given index.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.ValidPaths">
            <summary>
            The subset of LayoutPaths that are attached and not Collapsed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.Count">
            <summary>
            Count is the number of Children that the PathPanel will layout.
            If StartItemIndex > 0 and WrapItems is false, this can be less than PathPanel.Children.Count
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalChildren(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalDescendents(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical descendents of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ko\Microsoft.Expression.Effects.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Effects</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Media.Effects.BlindOrientation">
            <summary>
            Determine the orientation of the blinds
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BlindsTransitionEffect">
            <summary>
            Transition shader that simulates blinds opening when transitioning
            from one visual to another. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.OrientationProperty">
            <summary>
            Gets or sets the orientation of the blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.CountProperty">
            <summary>
            Gets or sets the number of blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientationProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the BlindsTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of BlindsTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Orientation">
            <summary>
            Gets or sets orientatio of the blinds.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Count">
            <summary>
            Gets or sets the number of blinds to display.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientation">
            <summary>
            Gets or sets orientation of the blinds.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BloomEffect">
            <summary>
            Effect that implements a bloom illumination of a visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
            
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensityProperty">
            <summary>
            This property is mapped to the BaseIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturationProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.ThresholdProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BloomEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Threshold">
            <summary>
            Gets or sets the minimum intensity that will be used for the bloom
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensity">
            <summary>
            Gets or sets the base intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensity">
            <summary>
            Gets or sets the bloom intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturation">
            <summary>
            Gets or sets the base saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturation">
            <summary>
            Gets or sets the bloom saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensity">
            <summary>
            Gets or sets the Base/BloomIntensity variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturation">
            <summary>
            Gets or sets the BaseBloomSaturation variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect">
            <summary>
            Transition effect that reveals two visuals through a growing/shrinking circle. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the Feather amount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseProperty">
            <summary>
            Dependency property which modifies the circle movement.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShaderProperty">
            <summary>
            Dependency property which modifies the reverseShader variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CircleRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CircleRevealTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.Reverse">
            <summary>
            Gets or sets playing the circle reveal backward
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShader">
            <summary>
            Gets or sets playing the circle reveal backward into the shader
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect">
            <summary>
            Transition effect that transitions two visuals using a cloud 
            texture as the sampler threshold.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudyTransitionEffect">
            <summary>
            Defines a transition shader effect that uses an image as a sampler threshold
            for interpolating pixel value between two visuals. 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect">
            <summary>
            Defines a transition shader effect that provides a random value
            allowing the effect to provide variance each time the effect is run.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeedProperty">
            <summary>
            Dependency property which modifies the RandomSeed variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.#ctor">
            <summary>
            Updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeed">
            <summary>
            Gets or sets the RandomSeed variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImageProperty">
            <summary>
            Dependency property which modifies the CloudImage variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImage">
            <summary>
            Gets or sets the CloudImage variable within the shader used for sampling. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CloudRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CloudRevealTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.ColorToneEffect">
            <summary>
            Effects that modifies the color tone of a visual using
            two colors as the sampling.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DesaturationProperty">
            <summary>
            This property is mapped to the Desaturation variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmountProperty">
            <summary>
            This property is mapped to the Toned variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColorProperty">
            <summary>
            This property is mapped to the LightColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColorProperty">
            <summary>
            This property is mapped to the DarkColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.ColorToneEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Desaturation">
            <summary>
            Gets or sets the Desaturation variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmount">
            <summary>
            Gets or sets the Toned variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColor">
            <summary>
            Gets or sets the LightColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColor">
            <summary>
            Gets or sets the DarkColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.EmbossedEffect">
            <summary>
            Effect that simulates an embossed look to the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.HeightProperty">
            <summary>
            This property is mapped to the Height variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.ColorProperty">
            <summary>
            This property is mapped to the Color variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.EmbossedEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Color">
            <summary>
            Gets or sets the Color variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.FadeTransitionEffect">
            <summary>
            Transition effect that gradually transitions from one visual to another.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the FadeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of FadeTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect">
            <summary>
            Effect that simulates a magnifying lens.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadiusProperty">
            <summary>
            Gets or sets the InnerRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadiusProperty">
            <summary>
            Gets or sets the OuterRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.CenterProperty">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.AmountProperty">
            <summary>
            Gets or sets the amount variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InputProperty">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.generalTransform">
            <summary>
            The transform used for this shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadius">
            <summary>
            Gets or sets the inner radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadius">
            <summary>
            Gets or sets the outer radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Amount">
            <summary>
            Gets or sets the ShrinkFactor: 
            The higher the shrink factor the "smaller" the content inside the ellipse will appear. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.EffectMapping">
            <summary>
            Gets the EffectMapping.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform">
            <summary>
            The GeneralTransform corrosponding to the Magnify effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.biasValue">
            <summary>
            Attempt to transform a point based on the effect.
            </summary>
            <param name="targetPoint">The point to transform.</param>
            <param name="result">The result if available.</param>
            <returns>Return true if successful.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.effect">
            <summary>
            The effect instance.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.IsInverse">
            <summary>
            If the transform is an inverse.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.inverseTransform">
            <summary>
            The transform specific to this Effect.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.MagnifyEffect)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="fx">The source effect.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            This particular effect keeps axis aligned lines axis aligned, so transformation of the rect is just
            transformation of its corner points.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The output rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.OutToIn(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            For the inverse of the shader, we need to find Pin which is the Pixel Ouput, given Pout the texture input (is the reverse of the shader)
            However, the shader algorithm is dependant on the radius of the pixel output from the center, which is a variable that we don't
            have when computing the inverse. We need to perform bisection in order to converge using the equation below
            PHatout = PHat_in*Scalar where
            PHatout = Pout - Pcenter  
            pHatin = Pin -Pcenter
            
            Scalar is dependent on the radius of Pin (which we don't have). 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.InToOut(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            Given a pixel output (Pin) find the texture input (Pout)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.PointIsInCircle(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Determines if a point is within an ellipse.
            </summary>
            <param name="pt">The test point.</param>
            <param name="center">The center point of the ellipse.</param>
            <param name="radius">The radius of the ellipse.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.Inverse">
            <summary>
            Gets the inverse transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MonochromeEffect">
             <summary>
            Effect that turns a visual into a monochrom color
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.ColorProperty">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.InputProperty">
            <summary>
            Gets or sets the Input of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MonochromeEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Color">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Input">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateEffect">
            <summary>
            Effect that pixelates a visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.PixelationProperty">
            <summary>
            This property is mapped to the pixelation amount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Pixelation">
            <summary>
            Gets or sets the amount of pixelation inside the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateTransitionEffect">
            <summary>
            Transition effect that increase/decrease pixelation between two visuals.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the PixelateTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of PixelateTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect">
            <summary>
            Transition effects that performs a radial blur of the current visual  as the new visual is introduced.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RadialBlurTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RadialBlurTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleEffect">
            <summary>
            Effect that simulates water ripples on the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.CenterProperty">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.MagnitudeProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.FrequencyProperty">
            <summary>
            Gets or sets the Frequency variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.PhaseProperty">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.InputProperty">
            <summary>
            Gets or sets the input brush used in the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Magnitude">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Frequency">
            <summary>
            Gets or sets the frequency variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Phase">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleTransitionEffect">
            <summary>
            Transition effect that simulate water ripple during transition. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RippleTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RippleTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SharpenEffect">
            <summary>
            Effects that makes a visual more crisp and sharper. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.HeightProperty">
            <summary>
            This property is mapped to the Width variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SharpenEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideDirection">
            <summary>
            Define the slide orientation
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideInTransitionEffect">
            <summary>
            Transition effect that slide the current visual away, revealing the new visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirectionProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormalProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SlideInTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SlideInTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirection">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormal">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect">
             <summary>
            Transition effect that swirl the current visual while introducing the new visual.
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmountProperty">
            <summary>
            Dependency property which modifies the TwistAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCountProperty">
            <summary>
            Dependency property which modifies the number of cell where pixels will be twisted.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor(System.Double)">
            <summary>
            Creates an instance and sets the shader's twist variable to the specified values.
            </summary>
            <param name="twist">level of swirl twist</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SmoothSwirlGridTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SmoothSwirlGridTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmount">
            <summary>
            Gets or sets the TwistAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCount">
            <summary>
            Gets or sets the CellCount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect">
            <summary>
            Effect that swirls the current visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.CenterProperty">
            <summary>
            This property is mapped to the Center variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmountProperty">
            <summary>
            This property is mapped to the SwirlStrength variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequencyProperty">
            <summary>
            This property is mapped to the AngleFrequency variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.generalTransform">
            <summary>
            The transform used when this Effect is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Center">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmount">
            <summary>
            Gets or sets the SwirlStrength variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequency">
            <summary>
            Gets or sets the AngleFrequency variable within the shader.
            We do not expose this property. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.EffectMapping">
            <summary>
            Gets the GeneralTransform for this effect.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform">
            <summary>
            For transforming input and tree transformations.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.theEffect">
            <summary>
            The instance of the Effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.thisIsInverse">
            <summary>
            The inverse of the transform.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.inverseTransform">
            <summary>
            The inverse of this GeneralTransform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.SwirlEffect)">
            <summary>
            Creates an instance of this class.
            </summary>
            <param name="eff">The effect itself.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            For this operation, the bounds is the bounding box of the 4 transformed points. 
            Need to transform each of them, and then circumscribe.  This is true for both the 
            forward and the inverse.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The transformed rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
            <summary>
            Attempt to transform inPoint with the Swirl effect.
            </summary>
            <param name="targetPoint">The input point.</param>
            <param name="result">The output point after transformed using the Swirl effect.</param>
            <returns>True and throws if false.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.Inverse">
            <summary>
            Gets a clone of the inverse of the current transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WaveTransitionEffect">
            <summary>
            Transition effect that waves the current visual while introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.MagnitudeProperty">
            <summary>
            Dependency property which modifies the Magnitude variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.PhaseProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.FrequencyProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WaveTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WaveTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Magnitude">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Phase">
            <summary>
            Gets or sets the phase of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Frequency">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeDirection">
            <summary>
            Define the wipe direction.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeTransitionEffect">
            <summary>
            Transition effect that wipes the current visual introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirectionProperty">
            <summary>
            Dependency property which modifies the preset of the wipe
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the FuzzyAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOriginProperty">
            <summary>
            Dependency property which modifies the LineOrigin variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormalProperty">
            <summary>
            Dependency property which modifies the LineNormal variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffsetProperty">
            <summary>
            Dependency property which modifies the LineOffset variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WipeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WipeTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirection">
            <summary>
            Gets or sets the direction of the wipe.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOrigin">
            <summary>
            Gets or sets the LineOrigin variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormal">
            <summary>
            Gets or sets the LineNormal variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffset">
            <summary>
            Gets or sets the LineOffset variable within the shader.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ko\Microsoft.Expression.Drawing.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Drawing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Controls.Callout">
            <summary>
            Renders a callout shape supporting several shapes combined with a callout arrow.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeContentShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.ContentControl"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
             
             A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
             It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            
             This class also supports showing content together with the shape.
             </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceParameters">
            <summary>
            Provides an interface to discribe the parameters of a Shape.
            </summary>
            <remarks>
            This interface is the data for communication between Shape and GeometrySource.
            Typically a concrete implementation of IShape will implements this interface and pass it into
            GeometrySource.UpdateGeometry(), who will consume the shape as readonly data provider.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IShape">
            <summary>
            Provides the necessary interface to define a Shape.
            Both primitive and composite shapes need to match this interface, although they might derive from different type of FrameworkElement.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.IShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Fill">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null. See Remarks.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at run time depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Media.IShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.OnContentChanged(System.Object,System.Object)">
            <summary>
            Transforms a string content into <see cref="T:TextBlock"/> with center alignment and mulitple line support.
            </summary>
            <remarks>
            Use template binding to <see cref="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent"/> instead of <see cref="P:Content"/> to enable this method.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent">
            <summary>
            Gets or sets the internal content that converts string into center aligned multiple line textblock.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.AnchorPoint">
            <summary>
            Gets or sets the position of the callout relative to the top and left corner.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.CalloutStyle">
            <summary>
            Gets or sets the callout style.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeShape">
            <summary>
            Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.Control"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.CompositeShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
            and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
            
            A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
            It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LineArrow">
            <summary>
            Renders a bended line segment with optional arrowhead on both end.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.LineArrow.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            A default <see cref="T:LineArrow"/> can render at anysize.
            The <see cref="P:RenderedGeometry"/> will stretch to layout boundary and render to outside if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.BendAmount">
            <summary>
            Gets or sets the amount of bend for the arrow.
            </summary>
            <value>The bend amount between 0 to 1.</value>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the start of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.EndArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the end of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartCorner">
            <summary>
            Gets or sets from which corner to start drawing the arrow.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.ArrowSize">
            <summary>
            Gets or sets the length of the arrow in pixels.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper">
            <summary>
            Helper class to work with PathGeometry
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string in the path mini-langauge into a PathGeometry.
            </summary>
            <param name="abbreviatedGeometry">A string in the path mini-langauge.</param>
            <remarks>
            Algorithm is modified from WPF: MS.Internal.Parsers.ParseStringToStreamGeometryContext.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Convert the given geometry into a single PathGeometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.SyncPolylineGeometry(System.Windows.Media.Geometry@,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Update the given geometry as PathGeometry with polyline matching given point list.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AbbreviatedGeometryParser">
            <summary>
            Parses abbreviated geometry sytax.
            </summary>
            <remarks>
            The algorithm is modified from WPF: MS.Internal.AbbreviatedGeometryParser
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentHelper">
            <summary>
            Helper class to Convert ArcSegment to BezierSegment(s)
            </summary>
            <summary>
            Helper class to work with PathSegment and all variations.
            </summary>
            <summary>
            Strategy classes to handle different types of PathSegment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierSegments(System.Windows.Media.ArcSegment,System.Windows.Point)">
            <summary>
            Convert an Arc segment into Bezier format
            Return BezierSegment, PolyBezierSegment, LineSegment, or null
            When returning null, the Arc degenerated into start point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SetIsStroked(System.Windows.Media.PathSegment,System.Boolean)">
            <summary>
            Avoid calling the three-parameter constructor, since it always sets a local value for IsStroked.
            </summary>
            <param name="segment"></param>
            <param name="isStroked"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the SegmentCollection with given polyline matching given point list.
            Try to keep changes minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolyBezierSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the collection[index] segment with poly bezier segment matching given point list.
            givne point list must contain 3*N points for N Bezier segments.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.IsEmpty(System.Windows.Media.PathSegment)">
            <summary>
            Test if given path segment is empty.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPointCount(System.Windows.Media.PathSegment)">
            <summary>
            Get the point count in given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetLastPoint(System.Windows.Media.PathSegment)">
            <summary>
            Get the last point of given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPoint(System.Windows.Media.PathSegment,System.Int32)">
            <summary>
            Get the point of given index in given segment.
            If input is (-1), return the last point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.FlattenSegment(System.Windows.Media.PathSegment,System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point,System.Double)">
            <summary>
            Flatten given segment and add result points into given point list.
            </summary>
            <param name="segment">The segment to be flatten</param>
            <param name="points">The result point list</param>
            <param name="start">The start point of the segment</param>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.ArcToBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Windows.Point[]@,System.Int32@)">
            <summary>
            ArcToBezier, Compute the Bezier approximation of an arc
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This utility computes the Bezier approximation for an elliptical arc as
            it is defined in the SVG arc spec. The ellipse from which the arc is
            carved is axis-aligned in its own coordinates, and defined there by its
            x and y radii. The rotation angle defines how the ellipse's axes are
            rotated relative to our x axis. The start and end points define one of 4
            possible arcs; the sweep and large-arc flags determine which one of
            these arcs will be chosen. See SVG spec for details.
            
            Returning cPieces = 0 indicates a line instead of an arc
                      cPieces = -1 indicates that the arc degenerates to a point 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetArcAngle(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Get the number of Bezier arcs, and sine/cosine of each.
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This is a private utility used by ArcToBezier.  We break the arc into
            pieces so that no piece will span more than 90 degrees.  The input
            points are on the unit circle.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetBezierDistance(System.Double,System.Double)">
             <summary>
             GetBezierDistance, return the distance as a fraction of the radius
             Adopted from MIL:Graphics\core\geometry\utils.cpp
             </summary>
            <remarks>
                  Get the distance from a circular arc's endpoints to the control points
                  of the Bezier arc that approximates it, as a fraction of the arc's
                  radius.
            
                  Since the result is relative to the arc's radius, it depends strictly on
                  the arc's angle. The arc is assumed to be of 90 degrees of less, so the
                  angle is determined by the cosine of that angle, which is derived from
                  rDot = the dot product of two radius vectors.  We need the Bezier curve
                  that agrees with the arc's points and tangents at the ends and midpoint. 
                  Here we compute the distance from the curve's endpoints to its control
                  points.
            
                  Since we are looking for the relative distance, we can work on the unit
                  circle. Place the center of the circle at the origin, and put the X axis
                  as the bisector between the 2 vectors.  Let a be the angle between the
                  vectors.  Then the X coordinates of the 1st and last points are cos(a/2). 
                  Let x be the X coordinate of the 2nd and 3rd points.  At t=1/2 we have a
                  point at (1,0). But the terms of the polynomial there are all equal:
            
                            (1-t)^3 = t*(1-t)^2 = t^2*(1-t) = t^3 = 1/8,
            
                  so from the Bezier formula there we have:
            
                            1 = (1/8) * (cos(a/2) + 3x + 3x + cos(a/2)), 
            
                  hence
            
                            x = (4 - cos(a/2)) / 3
            
                  The X difference between that and the 1st point is:
                  
                            DX = x - cos(a/2) = 4(1 - cos(a/2)) / 3.
            
                  But DX = distance / sin(a/2), hence the distance is
            
                            dist = (4/3)*(1 - cos(a/2)) / sin(a/2).
            
                  Rather than the angle a, we are given rDot = R^2 * cos(a), so we
                  multiply top and bottom by R:
             
                            dist = (4/3)*(R - Rcos(a/2)) / Rsin(a/2)
             
                  and use some trig:
                                           ________________
                            cos(a/2)   = \/(1 + cos(a)) / 2
                                           ______________________
                            R*cos(a/2) = \/(R^2 + R^2 cos(a)) / 2 
                                           ________________
                                       = \/(R^2 + rDot) / 2
            
                  Let A = (R^2 + rDot)/2.
                                           ____________________
                            R*sin(a/2) = \/R^2 - R^2 cos^2(a/2)
                                           _______
                                       = \/R^2 - A
            
                  so:
                                                      _
                                         4      R - \/A
                                  dist = - * ------------
                                         3      _______
                                              \/R^2 - A
            
              History:
                  5/29/2001 MichKa
                      Created it.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.AcceptRadius(System.Double,System.Double,System.Double@)">
            <summary>
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            Return false if the radius is too small compared to the chord length (returns true on NaNs)
            radius is modified to the value that's accepted.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.BezierCurveFlattener">
            <summary>
            A utility class to flatten Bezier curves.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenCubic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier cubic curve and adds the result polyline to the third parameter.
            </summary>
            <param name="controlPoints">The 4 Bezier cubic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">True to skip the first control point when adding the flattened polyline.
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to 
            each of the polyline vertices</param> 
            If <paramref name="resultPolyline"/> is empty, the first control point 
            and its associated parameter are always added.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenQuadratic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier quadratic curve and adds the result polyline to the third parameter.
            We use degree elevation for Bezier curves to reuse the code for the cubic case.
            </summary>
            <param name="controlPoints">The 3 Bezier quadratic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">Whether to skip the first control point when adding the flattened polyline. 
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to
            each of the polyline vertices</param>
            If <paramref name="resultPolyline"/> is empty, the first control point and 
            its associated parameter are always added.</param>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.CommonExtensions">
            <summary>
            Extension methods supporting non-geometry types
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach(System.Collections.IEnumerable,System.Action{System.Object})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence with the index of each item.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Ensure the count of list to given count.  Create default(T) or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensure the count of list to given count.  Create with given fatory or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used when there's no factory.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the end of a collection.
            If collection is list, List.AddRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Get the last item of given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
            Remove the last item from the given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.DeepCopy``1(``0)">
            <summary>
            Make a copy of obj and all it's public properties, including all collection properties.
            Possible perf optimization: this is used only for Transform and Geometry.
            We should develope a copier for them instead of using reflection.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.SetIfDifferent(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Set the value if different.  Avoid setting local value if possible.
            return true when the value has been changed
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ClearIfSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears the dependency property when it is locally set on the given dependency object.
            Return false if the dependeny property is not locally set.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.FindVisualDesendent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Find all visual desendent of given type and condition using breath first search.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get all visual children in IEnumerable
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.DrawingPropertyMetadata">
            <summary>
            Unify the interface of PropertyMetadata in WPF and Silverlight.
            Providing the necessary notification about render, arrange or measure.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.#ctor(Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Object)">
            <summary>
            This private Ctor should only be used by AttachCallback.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.AttachCallback(System.Object,Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
            <summary>
            Chain InternalCallback() to attach the instance of DrawingPropertyMetadata on property callback.
            In Silverlight4-, the property metadata is thrown away after setting. Use callback to remember it.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.InternalCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before chaining the original callback, trigger DrawingPropertyChangedEvent
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.GeometryHelper">
            <summary>
            Extension methods for Geometry related data structures (Point/Vector/Size/Rect)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Resize(System.Windows.Rect,System.Double)">
            <summary>
            Resize the rectangle to relative size while keeping center invariant.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Subtract(System.Windows.Point,System.Windows.Point)">
            <summary>
            Get the difference Vector between two Points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Plus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise plus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Minus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise minus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string of mini-languages to a <see cref="T:PathGeometry"/>.
            </summary>
            <remarks>See: Path Markup Syntax(http://msdn.microsoft.com/en-us/library/cc189041(VS.95).aspx)</remarks>
            <param name="abbreviatedGeometry">The string of path mini-languages for describing geometric paths.</param>
            <returns>A <see cref="T:PathGeometry"/> converted from the the path mini-languages/></returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double)">
            <summary>
            Flattens a <see cref="T:PathFigure"/> and adds result points to given <paramref name="points"/>.
            </summary>
            <param name="figure">The input <see cref="T:PathFigure"/>.</param>
            <param name="points">The point list to which result points will append.</param>
            <param name="tolerance">A positive number specifying the maximum allowed error from result points to input path figure.  Value 0 allows algorithm to pick the tolerance automatically.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double)">
            <summary>
            Get the normalized arc in (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double,System.Windows.Rect)">
            <summary>
            Get the absolute arc point in given bound with given relative radius.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point)">
            <summary>
            Get the angle on arc relative to (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Get the angle on arc from given absolute point relative to bound
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compute the transform that moves Rect from to Rect to.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Computes the transform from the coordinate space of one <c>UIElement</c> to another.
            </summary>
            <param name="from">The source element.</param>
            <param name="to">The destination element.</param>
            <returns>The transform between the <c>UIElement</c>s, or null if it cannot be computed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeToAbsolutePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map relative point to absolute using the mapping from given bound to (0,0)(1,1) box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.AbsoluteToRelativePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map absolute point to relative using the mapping from (0,0)(1,1) box to given bound.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetStretchBound(System.Windows.Rect,System.Windows.Media.Stretch,System.Windows.Size)">
            <summary>
            Compute the bound after stretch within given logical bound.
            If stretch to uniform, use given aspectRatio.
            If aspectRatio is empty, it's equivalent to Fill.
            If stretch is None, equivalent to Fill or Uniform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Midpoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the mid point of given 2 points
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The mid point between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(Microsoft.Expression.Drawing.Core.Vector,Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Returns the dot product of two vectors.
            </summary>
            <param name="lhs">The first vector.</param>
            <param name="rhs">The second vector.</param>
            <returns>The dot product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the dot product of two Points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.SquaredDistance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The square of the distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Determinant(System.Windows.Point,System.Windows.Point)">
            <summary>
            Determinant of cross product.  Equivalent to directional area
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Normal(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compute the normal direction vector of given line segments
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Perpendicular(Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Compute perpendicular vector, 90 degrees counter-clockwise.
            Vector to right perpendicular result a vector to up.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GeometryEquals(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Returns whether the two geometries are identical.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Windows.Media.Geometry@,System.Func{``0})">
            <summary>
            Ensure the value is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.Geometry},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureSegmentType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.PathSegment},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ComputeBSpline(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Double)">
            <summary>
            de'Boor algorithm to subdevide BSpline into poly Bezier segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MathHelper">
            <summary>
            Helper class providing static properties and methods related to floating point arithmetic.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.Epsilon">
            <summary>
            The minimum distance to consider two values are same.
            Note: internal floating point in MIL/SL is float, not double.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.TwoPI">
            <summary>
            The value of angle of a full circle.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.PentagramInnerRadius">
            <summary>
            The inner radius for pentagram polygon shape, at precision of 3 digits in percentage.
            (1 - Sin36 * Sin72 / Sin54) / (Cos36) ^ 2, which is 0.47210998990512996761913067272407
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsVerySmall(System.Double)">
            <summary>
            Determines whether a <c>System.Double</c> value is small enough to be considered
            equivalent to zero.
            </summary>
            <param name="value"></param>
            <returns><c>true</c> if value is smaller than <c>DoubleTolerance</c>;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.EnsureRange(System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Return the value that's within the given range
            Given min/max is null means no limit.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.Hypotenuse(System.Double,System.Double)">
            <summary>
            Computes the Euclidean norm of the vector (x, y).
            </summary>
            <param name="x">The first component.</param>
            <param name="y">The second component.</param>
            <returns>The Euclidean norm of the vector (x, y).</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.DoubleFromMantissaAndExponent(System.Double,System.Int32)">
            <summary>
            Computes a real number from the mantissa and exponent.
            </summary>
            <param name="x"></param>
            <param name="exp"></param>
            <returns>The value of x * 2^exp if successful.</returns>
            <remarks>See ::ldexp in any decent C language runtime library.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsFiniteDouble(System.Double)">
            <summary>
            Tests a double.
            </summary>
            <param name="x">The double to test.</param>
            <returns><c>true</c> if x is not a NaN and is not equal to plus or minus infinity;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathFigureHelper">
            <summary>
            Helper class to work with PathFigure
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean)">
            <summary>
            Flatten the given figure and add to the point list.
            </summary>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.AllSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterate all segments inside given figure, and returns correct start point for each segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolylineFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single polyline segment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolyBezierFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single PolyBezierSegment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncEllipseFigure(System.Windows.Media.PathFigure,System.Windows.Rect,System.Windows.Media.SweepDirection,System.Boolean)">
            <summary>
            Synchronize the given figure to be a closed ellipse with 2 arc segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentData">
            <summary>
            A Tuple data structure for PathSegment and corresponding StartPoint.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineData">
            <summary>
            Represent a polyline consist with a list of connecting points.
            A closed polygon is represented by repeating the first point at the end.
            The differences, normals, angles, and lengths are computed on Demand.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.#ctor(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Construct a polyline with two or more points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.Difference(System.Int32)">
            The forward difference vector of polyline.
            Points[i] + Differences[i] = Points[i+1]
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.SmoothNormal(System.Int32,System.Double,System.Double)">
            <summary>
            Compute the normal vector of given location (lerp(index, index+1, fraction).
            If the location is within range of cornerRadius, interpolate the normal direction.
            </summary>
            <param name="cornerRadius">The range of normal smoothless.  If zero, no smoothness and return the exact normal on index.</param>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.IsClosed">
            <summary>
            The polyline is closed when first and last point is repeated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Count">
            <summary>
            The count of points in this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.TotalLength">
            <summary>
            The total arc length of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Points">
            <summary>
            The point array of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Lengths">
            <summary>
            The length between line segments, Points[i] to Points[i+1]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Normals">
            <summary>
            The list of normal vectors for each segment.
            Normals[i] is the normal of segment p[i] to p[i + 1].
            Normals[N-1] == Normals[N-2].
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Angles">
            <summary>
            The list of Cos(angle) between 2 line segments on point p[i]
            Note: The value is cos(angle) = Dot(u, v). It's not in degree.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.AccumulatedLength">
            <summary>
            The list of accumulated length from points[i] to points[0]
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MarchLocation">
            <summary>
            The data structure to communicate with PathMarch algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetPoint(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Get the interpolated position of this this MarchLocation on given point list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetNormal(Microsoft.Expression.Drawing.Core.PolylineData,System.Double)">
            <summary>
            Get the interpolated normal direction of this this MarchLocation on given normal vector list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetArcLength(System.Collections.Generic.IList{System.Double})">
            <summary>
            Get the arc length of this MarchLocation to the start of the entire polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Reason">
            <summary>
            The reason why this location is sampled.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Index">
            <summary>
            The index of the point on polyline point list.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Ratio">
            <summary>
            Ratio: [0, 1], which is always before / (before + after)
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Before">
            <summary>
            Arc length before stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.After">
            <summary>
            Arc length after the stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Remain">
            <summary>
            Remaining length within a step to hit next stop.  Positive to go forward. Negative to go backward.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineHelper">
            <summary>
            Helper class to work with list of points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.PathMarch(Microsoft.Expression.Drawing.Core.PolylineData,System.Double,System.Double,System.Func{Microsoft.Expression.Drawing.Core.MarchLocation,System.Double})">
            <summary>
            March the given polyline with given interval and output each stop through callback
            </summary>
            <param name="polyline">The polyline points to march on</param>
            <param name="startArcLength">The arc length to march before stopping at the first point.</param>
            <param name="cornerThreshold">The max angle between edges to be considered a corner vertex</param>
            <param name="stopCallback">Callback when marching algorithm stop at a point.  The callback returns the arc length for next stop.
            If the asked length is negative, march backwards. If callback returns NaN, finish marching.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.GetWrappedPolylines(System.Collections.Generic.IList{Microsoft.Expression.Drawing.Core.PolylineData},System.Double@)">
            <summary>
            Reorders the given list of polylines so that the polyline a given arclength into the list is the first.
            Polylines that preceded this line are concatenated to the end of the list, with the first polyline at the very end. 
            </summary>
            <param name="lines">A list of polylines.</param>
            <param name="startArcLength">The arclength into the entire list of polylines at which to find the start line.
            The arc length into that line is returned in this variable.</param>
            <returns>The reordered and wrapped list.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.RandomEngine">
            <summary>
            A random generator support uniform and gaussian distributions.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.RandomEngine.Gaussian">
            <summary>
            Generate a pair of independent standard normally distributed random numbers,
            zero expectation, unit variance, using polar form of the Box-Muller transformation.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.#ctor">
            <summary>
            Private constructor. Force to use factory methods.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a line segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment from quatratic curve (3 control points)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment with 4 control points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.SimpleSegment.Points">
            <summary>
            Control points of path segment.  Length is variant.
            Line segment has 2 points, Cubic bezier has 4 points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.TransformExtensions.TransformEquals(System.Windows.Media.Transform,System.Windows.Media.Transform)">
            <summary>
            Compares two transforms for an exact match.  Transforms with the same value but different structure(e.g. Translate(0,0) and Rotate(0) are not considered equivalent).
            </summary>
            <param name="firstTransform">The first transform.</param>
            <param name="secondTransform">The second transform.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Expression.Media.UnitType">
            <summary>
            Specifies the unit of thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Pixel">
            <summary>
            Unit in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Percent">
            <summary>
            Unit in percentage relative to bounding box.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometrySource`1">
            <summary>
            Provides the base class of a source of geometry.
            It generate and cache the geometry based on input parameters and layout bounds.
            </summary>
            <remarks>
            A typical implementation will extend the UpdateCachedGeometry() to update this.cachedGeometry.
            This base class will then handle the invalidation, pipeline to geometry effects and caching realtive to layout bounds.
            An implementation should try to reuse the cached geometry as much as possible to avoid reconstruction in rendering thread.
            An implementation can extend the ComputeLogicalBounds to handle Stretch differently.
            </remarks>
            <typeparam name="TParameters">The type of geometry source parameter on which the base class is working on.</typeparam>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySource">
            <summary>
            Provides an interface to describe the source of a geometry.
            </summary>
            <remarks>
            This interface is designed to expose geometry source in a non-generic way.
            Typical implementation should subclass GeometrySource&lt;&gt; instead of implementing this interface directly.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry using given parameter and layout bounds.
            Returns false if nothing has been updated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometrySource`1.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry based on given parameters and layoutBounds.
            Returns false if geometry hasn't been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateCachedGeometry(`0)">
            <summary>
            Extend the way to provide geometry by implementing this function.
            Return true when any of the geometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Extend the way to handle stretch mode.
            Default is to always use Stretch.Fill and center stroke.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ApplyGeometryEffect(Microsoft.Expression.Media.IGeometrySourceParameters,System.Boolean)">
            <summary>
            Apply geometry effect when dirty or forced, update this.Geometry.
            Otherwise, keep this.Geometry as this.cachedGeometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
            <value></value>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Arc think Stretch.None is same as Stretch.Fill, assuming aspect ratio = 1:1
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.NormalizeThickness(Microsoft.Expression.Media.IArcGeometrySourceParameters)">
            <summary>
            Normalize thickness, both relative to bounding box and absolute pixel.
            realtive thickness = 0 -> full circle radius or clamped.
            realtive thickness = 1 -> shrinked to a dot, or degenerated.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowOrientation">
            <summary>
            Specifies the direction the arrow points.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Left">
            <summary>
            The arrow points to left.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Right">
            <summary>
            The arrow points to right.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Up">
            <summary>
            The arrow points up.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Down">
            <summary>
            The arrow points down.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.BlockArrowGeometrySource.ArrowBuilder">
            <summary>
                 B
                /|
               / C--D
              A     |
               \ C--D
                \|
                 B
            Algorithm only use Width/Height assuming top-left at 0,0
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CalloutStyle">
            <summary>
            Specifies the rendering style of a Callout shape
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Rectangle">
            <summary>
            A rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.RoundedRectangle">
            <summary>
            A rounded rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Oval">
            <summary>
            A oval shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Cloud">
            <summary>
            A cloud shaped callout.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateEdge(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Update the edge line, and connect to anchor point if necessary
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdatePolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Update polyline segment, connecting start, anchor and end point with Callout style
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateLineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point)">
            <summary>
            Update the line segment to given point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.ComputeCorners(System.Double)">
            <summary>
            Compute the corner points, clockwise, 8 points for 4 corners
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateCornerArc(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point)">
            <summary>
            Corner Arc is always smaller arc with 90 degree
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffect">
            <summary>
            Provides the base class of GeometryEffect that transform a geometry into another geometry.
            </summary>
            <remarks>
            This class provides the basic implementation of processing the rendered geometry of a IShape before it's passed to rendering.
            A typical implementation will extend the virtual function <see cref="F:ProcessGeometry"/> to transform input geometry.
            <see cref="T:GeometryEffect"/> is typically attached to <see cref="T:IShape"/> as an attached property and activated when <see cref="T:IShape"/> geometry is updated.
            The <see cref="P:OutputGeometry"/> of a <see cref="T:GeometryEffect"/> will replace the rendered geometry in <see cref="T:IShape"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.GetGeometryEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.SetGeometryEffect(System.Windows.DependencyObject,Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Sets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.CloneCurrentValue">
            <summary>
            Creates a modifiable clone (deep copy) of the <see cref="T:GeometryEffect"/> using its current values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect. Implements CloneCurrentValue in Silverlight.
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffect.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateGeometry">
            <summary>
            Invalidate the geometry effect without actually compute the geometry.
            It will notify all parent shapes or effects to invalidate accordingly.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.ProcessGeometry(System.Windows.Media.Geometry)">
            <summary>
            Process geometry effect on given input geometry.
            Result is stored in GeometryEffect.OutputGeometry.
            </summary>
            <returns>Return false if nothing has been changed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Extend the way of updating cachedGeometry based on given input geometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Detach">
            <summary>
            Notified when detached from parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Attach(System.Windows.DependencyObject)">
            <summary>
            Notified when attached to a parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateParent(System.Windows.DependencyObject)">
            <summary>
            Invalidate the geometry on given dependency object when
            the object is a valid parent type (IShape or GeometryEffect).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.DefaultGeometryEffect">
            <summary>
            The default geometry effect that does nothing but passing through the input geometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.OutputGeometry">
            <summary>
            Gets the output geometry of this geometry effect.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.Parent">
            <summary>
            Parent can be either IShape or GeometryEffectGroup.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffectConverter">
            <summary>
            Provides the conversion between string and geometry effect
            </summary>
            <remarks>
            This class enables the brief sytax in xaml like <code>GeometryEffect="Sketch"</code>
            It will create a clone of instance of geometry effect so it can be used as resources.
            </remarks>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffectConverter.registeredEffects">
            <summary>
            Build a preset list of supported geometry effects.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted from string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted to string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a geometry effect.  Fallback value is null.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a geometry effect into a string.  Fallback value is null.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceExtensions">
            <summary>
            Provides helper extension methods to work with IGeometrySource and parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowType">
            <summary>
            Specifies the Arrow head type.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.NoArrow">
            <summary>
            No arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.Arrow">
            <summary>
            A triagle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.StealthArrow">
            <summary>
            A stealth triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OpenArrow">
            <summary>
            An open triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OvalArrow">
            <summary>
            An oval head.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CornerType">
            <summary>
            Specifies the corner location.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopLeft">
            <summary>
            On top left of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopRight">
            <summary>
            On top right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomRight">
            <summary>
            On bottom right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomLeft">
            <summary>
            On bottom left of bounding box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.PolygonGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Polygon think Stretch.None is same as Stretch.Fill
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.SketchGeometryEffect">
            <summary>
            A geometry effect to transform any geometry into a Sketch style as in SketchFlow.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Updating cachedGeometry based on given input geometry.
            </summary>
            <param name="input">A input geometry</param>
            <returns>Returns true when anything on cachedGeometry has been updated.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.SketchGeometryEffect.randomSeed">
            <summary>
            Use the same random seed on creation to keep visual flickering minimum
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.GetEffectiveSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all simple segments in given path figure including the closing chord.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.Arc">
            <summary>
            Renderes an Arc shape supporting Arc, Ring and Pie mode controled by ArcThickness.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.PrimitiveShape">
            <summary>
            Platform neutral implementation of Shape deriving from WPF:Shape or SL:Path
            </summary>
            <summary>
            Provides Silverlight implementation of PrimitiveShape who derives from platform Path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.CreateGeometrySource">
            <summary>
            Extend how the shape is drawn with creating geometry source
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            In WPF, measure override works from Shape.DefiningGeometry which is not always as expected
            see bug 99497 for details where WPF is not having correct measure by default.
            
            In Silverlight, measure override on Path does not work the same as primitive shape works.
            
            We should return the smallest size this shape can correctly render without clipping.
            By default a shape can render as small as a dot, therefore returning the strokethickness.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Shapes.PrimitiveShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry of the primitive shape, mapping to <see cref="P:System.Windows.Shapes.Path.Data"/> in Silverlight.
            </summary>
            <remarks>
            The concept is corresponding to WPF Shape.RenderedGeometry.
            Silverlight must use DP for rendered geometry so that it updates correctly.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.Data">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Geometry"/> that specifies the shape to be drawn.
            </summary>
            <returns>A description of the shape to be drawn.</returns>
            <remarks>
            A new Data property to hide Path.Data property, to avoid being serialized to xaml.
            This property will carry DesignerSerializationVisibilityAttribute.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle in degrees. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle in degree. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThickness">
            <summary>
            Gets or sets the arc thickness.
            </summary>
            <value>The arc thickness in pixels or percentage depending on "ArcThicnessUnit"/>.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThicknessUnit">
            <summary>
            Gets or sets the arc thickness unit.
            </summary>
            <value>The arc thickness unit, either pixel or percentage.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.BlockArrow">
            <summary>
            Renders a block arrow shape supporting resizable arrow head and body.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation where the arrow is pointing to.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowheadAngle">
            <summary>
            Gets or sets the arrowhead angle.
            </summary>
            <value>The arrowhead angle in degrees.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowBodySize">
            <summary>
            Gets or sets the size of the arrow body.
            </summary>
            <value>The size of the arrow body in pixels.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.RegularPolygon">
            <summary>
            Renders a regular polygon shape or corresponding star shape with variable number of points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.PointCount">
            <summary>
            Gets or sets the number of points of the <see cref="T:Microsoft.Expression.Shapes.RegularPolygon"/>
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.InnerRadius">
            <summary>
            Gets or sets the the distance between the center and the innermost point.
            </summary>
            <value>The distance between the center and the innermost point.</value>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.Vector">
            <summary>
            This is ported from WPF implementation of Vector
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ja\System.Windows.Interactivity.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Interactivity</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
共有される AssociatedObject と共に IAttachedObject のコレクションを表し、AssociatedObject に変更が発生すると変更通知をコンテンツに提供します。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
別のオブジェクトにアタッチ可能なオブジェクトのインターフェイスです。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)">
            <summary>
指定されたオブジェクトにアタッチします。
            </summary>
<param name="dependencyObject">アタッチするオブジェクト。</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
このインスタンスを関連オブジェクトからデタッチします。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
関連オブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
<remarks>インスタンスがアタッチされているオブジェクトを表します。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.AttachableCollection`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
<remarks>アセンブリの外部で継承すべきではないため、内部とします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
コレクションが AssociatedObject にアタッチされる直後に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
コレクションが AssociatedObject からデタッチされるとき、その前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemAdded(`0)">
            <summary>
新しい項目がコレクションに追加されるときに呼び出されます。
            </summary>
<param name="item">新しい項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemRemoved(`0)">
            <summary>
項目がコレクションから削除されるときに呼び出されます。
            </summary>
<param name="item">削除される項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.VerifyAdd(`0)">
<exception cref="T:System.InvalidOperationException">インスタンスをコレクションに再度追加することはできません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(System.Windows.DependencyObject)">
            <summary>
指定されたオブジェクトにアタッチします。
            </summary>
<param name="dependencyObject">アタッチするオブジェクト。</param>
<exception cref="T:System.InvalidOperationException">IAttachedObject は既に別のオブジェクトにアタッチされています。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
このインスタンスを関連オブジェクトから解除します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
コレクションがホストされるオブジェクト。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
関連オブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior`1">
            <summary>
状態情報および 0 以上の ICommands をアタッチ可能なオブジェクトにカプセル化します。
            </summary>
<typeparam name="T"><see cref="T:System.Windows.Interactivity.Behavior`1"/> をアタッチできる型。</typeparam>
            <remarks>Behavior は、アタッチ可能な状態およびコマンドをオブジェクトに提供するための基本クラスです。Behavior をアタッチできる型は、ジェネリック パラメーターで制御可能です。OnAttached() および OnDetaching() メソッドを上書きし、必要なハンドラーを AssociatedObject にフックしたり、アンフックします。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
状態情報および 0 以上の ICommands をアタッチ可能なオブジェクトにカプセル化します。
            </summary>
<remarks>これはインフラストラクチャ クラスです。Behavior 作成者は、このクラスの代わりに Behavior&lt;T&gt; から派生する必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
ビヘイビアーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<remarks>これをオーバーライドし、AssociatedObject に機能をフックアップします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
ビヘイビアーが AssociatedObject からデタッチされるとき、その前に呼び出されます。
            </summary>
<remarks>これをオーバーライドし、機能を AssociatedObject からアンフックします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)">
            <summary>
指定されたオブジェクトにアタッチします。
            </summary>
<param name="dependencyObject">アタッチするオブジェクト。</param>
<exception cref="T:System.InvalidOperationException">Behavior は既に別の要素上でホストされています。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject は、Behavior の型制約を満たしていません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
このインスタンスを関連オブジェクトから解除します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
このビヘイビアーをアタッチできる型。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
このビヘイビアーがアタッチされているオブジェクトを取得します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
関連オブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.Behavior`1"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior`1.AssociatedObject">
            <summary>
この<see cref="T:System.Windows.Interactivity.Behavior`1"/>がアタッチされているオブジェクトを取得します。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
共有される AssociatedObject と共にビヘイビアーのコレクションを表し、AssociatedObject に変更が発生すると変更通知をコンテンツに提供します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.BehaviorCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
<remarks>アセンブリの外部で継承すべきではないため、内部とします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
コレクションが AssociatedObject にアタッチされる直後に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
コレクションが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemAdded(System.Windows.Interactivity.Behavior)">
            <summary>
新しい項目がコレクションに追加されるときに呼び出されます。
            </summary>
<param name="item">新しい項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemRemoved(System.Windows.Interactivity.Behavior)">
            <summary>
項目がコレクションから削除されるときに呼び出されます。
            </summary>
<param name="item">削除される項目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditor">
            <summary>
再利用可能なプロパティ値エディターに対し可能な値を列挙します。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Element">
            <summary>
デザイン時 (サポートされている場合) 要素ピッカーを使用してこのプロパティを編集します。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Storyboard">
            <summary>
デザイン時 (サポートされている場合) ストーリーボード ピッカーを使用してこのプロパティを編集します。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.StateName">
            <summary>
デザイン時 (サポートされている場合) 状態ピッカーを使用してこのプロパティを編集します。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute">
            <summary>
特定のエディターの種類を CustomPropertyValueEditor が適用されるプロパティに関連付けます。
            </summary>
<remarks>この属性を使用して、要素 (名前別)、ストーリーボード、または状態 (名前別) を示すプロパティ用にデザイン時の編集を強化します。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.#ctor(System.Windows.Interactivity.CustomPropertyValueEditor)">
            <summary>
<see cref="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="customPropertyValueEditor">カスタム プロパティ値エディター。</param>
        </member>
        <member name="P:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.CustomPropertyValueEditor">
            <summary>
カスタム プロパティ値エディターを取得または設定します。
            </summary>
<value>カスタム プロパティ値エディター。</value>
        </member>
        <member name="T:System.Windows.Interactivity.DefaultTriggerAttribute">
            <summary>
特定のアクションまたはコマンドに対してどの<see cref="T:System.Windows.Interactivity.TriggerBase"/>をインスタンス化するかについてデザイン ツールの情報を提供します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object)">
            <summary>
<see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="targetType">この属性が適用される型。</param>
<param name="triggerType">インスタンス化する<see cref="T:System.Windows.Interactivity.TriggerBase"/>の型。</param>
<param name="parameters">指定された<see cref="T:System.Windows.Interactivity.TriggerBase"/>用の単一の引数。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/>は TriggerBase から派生していません。</exception>
<remarks>このコンストラクターは、指定された<see cref="T:System.Windows.Interactivity.TriggerBase"/>に単一の引数がある場合に役立ちます。結果コードは CLS に準拠します。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
<see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="targetType">この属性が適用される型。</param>
<param name="triggerType">インスタンス化する<see cref="T:System.Windows.Interactivity.TriggerBase"/>の型。</param>
<param name="parameters">指定された<see cref="T:System.Windows.Interactivity.TriggerBase"/>用のコンストラクター引数。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/>は TriggerBase から派生しません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.Instantiate">
            <summary>
このインスタンスをインスタンス化します。
            </summary>
<returns>DefaultTriggerAttribute により指定された<see cref="T:System.Windows.Interactivity.TriggerBase"/>。</returns>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TargetType">
            <summary>
この DefaultTriggerAttribute が適用される型を取得します。
            </summary>
<value>この DefaultTriggerAttribute が適用される型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TriggerType">
            <summary>
インスタンス化する<see cref="T:System.Windows.Interactivity.TriggerBase"/>の型を取得します。
            </summary>
<value>インスタンス化する<see cref="T:System.Windows.Interactivity.TriggerBase"/>の型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.Parameters">
            <summary>
<see cref="T:System.Windows.Interactivity.TriggerBase"/> コンストラクターに渡すパラメーターを取得します。
            </summary>
<value><see cref="T:System.Windows.Interactivity.TriggerBase"/> コンストラクターに渡すパラメーター。</value>
        </member>
        <member name="T:System.Windows.Interactivity.EventTrigger">
            <summary>
ソース上に指定されたイベントをリッスンし、イベントが起動されたときに起動するトリガー。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase`1">
            <summary>
その AssociatedObject 以外の要素をリッスンできるトリガーを表します。
            </summary>
<typeparam name="T">このトリガーを関連付けられる型。</typeparam>
            <remarks>
	EventTriggerBase は TriggerBase を拡張し、アタッチしている要素とは別の要素のナレッジを追加します。これによりユーザーは Trigger/Action のペアを 1 つの要素にアタッチし、どこか別の場所にある別の要素の変化に応じて Action を呼び出せます。ソース要素上のハンドラーをフック/アンフックするために OnSourceChanged を、また関連要素に対して OnAttached/OnDetaching を上書きします。Source 要素の型はジェネリック型パラメーターによって制約できます。AssociatedObject の型を制御する必要がある場合、派生型上で TypeConstraintAttribute を設定します。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase">
            <summary>
その AssociatedObject 以外の要素をリッスンできるトリガーを表します。
            </summary>
<remarks>これはインフラストラクチャ クラスです。Trigger 作成者は、このクラスの代わりに EventTriggerBase&lt;T&gt; から派生する必要があります。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase">
            <summary>
条件付きで Action を呼び出せるオブジェクトを表します。
            </summary>
<remarks>これはインフラストラクチャ クラスです。Trigger 作成者は、このクラスの代わりに Trigger&lt;T&gt; から派生する必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)">
            <summary>
このトリガーに関連するすべての Action を呼び出します。
            </summary>
<remarks>トリガーを起動するには派生クラスがこれを呼び出す必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnAttached">
            <summary>
トリガーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnDetaching">
            <summary>
トリガーが AssociatedObject からからデタッチされるとき、その前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)">
            <summary>
指定されたオブジェクトにアタッチします。
            </summary>
<param name="dependencyObject">アタッチするオブジェクト。</param>
<exception cref="T:System.InvalidOperationException">同じ Trigger を一度に複数のオブジェクトにホストすることはできません。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject は、Trigger 型制約を満たしていません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Detach">
            <summary>
このインスタンスを関連オブジェクトから解除します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObject">
            <summary>
トリガーがアタッチされているオブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint">
            <summary>
関連オブジェクトの型制約を取得します。
            </summary>
<value>関連オブジェクトの型制約。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.Actions">
            <summary>
このトリガーに関連付けられているアクションを取得します。
            </summary>
<value>このトリガーに関連付けられているアクション。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
関連オブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.GetEventName">
            <summary>
この EventTriggerBase がリッスンする Event の名前を指定します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)">
            <summary>
この EventTriggerBase に関連付けられているイベントの起動時に呼び出されます。既定では、これはトリガー上のすべてのアクションを呼び出します。
            </summary>
<param name="eventArgs">イベント データを含む<see cref="T:System.EventArgs"/>インスタンス。</param>
<remarks>これを上書きし、このトリガーに関連付けられているアクションをいつ呼び出すかをよりきめ細かく制御します。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnSourceChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
ソースが変更されると呼び出されます。
            </summary>
<param name="oldSource">古いソース。</param>
<param name="newSource">新しいソース。</param>
<remarks>変化するソース オブジェクトに機能をフックしたり、アンフックするために、この機能を派生クラス内で上書きする必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnAttached">
            <summary>
トリガーが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnDetaching">
            <summary>
トリガーが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.RegisterEvent(System.Object,System.String)">
<exception cref="T:System.ArgumentException">Target 上に eventName が見つかりませんでした。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint">
            <summary>
関連オブジェクトの型制約を取得します。
            </summary>
<value>関連のオブジェクト型制約。</value>
<remarks>アタッチすることのできる型を制約するために、派生型で TypeConstraintAttribute を定義します。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint">
            <summary>
ソースの型制約を取得します。
            </summary>
<value>ソースの型制約。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceName">
            <summary>
この EventTriggerBase がソースとしてリッスンする要素の名前を取得または設定します。名前が未設定または解決できない場合、AssociatedObject が使用されます。これは依存関係プロパティです。
            </summary>
<value>ソース要素の名前。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.Source">
            <summary>
解決されたソースを取得します。<c ref="SourceName"/>が未設定または解決できない場合、既定の AssociatedObject が使用されます。
            </summary>
<value>解決されたソース オブジェクト。</value>
<remarks>通常、派生クラスでは、このプロパティを AssociatedObject の代わりに使用する必要があります。</remarks>
<exception cref="T:System.InvalidOperationException"><c cref="P:System.Windows.Interactivity.EventTriggerBase.Source"/>で指された要素が型制約を満たしていません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.EventTriggerBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.OnSourceChanged(`0,`0)">
            <summary>
ソース プロパティが変更されると呼び出されます。
            </summary>
<remarks>これを上書きし、AssociatedObject ではなく、指定された Source に機能をフックまたはアンフックします。</remarks>
<param name="oldSource">古いソース。</param>
<param name="newSource">新しいソース。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase`1.Source">
            <summary>
解決されたソースを取得します。<c ref="SourceName"/>が未設定または解決できない場合、既定の AssociatedObject が使用されます。
            </summary>
<value>解決されたソース オブジェクト。</value>
<remarks>通常、このプロパティは派生クラスで AssociatedObject の代わりに使用される必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.EventTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor(System.String)">
            <summary>
<see cref="T:System.Windows.Interactivity.EventTrigger"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="eventName">イベントの名前。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTrigger.EventName">
            <summary>
リッスンするイベントの名前を取得または設定します。これは依存関係プロパティです。
            </summary>
<value>イベントの名前。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
プロパティにアタッチされた Trigger および Behavior を所有する静的クラス。AssociatedObject 変更通知の伝達を処理します。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.TriggersProperty">
            <summary>
このプロパティは、パブリックの Trigger がアタッチされたプロパティ用の内部バッキング ストアとして使用されます。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
このプロパティは、パブリックの Behavior がアタッチされたプロパティ用の内部バッキング ストアとして使用されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)">
            <summary>
指定したオブジェクトに関連付けられたトリガーを含む TriggerCollection を取得します。
            </summary>
<param name="obj">トリガーの取得元オブジェクト。</param>
<returns>指定したオブジェクトに関連付けられた Trigger を含む TriggerCollection。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)">
            <summary>
指定したオブジェクトに関連付けられた<see cref="T:System.Windows.Interactivity.BehaviorCollection"/>を取得します。
            </summary>
<param name="obj"><see cref="T:System.Windows.Interactivity.BehaviorCollection"/>の取得元オブジェクト。</param>
<returns>指定したオブジェクトに関連付けられたビヘイビアーを含む<see cref="T:System.Windows.Interactivity.BehaviorCollection"/>。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnBehaviorsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">同じ BehaviorCollection を一度に複数のオブジェクトにホストすることはできません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnTriggersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">同じ TriggerCollection を一度に複数のオブジェクトにホストすることはできません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
Silverlight に類似のプロパティがないため、FrameworkElement.IsLoaded に取って代わるヘルパー関数です。
            </summary>
<param name="element">関心の要素。</param>
<returns>要素が読み込まれている場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="T:System.Windows.Interactivity.InvokeCommandAction">
            <summary>
呼び出されたときにホスト Behavior 上で指定した Action を実行します。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction`1">
            <summary>
機能単位をカプセル化する、アタッチ可能なオブジェクトを表します。
            </summary>
<typeparam name="T">このアクションをアタッチできる型。</typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction">
            <summary>
機能単位をカプセル化する、アタッチ可能なオブジェクトを表します。
            </summary>
<remarks>これはインフラストラクチャ クラスです。Action 作成者は、このクラスの代わりに TriggerAction&lt;T&gt; から派生する必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.CallInvoke(System.Object)">
            <summary>
アクションを呼び出そうとしています。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Invoke(System.Object)">
            <summary>
アクションを起動します。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnAttached">
            <summary>
アクションが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnDetaching">
            <summary>
アクションが AssociatedObject からデタッチされるとき、その前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Attach(System.Windows.DependencyObject)">
            <summary>
指定されたオブジェクトにアタッチします。
            </summary>
<param name="dependencyObject">アタッチするオブジェクト。</param>
<exception cref="T:System.InvalidOperationException">同じ TriggerAction を一度に複数のオブジェクトにホストすることはできません。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject は、TriggerAction 型制約を満たしていません。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Detach">
            <summary>
このインスタンスを関連オブジェクトから解除します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsEnabled">
            <summary>
このアクションが呼び出されたときに実行されるかどうかを示す値を取得または設定します。これは依存関係プロパティです。
            </summary>
            <value>
	呼び出されたときにこのアクションを実行する場合は<c>true</c>、それ以外の場合は<c>false</c>。
            </value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObject">
            <summary>
この Action がアタッチされるオブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObjectTypeConstraint">
            <summary>
関連のオブジェクト型制約を取得します。
            </summary>
<value>関連のオブジェクト型制約。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsHosted">
            <summary>
このインスタンスがアタッチされているかどうかを示す値を取得または設定します。
            </summary>
<value>インスタンスがアタッチされている場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
関連オブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.TriggerAction`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObject">
            <summary>
この<see cref="T:System.Windows.Interactivity.TriggerAction`1"/>がアタッチされるオブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObjectTypeConstraint">
            <summary>
関連のオブジェクト型制約を取得します。
            </summary>
<value>関連のオブジェクト型制約。</value>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.Invoke(System.Object)">
            <summary>
アクションを起動します。
            </summary>
<param name="parameter">アクションへのパラメーター。Action がパラメーターを要求しない場合、パラメーターを null 参照に設定できます。</param>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.OnAttached">
            <summary>
コレクションが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
<exception cref="T:System.InvalidOperationException">InvokeActionCommand は Behavior 上でホストされる必要があります。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandName">
            <summary>
このアクションが呼び出す必要のあるコマンドの名前を取得または設定します。
            </summary>
<value>このアクションが呼び出す必要のあるコマンドの名前。</value>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
コマンド パラメーターを取得または設定します。
            </summary>
<value>コマンド パラメーター。</value>
<remarks>これは、ICommand.CanExecute および ICommand.Execute に渡される値です。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolvedEventArgs">
            <summary>
名前の変更の解決時にどのオブジェクトが影響を受けるかについてのデータを提供します。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolver">
            <summary>
ホスト要素によって提供されるコンテキストに基づき、TargetName を Target 要素に解決するロジックを処理するヘルパー クラスです。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.NameResolver.UpdateObjectFromName(System.Windows.DependencyObject)">
            <summary>
名前空間の参照要素のコンテキスト内で名前から解決済みオブジェクトを更新を試行します。
            </summary>
<param name="oldObject">古い解決済みオブジェクト。</param>
            <remarks>
既存のターゲットをリセットし、現在のホストのコンテキストから現在の TargetName の解決を試行します。ホストのコンテキストから解決できない場合、解決されるまでビジュアル ツリーを上がります。ルートに到達しても解決されない場合、Target を null に設定し、デバッグ出力に警告メッセージを書き込みます。
            </remarks>
        </member>
        <member name="E:System.Windows.Interactivity.NameResolver.ResolvedElementChanged">
            <summary>
解決済み要素が変更されたときに発生します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Name">
            <summary>
解決を試行するための要素の名前を取得または設定します。
            </summary>
<value>解決を試行する名前。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Object">
            <summary>
解決済みオブジェクト。TargetName が null または空の場合、または解決が試行されていない場合に参照要素を返します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.NameScopeReferenceElement">
            <summary>
名前の解決が実行される参照要素を取得または設定します。
            </summary>
<value>参照要素。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.PendingReferenceElementLoad">
            <summary>
参照要素の読み込みが保留中かどうかを示す値を取得または設定します。
            </summary>
            <value>
	[参照要素の読み込みを保留中]の場合は<c>true</c>、それ以外の場合は<c>false</c>。
            </value>
            <remarks>
ホストが読み込まれていない場合、名前は解決されません。その場合、解決を遅らせてこのプロパティの情報を追跡します。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction`1">
            <summary>
AssociatedObject 以外のオブジェクトに影響を与えるために対象となり得るアクションを表します。
            </summary>
<typeparam name="T">ターゲット上の型制約。</typeparam>
            <remarks>
	TargetedTriggerAction は TriggerAction を拡張し、アタッチしている要素とは別の要素のナレッジを追加します。これによりユーザーは Trigger の起動に応じて、アタッチされている以外の要素上の Action を呼び出せます。ターゲット要素上のハンドラーをフック/アンフックするために OnTargetChanged を、また関連要素に対して OnAttached/OnDetaching を上書きします。ターゲット要素の型はジェネリック型パラメーターにより制約できます。AssociatedObject の型を制御する必要がある場合、派生型上で TypeConstraintAttribute を設定します。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction">
            <summary>
AssociatedObject 以外のオブジェクトに影響を与えるために対象となり得るアクションを表します。
            </summary>
<remarks>これはインフラストラクチャ クラスです。Action 作成者は、このクラスの代わりに TargetedTriggerAction&lt;T&gt; から派生する必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnTargetChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
ターゲットが変化すると呼び出されます。
            </summary>
<param name="oldTarget">古いターゲット。</param>
<param name="newTarget">新しいターゲット。</param>
<remarks>変化するソース オブジェクトに機能をフックしたり、アンフックするために、この機能を派生クラス内で上書きする必要があります。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnAttached">
            <summary>
アクションが AssociatedObject にアタッチされた後で呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnDetaching">
            <summary>
アクションが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetName">
            <summary>
ターゲットの名前を取得または設定します。TargetName が未設定または解決できない場合、既定の AssociatedObject が使用されます。これは依存関係プロパティです。
            </summary>
<value>ターゲットの名前。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.Target">
            <summary>
ターゲット オブジェクトを取得します。TargetName が未設定または解決できない場合、既定の AssociatedObject が使用されます。
            </summary>
<value>ターゲット。</value>
<remarks>通常、このプロパティは派生クラスで AssociatedObject の代わりに使用される必要があります。</remarks>
<exception cref="T:System.InvalidOperationException">Target 要素が型制約を満たしていません。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.AssociatedObjectTypeConstraint">
            <summary>
関連のオブジェクト型制約を取得します。
            </summary>
<value>関連のオブジェクト型制約。</value>
<remarks>アタッチすることのできる型を制約する派生型で TypeConstraintAttribute を定義します。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetTypeConstraint">
            <summary>
ターゲット型制約を取得します。
            </summary>
<value>ターゲット型制約。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.TargetedTriggerAction`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.OnTargetChanged(`0,`0)">
            <summary>
ターゲット プロパティが変更されると呼び出されます。
            </summary>
<remarks>これを上書きし、AssociatedObject ではなく、指定された Target に機能をフックまたはアンフックします。</remarks>
<param name="oldTarget">古いターゲット。</param>
<param name="newTarget">新しいターゲット。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction`1.Target">
            <summary>
ターゲット オブジェクトを取得します。TargetName が未設定または解決できない場合、既定で AssociatedObject に設定されます。
            </summary>
<value>ターゲット。</value>
<remarks>通常、このプロパティは派生クラスで AssociatedObject の代わりに使用される必要があります。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerActionCollection">
            <summary>
共有される AssociatedObject と共にアクションのコレクションを表し、AssociatedObject に変更が発生すると変更通知をコンテンツに提供します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.TriggerActionCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
<remarks>アセンブリの外部で継承すべきではないため、内部とします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnAttached">
            <summary>
コレクションが AssociatedObject にアタッチされる直後に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnDetaching">
            <summary>
コレクションが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemAdded(System.Windows.Interactivity.TriggerAction)">
            <summary>
新しい項目がコレクションに追加されるときに呼び出されます。
            </summary>
<param name="item">新しい項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemRemoved(System.Windows.Interactivity.TriggerAction)">
            <summary>
項目がコレクションから削除されるときに呼び出されます。
            </summary>
<param name="item">削除される項目</param>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase`1">
            <summary>
条件付きで Action を起動できるオブジェクトを表します。
            </summary>
<typeparam name="T">このトリガーをアタッチできる型。</typeparam>
            <remarks>
	TriggerBase は Action を制御するための基本クラスです。OnAttached() および OnDetaching() を上書きし、ハンドラーを AssociatedObject にフックしたり、アンフックします。ジェネリック パラメーターを指定することによって、派生の TriggerBase をアタッチすることが可能な型を制約できます。InvokeActions() を呼び出して、この TriggerBase に関連付けられているすべてのアクションを起動します。
            </remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase`1.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.TriggerBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObject">
            <summary>
トリガーがアタッチされるオブジェクトを取得します。
            </summary>
<value>関連オブジェクト。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObjectTypeConstraint">
            <summary>
関連オブジェクトの型制約を取得します。
            </summary>
<value>関連のオブジェクト型制約。</value>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerCollection">
            <summary>
共有される AssociatedObject と共にトリガーのコレクションを表し、AssociatedObject に変更が発生すると変更通知をコンテンツに提供します。
             </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.#ctor">
            <summary>
<see cref="T:System.Windows.Interactivity.TriggerCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
<remarks>アセンブリの外部で継承すべきではないため、内部とします。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnAttached">
            <summary>
コレクションが AssociatedObject にアタッチされる直後に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnDetaching">
            <summary>
コレクションが AssociatedObject から解除されるとき、実際に発生する前に呼び出されます。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemAdded(System.Windows.Interactivity.TriggerBase)">
            <summary>
新しい項目がコレクションに追加されるときに呼び出されます。
            </summary>
<param name="item">新しい項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemRemoved(System.Windows.Interactivity.TriggerBase)">
            <summary>
項目がコレクションから削除されるときに呼び出されます。
            </summary>
<param name="item">削除される項目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.TypeConstraintAttribute">
            <summary>
TargetedTriggerAction および EventTriggerBase の AssociatedObject 上で型制約を指定します。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TypeConstraintAttribute.#ctor(System.Type)">
            <summary>
<see cref="T:System.Windows.Interactivity.TypeConstraintAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
<param name="constraint">制約型。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TypeConstraintAttribute.Constraint">
            <summary>
制約型を取得します。
            </summary>
<value>制約型。</value>
        </member>
        <member name="T:System.Windows.Interactivity.ExceptionStringTable">
            <summary>
ローカライズされた文字列などを調べるために、厳密に型指定されたリソース クラス。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
このクラスで使用される、キャッシュされた ResourceManager インスタンスに戻ります。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.Culture">
            <summary>
この厳密に型指定されたリソース クラスを使用して、すべてのリソース ルックアップに対して現在のスレッドの CurrentUICulture プロパティを上書きします。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorCollectionMultipleTimesExceptionMessage">
            <summary>
「複数オブジェクトに同じ BehaviorCollection を設定することはできません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorMultipleTimesExceptionMessage">
            <summary>
「	Behavior のインスタンスを一度に複数のオブジェクトにアタッチすることはできません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerActionMultipleTimesExceptionMessage">
            <summary>
「1 つの TriggerAction のインスタンスを複数の TriggerCollections で同時にホストすることはできません。インスタンスを TriggerCollection から削除してから、別の TriggerCollection に追加してください。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerCollectionMultipleTimesExceptionMessage">
            <summary>
「複数オブジェクトに同じ TriggerCollection を設定することはできません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerMultipleTimesExceptionMessage">
            <summary>
「トリガーのインスタンスを一度に複数のオブジェクトにアタッチすることはできません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CommandDoesNotExistOnBehaviorWarningMessage">
            <summary>
「コマンド "{0}" は存在しないか、{1} で公開されていません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage">
            <summary>
「"{0}" は TriggerType パラメーターには無効な型です。"{0}" が TriggerBase から派生していることを確認してください。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DuplicateItemInCollectionExceptionMessage">
            <summary>
「同じ "{0}" のインスタンスを一度以上 "{1}" に追加できません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.EventTriggerCannotFindEventNameExceptionMessage">
            <summary>
「型 "{1}" に "{0}" という名前のイベントはありません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.InvokeActionCommandMustBeHostedOnBehaviorExceptionMessage">
            <summary>
「InvokeCommandAction を Behavior にアタッチする必要があります。Behavior オブジェクトの Triggers コレクションで Trigger の Actions コレクションに追加してください。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.RetargetedTypeConstraintViolatedExceptionMessage">
            <summary>
「型 "{0}" のオブジェクトは、型 "{1}" の {3} プロパティを持つことはできません。型 "{0}" のインスタンスには、型 "{2}" の {3} プロパティのみ指定できます。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.TypeConstraintViolatedExceptionMessage">
            <summary>
「型 "{0}" を型 "{1}" にアタッチすることはできません。型 "{0}" のインスタンスは、型 "{2}" のオブジェクトにのみアタッチできます。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.UnableToResolveTargetNameWarningMessage">
            <summary>
「TargetName "{0}" を解決できません。」に類似したローカライズされた文字列を検索します。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hans\Microsoft.Expression.Controls.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Controls</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Initialize">
            <summary>
            Called before we loop over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.ShouldBreak(System.Int32)">
            <summary>
            Checks whether or not we should continue looping over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineBegin(Microsoft.Expression.Drawing.Core.PolylineData)">
            <summary>
            Called before we begin marching a new polyline.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineCompleted(System.Double)">
            <summary>
            Called when we walk off the end of a polyline.
            </summary>
            <param name="remaingLength">The remaining arclength in the polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnStepCompleted(System.Double)">
            <summary>
            Called when we sucessfully complete a step.
            </summary>
            <param name="actualStepDistance">The actual step distance.
            This may be different than Step if we have wrapped to another polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Distribute(Microsoft.Expression.Controls.PathPanel,System.Int32,System.Int32)">
            <summary>
            Distributes the children of a path panel along a given layout path.
            </summary>
            <param name="pathPanel">The path panel.</param>
            <param name="pathIndex">The index of the path in pathPanel.LayoutPaths.</param>
            <param name="childIndex">The index of the first child to be laid out on this path.</param>
            <returns>The index of the next child to be distributed. If childIndex is returned, this function has done nothing.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.ChildIndex">
            <summary>
            The index of the next child to be arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Span">
            <summary>
            The distance in arclength that we want to use for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Step">
            <summary>
            The distance in arclength to walk along the current polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Capacity">
            <summary>
            The total number of elements to be arranged on the LayoutPath.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.EvenDistributionStrategy">
            <summary>
            Distributes the children of a path panel along a layout path.
            Even distribution means that there is equal arclength between the centers of all
            the elements on the path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathStrategy.HaveStartPointsChanged">
            <summary>
            Changes to StartPoint do no cause LayoutUpdated to fire in Silverlight.
            This allows us to check for changes to StartPoint without the cost of comparing an entire geometry.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.ChangedPathLayoutProperties">
            <summary>
            Specifies which path layout properties have changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.#ctor(Microsoft.Expression.Controls.ChangedPathLayoutProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs"/> class.
            </summary>
            <param name="changedProperties">The data for the event.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.ChangedProperties">
            <summary>
            Gets the properties changed in a <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutData">
            <summary>
            Encapsulates the data needed to update a <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LayoutPathIndex">
            <summary>
            Gets or sets the index of the path on which an element is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalIndex">
            <summary>
            Gets or sets the index of an element in a collection of elements.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalIndex">
            <summary>
            Gets or sets the index of an element on a path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the length of path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.NormalAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.OrientationAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location if the element is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.IPathLayoutItem">
            <summary>
            Represents an element that is arranged by a <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </summary>
            <remarks>
            Implementing this interface enables <see cref="T:Microsoft.Expression.Controls.PathPanel"/> to set these properties when the element is arranged.
            This interface is not intended for general implementation.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            Updates the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties based on the given <see cref="T:Microsoft.Expression.Controls.PathLayoutData"/> and raises the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
            <param name="data">The data needed to update the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.</param>
        </member>
        <member name="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated">
            <summary>
            Occurs when one or more of the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties change.
            </summary>
            <remarks>
            This event is raised whenever the item’s position along the path is updated. This can occur due to changes in the properties on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> or changes to <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex">
            <summary>
            Gets the index of the path on which the item is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex">
            <summary>
            Gets the index of the item in a collection of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex">
            <summary>
            Gets the index of the item on the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset">
            <summary>
            Gets the offset of the item proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset">
            <summary>
            Gets the offset of the item proportional to the length of the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle">
            <summary>
            Gets the angle perpendicular to the path at the item's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle">
            <summary>
            Gets the angle perpendicular to the path at the items's location if the item is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Distribution">
            <summary>
            Specifies the distribution of a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Orientation">
            <summary>
            Specifies the orientation of elements on a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.FillBehavior">
            <summary>
            Specifies the method for altering the <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LayoutPath">
            <summary>
            Describes a path along which elements are arranged.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Controls.LayoutPath.transformedPolylines">
            <summary>
            Ideally, we want to cache the Bezier curves before flattening, because transform will affect flattening.
            That requires us to cache curves that we don't support very well yet.  Instead, we cache the flatten points
            in distribution strategy and transform them on demand.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.SourceElement">
            <summary>
            Gets or sets the element that defines the path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Distribution">
            <summary>
            Gets or sets whether items are laid out evenly or with a fixed padding.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Capacity">
            <summary>
            Gets or sets the maximum number of items displayed on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Padding">
            <summary>
            Gets or sets the distance in pixels along the arc length of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> between two items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Orientation">
            <summary>
            Gets or sets the orientation of the items.
            </summary>
            <remarks>
            This property is supported on <see cref="T:Microsoft.Expression.Controls.PathListBox"/>, but not <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Start">
            <summary>
            Gets or sets the distance from the start of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> to place the first item.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Span">
            <summary>
            Gets or sets the percentage of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> that participates in layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.FillBehavior">
            <summary>
            Gets or set the method to alter <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.ActualCapacity">
            <summary>
            Gets the computed Capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.IsValid">
            <summary>
            Gets whether or not the <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is valid in the context.
            A <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is invalid if it is a descendant of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> in which it used.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PaddedDistributionStrategy">
            <summary>
            Distributes the children of a layout path based on the size of the children and a given padding between the children.
            The distance in arclength between children is determined by the padding plus the sum of the radii of the children's bounding boxes.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBox">
            <summary>
            Contains a list of items that are laid out along one or more paths.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.GetContainerForItemOverride">
            <summary>
            Creates the element used to display a specified item.
            </summary>
            <returns>A <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> corresponding to a specified item.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own item container.
            </summary>
            <returns>true if the item is its own item container; otherwise, false.</returns>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBoxItem">
            <summary>
            Represents an item in a <see cref="T:Microsoft.Expression.Controls.PathListBox"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            For a description of this member, see <see cref="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.PathListBoxItem.PathLayoutUpdated">
            <summary>
            For a description of this member, see <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LayoutPathIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.NormalAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.OrientationAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathPanel">
            <summary>
            Arranges child elements along one or more path.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.PathPanel"/> can be used as an alternative to <see cref="T:Microsoft.Expression.Controls.PathListBox"/> when selection is not necessary.
            The <see cref="P:Microsoft.Expression.Controls.LayoutPath.Orientation"/> property is not supported on <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size required for child elements.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. </param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeChild(System.Int32,System.Int32,Microsoft.Expression.Drawing.Core.PolylineData,Microsoft.Expression.Drawing.Core.MarchLocation,System.Int32)">
            <summary>
            Arranges the child at the given index at a particular location on a LayoutPath.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
            <param name="pathIndex">The index of the layout path on which to arrange the child.</param>
            <param name="polyline">The polyline in the layout path.</param>
            <param name="location">The location on the polyline.</param>
            <param name="localIndex">The index of the child on the LayoutPath.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.GetChildRadius(System.Int32)">
            <summary>
            Calculates the radius of the bounding circle for the child at the given index.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.ValidPaths">
            <summary>
            The subset of LayoutPaths that are attached and not Collapsed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.Count">
            <summary>
            Count is the number of Children that the PathPanel will layout.
            If StartItemIndex > 0 and WrapItems is false, this can be less than PathPanel.Children.Count
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalChildren(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalDescendents(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical descendents of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hans\Microsoft.Expression.Effects.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Effects</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Media.Effects.BlindOrientation">
            <summary>
            Determine the orientation of the blinds
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BlindsTransitionEffect">
            <summary>
            Transition shader that simulates blinds opening when transitioning
            from one visual to another. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.OrientationProperty">
            <summary>
            Gets or sets the orientation of the blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.CountProperty">
            <summary>
            Gets or sets the number of blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientationProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the BlindsTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of BlindsTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Orientation">
            <summary>
            Gets or sets orientatio of the blinds.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Count">
            <summary>
            Gets or sets the number of blinds to display.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientation">
            <summary>
            Gets or sets orientation of the blinds.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BloomEffect">
            <summary>
            Effect that implements a bloom illumination of a visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
            
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensityProperty">
            <summary>
            This property is mapped to the BaseIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturationProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.ThresholdProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BloomEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Threshold">
            <summary>
            Gets or sets the minimum intensity that will be used for the bloom
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensity">
            <summary>
            Gets or sets the base intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensity">
            <summary>
            Gets or sets the bloom intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturation">
            <summary>
            Gets or sets the base saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturation">
            <summary>
            Gets or sets the bloom saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensity">
            <summary>
            Gets or sets the Base/BloomIntensity variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturation">
            <summary>
            Gets or sets the BaseBloomSaturation variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect">
            <summary>
            Transition effect that reveals two visuals through a growing/shrinking circle. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the Feather amount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseProperty">
            <summary>
            Dependency property which modifies the circle movement.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShaderProperty">
            <summary>
            Dependency property which modifies the reverseShader variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CircleRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CircleRevealTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.Reverse">
            <summary>
            Gets or sets playing the circle reveal backward
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShader">
            <summary>
            Gets or sets playing the circle reveal backward into the shader
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect">
            <summary>
            Transition effect that transitions two visuals using a cloud 
            texture as the sampler threshold.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudyTransitionEffect">
            <summary>
            Defines a transition shader effect that uses an image as a sampler threshold
            for interpolating pixel value between two visuals. 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect">
            <summary>
            Defines a transition shader effect that provides a random value
            allowing the effect to provide variance each time the effect is run.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeedProperty">
            <summary>
            Dependency property which modifies the RandomSeed variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.#ctor">
            <summary>
            Updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeed">
            <summary>
            Gets or sets the RandomSeed variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImageProperty">
            <summary>
            Dependency property which modifies the CloudImage variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImage">
            <summary>
            Gets or sets the CloudImage variable within the shader used for sampling. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CloudRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CloudRevealTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.ColorToneEffect">
            <summary>
            Effects that modifies the color tone of a visual using
            two colors as the sampling.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DesaturationProperty">
            <summary>
            This property is mapped to the Desaturation variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmountProperty">
            <summary>
            This property is mapped to the Toned variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColorProperty">
            <summary>
            This property is mapped to the LightColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColorProperty">
            <summary>
            This property is mapped to the DarkColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.ColorToneEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Desaturation">
            <summary>
            Gets or sets the Desaturation variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmount">
            <summary>
            Gets or sets the Toned variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColor">
            <summary>
            Gets or sets the LightColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColor">
            <summary>
            Gets or sets the DarkColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.EmbossedEffect">
            <summary>
            Effect that simulates an embossed look to the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.HeightProperty">
            <summary>
            This property is mapped to the Height variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.ColorProperty">
            <summary>
            This property is mapped to the Color variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.EmbossedEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Color">
            <summary>
            Gets or sets the Color variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.FadeTransitionEffect">
            <summary>
            Transition effect that gradually transitions from one visual to another.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the FadeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of FadeTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect">
            <summary>
            Effect that simulates a magnifying lens.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadiusProperty">
            <summary>
            Gets or sets the InnerRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadiusProperty">
            <summary>
            Gets or sets the OuterRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.CenterProperty">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.AmountProperty">
            <summary>
            Gets or sets the amount variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InputProperty">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.generalTransform">
            <summary>
            The transform used for this shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadius">
            <summary>
            Gets or sets the inner radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadius">
            <summary>
            Gets or sets the outer radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Amount">
            <summary>
            Gets or sets the ShrinkFactor: 
            The higher the shrink factor the "smaller" the content inside the ellipse will appear. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.EffectMapping">
            <summary>
            Gets the EffectMapping.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform">
            <summary>
            The GeneralTransform corrosponding to the Magnify effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.biasValue">
            <summary>
            Attempt to transform a point based on the effect.
            </summary>
            <param name="targetPoint">The point to transform.</param>
            <param name="result">The result if available.</param>
            <returns>Return true if successful.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.effect">
            <summary>
            The effect instance.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.IsInverse">
            <summary>
            If the transform is an inverse.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.inverseTransform">
            <summary>
            The transform specific to this Effect.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.MagnifyEffect)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="fx">The source effect.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            This particular effect keeps axis aligned lines axis aligned, so transformation of the rect is just
            transformation of its corner points.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The output rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.OutToIn(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            For the inverse of the shader, we need to find Pin which is the Pixel Ouput, given Pout the texture input (is the reverse of the shader)
            However, the shader algorithm is dependant on the radius of the pixel output from the center, which is a variable that we don't
            have when computing the inverse. We need to perform bisection in order to converge using the equation below
            PHatout = PHat_in*Scalar where
            PHatout = Pout - Pcenter  
            pHatin = Pin -Pcenter
            
            Scalar is dependent on the radius of Pin (which we don't have). 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.InToOut(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            Given a pixel output (Pin) find the texture input (Pout)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.PointIsInCircle(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Determines if a point is within an ellipse.
            </summary>
            <param name="pt">The test point.</param>
            <param name="center">The center point of the ellipse.</param>
            <param name="radius">The radius of the ellipse.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.Inverse">
            <summary>
            Gets the inverse transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MonochromeEffect">
             <summary>
            Effect that turns a visual into a monochrom color
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.ColorProperty">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.InputProperty">
            <summary>
            Gets or sets the Input of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MonochromeEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Color">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Input">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateEffect">
            <summary>
            Effect that pixelates a visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.PixelationProperty">
            <summary>
            This property is mapped to the pixelation amount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Pixelation">
            <summary>
            Gets or sets the amount of pixelation inside the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateTransitionEffect">
            <summary>
            Transition effect that increase/decrease pixelation between two visuals.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the PixelateTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of PixelateTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect">
            <summary>
            Transition effects that performs a radial blur of the current visual  as the new visual is introduced.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RadialBlurTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RadialBlurTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleEffect">
            <summary>
            Effect that simulates water ripples on the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.CenterProperty">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.MagnitudeProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.FrequencyProperty">
            <summary>
            Gets or sets the Frequency variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.PhaseProperty">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.InputProperty">
            <summary>
            Gets or sets the input brush used in the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Magnitude">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Frequency">
            <summary>
            Gets or sets the frequency variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Phase">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleTransitionEffect">
            <summary>
            Transition effect that simulate water ripple during transition. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RippleTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RippleTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SharpenEffect">
            <summary>
            Effects that makes a visual more crisp and sharper. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.HeightProperty">
            <summary>
            This property is mapped to the Width variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SharpenEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideDirection">
            <summary>
            Define the slide orientation
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideInTransitionEffect">
            <summary>
            Transition effect that slide the current visual away, revealing the new visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirectionProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormalProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SlideInTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SlideInTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirection">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormal">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect">
             <summary>
            Transition effect that swirl the current visual while introducing the new visual.
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmountProperty">
            <summary>
            Dependency property which modifies the TwistAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCountProperty">
            <summary>
            Dependency property which modifies the number of cell where pixels will be twisted.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor(System.Double)">
            <summary>
            Creates an instance and sets the shader's twist variable to the specified values.
            </summary>
            <param name="twist">level of swirl twist</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SmoothSwirlGridTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SmoothSwirlGridTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmount">
            <summary>
            Gets or sets the TwistAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCount">
            <summary>
            Gets or sets the CellCount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect">
            <summary>
            Effect that swirls the current visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.CenterProperty">
            <summary>
            This property is mapped to the Center variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmountProperty">
            <summary>
            This property is mapped to the SwirlStrength variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequencyProperty">
            <summary>
            This property is mapped to the AngleFrequency variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.generalTransform">
            <summary>
            The transform used when this Effect is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Center">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmount">
            <summary>
            Gets or sets the SwirlStrength variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequency">
            <summary>
            Gets or sets the AngleFrequency variable within the shader.
            We do not expose this property. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.EffectMapping">
            <summary>
            Gets the GeneralTransform for this effect.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform">
            <summary>
            For transforming input and tree transformations.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.theEffect">
            <summary>
            The instance of the Effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.thisIsInverse">
            <summary>
            The inverse of the transform.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.inverseTransform">
            <summary>
            The inverse of this GeneralTransform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.SwirlEffect)">
            <summary>
            Creates an instance of this class.
            </summary>
            <param name="eff">The effect itself.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            For this operation, the bounds is the bounding box of the 4 transformed points. 
            Need to transform each of them, and then circumscribe.  This is true for both the 
            forward and the inverse.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The transformed rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
            <summary>
            Attempt to transform inPoint with the Swirl effect.
            </summary>
            <param name="targetPoint">The input point.</param>
            <param name="result">The output point after transformed using the Swirl effect.</param>
            <returns>True and throws if false.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.Inverse">
            <summary>
            Gets a clone of the inverse of the current transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WaveTransitionEffect">
            <summary>
            Transition effect that waves the current visual while introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.MagnitudeProperty">
            <summary>
            Dependency property which modifies the Magnitude variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.PhaseProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.FrequencyProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WaveTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WaveTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Magnitude">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Phase">
            <summary>
            Gets or sets the phase of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Frequency">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeDirection">
            <summary>
            Define the wipe direction.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeTransitionEffect">
            <summary>
            Transition effect that wipes the current visual introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirectionProperty">
            <summary>
            Dependency property which modifies the preset of the wipe
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the FuzzyAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOriginProperty">
            <summary>
            Dependency property which modifies the LineOrigin variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormalProperty">
            <summary>
            Dependency property which modifies the LineNormal variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffsetProperty">
            <summary>
            Dependency property which modifies the LineOffset variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WipeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WipeTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirection">
            <summary>
            Gets or sets the direction of the wipe.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOrigin">
            <summary>
            Gets or sets the LineOrigin variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormal">
            <summary>
            Gets or sets the LineNormal variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffset">
            <summary>
            Gets or sets the LineOffset variable within the shader.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hans\Microsoft.Expression.Drawing.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Drawing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Controls.Callout">
            <summary>
            Renders a callout shape supporting several shapes combined with a callout arrow.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeContentShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.ContentControl"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
             
             A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
             It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            
             This class also supports showing content together with the shape.
             </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceParameters">
            <summary>
            Provides an interface to discribe the parameters of a Shape.
            </summary>
            <remarks>
            This interface is the data for communication between Shape and GeometrySource.
            Typically a concrete implementation of IShape will implements this interface and pass it into
            GeometrySource.UpdateGeometry(), who will consume the shape as readonly data provider.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IShape">
            <summary>
            Provides the necessary interface to define a Shape.
            Both primitive and composite shapes need to match this interface, although they might derive from different type of FrameworkElement.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.IShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Fill">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null. See Remarks.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at run time depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Media.IShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.OnContentChanged(System.Object,System.Object)">
            <summary>
            Transforms a string content into <see cref="T:TextBlock"/> with center alignment and mulitple line support.
            </summary>
            <remarks>
            Use template binding to <see cref="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent"/> instead of <see cref="P:Content"/> to enable this method.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent">
            <summary>
            Gets or sets the internal content that converts string into center aligned multiple line textblock.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.AnchorPoint">
            <summary>
            Gets or sets the position of the callout relative to the top and left corner.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.CalloutStyle">
            <summary>
            Gets or sets the callout style.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeShape">
            <summary>
            Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.Control"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.CompositeShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
            and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
            
            A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
            It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LineArrow">
            <summary>
            Renders a bended line segment with optional arrowhead on both end.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.LineArrow.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            A default <see cref="T:LineArrow"/> can render at anysize.
            The <see cref="P:RenderedGeometry"/> will stretch to layout boundary and render to outside if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.BendAmount">
            <summary>
            Gets or sets the amount of bend for the arrow.
            </summary>
            <value>The bend amount between 0 to 1.</value>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the start of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.EndArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the end of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartCorner">
            <summary>
            Gets or sets from which corner to start drawing the arrow.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.ArrowSize">
            <summary>
            Gets or sets the length of the arrow in pixels.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper">
            <summary>
            Helper class to work with PathGeometry
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string in the path mini-langauge into a PathGeometry.
            </summary>
            <param name="abbreviatedGeometry">A string in the path mini-langauge.</param>
            <remarks>
            Algorithm is modified from WPF: MS.Internal.Parsers.ParseStringToStreamGeometryContext.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Convert the given geometry into a single PathGeometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.SyncPolylineGeometry(System.Windows.Media.Geometry@,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Update the given geometry as PathGeometry with polyline matching given point list.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AbbreviatedGeometryParser">
            <summary>
            Parses abbreviated geometry sytax.
            </summary>
            <remarks>
            The algorithm is modified from WPF: MS.Internal.AbbreviatedGeometryParser
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentHelper">
            <summary>
            Helper class to Convert ArcSegment to BezierSegment(s)
            </summary>
            <summary>
            Helper class to work with PathSegment and all variations.
            </summary>
            <summary>
            Strategy classes to handle different types of PathSegment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierSegments(System.Windows.Media.ArcSegment,System.Windows.Point)">
            <summary>
            Convert an Arc segment into Bezier format
            Return BezierSegment, PolyBezierSegment, LineSegment, or null
            When returning null, the Arc degenerated into start point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SetIsStroked(System.Windows.Media.PathSegment,System.Boolean)">
            <summary>
            Avoid calling the three-parameter constructor, since it always sets a local value for IsStroked.
            </summary>
            <param name="segment"></param>
            <param name="isStroked"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the SegmentCollection with given polyline matching given point list.
            Try to keep changes minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolyBezierSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the collection[index] segment with poly bezier segment matching given point list.
            givne point list must contain 3*N points for N Bezier segments.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.IsEmpty(System.Windows.Media.PathSegment)">
            <summary>
            Test if given path segment is empty.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPointCount(System.Windows.Media.PathSegment)">
            <summary>
            Get the point count in given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetLastPoint(System.Windows.Media.PathSegment)">
            <summary>
            Get the last point of given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPoint(System.Windows.Media.PathSegment,System.Int32)">
            <summary>
            Get the point of given index in given segment.
            If input is (-1), return the last point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.FlattenSegment(System.Windows.Media.PathSegment,System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point,System.Double)">
            <summary>
            Flatten given segment and add result points into given point list.
            </summary>
            <param name="segment">The segment to be flatten</param>
            <param name="points">The result point list</param>
            <param name="start">The start point of the segment</param>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.ArcToBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Windows.Point[]@,System.Int32@)">
            <summary>
            ArcToBezier, Compute the Bezier approximation of an arc
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This utility computes the Bezier approximation for an elliptical arc as
            it is defined in the SVG arc spec. The ellipse from which the arc is
            carved is axis-aligned in its own coordinates, and defined there by its
            x and y radii. The rotation angle defines how the ellipse's axes are
            rotated relative to our x axis. The start and end points define one of 4
            possible arcs; the sweep and large-arc flags determine which one of
            these arcs will be chosen. See SVG spec for details.
            
            Returning cPieces = 0 indicates a line instead of an arc
                      cPieces = -1 indicates that the arc degenerates to a point 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetArcAngle(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Get the number of Bezier arcs, and sine/cosine of each.
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This is a private utility used by ArcToBezier.  We break the arc into
            pieces so that no piece will span more than 90 degrees.  The input
            points are on the unit circle.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetBezierDistance(System.Double,System.Double)">
             <summary>
             GetBezierDistance, return the distance as a fraction of the radius
             Adopted from MIL:Graphics\core\geometry\utils.cpp
             </summary>
            <remarks>
                  Get the distance from a circular arc's endpoints to the control points
                  of the Bezier arc that approximates it, as a fraction of the arc's
                  radius.
            
                  Since the result is relative to the arc's radius, it depends strictly on
                  the arc's angle. The arc is assumed to be of 90 degrees of less, so the
                  angle is determined by the cosine of that angle, which is derived from
                  rDot = the dot product of two radius vectors.  We need the Bezier curve
                  that agrees with the arc's points and tangents at the ends and midpoint. 
                  Here we compute the distance from the curve's endpoints to its control
                  points.
            
                  Since we are looking for the relative distance, we can work on the unit
                  circle. Place the center of the circle at the origin, and put the X axis
                  as the bisector between the 2 vectors.  Let a be the angle between the
                  vectors.  Then the X coordinates of the 1st and last points are cos(a/2). 
                  Let x be the X coordinate of the 2nd and 3rd points.  At t=1/2 we have a
                  point at (1,0). But the terms of the polynomial there are all equal:
            
                            (1-t)^3 = t*(1-t)^2 = t^2*(1-t) = t^3 = 1/8,
            
                  so from the Bezier formula there we have:
            
                            1 = (1/8) * (cos(a/2) + 3x + 3x + cos(a/2)), 
            
                  hence
            
                            x = (4 - cos(a/2)) / 3
            
                  The X difference between that and the 1st point is:
                  
                            DX = x - cos(a/2) = 4(1 - cos(a/2)) / 3.
            
                  But DX = distance / sin(a/2), hence the distance is
            
                            dist = (4/3)*(1 - cos(a/2)) / sin(a/2).
            
                  Rather than the angle a, we are given rDot = R^2 * cos(a), so we
                  multiply top and bottom by R:
             
                            dist = (4/3)*(R - Rcos(a/2)) / Rsin(a/2)
             
                  and use some trig:
                                           ________________
                            cos(a/2)   = \/(1 + cos(a)) / 2
                                           ______________________
                            R*cos(a/2) = \/(R^2 + R^2 cos(a)) / 2 
                                           ________________
                                       = \/(R^2 + rDot) / 2
            
                  Let A = (R^2 + rDot)/2.
                                           ____________________
                            R*sin(a/2) = \/R^2 - R^2 cos^2(a/2)
                                           _______
                                       = \/R^2 - A
            
                  so:
                                                      _
                                         4      R - \/A
                                  dist = - * ------------
                                         3      _______
                                              \/R^2 - A
            
              History:
                  5/29/2001 MichKa
                      Created it.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.AcceptRadius(System.Double,System.Double,System.Double@)">
            <summary>
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            Return false if the radius is too small compared to the chord length (returns true on NaNs)
            radius is modified to the value that's accepted.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.BezierCurveFlattener">
            <summary>
            A utility class to flatten Bezier curves.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenCubic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier cubic curve and adds the result polyline to the third parameter.
            </summary>
            <param name="controlPoints">The 4 Bezier cubic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">True to skip the first control point when adding the flattened polyline.
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to 
            each of the polyline vertices</param> 
            If <paramref name="resultPolyline"/> is empty, the first control point 
            and its associated parameter are always added.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenQuadratic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier quadratic curve and adds the result polyline to the third parameter.
            We use degree elevation for Bezier curves to reuse the code for the cubic case.
            </summary>
            <param name="controlPoints">The 3 Bezier quadratic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">Whether to skip the first control point when adding the flattened polyline. 
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to
            each of the polyline vertices</param>
            If <paramref name="resultPolyline"/> is empty, the first control point and 
            its associated parameter are always added.</param>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.CommonExtensions">
            <summary>
            Extension methods supporting non-geometry types
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach(System.Collections.IEnumerable,System.Action{System.Object})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence with the index of each item.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Ensure the count of list to given count.  Create default(T) or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensure the count of list to given count.  Create with given fatory or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used when there's no factory.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the end of a collection.
            If collection is list, List.AddRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Get the last item of given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
            Remove the last item from the given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.DeepCopy``1(``0)">
            <summary>
            Make a copy of obj and all it's public properties, including all collection properties.
            Possible perf optimization: this is used only for Transform and Geometry.
            We should develope a copier for them instead of using reflection.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.SetIfDifferent(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Set the value if different.  Avoid setting local value if possible.
            return true when the value has been changed
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ClearIfSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears the dependency property when it is locally set on the given dependency object.
            Return false if the dependeny property is not locally set.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.FindVisualDesendent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Find all visual desendent of given type and condition using breath first search.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get all visual children in IEnumerable
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.DrawingPropertyMetadata">
            <summary>
            Unify the interface of PropertyMetadata in WPF and Silverlight.
            Providing the necessary notification about render, arrange or measure.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.#ctor(Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Object)">
            <summary>
            This private Ctor should only be used by AttachCallback.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.AttachCallback(System.Object,Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
            <summary>
            Chain InternalCallback() to attach the instance of DrawingPropertyMetadata on property callback.
            In Silverlight4-, the property metadata is thrown away after setting. Use callback to remember it.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.InternalCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before chaining the original callback, trigger DrawingPropertyChangedEvent
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.GeometryHelper">
            <summary>
            Extension methods for Geometry related data structures (Point/Vector/Size/Rect)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Resize(System.Windows.Rect,System.Double)">
            <summary>
            Resize the rectangle to relative size while keeping center invariant.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Subtract(System.Windows.Point,System.Windows.Point)">
            <summary>
            Get the difference Vector between two Points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Plus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise plus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Minus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise minus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string of mini-languages to a <see cref="T:PathGeometry"/>.
            </summary>
            <remarks>See: Path Markup Syntax(http://msdn.microsoft.com/en-us/library/cc189041(VS.95).aspx)</remarks>
            <param name="abbreviatedGeometry">The string of path mini-languages for describing geometric paths.</param>
            <returns>A <see cref="T:PathGeometry"/> converted from the the path mini-languages/></returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double)">
            <summary>
            Flattens a <see cref="T:PathFigure"/> and adds result points to given <paramref name="points"/>.
            </summary>
            <param name="figure">The input <see cref="T:PathFigure"/>.</param>
            <param name="points">The point list to which result points will append.</param>
            <param name="tolerance">A positive number specifying the maximum allowed error from result points to input path figure.  Value 0 allows algorithm to pick the tolerance automatically.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double)">
            <summary>
            Get the normalized arc in (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double,System.Windows.Rect)">
            <summary>
            Get the absolute arc point in given bound with given relative radius.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point)">
            <summary>
            Get the angle on arc relative to (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Get the angle on arc from given absolute point relative to bound
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compute the transform that moves Rect from to Rect to.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Computes the transform from the coordinate space of one <c>UIElement</c> to another.
            </summary>
            <param name="from">The source element.</param>
            <param name="to">The destination element.</param>
            <returns>The transform between the <c>UIElement</c>s, or null if it cannot be computed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeToAbsolutePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map relative point to absolute using the mapping from given bound to (0,0)(1,1) box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.AbsoluteToRelativePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map absolute point to relative using the mapping from (0,0)(1,1) box to given bound.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetStretchBound(System.Windows.Rect,System.Windows.Media.Stretch,System.Windows.Size)">
            <summary>
            Compute the bound after stretch within given logical bound.
            If stretch to uniform, use given aspectRatio.
            If aspectRatio is empty, it's equivalent to Fill.
            If stretch is None, equivalent to Fill or Uniform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Midpoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the mid point of given 2 points
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The mid point between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(Microsoft.Expression.Drawing.Core.Vector,Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Returns the dot product of two vectors.
            </summary>
            <param name="lhs">The first vector.</param>
            <param name="rhs">The second vector.</param>
            <returns>The dot product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the dot product of two Points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.SquaredDistance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The square of the distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Determinant(System.Windows.Point,System.Windows.Point)">
            <summary>
            Determinant of cross product.  Equivalent to directional area
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Normal(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compute the normal direction vector of given line segments
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Perpendicular(Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Compute perpendicular vector, 90 degrees counter-clockwise.
            Vector to right perpendicular result a vector to up.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GeometryEquals(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Returns whether the two geometries are identical.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Windows.Media.Geometry@,System.Func{``0})">
            <summary>
            Ensure the value is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.Geometry},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureSegmentType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.PathSegment},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ComputeBSpline(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Double)">
            <summary>
            de'Boor algorithm to subdevide BSpline into poly Bezier segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MathHelper">
            <summary>
            Helper class providing static properties and methods related to floating point arithmetic.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.Epsilon">
            <summary>
            The minimum distance to consider two values are same.
            Note: internal floating point in MIL/SL is float, not double.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.TwoPI">
            <summary>
            The value of angle of a full circle.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.PentagramInnerRadius">
            <summary>
            The inner radius for pentagram polygon shape, at precision of 3 digits in percentage.
            (1 - Sin36 * Sin72 / Sin54) / (Cos36) ^ 2, which is 0.47210998990512996761913067272407
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsVerySmall(System.Double)">
            <summary>
            Determines whether a <c>System.Double</c> value is small enough to be considered
            equivalent to zero.
            </summary>
            <param name="value"></param>
            <returns><c>true</c> if value is smaller than <c>DoubleTolerance</c>;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.EnsureRange(System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Return the value that's within the given range
            Given min/max is null means no limit.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.Hypotenuse(System.Double,System.Double)">
            <summary>
            Computes the Euclidean norm of the vector (x, y).
            </summary>
            <param name="x">The first component.</param>
            <param name="y">The second component.</param>
            <returns>The Euclidean norm of the vector (x, y).</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.DoubleFromMantissaAndExponent(System.Double,System.Int32)">
            <summary>
            Computes a real number from the mantissa and exponent.
            </summary>
            <param name="x"></param>
            <param name="exp"></param>
            <returns>The value of x * 2^exp if successful.</returns>
            <remarks>See ::ldexp in any decent C language runtime library.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsFiniteDouble(System.Double)">
            <summary>
            Tests a double.
            </summary>
            <param name="x">The double to test.</param>
            <returns><c>true</c> if x is not a NaN and is not equal to plus or minus infinity;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathFigureHelper">
            <summary>
            Helper class to work with PathFigure
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean)">
            <summary>
            Flatten the given figure and add to the point list.
            </summary>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.AllSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterate all segments inside given figure, and returns correct start point for each segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolylineFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single polyline segment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolyBezierFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single PolyBezierSegment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncEllipseFigure(System.Windows.Media.PathFigure,System.Windows.Rect,System.Windows.Media.SweepDirection,System.Boolean)">
            <summary>
            Synchronize the given figure to be a closed ellipse with 2 arc segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentData">
            <summary>
            A Tuple data structure for PathSegment and corresponding StartPoint.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineData">
            <summary>
            Represent a polyline consist with a list of connecting points.
            A closed polygon is represented by repeating the first point at the end.
            The differences, normals, angles, and lengths are computed on Demand.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.#ctor(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Construct a polyline with two or more points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.Difference(System.Int32)">
            The forward difference vector of polyline.
            Points[i] + Differences[i] = Points[i+1]
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.SmoothNormal(System.Int32,System.Double,System.Double)">
            <summary>
            Compute the normal vector of given location (lerp(index, index+1, fraction).
            If the location is within range of cornerRadius, interpolate the normal direction.
            </summary>
            <param name="cornerRadius">The range of normal smoothless.  If zero, no smoothness and return the exact normal on index.</param>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.IsClosed">
            <summary>
            The polyline is closed when first and last point is repeated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Count">
            <summary>
            The count of points in this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.TotalLength">
            <summary>
            The total arc length of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Points">
            <summary>
            The point array of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Lengths">
            <summary>
            The length between line segments, Points[i] to Points[i+1]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Normals">
            <summary>
            The list of normal vectors for each segment.
            Normals[i] is the normal of segment p[i] to p[i + 1].
            Normals[N-1] == Normals[N-2].
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Angles">
            <summary>
            The list of Cos(angle) between 2 line segments on point p[i]
            Note: The value is cos(angle) = Dot(u, v). It's not in degree.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.AccumulatedLength">
            <summary>
            The list of accumulated length from points[i] to points[0]
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MarchLocation">
            <summary>
            The data structure to communicate with PathMarch algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetPoint(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Get the interpolated position of this this MarchLocation on given point list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetNormal(Microsoft.Expression.Drawing.Core.PolylineData,System.Double)">
            <summary>
            Get the interpolated normal direction of this this MarchLocation on given normal vector list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetArcLength(System.Collections.Generic.IList{System.Double})">
            <summary>
            Get the arc length of this MarchLocation to the start of the entire polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Reason">
            <summary>
            The reason why this location is sampled.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Index">
            <summary>
            The index of the point on polyline point list.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Ratio">
            <summary>
            Ratio: [0, 1], which is always before / (before + after)
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Before">
            <summary>
            Arc length before stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.After">
            <summary>
            Arc length after the stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Remain">
            <summary>
            Remaining length within a step to hit next stop.  Positive to go forward. Negative to go backward.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineHelper">
            <summary>
            Helper class to work with list of points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.PathMarch(Microsoft.Expression.Drawing.Core.PolylineData,System.Double,System.Double,System.Func{Microsoft.Expression.Drawing.Core.MarchLocation,System.Double})">
            <summary>
            March the given polyline with given interval and output each stop through callback
            </summary>
            <param name="polyline">The polyline points to march on</param>
            <param name="startArcLength">The arc length to march before stopping at the first point.</param>
            <param name="cornerThreshold">The max angle between edges to be considered a corner vertex</param>
            <param name="stopCallback">Callback when marching algorithm stop at a point.  The callback returns the arc length for next stop.
            If the asked length is negative, march backwards. If callback returns NaN, finish marching.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.GetWrappedPolylines(System.Collections.Generic.IList{Microsoft.Expression.Drawing.Core.PolylineData},System.Double@)">
            <summary>
            Reorders the given list of polylines so that the polyline a given arclength into the list is the first.
            Polylines that preceded this line are concatenated to the end of the list, with the first polyline at the very end. 
            </summary>
            <param name="lines">A list of polylines.</param>
            <param name="startArcLength">The arclength into the entire list of polylines at which to find the start line.
            The arc length into that line is returned in this variable.</param>
            <returns>The reordered and wrapped list.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.RandomEngine">
            <summary>
            A random generator support uniform and gaussian distributions.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.RandomEngine.Gaussian">
            <summary>
            Generate a pair of independent standard normally distributed random numbers,
            zero expectation, unit variance, using polar form of the Box-Muller transformation.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.#ctor">
            <summary>
            Private constructor. Force to use factory methods.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a line segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment from quatratic curve (3 control points)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment with 4 control points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.SimpleSegment.Points">
            <summary>
            Control points of path segment.  Length is variant.
            Line segment has 2 points, Cubic bezier has 4 points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.TransformExtensions.TransformEquals(System.Windows.Media.Transform,System.Windows.Media.Transform)">
            <summary>
            Compares two transforms for an exact match.  Transforms with the same value but different structure(e.g. Translate(0,0) and Rotate(0) are not considered equivalent).
            </summary>
            <param name="firstTransform">The first transform.</param>
            <param name="secondTransform">The second transform.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Expression.Media.UnitType">
            <summary>
            Specifies the unit of thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Pixel">
            <summary>
            Unit in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Percent">
            <summary>
            Unit in percentage relative to bounding box.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometrySource`1">
            <summary>
            Provides the base class of a source of geometry.
            It generate and cache the geometry based on input parameters and layout bounds.
            </summary>
            <remarks>
            A typical implementation will extend the UpdateCachedGeometry() to update this.cachedGeometry.
            This base class will then handle the invalidation, pipeline to geometry effects and caching realtive to layout bounds.
            An implementation should try to reuse the cached geometry as much as possible to avoid reconstruction in rendering thread.
            An implementation can extend the ComputeLogicalBounds to handle Stretch differently.
            </remarks>
            <typeparam name="TParameters">The type of geometry source parameter on which the base class is working on.</typeparam>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySource">
            <summary>
            Provides an interface to describe the source of a geometry.
            </summary>
            <remarks>
            This interface is designed to expose geometry source in a non-generic way.
            Typical implementation should subclass GeometrySource&lt;&gt; instead of implementing this interface directly.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry using given parameter and layout bounds.
            Returns false if nothing has been updated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometrySource`1.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry based on given parameters and layoutBounds.
            Returns false if geometry hasn't been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateCachedGeometry(`0)">
            <summary>
            Extend the way to provide geometry by implementing this function.
            Return true when any of the geometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Extend the way to handle stretch mode.
            Default is to always use Stretch.Fill and center stroke.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ApplyGeometryEffect(Microsoft.Expression.Media.IGeometrySourceParameters,System.Boolean)">
            <summary>
            Apply geometry effect when dirty or forced, update this.Geometry.
            Otherwise, keep this.Geometry as this.cachedGeometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
            <value></value>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Arc think Stretch.None is same as Stretch.Fill, assuming aspect ratio = 1:1
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.NormalizeThickness(Microsoft.Expression.Media.IArcGeometrySourceParameters)">
            <summary>
            Normalize thickness, both relative to bounding box and absolute pixel.
            realtive thickness = 0 -> full circle radius or clamped.
            realtive thickness = 1 -> shrinked to a dot, or degenerated.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowOrientation">
            <summary>
            Specifies the direction the arrow points.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Left">
            <summary>
            The arrow points to left.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Right">
            <summary>
            The arrow points to right.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Up">
            <summary>
            The arrow points up.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Down">
            <summary>
            The arrow points down.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.BlockArrowGeometrySource.ArrowBuilder">
            <summary>
                 B
                /|
               / C--D
              A     |
               \ C--D
                \|
                 B
            Algorithm only use Width/Height assuming top-left at 0,0
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CalloutStyle">
            <summary>
            Specifies the rendering style of a Callout shape
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Rectangle">
            <summary>
            A rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.RoundedRectangle">
            <summary>
            A rounded rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Oval">
            <summary>
            A oval shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Cloud">
            <summary>
            A cloud shaped callout.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateEdge(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Update the edge line, and connect to anchor point if necessary
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdatePolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Update polyline segment, connecting start, anchor and end point with Callout style
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateLineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point)">
            <summary>
            Update the line segment to given point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.ComputeCorners(System.Double)">
            <summary>
            Compute the corner points, clockwise, 8 points for 4 corners
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateCornerArc(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point)">
            <summary>
            Corner Arc is always smaller arc with 90 degree
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffect">
            <summary>
            Provides the base class of GeometryEffect that transform a geometry into another geometry.
            </summary>
            <remarks>
            This class provides the basic implementation of processing the rendered geometry of a IShape before it's passed to rendering.
            A typical implementation will extend the virtual function <see cref="F:ProcessGeometry"/> to transform input geometry.
            <see cref="T:GeometryEffect"/> is typically attached to <see cref="T:IShape"/> as an attached property and activated when <see cref="T:IShape"/> geometry is updated.
            The <see cref="P:OutputGeometry"/> of a <see cref="T:GeometryEffect"/> will replace the rendered geometry in <see cref="T:IShape"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.GetGeometryEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.SetGeometryEffect(System.Windows.DependencyObject,Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Sets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.CloneCurrentValue">
            <summary>
            Creates a modifiable clone (deep copy) of the <see cref="T:GeometryEffect"/> using its current values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect. Implements CloneCurrentValue in Silverlight.
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffect.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateGeometry">
            <summary>
            Invalidate the geometry effect without actually compute the geometry.
            It will notify all parent shapes or effects to invalidate accordingly.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.ProcessGeometry(System.Windows.Media.Geometry)">
            <summary>
            Process geometry effect on given input geometry.
            Result is stored in GeometryEffect.OutputGeometry.
            </summary>
            <returns>Return false if nothing has been changed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Extend the way of updating cachedGeometry based on given input geometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Detach">
            <summary>
            Notified when detached from parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Attach(System.Windows.DependencyObject)">
            <summary>
            Notified when attached to a parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateParent(System.Windows.DependencyObject)">
            <summary>
            Invalidate the geometry on given dependency object when
            the object is a valid parent type (IShape or GeometryEffect).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.DefaultGeometryEffect">
            <summary>
            The default geometry effect that does nothing but passing through the input geometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.OutputGeometry">
            <summary>
            Gets the output geometry of this geometry effect.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.Parent">
            <summary>
            Parent can be either IShape or GeometryEffectGroup.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffectConverter">
            <summary>
            Provides the conversion between string and geometry effect
            </summary>
            <remarks>
            This class enables the brief sytax in xaml like <code>GeometryEffect="Sketch"</code>
            It will create a clone of instance of geometry effect so it can be used as resources.
            </remarks>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffectConverter.registeredEffects">
            <summary>
            Build a preset list of supported geometry effects.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted from string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted to string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a geometry effect.  Fallback value is null.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a geometry effect into a string.  Fallback value is null.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceExtensions">
            <summary>
            Provides helper extension methods to work with IGeometrySource and parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowType">
            <summary>
            Specifies the Arrow head type.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.NoArrow">
            <summary>
            No arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.Arrow">
            <summary>
            A triagle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.StealthArrow">
            <summary>
            A stealth triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OpenArrow">
            <summary>
            An open triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OvalArrow">
            <summary>
            An oval head.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CornerType">
            <summary>
            Specifies the corner location.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopLeft">
            <summary>
            On top left of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopRight">
            <summary>
            On top right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomRight">
            <summary>
            On bottom right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomLeft">
            <summary>
            On bottom left of bounding box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.PolygonGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Polygon think Stretch.None is same as Stretch.Fill
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.SketchGeometryEffect">
            <summary>
            A geometry effect to transform any geometry into a Sketch style as in SketchFlow.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Updating cachedGeometry based on given input geometry.
            </summary>
            <param name="input">A input geometry</param>
            <returns>Returns true when anything on cachedGeometry has been updated.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.SketchGeometryEffect.randomSeed">
            <summary>
            Use the same random seed on creation to keep visual flickering minimum
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.GetEffectiveSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all simple segments in given path figure including the closing chord.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.Arc">
            <summary>
            Renderes an Arc shape supporting Arc, Ring and Pie mode controled by ArcThickness.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.PrimitiveShape">
            <summary>
            Platform neutral implementation of Shape deriving from WPF:Shape or SL:Path
            </summary>
            <summary>
            Provides Silverlight implementation of PrimitiveShape who derives from platform Path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.CreateGeometrySource">
            <summary>
            Extend how the shape is drawn with creating geometry source
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            In WPF, measure override works from Shape.DefiningGeometry which is not always as expected
            see bug 99497 for details where WPF is not having correct measure by default.
            
            In Silverlight, measure override on Path does not work the same as primitive shape works.
            
            We should return the smallest size this shape can correctly render without clipping.
            By default a shape can render as small as a dot, therefore returning the strokethickness.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Shapes.PrimitiveShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry of the primitive shape, mapping to <see cref="P:System.Windows.Shapes.Path.Data"/> in Silverlight.
            </summary>
            <remarks>
            The concept is corresponding to WPF Shape.RenderedGeometry.
            Silverlight must use DP for rendered geometry so that it updates correctly.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.Data">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Geometry"/> that specifies the shape to be drawn.
            </summary>
            <returns>A description of the shape to be drawn.</returns>
            <remarks>
            A new Data property to hide Path.Data property, to avoid being serialized to xaml.
            This property will carry DesignerSerializationVisibilityAttribute.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle in degrees. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle in degree. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThickness">
            <summary>
            Gets or sets the arc thickness.
            </summary>
            <value>The arc thickness in pixels or percentage depending on "ArcThicnessUnit"/>.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThicknessUnit">
            <summary>
            Gets or sets the arc thickness unit.
            </summary>
            <value>The arc thickness unit, either pixel or percentage.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.BlockArrow">
            <summary>
            Renders a block arrow shape supporting resizable arrow head and body.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation where the arrow is pointing to.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowheadAngle">
            <summary>
            Gets or sets the arrowhead angle.
            </summary>
            <value>The arrowhead angle in degrees.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowBodySize">
            <summary>
            Gets or sets the size of the arrow body.
            </summary>
            <value>The size of the arrow body in pixels.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.RegularPolygon">
            <summary>
            Renders a regular polygon shape or corresponding star shape with variable number of points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.PointCount">
            <summary>
            Gets or sets the number of points of the <see cref="T:Microsoft.Expression.Shapes.RegularPolygon"/>
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.InnerRadius">
            <summary>
            Gets or sets the the distance between the center and the innermost point.
            </summary>
            <value>The distance between the center and the innermost point.</value>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.Vector">
            <summary>
            This is ported from WPF implementation of Vector
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ko\Microsoft.Expression.Interactions.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
            매개 변수를 갖지 않는 메서드 또는 한 개의 매개 변수를 갖는 메서드를 줄 바꿈하는 ICommand의 기본 구현입니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="action">작업.</param>
            <remarks>이 생성자를 사용하여 ICommand 매개 변수를 무시하는 작업을 제공합니다.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="objectAction">개체 매개 변수를 갖는 작업.</param>
            <remarks>이 생성자를 사용하여 Execute 메서드를 통해 전달된 개체 매개 변수를 사용하는 작업을 제공합니다.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
            명령을 현재 상태에서 실행할 수 있는지 여부를 결정하는 메서드를 정의합니다.
            </summary>
            <param name="parameter">명령에 사용된 데이터.  명령에서 데이터를 전달할 필요가 없으면 이 개체를 Null로 설정할 수 있습니다.</param>
            <returns>
            항상 true를 반환합니다.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
            명령이 호출될 때 호출될 메서드를 정의합니다.
            </summary>
            <param name="parameter">명령에 사용된 데이터.  명령에서 데이터를 전달할 필요가 없으면 이 개체를 Null로 설정할 수 있습니다.</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
            명령 실행 여부에 영향을 미치는 변경 내용이 있는 경우에 발생합니다. ActionCommand로 발생되지 않습니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
            호출 시 지정된 속성을 지정된 값으로 변경하는 작업입니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
            작업을 호출합니다.
            </summary>
            <param name="parameter">작업에 대한 매개 변수. Action에 매개 변수가 필요하지 않은 경우 매개 변수를 Null 참조로 설정할 수 있습니다.</param>
            <exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/>가 있는 속성을 대상에서 찾을 수 없습니다.</exception>
            <exception cref="T:System.ArgumentException"><c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/>를 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/>에 의해 지정된 값으로 설정할 수 없습니다.</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
            변경할 속성의 이름을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
            <value>변경할 속성의 이름입니다.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
            설정할 값을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
            <value>설정할 값.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
            ChangePropertyAction을 호출할 때 발생할 애니메이션 지속 시간을 가져오거나 설정합니다.  이것은 종속성 속성입니다. 지속 시간을 설정하지 않으면 애니메이션이 적용되지 않습니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Ease">
            <summary>
            ChangePropertyAction을 호출할 때 애니메이션과 함께 사용할 감속/가속 기능을 가져오거나 설정합니다.  이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
            ExtendedVisualStateManager는 레이아웃 속성의 애니메이션을 부드럽게 할 수 있는 사용자 지정 VisualStateManager입니다. 이 사용자 지정 VisualStateManager로 상태는 Grid.Column과 같은 속성의 변경 내용을 포함하고 요소 높이를 자동 등으로 변경할 수 있습니다. 이러한 변경 내용은 해당 전환의 GeneratedDuration과 GeneratedEasingFunction을 사용하여 시간이 경과되면서 부드럽게 됩니다. 알고리즘에 대한 일반적인 설명은 아래 &quot;VisualStateManager 다시 정의&quot; 영역을 참조하십시오.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
            VisualStateGroup은 유체 레이아웃을 사용하거나 사용하지 않을 수 있습니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
            VisualStateGroup은 연결된 속성에 이러한 원래 값의 목록을 보존합니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
            모든 상태의 경우 레이아웃 특정 속성이 추출된 다음 해당 상태에 연결됩니다. 이러한 속성은 상태 자체에서는 제거됩니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
            현재 상태를 기억하십시오.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
            이것은 현재 동작 중인 요소의 집합입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
            이는 전환에 애니메이션 효과를 주는 스토리보드입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
            이 목록은 레이아웃 속성을 모두 포함합니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.PathToPropertyMap">
            <summary>
            Silverlight는 PropertyPath에서 DependencyProperty를 가져오는 직접적인 수단을 제공하지 않으므로 이 구조를 사용하여 추적된 경로를 찾습니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
            애니메이션을 중지하고 해당 애니메이션을 지원하기 위한 레이아웃 변경 내용을 바꿉니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
            VisualStateManager가 변경 내용에 애니메이션 효과를 주는 데 사용할 전환을 찾아 레이아웃 애니메이션을 지속 시간 및 감속/가속 설정과 일치시킬 수 있습니다.
            </summary>
            <param name="group">전환이 발생하는 그룹</param>
            <param name="previousState">현재 상태</param>
            <param name="state">이동할 상태</param>
            <returns>전환</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
            스토리보드에서 해당 상태의 모든 레이아웃 관련 속성을 제거하고 이 속성을 연결된 속성에 캐시합니다.
            </summary>
            <param name="state">이동할 상태</param>
            <returns>해당 상태의 레이아웃 속성을 포함하는 스토리보드</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            대상 요소의 집합은 레이아웃 전환에서 이동했을 수 있는 모든 요소의 집합입니다. 이 집합은 다음에 대한 종결입니다. - 해당 상태에서 애니메이션 효과를 준 레이아웃 속성을 포함한 요소. - 집합의 요소 형제. - 집합의 요소 부모.
             
            후속 코드는 레이아웃 변경 전과 후에 해당 사각형을 확인합니다.
            </summary>
            <param name="control">레이아웃이 상태를 변경하는 컨트롤</param>
            <param name="layoutStoryboard">레이아웃 변경 내용을 포함하는 스토리보드</param>
            <param name="originalValueRecords">되돌릴 수 있는 이전 상태 탐색의 모든 이전 값</param>
            <param name="movingElements">진행 중인 상태 변경 전환이 있는 경우 현재 동작 중인 요소의 집합</param>
            <returns>레이아웃을 변경했을 수 있는 요소의 전체 집합</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            대상 목록의 모든 요소에 대한 사각형의 집합을 가져옵니다.
            </summary>
            <param name="targets">고려할 요소의 집합</param>
            <param name="movingElements">현재 동작 중인 요소의 집합</param>
            <returns>요소를 해당 사각형에 매핑하는 사전</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
            레이아웃 슬롯을 가져온 다음 사용 중인 슬롯 부분을 계산하여 요소의 레이아웃 사각형을 가져옵니다.
            </summary>
            <param name="element">가져오려는 사각형의 요소</param>
            <returns>해당 요소의 레이아웃 사각형</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            상태 변경이 진행 중일 수 있고 현재 값이 가장 중요하기 때문에, 상태 변경 시 표시 유형 대신 요소의 불투명도를 가져옵니다.
            </summary>
            <param name="control">상태가 변경 중인 컨트롤</param>
            <param name="layoutStoryboard">레이아웃 속성이 있는 스토리보드</param>
            <param name="originalValueRecords">원래 값의 집합</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
            레이아웃 스토리보드를 끝까지 진행하며, 타임라인을 표시하지 않고 렌더링을 실행하는 UpdateLayout을 호출할 수 있도록 SetValue를 사용하여 모든 속성을 설정합니다. 덮어쓰여진 모든 값은 OriginalValueRecords 컬렉션에 저장되므로 나중에 바꿀 수 있습니다.
            </summary>
            <param name="control">상태가 변경 중인 컨트롤</param>
            <param name="layoutStoryboard">레이아웃 속성을 보유하는 스토리보드</param>
            <param name="originalValueRecords">원래 값의 저장소</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
            레이아웃 애니메이션의 결과로 이동할 모든 요소를 가져와 형제 요소에 영향을 주지 않도록 캔버스에서 줄 바꿉니다.
            </summary>
            <param name="movingElements">이동될 요소의 집합</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
            레이아웃 애니메이션의 결과로 이동 중이었던 모든 요소를 가져와 캔버스에서 줄 바꿈하지 않습니다.
            </summary>
            <param name="movingElements">이동 중이었던 요소의 집합</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            원본 요소에서 대상 요소로 레이아웃 속성을 복사하고, 원본에서 지웁니다.
            </summary>
            <param name="source">레이아웃 속성의 원본</param>
            <param name="target">레이아웃 속성의 대상</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
            전환에 애니메이션 효과를 주는 데 사용될 실제 스토리보드를 만듭니다. 이전에 계산된 모든 결과를 사용합니다.
            </summary>
            <param name="duration">애니메이션 지속 시간</param>
            <param name="ease">애니메이션에 사용될 감속/가속 기능</param>
            <param name="movingElements">이동될 요소의 집합</param>
            <param name="oldOpacities">표시가 변경 중인 요소의 이전 불투명도</param>
            <returns>스토리보드</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
            OriginalValueRecord는 상태에서 변경된 속성의 원래 값을 기억합니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
            열거된 이 형식은 FluidMoveBehavior가 연결된 요소 또는 해당 요소의 자식에 적용될지 여부를 나타냅니다. &quot;Self&quot;는 특수한 방식으로 작동해야 하는 단일 요소가 있을 때 유용하고, &quot;Children&quot;은 동일한 동작을 WrapPanel의 모든 자식 또는 ItemsControl의 ItemsHost 패널에 적용해야 할 때 유용합니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
            요소(또는 요소의 집합)의 레이아웃 변경 내용을 확인하고 필요한 경우 요소를 새 위치로 부드럽게 이동하는 동작입니다. 이 동작은 요소의 크기나 표시 유형에 애니메이션 효과를 주지 않고 부모 컨테이너 내에서 해당 요소의 오프셋에만 애니메이션 효과를 줍니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
            이동 지속 시간에 대한 DependencyProperty.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesToProperty">
            <summary>
            동작 범위에 대한 DependencyProperty입니다. 자세한 내용은 FluidMoveScope를 참조하십시오.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActiveProperty">
            <summary>
            동작의 활성 상태에 대한 DependencyProperty입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
            이동의 수평 구성 요소에 사용할 EasingFunction에 대한 DependencyProperty입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
            이동의 수직 구성 요소에 사용할 EasingFunction에 대한 DependencyProperty입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
            이동 지속 시간입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesTo">
            <summary>
            동작이 이 요소에만 또는 요소의 모든 자식에(요소가 패널인 경우) 적용되는지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActive">
            <summary>
            동작이 현재 활성 상태인지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
            이동의 수평 구성 요소에 사용할 EasingFunction입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
            이동의 수직 구성 요소에 사용할 EasingFunction입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
            호출 시 FrameworkElement를 지정된 VisualState로 전환할 작업입니다.
            </summary>
            <remarks>
            TargetName 속성을 설정하면 이 작업은 대상 요소의 상태를 변경하려고 합니다. 그렇지 않으면 요소 트리를 살펴보고 상태를 정의하는 다른 대상을 찾습니다. ControlTemplate과 UserControl이 두 가지 일반적인 가능성이 있습니다.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            대상이 변경될 때 호출됩니다. TargetName 속성을 설정하지 않으면 이 작업은 사용자 지정 동작을 갖습니다.
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
            <exception cref="T:System.InvalidOperationException">상태를 통해 해당 FrameworkElement를 찾을 수 없습니다.</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
            일부 기준이 충족되고 작업이 호출될 때 이 메서드가 호출됩니다.
            </summary>
            <param name="parameter"></param>
            <exception cref="T:System.InvalidOperationException">대상을 지정된 StateName으로 변경할 수 없습니다.</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
            상태 간 전환에 VisualTransition을 사용할지 여부를 나타냅니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
            VisualState의 이름입니다.  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.HyperlinkAction">
            <summary>
            지정된 하이퍼링크로 이동할 작업입니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.HyperlinkAction.Invoke(System.Object)">
            <summary>
            일부 기준이 충족되고 작업이 호출될 때 이 메서드가 호출됩니다.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.NavigateUri">
            <summary>
            열려는 페이지의 URI입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.TargetWindow">
            <summary>
            NavigateUri가 열려야 할 창 또는 탭의 이름입니다. 
            </summary>
            <remarks>
            여러 가지 값은 특별한 의미를 갖습니다. 즉, &quot;_blank&quot;는 새 브라우저 창에서 로드되고, &quot;_parent&quot;는 부모 프레임에서 로드되려고 하며, &quot;_self&quot;는 현재 페이지 또는 프레임을 대상으로 지정합니다. 
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
            키보드 이벤트로 트리거되는 Trigger입니다.  대상 키 및 수정자가 검색될 때 발생됩니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
            Trigger를 발생시키기 위해 눌러야 하는 키입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
            Trigger를 발생시키기 위해 활성 상태여야 하는 수정자입니다(기본값은 수정자를 누르지 않는 것임).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
            KeyDown 또는 KeyUp 이벤트 수신 대기 여부를 나타냅니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
            요소에서의 마우스 끌기 제스처에 대한 응답으로 연결된 요소의 위치를 변경합니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
            루트 요소의 왼쪽을 기준으로 끌린 요소의 X 위치에 대한 DependencyProperty입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
            루트 요소의 위쪽을 기준으로 끌린 요소의 Y 위치에 대한 DependencyProperty입니다.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
            ConstrainToParentBounds 속성에 대한 DependencyProperty입니다. true이면 끌린 요소는 부모 컨테이너의 경계 이내로 제한됩니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
            연결된 요소의 위치를 지정된 좌표로 업데이트하려는 시도입니다.
            </summary>
            <param name="point">루트 좌표에서 요소의 원하는 위치입니다.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
            상대적 위치 좌표 이동을 연결된 요소에 적용합니다.
            </summary>
            <param name="x">루트 좌표에서 원하는 좌표 이동의 X 구성 요소입니다.</param>
            <param name="y">루트 좌표에서 원하는 좌표 이동의 Y 구성 요소입니다.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
            지정된 좌표 이동을 연결된 요소의 RenderTransform에 적용합니다.
            </summary>
            <param name="x">부모 좌표에서 좌표 이동의 X 구성 요소입니다.</param>
            <param name="y">부모 좌표에서 좌표 이동의 Y 구성 요소입니다.</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
            연결된 요소의 현재 렌더링 위치에 따라 X 및 Y 속성을 업데이트합니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.IsValidConstrainedMove(System.Windows.Point)">
            <summary>
            지정된 커서 위치를 끌기 작업의 일부분으로 계산할지 여부를 결정합니다.
            </summary>
            <param name="currentPosition">커서 위치입니다.</param>
            <returns>
            	제공된 위치가 끌기 작업의 일부분으로 계산되어야 하는 경우 <c>true</c>, 그렇지 않으면 <c>false</c>입니다.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            한 사각형이 다른 사각형에 포함되는지 확인합니다.
            </summary>
            <param name="rect1">포함하는 사각형입니다.</param>
            <param name="rect2">포함되는 사각형입니다.</param>
            <returns> rect1이 rect2를 포함하는 경우 <c>true</c>, 그렇지 않으면 <c>false</c> </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
            벡터로 변형합니다.
            </summary>
            <param name="transform">변형입니다.</param>
            <param name="x">벡터의 X 구성 요소입니다.</param>
            <param name="y">벡터의 Y 구성 요소입니다.</param>
            <returns>벡터로 변형을 통해 변형된 X 및 Y 값을 포함하는 점입니다.</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
            변형 오프셋을 가져옵니다.
            </summary>
            <param name="transform">변형입니다.</param>
            <returns>변형 오프셋.</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
            동작이 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
            <remarks>이 동작을 다시 정의하여 기능을 AssociatedObject에 연결합니다.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
            AssociatedObject에서 동작이 분리될 때 호출되나 실제로 동작이 발생하기 전에 호출됩니다.
            </summary>
            <remarks>이 동작을 다시 정의하여 AssociatedObject에서 기능을 분리합니다.</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
            끌기 제스처가 시작될 때 발생합니다.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
            끌기 제스처 업데이트가 처리될 때 발생합니다.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
            끌기 제스처가 완료될 때 발생합니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
            루트 요소의 왼쪽을 기준으로 끌린 요소의 X 위치를 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
            루트 요소의 위쪽을 기준으로 끌린 요소의 Y 위치를 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
            끌린 요소가 부모 컨테이너의 경계 이내로 제한되는지 여부를 나타내는 값을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
            <value>
            	끌린 요소를 부모 경계로 제한해야 하면 <c>true</c>이고, 그렇지 않으면 <c>false</c>입니다.
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
            루트 좌표에서 연결된 요소의 화면 위치를 가져옵니다.
            </summary>
            <value>루트 좌표에서 연결된 요소의 화면 위치.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
            요소 좌표의 요소 경계를 가져옵니다.
            </summary>
            <value>요소 좌표의 요소 경계.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
            연결된 개체의 부모 요소를 가져옵니다.
            </summary>
            <value>연결된 개체의 부모 요소.</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
            연결된 개체가 있는 장면의 루트 요소를 가져옵니다.
            </summary>
            <value>연결된 개체가 있는 장면의 루트 요소.</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
            완료 시 소리를 재생할 Action입니다.
            </summary>
            <remarks>
            이 Action은 중지하거나 제어할 필요가 없는 짧은 소리 효과와 함께 사용하기 위한 것입니다. 음악 플레이어 또는 게임을 만들려는 경우 요구 사항을 충족하지 못할 수 있습니다.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
            Action이 호출될 때 이 메서드는 동적으로 만들어진 MediaElement를 사용자 지정하는 데 사용합니다.
            </summary>
            <remarks>
            이 메서드는 PlaySoundAction을 확장하려는 Action 작성자에게 유용할 수 있습니다. MediaElement Balance 속성을 제어하려는 경우 PlaySoundAction에서 상속하고 이 메서드를 다시 정의할 수 있습니다.
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
            일부 기준이 충족되고 작업이 호출되어야 할 때 이 메서드가 호출됩니다. 
            </summary>
            <remarks>
            Action을 호출할 때마다 소리가 새로 재생됩니다.  구현이 변경될 수 있더라도, 호출자는 이 호출로 새 MediaElement가 만들어질 것으로 예상해야 합니다. 소리가 끝나거나 미디어가 재생되지 않으면 이 요소는 삭제됩니다.
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
            소리 파일의 위치를 정의하는 URI입니다.  이것은 MediaElement의 원본 속성을 설정하는 데 사용됩니다. 이것은 종속성 속성입니다.
            </summary>
            <remarks>
            소리는 MediaElement에서 지원하는 모든 파일 형식이 될 수 있습니다.  비디오의 경우에는 오디오 부분만 재생합니다.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
            소리 볼륨을 제어합니다.  이것은 MediaElement의 Volume 속성을 설정하는 데 사용됩니다.  이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
            호출 시 트리에서 대상 요소를 제거하는 Action입니다.
            </summary>
            <remarks>
            이 Action은 실패할 수 있습니다. Action으로 공통 부모에서 요소를 제거하는 방법을 이해하지만 사용자 지정 컬렉션에서 또는 시각적 트리의 직접 조작으로 요소를 제거하는 방법은 아닙니다.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
            스토리보드를 대상으로 지정하는 기능을 제공하는 추상 클래스입니다.
            </summary>
            <remarks>
            Action 작성자에게 이 클래스는 스토리보드를 대상으로 지정하는 표준 방법을 제공합니다.  디자인 도구가 이 Action에서 상속할 클래스에 대한 특별한 편집 경험을 제공하도록 선택할 수 있므로 설계자 경험을 향상시킬 수 있습니다. 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            스토리보드 속성이 변경될 때 이 메서드가 호출됩니다.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
            대상 스토리보드입니다.  이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
            호출 시 대상 스토리보드의 상태를 변경할 작업.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
            일부 기준이 충족되고 작업이 호출되어야 할 때 이 메서드가 호출됩니다. 이 메서드는 ControlStoryboardOption으로 정의된 방법으로 대상 스토리보드를 변경하려고 합니다.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
            스토리보드를 대상으로 지정하는 기능을 제공하는 추상 클래스입니다.
            </summary>
            <remarks>
            Trigger 작성자에게 이 클래스는 스토리보드를 대상으로 지정하는 표준 방법을 제공합니다.  디자인 도구가 이 Trigger에서 상속할 클래스에 대한 특별한 편집 경험을 제공하도록 선택할 수 있므로 설계자 경험을 향상시킬 수 있습니다. 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            스토리보드 속성이 변경될 때 이 메서드가 호출됩니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
            대상 스토리보드입니다.  이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
            스토리보드를 완료하기 위해 수신 대기하는 트리거.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
            원본에서 발생하는 지정된 이벤트로 트리거되고 해당 이벤트 발생 시 잠시 후 발생되는 Trigger입니다.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
            <see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
            눈금 간 대기 시간(밀리초)을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
            Trigger가 완료되기 전에 발생될 총 눈금 수를 가져오거나 설정합니다.  이것은 종속성 속성입니다.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.ExceptionStringTable">
            <summary>
              지역화된 문자열 등을 검색하기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
              이 클래스에 사용된 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스를 검색할 경우 현재 스레드의 CurrentUICulture 속성을 다시 정의합니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
              [&quot;{1}&quot; 형식에서 &quot;{0}&quot; 속성을 찾을 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
              [&quot;{0}&quot; 형식의 값을 &quot;{2}&quot; 형식의 &quot;{1}&quot; 속성에 할당할 수 없습니다. &quot;{1}&quot; 속성에는 &quot;{2}&quot; 형식의 값만 할당할 수 있습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
              [&quot;{1}&quot; 형식에 의해 정의된 &quot;{0}&quot; 속성이 Set 메서드를 노출하지 않으므로 해당 속성을 수정할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionStateChangeFailed">
            <summary>
              [대상 {0}의 상태를 {1}(으)로 변경할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
              [대상 {0}이(가) VisualStateGroups를 정의하지 않았습니다.]와 유사한 지역화된 문자열을 찾습니다. .
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
              [RemoveElementAction의 대상이 지원되지 않습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\ko\System.Windows.Interactivity.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Interactivity</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
            공유된 AssociatedObject가 있는 IAttachedObject의 컬렉션을 나타내고 해당 AssociatedObject가 변경될 때 해당 컬렉션의 콘텐츠에 변경 알림을 제공합니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
            다른 개체에 연결될 수 있는 개체의 인터페이스입니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)">
            <summary>
            지정된 개체에 연결합니다.
            </summary>
            <param name="dependencyObject">연결할 개체.</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
            연결된 개체에서 이 인스턴스를 분리합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
            연결된 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
            <remarks>인스턴스가 연결된 개체를 나타냅니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.AttachableCollection`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <remarks>이것은 이 어셈블리 외부에서 상속되어선 안 되므로 내부적으로 수행합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
            컬렉션이 AssociatedObject에 연결된 후 즉시 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
            AssociatedObject에서 컬렉션이 분리될 때 호출되나 실제로 컬렉션이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemAdded(`0)">
            <summary>
            새 항목이 컬렉션에 추가될 때 호출됩니다.
            </summary>
            <param name="item">새 항목.</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemRemoved(`0)">
            <summary>
            컬렉션에서 항목이 제거될 때 호출됩니다.
            </summary>
            <param name="item">제거된 항목.</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.VerifyAdd(`0)">
            <exception cref="T:System.InvalidOperationException">컬렉션에 인스턴스를 두 번 이상 추가할 수 없습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(System.Windows.DependencyObject)">
            <summary>
            지정된 개체에 연결합니다.
            </summary>
            <param name="dependencyObject">연결할 개체.</param>
            <exception cref="T:System.InvalidOperationException">IAttachedObject가 다른 개체에 이미 연결되었습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
            연결된 개체에서 이 인스턴스를 분리합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
            컬렉션을 호스트하는 개체입니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            연결된 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior`1">
            <summary>
            상태 정보와 0개 이상의 ICommands를 연결 가능한 개체에 캡슐화합니다.
            </summary>
            <typeparam name="T"><see cref="T:System.Windows.Interactivity.Behavior`1"/>를 연결할 수 있는 형식.</typeparam>
            <remarks>
            	Behavior는 연결 가능한 상태 및 명령을 개체에 제공하기 위한 기본 클래스입니다. Behavior를 연결할 수 있는 형식은 일반 매개 변수로 제어할 수 있습니다. OnAttached() 및 OnDetaching() 메서드를 다시 정의하여 AssociatedObject에서 필수 처리기를 연결 및 분리합니다.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
            상태 정보와 0개 이상의 ICommands를 연결 가능한 개체에 캡슐화합니다.
            </summary>
            <remarks>이것은 인프라 클래스입니다. Behavior작성자는 이 클래스 대신 Behavior&lt;T&gt;에서 파생되어야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
            동작이 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
            <remarks>이 동작을 다시 정의하여 기능을 AssociatedObject에 연결합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
            AssociatedObject에서 동작이 분리될 때 호출되나 실제로 동작이 발생하기 전에 호출됩니다.
            </summary>
            <remarks>이 동작을 다시 정의하여 AssociatedObject에서 기능을 분리합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)">
            <summary>
            지정된 개체에 연결합니다.
            </summary>
            <param name="dependencyObject">연결할 개체.</param>
            <exception cref="T:System.InvalidOperationException">Behavior를 다른 요소에서 이미 호스트합니다.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject가 Behavior 형식 제약 조건을 만족하지 않습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
            연결된 개체에서 이 인스턴스를 분리합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
            이 동작을 연결할 수 있는 형식입니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
            이 동작이 연결되는 개체를 가져옵니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            연결된 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.Behavior`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior`1.AssociatedObject">
            <summary>
            이 <see cref="T:System.Windows.Interactivity.Behavior`1"/>가 연결되는 개체를 가져옵니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
            공유된 AssociatedObject가 있는 동작의 컬렉션을 나타내고 해당 AssociatedObject가 변경될 때 해당 컬렉션의 콘텐츠에 변경 알림을 제공합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <remarks>이것은 이 어셈블리 외부에서 상속되어선 안 되므로 내부적으로 수행합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
            컬렉션이 AssociatedObject에 연결된 후 즉시 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
            AssociatedObject에서 컬렉션이 분리될 때 호출되나 실제로 컬렉션이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemAdded(System.Windows.Interactivity.Behavior)">
            <summary>
            새 항목이 컬렉션에 추가될 때 호출됩니다.
            </summary>
            <param name="item">새 항목.</param>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemRemoved(System.Windows.Interactivity.Behavior)">
            <summary>
            컬렉션에서 항목이 제거될 때 호출됩니다.
            </summary>
            <param name="item">제거된 항목.</param>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditor">
            <summary>
            다시 사용 가능한 속성 값 편집기의 가능한 값을 열거합니다.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Element">
            <summary>
            지원되는 경우 요소 선택기를 사용하여 디자인 시 이 속성을 편집합니다.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Storyboard">
            <summary>
            지원되는 경우 스토리보드 선택기를 사용하여 디자인 시 이 속성을 편집합니다.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.StateName">
            <summary>
            지원되는 경우 상태 선택기를 사용하여 디자인 시 이 속성을 편집합니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute">
            <summary>
            지정된 편집기 형식을 CustomPropertyValueEditor가 적용되는 속성과 연결합니다.
            </summary>
            <remarks>이 특성을 사용하여 요소(이름별), 스토리보드 또는 상태(이름별)를 표시하는 속성에 대한 향상된 디자인 타임 편집 기능을 가져옵니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.#ctor(System.Windows.Interactivity.CustomPropertyValueEditor)">
            <summary>
            <see cref="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="customPropertyValueEditor">사용자 지정 속성 값 편집기.</param>
        </member>
        <member name="P:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.CustomPropertyValueEditor">
            <summary>
            사용자 지정 속성 값 편집기를 가져오거나 설정합니다.
            </summary>
            <value>사용자 지정 속성 값 편집기.</value>
        </member>
        <member name="T:System.Windows.Interactivity.DefaultTriggerAttribute">
            <summary>
            지정된 작업 또는 명령에 인스턴스화할 <see cref="T:System.Windows.Interactivity.TriggerBase"/>에 대한 디자인 도구 정보를 제공합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object)">
            <summary>
            <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="targetType">이 특성이 적용되는 형식.</param>
            <param name="triggerType">인스턴스화할 <see cref="T:System.Windows.Interactivity.TriggerBase"/>의 형식.</param>
            <param name="parameters">지정된 <see cref="T:System.Windows.Interactivity.TriggerBase"/>에 대한 단일 인수.</param>
            <exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/>는 TriggerBase에서 파생되지 않습니다.</exception>
            <remarks>이 생성자는 지정된 <see cref="T:System.Windows.Interactivity.TriggerBase"/>에 단일 인수가 있을 경우 유용합니다. 결과 코드는 CLS 규격이 됩니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
            <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="targetType">이 특성이 적용되는 형식.</param>
            <param name="triggerType">인스턴스화할 <see cref="T:System.Windows.Interactivity.TriggerBase"/>의 형식.</param>
            <param name="parameters">지정된 <see cref="T:System.Windows.Interactivity.TriggerBase"/>에 대한 생성자 인수.</param>
            <exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/>는 TriggerBase에서 파생되지 않습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.Instantiate">
            <summary>
            이 인스턴스를 인스턴스화합니다.
            </summary>
            <returns>DefaultTriggerAttribute로 지정된 <see cref="T:System.Windows.Interactivity.TriggerBase"/>.</returns>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TargetType">
            <summary>
            이 DefaultTriggerAttribute가 적용되는 형식을 가져옵니다.
            </summary>
            <value>이 DefaultTriggerAttribute가 적용되는 형식.</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TriggerType">
            <summary>
            인스턴스화할 <see cref="T:System.Windows.Interactivity.TriggerBase"/>의 형식을 가져옵니다.
            </summary>
            <value>인스턴스화할 <see cref="T:System.Windows.Interactivity.TriggerBase"/>의 형식.</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.Parameters">
            <summary>
            <see cref="T:System.Windows.Interactivity.TriggerBase"/> 생성자로 전달할 매개 변수를 가져옵니다.
            </summary>
            <value><see cref="T:System.Windows.Interactivity.TriggerBase"/> 생성자로 전달할 매개 변수.</value>
        </member>
        <member name="T:System.Windows.Interactivity.EventTrigger">
            <summary>
            원본에서 지정된 이벤트를 수신 대기하고 해당 이벤트가 발생될 때 발생하는 트리거입니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase`1">
            <summary>
            AssociatedObject가 아닌 다른 요소를 수신 대기할 수 있는 트리거를 나타냅니다.
            </summary>
            <typeparam name="T">이 트리거를 연결할 수 있는 형식.</typeparam>
            <remarks>
            	EventTriggerBase는 TriggerBase를 확장하여 연결된 요소가 아닌 다른 요소의 정보를 추가합니다. 이를 통해 사용자는 Trigger/Action 쌍을 한 요소에 연결하고 다른 곳에서 다른 요소가 변경될 때 그에 대한 응답으로 Action을 호출할 수 있습니다. 원본 요소의 처리기를 연결 또는 분리하려면 OnSourceChanged를 다시 정의하고 연결된 요소에 대해서는 OnAttached/OnDetaching을 다시 정의합니다. Source 요소의 형식은 일반 형식 매개 변수로 제한할 수 있습니다. AssociatedObject의 형식을 제어해야 하는 경우에는 파생된 형식에 TypeConstraintAttribute를 설정합니다.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase">
            <summary>
            AssociatedObject가 아닌 다른 요소를 수신 대기할 수 있는 트리거를 나타냅니다.
            </summary>
            <remarks>이것은 인프라 클래스입니다. Trigger 작성자는 이 클래스 대신 EventTriggerBase&lt;T&gt;에서 파생되어야 합니다.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase">
            <summary>
            조건에 따라 Action을 호출할 수 있는 개체를 나타냅니다.
            </summary>
            <remarks>이것은 인프라 클래스입니다. Trigger 작성자는 이 클래스 대신 Trigger&lt;T&gt;에서 파생되어야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)">
            <summary>
            이 트리거와 연결된 모든 Action을 호출합니다.
            </summary>
            <remarks>파생된 클래스는 트리거를 발생시키려면 이 작업을 호출해야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnAttached">
            <summary>
            트리거가 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnDetaching">
            <summary>
            AssociatedObject에서 트리거가 분리될 때 호출되나 실제로 트리거가 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)">
            <summary>
            지정된 개체에 연결합니다.
            </summary>
            <param name="dependencyObject">연결할 개체.</param>
            <exception cref="T:System.InvalidOperationException">동일한 Trigger를 한 번에 두 개 이상의 개체에서 호스트할 수 없습니다.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject가 Trigger 형식 제약 조건을 만족하지 않습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Detach">
            <summary>
            연결된 개체에서 이 인스턴스를 분리합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObject">
            <summary>
            트리거가 연결되는 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체의 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.Actions">
            <summary>
            이 트리거와 연결된 작업을 가져옵니다.
            </summary>
            <value>이 트리거와 연결된 작업.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            연결된 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.GetEventName">
            <summary>
            이 EventTriggerBase가 수신 대기 중인 이벤트의 이름을 지정합니다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)">
            <summary>
            이 EventTriggerBase와 연결된 이벤트가 발생될 때 호출됩니다. 기본적으로 이것은 트리거의 모든 작업을 호출합니다.
            </summary>
            <param name="eventArgs">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs"/> 인스턴스.</param>
            <remarks>이 인스턴스를 다시 정의하여 이 트리거와 연결된 작업이 호출될 때 더 세부적으로 제어합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnSourceChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            원본이 변경될 때 호출됩니다.
            </summary>
            <param name="oldSource">이전 원본.</param>
            <param name="newSource">새 원본.</param>
            <remarks>변경 중인 원본 개체에 기능을 연결하거나 반대로 기능을 분리하려면 파생된 클래스에서 이 기능을 다시 정의해야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnAttached">
            <summary>
            트리거가 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnDetaching">
            <summary>
            AssociatedObject에서 트리거가 분리될 때 호출되나 실제로 트리거가 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.RegisterEvent(System.Object,System.String)">
            <exception cref="T:System.ArgumentException">대상에서 eventName을 찾을 수 없습니다.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체의 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
            <remarks>파생된 형식에 TypeConstraintAttribute를 정의하여 연결할 수 있는 형식을 제한합니다.</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint">
            <summary>
            원본 형식 제약 조건을 가져옵니다.
            </summary>
            <value>원본 형식 제약 조건.</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceName">
            <summary>
            이 EventTriggerBase가 원본으로 수신 대기하는 요소의 이름을 가져오거나 설정합니다. 이름을 설정하지 않았거나 확인할 수 없으면 AssociatedObject가 사용됩니다.  이것은 종속성 속성입니다.
            </summary>
            <value>원본 요소의 이름.</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.Source">
            <summary>
            확인된 원본을 가져옵니다. <c ref="SourceName"/>를 설정하지 않거나 확인할 수 없으면 AssociatedObject로 기본 설정됩니다.
            </summary>
            <value>확인된 원본 개체.</value>
            <remarks>일반적으로 이 속성은 파생된 클래스에서 AssociatedObject 대신 사용되어야 합니다.</remarks>
            <exception cref="T:System.InvalidOperationException"><c cref="P:System.Windows.Interactivity.EventTriggerBase.Source"/>가 나타내는 요소가 형식 제약 조건을 만족하지 않습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.EventTriggerBase`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.OnSourceChanged(`0,`0)">
            <summary>
            원본 속성이 변경될 때 호출됩니다.
            </summary>
            <remarks>이 속성을 다시 정의하여 AssociatedObject가 아닌 지정된 Source에 기능을 연결하거나 반대로 기능을 분리합니다.</remarks>
            <param name="oldSource">이전 원본.</param>
            <param name="newSource">새 원본.</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase`1.Source">
            <summary>
            확인된 원본을 가져옵니다. <c ref="SourceName"/>를 설정하지 않거나 확인할 수 없으면 AssociatedObject로 기본 설정됩니다.
            </summary>
            <value>확인된 원본 개체.</value>
            <remarks>일반적으로 이 속성은 파생된 클래스에서 AssociatedObject 대신 사용되어야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.EventTrigger"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor(System.String)">
            <summary>
            <see cref="T:System.Windows.Interactivity.EventTrigger"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="eventName">이벤트의 이름.</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTrigger.EventName">
            <summary>
            수신 대기할 이벤트의 이름을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
            <value>이벤트의 이름.</value>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
            Trigger 및 Behavior 연결 속성을 소유하는 정적 클래스입니다. AssociatedObject 변경 알림의 전파를 처리합니다.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.TriggersProperty">
            <summary>
            이 속성은 공용 Trigger 연결 속성의 내부 보조 저장소로 사용됩니다.
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
            이 속성은 공용 Behavior 연결 속성의 내부 보조 저장소로 사용됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)">
            <summary>
            지정된 개체와 연결된 트리거를 포함하는 TriggerCollection을 가져옵니다.
            </summary>
            <param name="obj">트리거를 검색할 개체.</param>
            <returns>지정된 개체와 연결된 트리거를 포함하는 TriggerCollection.</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)">
            <summary>
            지정된 개체와 연결된 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>를 가져옵니다.
            </summary>
            <param name="obj"><see cref="T:System.Windows.Interactivity.BehaviorCollection"/>를 검색할 개체.</param>
            <returns>지정된 개체와 연결된 동작을 포함하는 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>.</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnBehaviorsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exception cref="T:System.InvalidOperationException">동일한 BehaviorCollection을 한 번에 두 개 이상의 개체에서 호스트할 수 없습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnTriggersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <exception cref="T:System.InvalidOperationException">동일한 TriggerCollection을 한 번에 두 개 이상의 개체에서 호스트할 수 없습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
            Silverlight에는 FrameworkElement.IsLoaded와 같은 속성이 없기 때문에 이 속성을 대신하는 도우미 기능입니다.
            </summary>
            <param name="element">관심 요소.</param>
            <returns>요소가 로드되었으면 true이고, 그렇지 않으면 false입니다.</returns>
        </member>
        <member name="T:System.Windows.Interactivity.InvokeCommandAction">
            <summary>
            호출 시 호스트 Behavior에 지정된 Action을 실행합니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction`1">
            <summary>
            기능 단위를 캡슐화하는 연결 가능 개체를 나타냅니다.
            </summary>
            <typeparam name="T">이 작업을 연결할 수 있는 형식.</typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction">
            <summary>
            기능 단위를 캡슐화하는 연결 가능 개체를 나타냅니다.
            </summary>
            <remarks>이것은 인프라 클래스입니다. Action 작성자는 이 클래스 대신 TriggerAction&lt;T&gt;에서 파생되어야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.CallInvoke(System.Object)">
            <summary>
            작업 호출을 시도합니다.
            </summary>
            <param name="parameter">작업에 대한 매개 변수. Action에 매개 변수가 필요하지 않은 경우 매개 변수를 Null 참조로 설정할 수 있습니다.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Invoke(System.Object)">
            <summary>
            작업을 호출합니다.
            </summary>
            <param name="parameter">작업에 대한 매개 변수. Action에 매개 변수가 필요하지 않은 경우 매개 변수를 Null 참조로 설정할 수 있습니다.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnAttached">
            <summary>
            작업이 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnDetaching">
            <summary>
            AssociatedObject에서 작업이 분리될 때 호출되나 실제로 작업이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Attach(System.Windows.DependencyObject)">
            <summary>
            지정된 개체에 연결합니다.
            </summary>
            <param name="dependencyObject">연결할 개체.</param>
            <exception cref="T:System.InvalidOperationException">동일한 TriggerAction을 한 번에 두 개 이상의 개체에서 호스트할 수 없습니다.</exception>
            <exception cref="T:System.InvalidOperationException">dependencyObject가 TriggerAction 형식 제약 조건을 만족하지 않습니다.</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Detach">
            <summary>
            연결된 개체에서 이 인스턴스를 분리합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsEnabled">
            <summary>
            호출 시 이 작업을 실행할지 여부를 나타내는 값을 가져오거나 설정합니다. 이것은 종속성 속성입니다.
            </summary>
            <value>
            	호출 시 이 작업이 실행될 경우 <c>true</c>이고, 그렇지 않으면 <c>false</c>입니다.
            </value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObject">
            <summary>
            이 Action이 연결되는 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsHosted">
            <summary>
            이 인스턴스의 연결 여부를 나타내는 값을 가져오거나 설정합니다.
            </summary>
            <value>이 인스턴스가 연결되었으면 <c>true</c>이고, 그렇지 않으면 <c>false</c>입니다.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
            연결된 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObject">
            <summary>
            이 <see cref="T:System.Windows.Interactivity.TriggerAction`1"/>가 연결되는 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.Invoke(System.Object)">
            <summary>
            작업을 호출합니다.
            </summary>
            <param name="parameter">작업에 대한 매개 변수. Action에 매개 변수가 필요하지 않은 경우 매개 변수를 Null 참조로 설정할 수 있습니다.</param>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.OnAttached">
            <summary>
            컬렉션이 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
            <exception cref="T:System.InvalidOperationException">InvokeActionCommand를 Behavior에서 호스트해야 합니다.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandName">
            <summary>
            이 작업이 호출해야 하는 명령의 이름을 가져오거나 설정합니다.
            </summary>
            <value>이 작업이 호출해야 하는 명령의 이름.</value>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
            명령 매개 변수를 가져오거나 설정합니다.
            </summary>
            <value>명령 매개 변수.</value>
            <remarks>이것은 ICommand.CanExecute 및 ICommand.Execute로 전달된 값입니다.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolvedEventArgs">
            <summary>
            이름 변경을 확인할 때 영향을 받은 개체에 대한 데이터를 제공합니다.
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolver">
            <summary>
            TargetName을 호스트 요소에 의해 제공된 컨텍스트에 따라 대상 요소로 확인하는 논리를 처리하는 도우미 클래스입니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.NameResolver.UpdateObjectFromName(System.Windows.DependencyObject)">
            <summary>
            namescope 참조 요소의 컨텍스트 내 이름에서 확인된 개체를 업데이트하려고 시도합니다.
            </summary>
            <param name="oldObject">이전의 확인된 개체입니다.</param>
            <remarks>
            기존 대상을 다시 설정하고 현재 호스트 컨텍스트에서 현재 TargetName을 확인하려고 합니다. 호스트의 컨텍스트에서 요소를 확인할 수 없으면 확인될 때까지 가시적 트리를 계속 탐색해 들어갑니다. 루트에 도달할 때까지 확인하지 못했으면 대상을 Null로 설정하고 디버그 출력에 경고 메시지를 작성합니다.
            </remarks>
        </member>
        <member name="E:System.Windows.Interactivity.NameResolver.ResolvedElementChanged">
            <summary>
            확인된 요소가 변경되었을 때 발생합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Name">
            <summary>
            확인하려는 요소의 이름을 가져오거나 설정합니다.
            </summary>
            <value>확인하려는 이름.</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Object">
            <summary>
            확인된 개체. TargetName이 Null 또는 비어 있거나 확인이 시도되지 않은 경우 참조 요소를 반환합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.NameScopeReferenceElement">
            <summary>
            이름 확인을 수행할 참조 요소를 가져오거나 설정합니다.
            </summary>
            <value>참조 요소.</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.PendingReferenceElementLoad">
            <summary>
            참조 요소 로드가 보류 중인지 여부를 나타내는 값을 가져오거나 설정합니다.
            </summary>
            <value>
            	[참조 요소 로드를 보류 중]인 경우 <c>true</c>이고, 그렇지 않으면 <c>false</c>입니다.
            </value>
            <remarks>
            호스트가 로드되지 않은 경우 이름은 확인되지 않습니다. 이 경우에는 확인을 지연하고 이 속성으로 해당 사실을 추적합니다.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction`1">
            <summary>
            AssociatedObject가 아닌 다른 개체에 영향을 주기 위해 대상으로 지정할 수 있는 작업을 나타냅니다.
            </summary>
            <typeparam name="T">대상의 형식 제약 조건.</typeparam>
            <remarks>
            	TargetedTriggerAction은 TriggerAction을 확장하여 연결된 요소가 아닌 다른 요소의 정보를 추가합니다. 따라서 사용자는 Trigger 발생에 대한 응답으로 연결된 요소가 아닌 다른 요소에 Action을 호출할 수 있습니다. OnTargetChanged를 다시 정의하여 대상 요소의 처리기를 연결 또는 분리하고 연결된 요소에 대해서는 OnAttached/OnDetaching을 다시 정의합니다. 대상 요소의 형식은 일반 형식 매개 변수로 제한할 수 있습니다. AssociatedObject의 형식을 제어해야 하는 경우에는 파생된 형식에 TypeConstraintAttribute를 설정합니다.
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction">
            <summary>
            AssociatedObject가 아닌 다른 개체에 영향을 주기 위해 대상으로 지정할 수 있는 작업을 나타냅니다.
            </summary>
            <remarks>이것은 인프라 클래스입니다. Action 작성자는 이 클래스 대신 TargetedTriggerAction&lt;T&gt;에서 파생되어야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnTargetChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            대상이 변경될 때 호출됩니다.
            </summary>
            <param name="oldTarget">이전 대상.</param>
            <param name="newTarget">새 대상.</param>
            <remarks>변경 중인 원본 개체에 기능을 연결하거나 반대로 기능을 분리하려면 파생된 클래스에서 이 기능을 다시 정의해야 합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnAttached">
            <summary>
            작업이 AssociatedObject에 연결된 후 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnDetaching">
            <summary>
            AssociatedObject에서 작업이 분리될 때 호출되나 실제로 작업이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetName">
            <summary>
            대상의 이름을 가져오거나 설정합니다. TargetName을 설정하지 않았거나 확인할 수 없으면 대상이 AssociatedObject로 기본 설정됩니다. 이것은 종속성 속성입니다.
            </summary>
            <value>대상의 이름.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.Target">
            <summary>
            대상 개체를 가져옵니다. TargetName을 설정하지 않거나 확인할 수 없으면 AssociatedObject로 기본 설정됩니다.
            </summary>
            <value>대상.</value>
            <remarks>일반적으로 이 속성은 파생된 클래스에서 AssociatedObject 대신 사용되어야 합니다.</remarks>
            <exception cref="T:System.InvalidOperationException">대상 요소가 형식 제약 조건을 만족하지 않습니다.</exception>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
            <remarks>파생된 형식에 TypeConstraintAttribute를 정의하여 연결할 수 있는 형식을 제한합니다.</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetTypeConstraint">
            <summary>
            대상 형식 제약 조건을 가져옵니다.
            </summary>
            <value>대상 형식 제약 조건.</value>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.TargetedTriggerAction`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.OnTargetChanged(`0,`0)">
            <summary>
            대상 속성이 변경될 때 호출됩니다.
            </summary>
            <remarks>이 속성을 다시 정의하여 AssociatedObject가 아닌 지정된 대상에 기능을 연결하거나 반대로 기능을 분리합니다.</remarks>
            <param name="oldTarget">이전 대상.</param>
            <param name="newTarget">새 대상.</param>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction`1.Target">
            <summary>
            대상 개체를 가져옵니다. TargetName을 설정하지 않거나 확인할 수 없으면 AssociatedObject로 기본 설정됩니다.
            </summary>
            <value>대상.</value>
            <remarks>일반적으로 이 속성은 파생된 클래스에서 AssociatedObject 대신 사용되어야 합니다.</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerActionCollection">
            <summary>
            공유된 AssociatedObject가 있는 작업의 컬렉션을 나타내고 해당 AssociatedObject가 변경될 때 해당 컬렉션의 콘텐츠에 변경 알림을 제공합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.TriggerActionCollection"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <remarks>이것은 이 어셈블리 외부에서 상속되어선 안 되므로 내부적으로 수행합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnAttached">
            <summary>
            컬렉션이 AssociatedObject에 연결된 후 즉시 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnDetaching">
            <summary>
            AssociatedObject에서 컬렉션이 분리될 때 호출되나 실제로 컬렉션이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemAdded(System.Windows.Interactivity.TriggerAction)">
            <summary>
            새 항목이 컬렉션에 추가될 때 호출됩니다.
            </summary>
            <param name="item">새 항목.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemRemoved(System.Windows.Interactivity.TriggerAction)">
            <summary>
            컬렉션에서 항목이 제거될 때 호출됩니다.
            </summary>
            <param name="item">제거된 항목.</param>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase`1">
            <summary>
            조건에 따라 Action을 호출할 수 있는 개체를 나타냅니다.
            </summary>
            <typeparam name="T">이 트리거를 연결할 수 있는 형식.</typeparam>
            <remarks>
            	TriggerBase는 Action을 제어하기 위한 기본 클래스입니다. OnAttached() 및 OnDetaching()을 다시 정의하여 AssociatedObject에서 처리기를 연결 및 분리합니다. 일반 매개 변수를 지정하여 파생된 TriggerBase를 연결할 수 있는 형식을 제한할 수 있습니다. InvokeActions()를 호출하여 이 TriggerBase와 연결된 모든 작업을 발생시킵니다.
            </remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase`1.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.TriggerBase`1"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObject">
            <summary>
            트리거가 연결되는 개체를 가져옵니다.
            </summary>
            <value>연결된 개체.</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObjectTypeConstraint">
            <summary>
            연결된 개체의 형식 제약 조건을 가져옵니다.
            </summary>
            <value>연결된 개체 형식 제약 조건.</value>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerCollection">
            <summary>
             공유된 AssociatedObject가 있는 트리거의 컬렉션을 나타내고 해당 AssociatedObject가 변경될 때 해당 컬렉션의 콘텐츠에 변경 알림을 제공합니다.
             </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.#ctor">
            <summary>
            <see cref="T:System.Windows.Interactivity.TriggerCollection"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <remarks>이것은 이 어셈블리 외부에서 상속되어선 안 되므로 내부적으로 수행합니다.</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnAttached">
            <summary>
            컬렉션이 AssociatedObject에 연결된 후 즉시 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnDetaching">
            <summary>
            AssociatedObject에서 컬렉션이 분리될 때 호출되나 실제로 컬렉션이 발생하기 전에 호출됩니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemAdded(System.Windows.Interactivity.TriggerBase)">
            <summary>
            새 항목이 컬렉션에 추가될 때 호출됩니다.
            </summary>
            <param name="item">새 항목.</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemRemoved(System.Windows.Interactivity.TriggerBase)">
            <summary>
            컬렉션에서 항목이 제거될 때 호출됩니다.
            </summary>
            <param name="item">제거된 항목.</param>
        </member>
        <member name="T:System.Windows.Interactivity.TypeConstraintAttribute">
            <summary>
            TargetedTriggerAction 및 EventTriggerBase의 AssociatedObject에 형식 제약 조건을 지정합니다.
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TypeConstraintAttribute.#ctor(System.Type)">
            <summary>
            <see cref="T:System.Windows.Interactivity.TypeConstraintAttribute"/> 클래스의 새 인스턴스를 초기화합니다.
            </summary>
            <param name="constraint">제약 조건 형식.</param>
        </member>
        <member name="P:System.Windows.Interactivity.TypeConstraintAttribute.Constraint">
            <summary>
            제약 조건 형식을 가져옵니다.
            </summary>
            <value>제약 조건 형식.</value>
        </member>
        <member name="T:System.Windows.Interactivity.ExceptionStringTable">
            <summary>
              지역화된 문자열 등을 검색하기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
              이 클래스에 사용된 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스를 검색할 경우 현재 스레드의 CurrentUICulture 속성을 다시 정의합니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorCollectionMultipleTimesExceptionMessage">
            <summary>
              [여러 개체에 동일한 BehaviorCollection을 설정할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorMultipleTimesExceptionMessage">
            <summary>
              [한 번에 둘 이상의 개체에 동작 인스턴스를 연결할 수 없습니다]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerActionMultipleTimesExceptionMessage">
            <summary>
              [TriggerAction 인스턴스를 여러 TriggerCollections에서 동시에 호스팅할 수 없습니다. 다른 TriggerCollection에 추가하기 전에 한 TriggerCollection에서 TriggerAction 인스턴스를 제거하십시오.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerCollectionMultipleTimesExceptionMessage">
            <summary>
              [여러 개체에 동일한 TriggerCollection을 설정할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerMultipleTimesExceptionMessage">
            <summary>
              [한 번에 둘 이상의 개체에 트리거 인스턴스를 연결할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CommandDoesNotExistOnBehaviorWarningMessage">
            <summary>
              [&quot;{0}&quot; 명령이 없거나 {1}에 공개적으로 노출되어 있지 않습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage">
            <summary>
              [&quot;{0}&quot;은(는) TriggerType 매개 변수에 유효한 형식이 아닙니다. &quot;{0}&quot;이(가) TriggerBase에서 파생되었는지 확인하십시오.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DuplicateItemInCollectionExceptionMessage">
            <summary>
              [동일한 &quot;{0}&quot; 인스턴스를 &quot;{1}&quot;에 두 번 이상 추가할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.EventTriggerCannotFindEventNameExceptionMessage">
            <summary>
              [&quot;{1}&quot; 형식에서 &quot;{0}&quot; 이벤트를 찾을 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.InvokeActionCommandMustBeHostedOnBehaviorExceptionMessage">
            <summary>
              [InvokeCommandAction을 Behavior에 연결해야 합니다. 이 작업을 수행하려면 Behavior 개체의 Triggers 컬렉션에서 트리거의 Actions 컬렉션에 InvokeCommandAction을 추가하면 됩니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.RetargetedTypeConstraintViolatedExceptionMessage">
            <summary>
              [&quot;{0}&quot; 형식의 개체에는 &quot;{1}&quot; 형식의 {3} 속성이 있을 수 없습니다. &quot;{0}&quot; 형식의 인스턴스에는 &quot;{2}&quot; 형식의 {3} 속성만 있을 수 있습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.TypeConstraintViolatedExceptionMessage">
            <summary>
              [&quot;{0}&quot; 형식을 &quot;{1}&quot; 형식에 연결할 수 없습니다. &quot;{0}&quot; 형식의 인스턴스는 &quot;{2}&quot; 형식의 개체에만 연결할 수 있습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.UnableToResolveTargetNameWarningMessage">
            <summary>
              [TargetName &quot;{0}&quot;을(를) 확인할 수 없습니다.]와 유사한 지역화된 문자열을 찾습니다.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hant\Microsoft.Expression.Drawing.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Drawing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Controls.Callout">
            <summary>
            Renders a callout shape supporting several shapes combined with a callout arrow.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeContentShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.ContentControl"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
             
             A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
             It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            
             This class also supports showing content together with the shape.
             </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceParameters">
            <summary>
            Provides an interface to discribe the parameters of a Shape.
            </summary>
            <remarks>
            This interface is the data for communication between Shape and GeometrySource.
            Typically a concrete implementation of IShape will implements this interface and pass it into
            GeometrySource.UpdateGeometry(), who will consume the shape as readonly data provider.
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Media.IShape">
            <summary>
            Provides the necessary interface to define a Shape.
            Both primitive and composite shapes need to match this interface, although they might derive from different type of FrameworkElement.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.IShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Fill">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null. See Remarks.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at run time depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Media.IShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeContentShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeContentShape.OnContentChanged(System.Object,System.Object)">
            <summary>
            Transforms a string content into <see cref="T:TextBlock"/> with center alignment and mulitple line support.
            </summary>
            <remarks>
            Use template binding to <see cref="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent"/> instead of <see cref="P:Content"/> to enable this method.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent">
            <summary>
            Gets or sets the internal content that converts string into center aligned multiple line textblock.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeContentShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.AnchorPoint">
            <summary>
            Gets or sets the position of the callout relative to the top and left corner.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.Callout.CalloutStyle">
            <summary>
            Gets or sets the callout style.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.CompositeShape">
            <summary>
            Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.Control"/> and implements <see cref="T:Microsoft.Expression.Media.IShape"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.CompositeShape"/> implements <see cref="T:Microsoft.Expression.Media.IShape"/> interface,
            and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape"/>, but the geometry can be rendered outside of layout boundary.
            
            A typical implementation will have a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path"/>.
            It should also extend the <see cref="P:GeometrySource"/> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.CompositeShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush"/> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush"/> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.CompositeShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.CompositeShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LineArrow">
            <summary>
            Renders a bended line segment with optional arrowhead on both end.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.LineArrow.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            A default <see cref="T:LineArrow"/> can render at anysize.
            The <see cref="P:RenderedGeometry"/> will stretch to layout boundary and render to outside if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.BendAmount">
            <summary>
            Gets or sets the amount of bend for the arrow.
            </summary>
            <value>The bend amount between 0 to 1.</value>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the start of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.EndArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the end of the line.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.StartCorner">
            <summary>
            Gets or sets from which corner to start drawing the arrow.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LineArrow.ArrowSize">
            <summary>
            Gets or sets the length of the arrow in pixels.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper">
            <summary>
            Helper class to work with PathGeometry
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string in the path mini-langauge into a PathGeometry.
            </summary>
            <param name="abbreviatedGeometry">A string in the path mini-langauge.</param>
            <remarks>
            Algorithm is modified from WPF: MS.Internal.Parsers.ParseStringToStreamGeometryContext.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Convert the given geometry into a single PathGeometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathGeometryHelper.SyncPolylineGeometry(System.Windows.Media.Geometry@,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Update the given geometry as PathGeometry with polyline matching given point list.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathGeometryHelper.AbbreviatedGeometryParser">
            <summary>
            Parses abbreviated geometry sytax.
            </summary>
            <remarks>
            The algorithm is modified from WPF: MS.Internal.AbbreviatedGeometryParser
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentHelper">
            <summary>
            Helper class to Convert ArcSegment to BezierSegment(s)
            </summary>
            <summary>
            Helper class to work with PathSegment and all variations.
            </summary>
            <summary>
            Strategy classes to handle different types of PathSegment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierSegments(System.Windows.Media.ArcSegment,System.Windows.Point)">
            <summary>
            Convert an Arc segment into Bezier format
            Return BezierSegment, PolyBezierSegment, LineSegment, or null
            When returning null, the Arc degenerated into start point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SetIsStroked(System.Windows.Media.PathSegment,System.Boolean)">
            <summary>
            Avoid calling the three-parameter constructor, since it always sets a local value for IsStroked.
            </summary>
            <param name="segment"></param>
            <param name="isStroked"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the SegmentCollection with given polyline matching given point list.
            Try to keep changes minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.SyncPolyBezierSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Update the collection[index] segment with poly bezier segment matching given point list.
            givne point list must contain 3*N points for N Bezier segments.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.IsEmpty(System.Windows.Media.PathSegment)">
            <summary>
            Test if given path segment is empty.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPointCount(System.Windows.Media.PathSegment)">
            <summary>
            Get the point count in given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetLastPoint(System.Windows.Media.PathSegment)">
            <summary>
            Get the last point of given path segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.GetPoint(System.Windows.Media.PathSegment,System.Int32)">
            <summary>
            Get the point of given index in given segment.
            If input is (-1), return the last point.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.FlattenSegment(System.Windows.Media.PathSegment,System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point,System.Double)">
            <summary>
            Flatten given segment and add result points into given point list.
            </summary>
            <param name="segment">The segment to be flatten</param>
            <param name="points">The result point list</param>
            <param name="start">The start point of the segment</param>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.ArcToBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Windows.Point[]@,System.Int32@)">
            <summary>
            ArcToBezier, Compute the Bezier approximation of an arc
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This utility computes the Bezier approximation for an elliptical arc as
            it is defined in the SVG arc spec. The ellipse from which the arc is
            carved is axis-aligned in its own coordinates, and defined there by its
            x and y radii. The rotation angle defines how the ellipse's axes are
            rotated relative to our x axis. The start and end points define one of 4
            possible arcs; the sweep and large-arc flags determine which one of
            these arcs will be chosen. See SVG spec for details.
            
            Returning cPieces = 0 indicates a line instead of an arc
                      cPieces = -1 indicates that the arc degenerates to a point 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetArcAngle(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Get the number of Bezier arcs, and sine/cosine of each.
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            </summary>
            <remarks>
            This is a private utility used by ArcToBezier.  We break the arc into
            pieces so that no piece will span more than 90 degrees.  The input
            points are on the unit circle.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.GetBezierDistance(System.Double,System.Double)">
             <summary>
             GetBezierDistance, return the distance as a fraction of the radius
             Adopted from MIL:Graphics\core\geometry\utils.cpp
             </summary>
            <remarks>
                  Get the distance from a circular arc's endpoints to the control points
                  of the Bezier arc that approximates it, as a fraction of the arc's
                  radius.
            
                  Since the result is relative to the arc's radius, it depends strictly on
                  the arc's angle. The arc is assumed to be of 90 degrees of less, so the
                  angle is determined by the cosine of that angle, which is derived from
                  rDot = the dot product of two radius vectors.  We need the Bezier curve
                  that agrees with the arc's points and tangents at the ends and midpoint. 
                  Here we compute the distance from the curve's endpoints to its control
                  points.
            
                  Since we are looking for the relative distance, we can work on the unit
                  circle. Place the center of the circle at the origin, and put the X axis
                  as the bisector between the 2 vectors.  Let a be the angle between the
                  vectors.  Then the X coordinates of the 1st and last points are cos(a/2). 
                  Let x be the X coordinate of the 2nd and 3rd points.  At t=1/2 we have a
                  point at (1,0). But the terms of the polynomial there are all equal:
            
                            (1-t)^3 = t*(1-t)^2 = t^2*(1-t) = t^3 = 1/8,
            
                  so from the Bezier formula there we have:
            
                            1 = (1/8) * (cos(a/2) + 3x + 3x + cos(a/2)), 
            
                  hence
            
                            x = (4 - cos(a/2)) / 3
            
                  The X difference between that and the 1st point is:
                  
                            DX = x - cos(a/2) = 4(1 - cos(a/2)) / 3.
            
                  But DX = distance / sin(a/2), hence the distance is
            
                            dist = (4/3)*(1 - cos(a/2)) / sin(a/2).
            
                  Rather than the angle a, we are given rDot = R^2 * cos(a), so we
                  multiply top and bottom by R:
             
                            dist = (4/3)*(R - Rcos(a/2)) / Rsin(a/2)
             
                  and use some trig:
                                           ________________
                            cos(a/2)   = \/(1 + cos(a)) / 2
                                           ______________________
                            R*cos(a/2) = \/(R^2 + R^2 cos(a)) / 2 
                                           ________________
                                       = \/(R^2 + rDot) / 2
            
                  Let A = (R^2 + rDot)/2.
                                           ____________________
                            R*sin(a/2) = \/R^2 - R^2 cos^2(a/2)
                                           _______
                                       = \/R^2 - A
            
                  so:
                                                      _
                                         4      R - \/A
                                  dist = - * ------------
                                         3      _______
                                              \/R^2 - A
            
              History:
                  5/29/2001 MichKa
                      Created it.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathSegmentHelper.ArcToBezierHelper.AcceptRadius(System.Double,System.Double,System.Double@)">
            <summary>
            Adopted from MIL:Graphics\core\geometry\utils.cpp
            Return false if the radius is too small compared to the chord length (returns true on NaNs)
            radius is modified to the value that's accepted.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.BezierCurveFlattener">
            <summary>
            A utility class to flatten Bezier curves.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenCubic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier cubic curve and adds the result polyline to the third parameter.
            </summary>
            <param name="controlPoints">The 4 Bezier cubic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">True to skip the first control point when adding the flattened polyline.
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to 
            each of the polyline vertices</param> 
            If <paramref name="resultPolyline"/> is empty, the first control point 
            and its associated parameter are always added.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.BezierCurveFlattener.FlattenQuadratic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier quadratic curve and adds the result polyline to the third parameter.
            We use degree elevation for Bezier curves to reuse the code for the cubic case.
            </summary>
            <param name="controlPoints">The 3 Bezier quadratic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">Whether to skip the first control point when adding the flattened polyline. 
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated to
            each of the polyline vertices</param>
            If <paramref name="resultPolyline"/> is empty, the first control point and 
            its associated parameter are always added.</param>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.CommonExtensions">
            <summary>
            Extension methods supporting non-geometry types
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach(System.Collections.IEnumerable,System.Action{System.Object})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence with the index of each item.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Ensure the count of list to given count.  Create default(T) or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensure the count of list to given count.  Create with given fatory or remove items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used when there's no factory.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the end of a collection.
            If collection is list, List.AddRange is used.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Get the last item of given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
            Remove the last item from the given list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.DeepCopy``1(``0)">
            <summary>
            Make a copy of obj and all it's public properties, including all collection properties.
            Possible perf optimization: this is used only for Transform and Geometry.
            We should develope a copier for them instead of using reflection.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.SetIfDifferent(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Set the value if different.  Avoid setting local value if possible.
            return true when the value has been changed
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.ClearIfSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears the dependency property when it is locally set on the given dependency object.
            Return false if the dependeny property is not locally set.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.FindVisualDesendent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Find all visual desendent of given type and condition using breath first search.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.CommonExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get all visual children in IEnumerable
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.DrawingPropertyMetadata">
            <summary>
            Unify the interface of PropertyMetadata in WPF and Silverlight.
            Providing the necessary notification about render, arrange or measure.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.#ctor(Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Object)">
            <summary>
            This private Ctor should only be used by AttachCallback.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.AttachCallback(System.Object,Microsoft.Expression.Media.DrawingPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
            <summary>
            Chain InternalCallback() to attach the instance of DrawingPropertyMetadata on property callback.
            In Silverlight4-, the property metadata is thrown away after setting. Use callback to remember it.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.DrawingPropertyMetadata.InternalCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before chaining the original callback, trigger DrawingPropertyChangedEvent
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.GeometryHelper">
            <summary>
            Extension methods for Geometry related data structures (Point/Vector/Size/Rect)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Resize(System.Windows.Rect,System.Double)">
            <summary>
            Resize the rectangle to relative size while keeping center invariant.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Subtract(System.Windows.Point,System.Windows.Point)">
            <summary>
            Get the difference Vector between two Points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Plus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise plus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Minus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise minus for Point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string of mini-languages to a <see cref="T:PathGeometry"/>.
            </summary>
            <remarks>See: Path Markup Syntax(http://msdn.microsoft.com/en-us/library/cc189041(VS.95).aspx)</remarks>
            <param name="abbreviatedGeometry">The string of path mini-languages for describing geometric paths.</param>
            <returns>A <see cref="T:PathGeometry"/> converted from the the path mini-languages/></returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double)">
            <summary>
            Flattens a <see cref="T:PathFigure"/> and adds result points to given <paramref name="points"/>.
            </summary>
            <param name="figure">The input <see cref="T:PathFigure"/>.</param>
            <param name="points">The point list to which result points will append.</param>
            <param name="tolerance">A positive number specifying the maximum allowed error from result points to input path figure.  Value 0 allows algorithm to pick the tolerance automatically.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double)">
            <summary>
            Get the normalized arc in (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcPoint(System.Double,System.Windows.Rect)">
            <summary>
            Get the absolute arc point in given bound with given relative radius.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point)">
            <summary>
            Get the angle on arc relative to (0,0)(1,1) box.
            Zero degree is mapped to [0.5, 0] (up), and clockwise
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetArcAngle(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Get the angle on arc from given absolute point relative to bound
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compute the transform that moves Rect from to Rect to.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeTransform(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Computes the transform from the coordinate space of one <c>UIElement</c> to another.
            </summary>
            <param name="from">The source element.</param>
            <param name="to">The destination element.</param>
            <returns>The transform between the <c>UIElement</c>s, or null if it cannot be computed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.RelativeToAbsolutePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map relative point to absolute using the mapping from given bound to (0,0)(1,1) box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.AbsoluteToRelativePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Map absolute point to relative using the mapping from (0,0)(1,1) box to given bound.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GetStretchBound(System.Windows.Rect,System.Windows.Media.Stretch,System.Windows.Size)">
            <summary>
            Compute the bound after stretch within given logical bound.
            If stretch to uniform, use given aspectRatio.
            If aspectRatio is empty, it's equivalent to Fill.
            If stretch is None, equivalent to Fill or Uniform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Midpoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the mid point of given 2 points
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The mid point between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(Microsoft.Expression.Drawing.Core.Vector,Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Returns the dot product of two vectors.
            </summary>
            <param name="lhs">The first vector.</param>
            <param name="rhs">The second vector.</param>
            <returns>The dot product of <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Dot(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the dot product of two Points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.SquaredDistance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The square of the distance between <paramref name="lhs"/> and <paramref name="rhs"/>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Determinant(System.Windows.Point,System.Windows.Point)">
            <summary>
            Determinant of cross product.  Equivalent to directional area
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Normal(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compute the normal direction vector of given line segments
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.Perpendicular(Microsoft.Expression.Drawing.Core.Vector)">
            <summary>
            Compute perpendicular vector, 90 degrees counter-clockwise.
            Vector to right perpendicular result a vector to up.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.GeometryEquals(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Returns whether the two geometries are identical.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Windows.Media.Geometry@,System.Func{``0})">
            <summary>
            Ensure the value is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureGeometryType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.Geometry},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.EnsureSegmentType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.PathSegment},System.Int32,System.Func{``0})">
            <summary>
            Ensure the list[index] is an instance of result type (T).  If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.GeometryHelper.ComputeBSpline(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Double)">
            <summary>
            de'Boor algorithm to subdevide BSpline into poly Bezier segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MathHelper">
            <summary>
            Helper class providing static properties and methods related to floating point arithmetic.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.Epsilon">
            <summary>
            The minimum distance to consider two values are same.
            Note: internal floating point in MIL/SL is float, not double.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.TwoPI">
            <summary>
            The value of angle of a full circle.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Drawing.Core.MathHelper.PentagramInnerRadius">
            <summary>
            The inner radius for pentagram polygon shape, at precision of 3 digits in percentage.
            (1 - Sin36 * Sin72 / Sin54) / (Cos36) ^ 2, which is 0.47210998990512996761913067272407
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsVerySmall(System.Double)">
            <summary>
            Determines whether a <c>System.Double</c> value is small enough to be considered
            equivalent to zero.
            </summary>
            <param name="value"></param>
            <returns><c>true</c> if value is smaller than <c>DoubleTolerance</c>;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.EnsureRange(System.Double,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Return the value that's within the given range
            Given min/max is null means no limit.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.Hypotenuse(System.Double,System.Double)">
            <summary>
            Computes the Euclidean norm of the vector (x, y).
            </summary>
            <param name="x">The first component.</param>
            <param name="y">The second component.</param>
            <returns>The Euclidean norm of the vector (x, y).</returns>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.DoubleFromMantissaAndExponent(System.Double,System.Int32)">
            <summary>
            Computes a real number from the mantissa and exponent.
            </summary>
            <param name="x"></param>
            <param name="exp"></param>
            <returns>The value of x * 2^exp if successful.</returns>
            <remarks>See ::ldexp in any decent C language runtime library.</remarks>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MathHelper.IsFiniteDouble(System.Double)">
            <summary>
            Tests a double.
            </summary>
            <param name="x">The double to test.</param>
            <returns><c>true</c> if x is not a NaN and is not equal to plus or minus infinity;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathFigureHelper">
            <summary>
            Helper class to work with PathFigure
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean)">
            <summary>
            Flatten the given figure and add to the point list.
            </summary>
            <param name="tolerance">The error tolerance. Must be possitive. Can be 0, fallback to default tolerance.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.AllSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterate all segments inside given figure, and returns correct start point for each segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolylineFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single polyline segment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncPolyBezierFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronize the figure to the given list of points as a single PolyBezierSegment.
            Try to keep the change minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PathFigureHelper.SyncEllipseFigure(System.Windows.Media.PathFigure,System.Windows.Rect,System.Windows.Media.SweepDirection,System.Boolean)">
            <summary>
            Synchronize the given figure to be a closed ellipse with 2 arc segments.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PathSegmentData">
            <summary>
            A Tuple data structure for PathSegment and corresponding StartPoint.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineData">
            <summary>
            Represent a polyline consist with a list of connecting points.
            A closed polygon is represented by repeating the first point at the end.
            The differences, normals, angles, and lengths are computed on Demand.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.#ctor(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Construct a polyline with two or more points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.Difference(System.Int32)">
            The forward difference vector of polyline.
            Points[i] + Differences[i] = Points[i+1]
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineData.SmoothNormal(System.Int32,System.Double,System.Double)">
            <summary>
            Compute the normal vector of given location (lerp(index, index+1, fraction).
            If the location is within range of cornerRadius, interpolate the normal direction.
            </summary>
            <param name="cornerRadius">The range of normal smoothless.  If zero, no smoothness and return the exact normal on index.</param>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.IsClosed">
            <summary>
            The polyline is closed when first and last point is repeated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Count">
            <summary>
            The count of points in this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.TotalLength">
            <summary>
            The total arc length of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Points">
            <summary>
            The point array of this polyline
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Lengths">
            <summary>
            The length between line segments, Points[i] to Points[i+1]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Normals">
            <summary>
            The list of normal vectors for each segment.
            Normals[i] is the normal of segment p[i] to p[i + 1].
            Normals[N-1] == Normals[N-2].
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.Angles">
            <summary>
            The list of Cos(angle) between 2 line segments on point p[i]
            Note: The value is cos(angle) = Dot(u, v). It's not in degree.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.PolylineData.AccumulatedLength">
            <summary>
            The list of accumulated length from points[i] to points[0]
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.MarchLocation">
            <summary>
            The data structure to communicate with PathMarch algorithm.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetPoint(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Get the interpolated position of this this MarchLocation on given point list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetNormal(Microsoft.Expression.Drawing.Core.PolylineData,System.Double)">
            <summary>
            Get the interpolated normal direction of this this MarchLocation on given normal vector list.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.MarchLocation.GetArcLength(System.Collections.Generic.IList{System.Double})">
            <summary>
            Get the arc length of this MarchLocation to the start of the entire polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Reason">
            <summary>
            The reason why this location is sampled.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Index">
            <summary>
            The index of the point on polyline point list.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Ratio">
            <summary>
            Ratio: [0, 1], which is always before / (before + after)
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Before">
            <summary>
            Arc length before stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.After">
            <summary>
            Arc length after the stop point.  It's non-negative, and less than Length[index]
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.MarchLocation.Remain">
            <summary>
            Remaining length within a step to hit next stop.  Positive to go forward. Negative to go backward.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.PolylineHelper">
            <summary>
            Helper class to work with list of points
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.PathMarch(Microsoft.Expression.Drawing.Core.PolylineData,System.Double,System.Double,System.Func{Microsoft.Expression.Drawing.Core.MarchLocation,System.Double})">
            <summary>
            March the given polyline with given interval and output each stop through callback
            </summary>
            <param name="polyline">The polyline points to march on</param>
            <param name="startArcLength">The arc length to march before stopping at the first point.</param>
            <param name="cornerThreshold">The max angle between edges to be considered a corner vertex</param>
            <param name="stopCallback">Callback when marching algorithm stop at a point.  The callback returns the arc length for next stop.
            If the asked length is negative, march backwards. If callback returns NaN, finish marching.</param>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.PolylineHelper.GetWrappedPolylines(System.Collections.Generic.IList{Microsoft.Expression.Drawing.Core.PolylineData},System.Double@)">
            <summary>
            Reorders the given list of polylines so that the polyline a given arclength into the list is the first.
            Polylines that preceded this line are concatenated to the end of the list, with the first polyline at the very end. 
            </summary>
            <param name="lines">A list of polylines.</param>
            <param name="startArcLength">The arclength into the entire list of polylines at which to find the start line.
            The arc length into that line is returned in this variable.</param>
            <returns>The reordered and wrapped list.</returns>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.RandomEngine">
            <summary>
            A random generator support uniform and gaussian distributions.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.RandomEngine.Gaussian">
            <summary>
            Generate a pair of independent standard normally distributed random numbers,
            zero expectation, unit variance, using polar form of the Box-Muller transformation.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.#ctor">
            <summary>
            Private constructor. Force to use factory methods.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a line segment
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment from quatratic curve (3 control points)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment with 4 control points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Drawing.Core.SimpleSegment.Points">
            <summary>
            Control points of path segment.  Length is variant.
            Line segment has 2 points, Cubic bezier has 4 points.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Drawing.Core.TransformExtensions.TransformEquals(System.Windows.Media.Transform,System.Windows.Media.Transform)">
            <summary>
            Compares two transforms for an exact match.  Transforms with the same value but different structure(e.g. Translate(0,0) and Rotate(0) are not considered equivalent).
            </summary>
            <param name="firstTransform">The first transform.</param>
            <param name="secondTransform">The second transform.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Expression.Media.UnitType">
            <summary>
            Specifies the unit of thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Pixel">
            <summary>
            Unit in pixels.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.UnitType.Percent">
            <summary>
            Unit in percentage relative to bounding box.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometrySource`1">
            <summary>
            Provides the base class of a source of geometry.
            It generate and cache the geometry based on input parameters and layout bounds.
            </summary>
            <remarks>
            A typical implementation will extend the UpdateCachedGeometry() to update this.cachedGeometry.
            This base class will then handle the invalidation, pipeline to geometry effects and caching realtive to layout bounds.
            An implementation should try to reuse the cached geometry as much as possible to avoid reconstruction in rendering thread.
            An implementation can extend the ComputeLogicalBounds to handle Stretch differently.
            </remarks>
            <typeparam name="TParameters">The type of geometry source parameter on which the base class is working on.</typeparam>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySource">
            <summary>
            Provides an interface to describe the source of a geometry.
            </summary>
            <remarks>
            This interface is designed to expose geometry source in a non-generic way.
            Typical implementation should subclass GeometrySource&lt;&gt; instead of implementing this interface directly.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.IGeometrySource.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry using given parameter and layout bounds.
            Returns false if nothing has been updated.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometrySource`1.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.InvalidateGeometry">
            <summary>
            Notify the geometry is invalidated because of external changes.
            </summary>
            <remarks>
            Typically geometry is invalidated when parameters are changed.
            If any geometry has been invalidated externally, geometry will be recomputed regardless bounds' change.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateGeometry(Microsoft.Expression.Media.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry based on given parameters and layoutBounds.
            Returns false if geometry hasn't been changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.UpdateCachedGeometry(`0)">
            <summary>
            Extend the way to provide geometry by implementing this function.
            Return true when any of the geometry is changed.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Extend the way to handle stretch mode.
            Default is to always use Stretch.Fill and center stroke.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometrySource`1.ApplyGeometryEffect(Microsoft.Expression.Media.IGeometrySourceParameters,System.Boolean)">
            <summary>
            Apply geometry effect when dirty or forced, update this.Geometry.
            Otherwise, keep this.Geometry as this.cachedGeometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.Geometry">
            <summary>
            Gets or sets the result geometry after the latest UpdateGeometry()
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds">
            <summary>
            Gets the bounding box where geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds"/> should already take stroke thickness and stretch into consideration.
            </summary>
            <value></value>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds">
            <summary>
            Gets the actuall bound of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds"/> includes logical bounds, stretch and stroke thickness.
            </summary>
            <value></value>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Arc think Stretch.None is same as Stretch.Fill, assuming aspect ratio = 1:1
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.ArcGeometrySource.NormalizeThickness(Microsoft.Expression.Media.IArcGeometrySourceParameters)">
            <summary>
            Normalize thickness, both relative to bounding box and absolute pixel.
            realtive thickness = 0 -> full circle radius or clamped.
            realtive thickness = 1 -> shrinked to a dot, or degenerated.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowOrientation">
            <summary>
            Specifies the direction the arrow points.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Left">
            <summary>
            The arrow points to left.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Right">
            <summary>
            The arrow points to right.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Up">
            <summary>
            The arrow points up.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowOrientation.Down">
            <summary>
            The arrow points down.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.BlockArrowGeometrySource.ArrowBuilder">
            <summary>
                 B
                /|
               / C--D
              A     |
               \ C--D
                \|
                 B
            Algorithm only use Width/Height assuming top-left at 0,0
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CalloutStyle">
            <summary>
            Specifies the rendering style of a Callout shape
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Rectangle">
            <summary>
            A rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.RoundedRectangle">
            <summary>
            A rounded rectangle shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Oval">
            <summary>
            A oval shaped callout.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CalloutStyle.Cloud">
            <summary>
            A cloud shaped callout.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateEdge(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Update the edge line, and connect to anchor point if necessary
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdatePolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Update polyline segment, connecting start, anchor and end point with Callout style
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateLineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point)">
            <summary>
            Update the line segment to given point
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.ComputeCorners(System.Double)">
            <summary>
            Compute the corner points, clockwise, 8 points for 4 corners
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.CalloutGeometrySource.UpdateCornerArc(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point)">
            <summary>
            Corner Arc is always smaller arc with 90 degree
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffect">
            <summary>
            Provides the base class of GeometryEffect that transform a geometry into another geometry.
            </summary>
            <remarks>
            This class provides the basic implementation of processing the rendered geometry of a IShape before it's passed to rendering.
            A typical implementation will extend the virtual function <see cref="F:ProcessGeometry"/> to transform input geometry.
            <see cref="T:GeometryEffect"/> is typically attached to <see cref="T:IShape"/> as an attached property and activated when <see cref="T:IShape"/> geometry is updated.
            The <see cref="P:OutputGeometry"/> of a <see cref="T:GeometryEffect"/> will replace the rendered geometry in <see cref="T:IShape"/>
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.GetGeometryEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.SetGeometryEffect(System.Windows.DependencyObject,Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Sets the geometry effect as attached property on given dependency object.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.CloneCurrentValue">
            <summary>
            Creates a modifiable clone (deep copy) of the <see cref="T:GeometryEffect"/> using its current values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect. Implements CloneCurrentValue in Silverlight.
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffect.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateGeometry">
            <summary>
            Invalidate the geometry effect without actually compute the geometry.
            It will notify all parent shapes or effects to invalidate accordingly.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.ProcessGeometry(System.Windows.Media.Geometry)">
            <summary>
            Process geometry effect on given input geometry.
            Result is stored in GeometryEffect.OutputGeometry.
            </summary>
            <returns>Return false if nothing has been changed.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Extend the way of updating cachedGeometry based on given input geometry.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Detach">
            <summary>
            Notified when detached from parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.Attach(System.Windows.DependencyObject)">
            <summary>
            Notified when attached to a parent chain.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffect.InvalidateParent(System.Windows.DependencyObject)">
            <summary>
            Invalidate the geometry on given dependency object when
            the object is a valid parent type (IShape or GeometryEffect).
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.DefaultGeometryEffect">
            <summary>
            The default geometry effect that does nothing but passing through the input geometry.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.OutputGeometry">
            <summary>
            Gets the output geometry of this geometry effect.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.GeometryEffect.Parent">
            <summary>
            Parent can be either IShape or GeometryEffectGroup.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.GeometryEffectConverter">
            <summary>
            Provides the conversion between string and geometry effect
            </summary>
            <remarks>
            This class enables the brief sytax in xaml like <code>GeometryEffect="Sketch"</code>
            It will create a clone of instance of geometry effect so it can be used as resources.
            </remarks>
        </member>
        <member name="F:Microsoft.Expression.Media.GeometryEffectConverter.registeredEffects">
            <summary>
            Build a preset list of supported geometry effects.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted from string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect can be converted to string type.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a geometry effect.  Fallback value is null.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.GeometryEffectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a geometry effect into a string.  Fallback value is null.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.IGeometrySourceExtensions">
            <summary>
            Provides helper extension methods to work with IGeometrySource and parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.ArrowType">
            <summary>
            Specifies the Arrow head type.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.NoArrow">
            <summary>
            No arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.Arrow">
            <summary>
            A triagle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.StealthArrow">
            <summary>
            A stealth triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OpenArrow">
            <summary>
            An open triangle arrow head.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.ArrowType.OvalArrow">
            <summary>
            An oval head.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.CornerType">
            <summary>
            Specifies the corner location.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopLeft">
            <summary>
            On top left of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.TopRight">
            <summary>
            On top right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomRight">
            <summary>
            On bottom right of bounding box.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.CornerType.BottomLeft">
            <summary>
            On bottom left of bounding box.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.PolygonGeometrySource.ComputeLogicalBounds(System.Windows.Rect,Microsoft.Expression.Media.IGeometrySourceParameters)">
            <summary>
            Polygon think Stretch.None is same as Stretch.Fill
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.SketchGeometryEffect">
            <summary>
            A geometry effect to transform any geometry into a Sketch style as in SketchFlow.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect
            </summary>
            <returns>A clone of current instance of geometry effect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.Equals(Microsoft.Expression.Media.GeometryEffect)">
            <summary>
            Tests if given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">a geometry effect compare with.</param>
            <returns>Returns true when two effects renders a same appearance.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Updating cachedGeometry based on given input geometry.
            </summary>
            <param name="input">A input geometry</param>
            <returns>Returns true when anything on cachedGeometry has been updated.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.SketchGeometryEffect.randomSeed">
            <summary>
            Use the same random seed on creation to keep visual flickering minimum
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.SketchGeometryEffect.GetEffectiveSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all simple segments in given path figure including the closing chord.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.Arc">
            <summary>
            Renderes an Arc shape supporting Arc, Ring and Pie mode controled by ArcThickness.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Shapes.PrimitiveShape">
            <summary>
            Platform neutral implementation of Shape deriving from WPF:Shape or SL:Path
            </summary>
            <summary>
            Provides Silverlight implementation of PrimitiveShape who derives from platform Path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.CreateGeometrySource">
            <summary>
            Extend how the shape is drawn with creating geometry source
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.InvalidateGeometry">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape"/>. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape"/> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it needs during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            In WPF, measure override works from Shape.DefiningGeometry which is not always as expected
            see bug 99497 for details where WPF is not having correct measure by default.
            
            In Silverlight, measure override on Path does not work the same as primitive shape works.
            
            We should return the smallest size this shape can correctly render without clipping.
            By default a shape can render as small as a dot, therefore returning the strokethickness.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Shapes.PrimitiveShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Shapes.PrimitiveShape"/>  will recompute the Geometry when it's invalidated and update the RenderedGeometry, and GeometryMargin.</remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.GeometryMargin">
            <summary>
            Gets or sets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc"/>) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout"/>).
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.RenderedGeometry">
            <summary>
            Gets or sets the rendered geometry of the primitive shape, mapping to <see cref="P:System.Windows.Shapes.Path.Data"/> in Silverlight.
            </summary>
            <remarks>
            The concept is corresponding to WPF Shape.RenderedGeometry.
            Silverlight must use DP for rendered geometry so that it updates correctly.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.PrimitiveShape.Data">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Media.Geometry"/> that specifies the shape to be drawn.
            </summary>
            <returns>A description of the shape to be drawn.</returns>
            <remarks>
            A new Data property to hide Path.Data property, to avoid being serialized to xaml.
            This property will carry DesignerSerializationVisibilityAttribute.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle in degrees. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle in degree. 0 degree is pointing up.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThickness">
            <summary>
            Gets or sets the arc thickness.
            </summary>
            <value>The arc thickness in pixels or percentage depending on "ArcThicnessUnit"/>.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.Arc.ArcThicknessUnit">
            <summary>
            Gets or sets the arc thickness unit.
            </summary>
            <value>The arc thickness unit, either pixel or percentage.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.BlockArrow">
            <summary>
            Renders a block arrow shape supporting resizable arrow head and body.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation where the arrow is pointing to.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowheadAngle">
            <summary>
            Gets or sets the arrowhead angle.
            </summary>
            <value>The arrowhead angle in degrees.</value>
        </member>
        <member name="P:Microsoft.Expression.Shapes.BlockArrow.ArrowBodySize">
            <summary>
            Gets or sets the size of the arrow body.
            </summary>
            <value>The size of the arrow body in pixels.</value>
        </member>
        <member name="T:Microsoft.Expression.Shapes.RegularPolygon">
            <summary>
            Renders a regular polygon shape or corresponding star shape with variable number of points.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.PointCount">
            <summary>
            Gets or sets the number of points of the <see cref="T:Microsoft.Expression.Shapes.RegularPolygon"/>
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Shapes.RegularPolygon.InnerRadius">
            <summary>
            Gets or sets the the distance between the center and the innermost point.
            </summary>
            <value>The distance between the center and the innermost point.</value>
        </member>
        <member name="T:Microsoft.Expression.Drawing.Core.Vector">
            <summary>
            This is ported from WPF implementation of Vector
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hant\Microsoft.Expression.Controls.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Controls</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Initialize">
            <summary>
            Called before we loop over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.ShouldBreak(System.Int32)">
            <summary>
            Checks whether or not we should continue looping over the polylines.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineBegin(Microsoft.Expression.Drawing.Core.PolylineData)">
            <summary>
            Called before we begin marching a new polyline.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnPolylineCompleted(System.Double)">
            <summary>
            Called when we walk off the end of a polyline.
            </summary>
            <param name="remaingLength">The remaining arclength in the polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.OnStepCompleted(System.Double)">
            <summary>
            Called when we sucessfully complete a step.
            </summary>
            <param name="actualStepDistance">The actual step distance.
            This may be different than Step if we have wrapped to another polyline.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.DistributionStrategy.Distribute(Microsoft.Expression.Controls.PathPanel,System.Int32,System.Int32)">
            <summary>
            Distributes the children of a path panel along a given layout path.
            </summary>
            <param name="pathPanel">The path panel.</param>
            <param name="pathIndex">The index of the path in pathPanel.LayoutPaths.</param>
            <param name="childIndex">The index of the first child to be laid out on this path.</param>
            <returns>The index of the next child to be distributed. If childIndex is returned, this function has done nothing.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.ChildIndex">
            <summary>
            The index of the next child to be arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Span">
            <summary>
            The distance in arclength that we want to use for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Step">
            <summary>
            The distance in arclength to walk along the current polyline.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.DistributionStrategy.Capacity">
            <summary>
            The total number of elements to be arranged on the LayoutPath.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.EvenDistributionStrategy">
            <summary>
            Distributes the children of a path panel along a layout path.
            Even distribution means that there is equal arclength between the centers of all
            the elements on the path.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathStrategy.HaveStartPointsChanged">
            <summary>
            Changes to StartPoint do no cause LayoutUpdated to fire in Silverlight.
            This allows us to check for changes to StartPoint without the cost of comparing an entire geometry.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.ChangedPathLayoutProperties">
            <summary>
            Specifies which path layout properties have changed.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.#ctor(Microsoft.Expression.Controls.ChangedPathLayoutProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs"/> class.
            </summary>
            <param name="changedProperties">The data for the event.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutUpdatedEventArgs.ChangedProperties">
            <summary>
            Gets the properties changed in a <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathLayoutData">
            <summary>
            Encapsulates the data needed to update a <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LayoutPathIndex">
            <summary>
            Gets or sets the index of the path on which an element is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalIndex">
            <summary>
            Gets or sets the index of an element in a collection of elements.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalIndex">
            <summary>
            Gets or sets the index of an element on a path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.GlobalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.LocalOffset">
            <summary>
            Gets or sets the offset of an element proportional to the length of path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.NormalAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathLayoutData.OrientationAngle">
            <summary>
            Gets or sets the angle perpendicular to the path at an element's location if the element is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.IPathLayoutItem">
            <summary>
            Represents an element that is arranged by a <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </summary>
            <remarks>
            Implementing this interface enables <see cref="T:Microsoft.Expression.Controls.PathPanel"/> to set these properties when the element is arranged.
            This interface is not intended for general implementation.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            Updates the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties based on the given <see cref="T:Microsoft.Expression.Controls.PathLayoutData"/> and raises the <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/> event.
            </summary>
            <param name="data">The data needed to update the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/>.</param>
        </member>
        <member name="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated">
            <summary>
            Occurs when one or more of the <see cref="T:Microsoft.Expression.Controls.IPathLayoutItem"/> properties change.
            </summary>
            <remarks>
            This event is raised whenever the item’s position along the path is updated. This can occur due to changes in the properties on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> or changes to <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex">
            <summary>
            Gets the index of the path on which the item is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex">
            <summary>
            Gets the index of the item in a collection of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex">
            <summary>
            Gets the index of the item on the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset">
            <summary>
            Gets the offset of the item proportional to the total length of a collection of paths.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset">
            <summary>
            Gets the offset of the item proportional to the length of the path on which it is arranged.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle">
            <summary>
            Gets the angle perpendicular to the path at the item's location.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle">
            <summary>
            Gets the angle perpendicular to the path at the items's location if the item is oriented to the path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Distribution">
            <summary>
            Specifies the distribution of a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.Orientation">
            <summary>
            Specifies the orientation of elements on a <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.FillBehavior">
            <summary>
            Specifies the method for altering the <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.LayoutPath">
            <summary>
            Describes a path along which elements are arranged.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Controls.LayoutPath.transformedPolylines">
            <summary>
            Ideally, we want to cache the Bezier curves before flattening, because transform will affect flattening.
            That requires us to cache curves that we don't support very well yet.  Instead, we cache the flatten points
            in distribution strategy and transform them on demand.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.SourceElement">
            <summary>
            Gets or sets the element that defines the path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Distribution">
            <summary>
            Gets or sets whether items are laid out evenly or with a fixed padding.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Capacity">
            <summary>
            Gets or sets the maximum number of items displayed on the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Padding">
            <summary>
            Gets or sets the distance in pixels along the arc length of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> between two items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Orientation">
            <summary>
            Gets or sets the orientation of the items.
            </summary>
            <remarks>
            This property is supported on <see cref="T:Microsoft.Expression.Controls.PathListBox"/>, but not <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Start">
            <summary>
            Gets or sets the distance from the start of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> to place the first item.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.Span">
            <summary>
            Gets or sets the percentage of the <see cref="T:Microsoft.Expression.Controls.LayoutPath"/> that participates in layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.FillBehavior">
            <summary>
            Gets or set the method to alter <see cref="P:Microsoft.Expression.Controls.LayoutPath.Span"/> on an open path.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.ActualCapacity">
            <summary>
            Gets the computed Capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.LayoutPath.IsValid">
            <summary>
            Gets whether or not the <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is valid in the context.
            A <see cref="P:Microsoft.Expression.Controls.LayoutPath.SourceElement"/> is invalid if it is a descendant of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> in which it used.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PaddedDistributionStrategy">
            <summary>
            Distributes the children of a layout path based on the size of the children and a given padding between the children.
            The distance in arclength between children is determined by the padding plus the sum of the radii of the children's bounding boxes.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBox">
            <summary>
            Contains a list of items that are laid out along one or more paths.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.GetContainerForItemOverride">
            <summary>
            Creates the element used to display a specified item.
            </summary>
            <returns>A <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> corresponding to a specified item.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own item container.
            </summary>
            <returns>true if the item is its own item container; otherwise, false.</returns>
            <param name="item">The specified item.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBox.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBox.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathListBoxItem">
            <summary>
            Represents an item in a <see cref="T:Microsoft.Expression.Controls.PathListBox"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathListBoxItem.Update(Microsoft.Expression.Controls.PathLayoutData)">
            <summary>
            For a description of this member, see <see cref="M:Microsoft.Expression.Controls.IPathLayoutItem.Update(Microsoft.Expression.Controls.PathLayoutData)"/>.
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Controls.PathListBoxItem.PathLayoutUpdated">
            <summary>
            For a description of this member, see <see cref="E:Microsoft.Expression.Controls.IPathLayoutItem.PathLayoutUpdated"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LayoutPathIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LayoutPathIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalIndex">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalIndex"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.GlobalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.GlobalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.LocalOffset">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.LocalOffset"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.NormalAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.NormalAngle"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathListBoxItem.OrientationAngle">
            <summary>
            For a description of this member, see <see cref="P:Microsoft.Expression.Controls.IPathLayoutItem.OrientationAngle"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Controls.PathPanel">
            <summary>
            Arranges child elements along one or more path.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Expression.Controls.PathPanel"/> can be used as an alternative to <see cref="T:Microsoft.Expression.Controls.PathListBox"/> when selection is not necessary.
            The <see cref="P:Microsoft.Expression.Controls.LayoutPath.Orientation"/> property is not supported on <see cref="T:Microsoft.Expression.Controls.PathPanel"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Expression.Controls.PathPanel"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size required for child elements.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. </param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements.
            </summary>
            <param name="finalSize">The size that this object should use to arrange its child elements.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.ArrangeChild(System.Int32,System.Int32,Microsoft.Expression.Drawing.Core.PolylineData,Microsoft.Expression.Drawing.Core.MarchLocation,System.Int32)">
            <summary>
            Arranges the child at the given index at a particular location on a LayoutPath.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
            <param name="pathIndex">The index of the layout path on which to arrange the child.</param>
            <param name="polyline">The polyline in the layout path.</param>
            <param name="location">The location on the polyline.</param>
            <param name="localIndex">The index of the child on the LayoutPath.</param>
        </member>
        <member name="M:Microsoft.Expression.Controls.PathPanel.GetChildRadius(System.Int32)">
            <summary>
            Calculates the radius of the bounding circle for the child at the given index.
            </summary>
            <param name="indirectIndex">An index from the range 0 to PathPanel.Count.</param>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.LayoutPaths">
            <summary>
            Gets or sets a collection of objects that define the path(s) used for layout.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.StartItemIndex">
            <summary>
            Gets or sets the index to use within the list of items.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.WrapItems">
            <summary>
            Gets or sets whether the item index wraps to the beginning of the collection when StartItemIndex is greater than 0.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.ValidPaths">
            <summary>
            The subset of LayoutPaths that are attached and not Collapsed.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Controls.PathPanel.Count">
            <summary>
            Count is the number of Children that the PathPanel will layout.
            If StartItemIndex > 0 and WrapItems is false, this can be less than PathPanel.Children.Count
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetItemsHost(System.Windows.Controls.ItemsControl)">
            <summary>
            Gets the Panel that contains the containers of an ItemsControl.
            </summary>
            <param name="control">The ItemsControl.</param>
            <returns>
            The Panel that contains the containers of an ItemsControl, or null
            if the Panel could not be found.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="control" /> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.TraverseBreadthFirst``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Traverses a tree by accepting an initial value and a function that 
            retrieves the child nodes of a node.
            </summary>
            <typeparam name="T">The type of the stream.</typeparam>
            <param name="initialNode">The initial node.</param>
            <param name="getChildNodes">A function that retrieves the child
            nodes of a node.</param>
            <param name="traversePredicate">A predicate that evaluates a node
            and returns a value indicating whether that node and it's children
            should be traversed.</param>
            <returns>A stream of nodes.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element.
            </summary>
            <param name="element">The element.</param>
            <returns>The visual tree children of an element.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="element"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetVisualChildrenAndSelfIterator(System.Windows.DependencyObject)">
            <summary>
            Get the visual tree children of an element and the element itself.
            </summary>
            <param name="element">The element.</param>
            <returns>
            The visual tree children of an element and the element itself.
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalChildren(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical children of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
        <member name="M:Microsoft.Expression.Controls.Utilities.GetLogicalDescendents(System.Windows.FrameworkElement)">
            <summary>
            Retrieves all the logical descendents of a framework element using a 
            breadth-first search. For performance reasons this method manually 
            manages the stack instead of using recursion.
            </summary>
            <param name="parent">The parent framework element.</param>
            <returns>The logical children of the framework element.</returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hans\Microsoft.Expression.Interactions.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
ICommand 的基本实现，它包装无参数或具有一个参数的方法。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 类的新实例。
            </summary>
<param name="action">操作本身。</param>
<remarks>使用此构造函数提供忽略 ICommand 参数的操作。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 类的新实例。
            </summary>
<param name="objectAction">具有一个对象参数的操作。</param>
<remarks>使用此构造函数提供一项操作，该操作使用 Execute 方法传递的对象参数。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
定义方法，该方法确定此命令能否在其当前状态下执行。
            </summary>
<param name="parameter">此命令使用的数据。如果此命令不要求传递数据，则可以将该对象设置为 NULL。</param>
            <returns>
始终返回 true。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
定义在调用此命令时要调用的方法。
            </summary>
<param name="parameter">此命令使用的数据。如果此命令不要求传递数据，则可以将该对象设置为 NULL。</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
在出现影响到是否应执行此命令的更改时发生。将不会由 ActionCommand 触发。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
一项操作，它在被调用时会将指定的属性更改为指定的值。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
调用操作。
            </summary>
<param name="parameter">操作的参数。如果操作不需要参数，则可以将参数设置为空引用。</param>
<exception cref="T:System.ArgumentException">无法在目标上找到名称为 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> 的属性。</exception>
<exception cref="T:System.ArgumentException">无法将 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> 设置为 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/> 指定的值。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
获得或设置要更改的属性的名称。这是依赖属性。
            </summary>
<value>要更改的属性的名称。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
获得或设置要设置的值。这是依赖属性。
            </summary>
<value>要设置的值。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
获得或设置将在调用 ChangePropertyAction 时出现的动画的持续时间。这是依赖属性。如果未设置持续时间，则将不会应用动画。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Ease">
            <summary>
获得或设置在调用 ChangePropertyAction 时与动画一起使用的缓动函数。这是依赖属性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
ExtendedVisualStateManager 是自定义 VisualStateManager，可以使布局属性的动画变得平滑。利用此自定义 VisualStateManager，状态可以包含对属性（如 Grid.Column）的更改，可以将元素高度更改为 Auto 或从 Auto 更改为某个值，等等。将使用相应过渡的 GeneratedDuration 和 GeneratedEasingFunction 使这些更改随着时间推移而变得平滑。请参阅下面的“VisualStateManager 替代”区域以了解此算法的概述。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
VisualStateGroup 可以使用或不使用流动布局。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
VisualStateGroup 在一个附加属性中保存这些原始值的列表。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
对于每种状态，会提取特定于布局的属性，然后将它们附加到状态。会从状态本身中删除这些属性。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
记住当前状态。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
这是当前在运动中的元素的集合。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
这是正动态显示过渡的情节提要。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
此列表包含所有已知的布局属性。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.PathToPropertyMap">
            <summary>
Silverlight 未提供直接从 PropertyPath 获取 DependencyProperty 的方法，因此，使用此结构来查找所跟踪的路径。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
停止动画，并替换为了支持该动画而做出的布局更改。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
查找 VisualStateManager 将用于动态显示更改的过渡，以便布局动画可以匹配持续时间和渐变。
            </summary>
<param name="group">正在其中发生过渡的组</param>
<param name="previousState">您的源状态</param>
<param name="state">您的目标状态</param>
<returns>过渡</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
从状态的情节提要中删除所有影响布局的属性，然后将这些属性缓存到一个附加属性中。
            </summary>
<param name="state">您的目标状态</param>
<returns>包含该状态下的布局属性的情节提要</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
目标元素的集合是指在布局过渡中可能已移动的所有元素的集合。此集合汇合了：- 具有在该状态下动态显示的布局属性的元素。- 集合中的元素的同级。- 集合中的元素的父级。
             
后续代码将在布局更改之前和之后检查这些矩形。
            </summary>
<param name="control">其布局正在改变状态的控件</param>
<param name="layoutStoryboard">包含布局更改的情节提要</param>
<param name="originalValueRecords">来自以前的状态导航（可能可以还原）的任何以前值</param>
<param name="movingElements">当前在运动中的元素的集合（如果正在进行状态更改过渡的话）</param>
<returns>其布局可能已更改的元素的完整集合</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
获得目标列表中所有元素的矩形的集合。
            </summary>
<param name="targets">要考虑的元素的集合</param>
<param name="movingElements">当前在运动中的元素的集合</param>
<returns>将元素映射到其矩形的字典</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
获得布局槽，然后算出正使用槽的哪个部分，从而获得元素的布局矩形。
            </summary>
<param name="element">我们要获得其矩形的元素</param>
<returns>该元素的布局矩形</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
获得在状态更改时元素的不透明度，而不是获得可见性，原因是状态更改可能在进行中，而且当前值最重要。
            </summary>
<param name="control">其状态正在更改的控件</param>
<param name="layoutStoryboard">具有布局属性的情节提要</param>
<param name="originalValueRecords">原始值的集合</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
检查布局情节提要，并使用 SetValue 设置所有属性，以允许不标记时间线刻度就调用 UpdateLayout（这将导致呈现行为）。覆盖的所有值均将存储在 OriginalValueRecords 的集合中，因此，可以在以后替换这些值。
            </summary>
<param name="control">其状态正在更改的控件</param>
<param name="layoutStoryboard">具有布局属性的情节提要</param>
<param name="originalValueRecords">原始值的存储区</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
获取由于布局动画的缘故而将会移动的所有元素，然后将它们包装在画布中，以便它们不会影响其同级元素。
            </summary>
<param name="movingElements">将会移动的元素的集合</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
获取由于布局动画的缘故而一直移动的所有元素，然后将它们从其画布中解包。
            </summary>
<param name="movingElements">一直移动的元素的集合</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
将布局属性从源元素复制到目标元素，并从源中清除这些属性。
            </summary>
<param name="source">布局属性的源</param>
<param name="target">布局属性的目标</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
创建将用于动态显示过渡的实际情节提要。使用所有以前计算的结果。
            </summary>
<param name="duration">动画的持续时间</param>
<param name="ease">将在动画中使用的缓动函数</param>
<param name="movingElements">将会移动的元素的集合</param>
<param name="oldOpacities">其可见性正发生改变的元素的旧不透明度</param>
<returns>情节提要</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
OriginalValueRecord 会记住在某个状态下被更改的属性的原始值。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
此枚举类型指示是将 FluidMoveBehavior 应用于它附加到的元素，还是应用于该元素的子元素。如果存在着行为方式特殊的单个元素，则“Self”很有用；如果相同的行为要应用于 WrapPanel 的所有子项或 ItemsControl 的 ItemsHost 面板，则“Children”很有用。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
一种行为，此行为监视一个或一组元素的布局更改，并在必要时将元素平滑地移到新位置。此行为并不动态显示元素的大小或可见性；它仅动态显示元素在其父容器中的偏移。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
与移动的持续时间对应的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesToProperty">
            <summary>
与行为的范围对应的 DependencyProperty。有关更多详细信息，请参阅 FluidMoveScope。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActiveProperty">
            <summary>
与行为的活动状态对应的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
与用于移动的水平分量的 EasingFunction 对应的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
与用于移动的垂直分量的 EasingFunction 对应的 DependencyProperty。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
移动的持续时间。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesTo">
            <summary>
指示行为是只应用于此元素，还是应用于此元素的所有子元素（如果此元素是面板的话）。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActive">
            <summary>
指示行为当前是否处于活动状态。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
用于移动的水平分量的 EasingFunction。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
用于移动的垂直分量的 EasingFunction。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
一项操作，它在被调用时会将 FrameworkElement 转换为指定的 VisualState。
            </summary>
            <remarks>
如果设置 TargetName 属性，则此操作将尝试更改目标元素的状态。否则，它将遍历元素树，以尝试查找定义状态的另一个目标。ControlTemplate 和 UserControl 是两种常见的可能性。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
在目标更改时被调用。如果未设置 TargetName 属性，则此操作具有自定义行为。
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
<exception cref="T:System.InvalidOperationException">无法找到具有状态的合适 FrameworkElement。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
在满足某些条件并且调用该操作时，会调用此方法。
            </summary>
            <param name="parameter"></param>
<exception cref="T:System.InvalidOperationException">无法将目标更改为指定的 StateName。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
是否使用 VisualTransition 在状态之间进行过渡。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
VisualState 的名称。  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.HyperlinkAction">
            <summary>
一项将导航到给定的超链接的操作。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.HyperlinkAction.Invoke(System.Object)">
            <summary>
在满足某些条件并且调用该操作时，会调用此方法。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.NavigateUri">
            <summary>
要打开的页面的 Uri。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.TargetWindow">
            <summary>
应在其中打开 NavigateUri 的窗口或选项卡的名称。 
            </summary>
            <remarks>
多个值具有特殊的含义：“_blank”表示将在新的浏览器窗口中加载，“_parent”表示将尝试在父框架中加载，而“_self”表示将以当前的页面或框架为目标。 
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
由键盘事件触发的触发器。如果检测到目标按键和修改键，它将触发。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
必须按下以便让触发器触发的按键。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
必须处于活动状态以便让触发器触发的修改键（默认为未按下任何修改键）。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
是否侦听 KeyDown 或 KeyUp 事件。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
重定位附加的元素，以响应鼠标在元素上的拖动姿势。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
与拖动的元素的 X 位置（相对于根元素的左侧）对应的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
与拖动的元素的 Y 位置（相对于根元素的顶部）对应的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
与 ConstrainToParentBounds 属性对应的 DependencyProperty。如果为 true，则拖动的元素将被约束为停留在其父容器的边界内。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
尝试将关联元素的位置更新为指定的坐标。
            </summary>
<param name="point">在根坐标中所需的元素位置。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
将相对位置转换应用于关联的元素。
            </summary>
<param name="x">所需的转换在根坐标中的 X 分量。</param>
<param name="y">所需的转换在根坐标中的 Y 分量。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
将给定的转换应用于关联元素的 RenderTransform。
            </summary>
<param name="x">转换在父坐标中的 X 分量。</param>
<param name="y">转换在父坐标中的 Y 分量。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
根据当前呈现的关联元素位置更新 X 和 Y 属性。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.IsValidConstrainedMove(System.Windows.Point)">
            <summary>
确定是否应将给定的光标位置作为拖动操作的一部分包括在内。
            </summary>
<param name="currentPosition">光标位置。</param>
            <returns>
	如果应将提供的位置作为拖动操作的一部分包括在内，则为 <c>true</c>，否则为 <c>false</c>。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
检查一个矩形是否包含另一个矩形。
            </summary>
<param name="rect1">包含另一个矩形的矩形。</param>
<param name="rect2">被包含的矩形。</param>
<returns><c>true</c> （如果矩形 1 包含 矩形 2），否则为 <c>false</c></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
作为矢量转换。
            </summary>
<param name="transform">转换本身。</param>
<param name="x">矢量的 X 分量。</param>
<param name="y">矢量的 Y 分量。</param>
<returns>一个点，它包含被转换作为矢量转换的 X 和 Y 的值。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
获得转换偏移。
            </summary>
<param name="transform">转换本身。</param>
<returns>转换的偏移。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
在行为附加到 AssociatedObject 后调用。
            </summary>
<remarks>替代它以便将功能挂钩到 AssociatedObject。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
在行为与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
<remarks>替代它以便将功能从 AssociatedObject 中解除挂钩。</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
在开始拖动姿势时发生。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
在处理拖动姿势的更新时发生。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
在完成拖动姿势时发生。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
获得或设置拖动的元素的 X 位置（相对于根元素的左侧）。这是依赖属性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
获得或设置拖动的元素的 Y 位置（相对于根元素的顶部）。这是依赖属性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
获得或设置一个值，此值指示是否将拖动的元素约束为停留在其父容器的边界内。这是依赖属性。
            </summary>
            <value>
	如果应将拖动的元素约束为停留在其父容器的边界内，则为 <c>true</c>，否则为 <c>false</c>。
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
获得关联的元素在屏幕上的位置（在根坐标中）。
            </summary>
<value>关联的元素在屏幕上的位置（在根坐标中）。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
获得在元素坐标中的元素边界。
            </summary>
<value>在元素坐标中的元素边界。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
获得关联对象的父元素。
            </summary>
<value>关联对象的父元素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
获得关联的对象所在的场景的根元素。
            </summary>
<value>关联的对象所在的场景的根元素。</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
一项将播放表示完成的声音的操作。
            </summary>
            <remarks>
此操作旨在与无需停止或控制的短暂声音效果配合使用。如果您尝试创建音乐播放器或游戏，它可能无法满足您的需求。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
在调用该操作时，此方法用于自定义动态创建的 MediaElement。
            </summary>
            <remarks>
此方法对于想扩展 PlaySoundAction 的操作设计者可能很有用。如果您想控制 MediaElement Balance 属性，则可以从 PlaySoundAction 继承并替代此方法。
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
在满足一些条件并且应调用该操作时，会调用此方法。 
            </summary>
            <remarks>
每次调用该操作都会播放新的声音。虽然此实现可能会有更改，但调用者应预计到这将创建新的 MediaElement，该元素在声音播放完毕或媒体未能播放时将被清除。
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
定义声音文件位置的 Uri。这用于设置 MediaElement 的源属性。这是依赖属性。
            </summary>
            <remarks>
声音可以是 MediaElement 支持的任何文件格式。对于视频，它将只播放音频部分。
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
控制音量。这用于设置 MediaElement 的 Volume 属性。这是依赖属性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
一项操作，它在被调用时将从树中删除目标元素。
            </summary>
            <remarks>
此操作可能失败。此操作了解如何从公共父级中删除元素，但不了解如何从自定义集合中删除元素，也不了解可视化树的直接操作。
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
一个提供将情节提要确定为目标的能力的抽象类。
            </summary>
            <remarks>
对于操作设计者，此类提供将情节提要确定为目标的标准方法。设计工具可能会选择为从此操作继承的类提供特别的编辑体验，从而改善设计者的体验。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
在更改 Storyboard 属性时会调用此方法。
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
目标情节提要。这是依赖属性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
一项操作，它在被调用时将更改目标情节提要的状态。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
在满足一些条件并且应调用该操作时，会调用此方法。此方法将尝试按照 ControlStoryboardOption 定义的方式更改目标情节提要。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
一个提供将情节提要确定为目标的能力的抽象类。
            </summary>
            <remarks>
对于触发器设计者，此类提供将情节提要确定为目标的标准方法。设计工具可能会选择为从此触发器继承的类提供特别的编辑体验，从而改善设计者的体验。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
在更改 Storyboard 属性时会调用此方法。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
目标情节提要。这是依赖属性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
侦听情节提要完成状态的触发器。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/> 类的新实例。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
一个触发器，它由在其源上发生的指定事件触发，并且在触发该事件后延迟一段时间才触发。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/> 类的新实例。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
获得或设置在刻度线之间等待的毫秒数。这是依赖属性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
获得或设置在完成触发器之前要触发的刻度线总数。这是依赖属性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.ExceptionStringTable">
            <summary>
强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
返回此类使用的已缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.Culture">
            <summary>
为使用此强类型资源类进行的所有资源查找替代当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
查找类似于“在类型‘{1}’上找不到名为‘{0}’的属性。”的本地化字符串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“无法将类型‘{0}’的值分配到类型‘{2}’的属性‘{1}’。只能将类型‘{2}’的值分配给‘{1}’属性。”。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
查找类似于“类型‘{1}’所定义的属性‘{0}’不公开设置方法，因此无法修改。”的本地化字符串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionStateChangeFailed">
            <summary>
查找类似于“无法将目标 {0} 的状态更改为 {1}。”的本地化字符串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
查找类似于“目标 {0} 不定义任何 VisualStateGroups。”的本地化字符串。 .
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
查找类似于“不支持 RemoveElementAction 的目标。”的本地化字符串。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hant\Microsoft.Expression.Effects.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Effects</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Media.Effects.BlindOrientation">
            <summary>
            Determine the orientation of the blinds
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BlindsTransitionEffect">
            <summary>
            Transition shader that simulates blinds opening when transitioning
            from one visual to another. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.OrientationProperty">
            <summary>
            Gets or sets the orientation of the blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.CountProperty">
            <summary>
            Gets or sets the number of blinds
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientationProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the BlindsTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of BlindsTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Orientation">
            <summary>
            Gets or sets orientatio of the blinds.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.Count">
            <summary>
            Gets or sets the number of blinds to display.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BlindsTransitionEffect.ShaderOrientation">
            <summary>
            Gets or sets orientation of the blinds.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.BloomEffect">
            <summary>
            Effect that implements a bloom illumination of a visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
            
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensityProperty">
            <summary>
            This property is mapped to the BaseIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturationProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensityProperty">
            <summary>
            This property is mapped to the BloomIntensity variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturationProperty">
            <summary>
            This property is mapped to the BloomSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.BloomEffect.ThresholdProperty">
            <summary>
            This property is mapped to the BaseSaturation variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.BloomEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Threshold">
            <summary>
            Gets or sets the minimum intensity that will be used for the bloom
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseIntensity">
            <summary>
            Gets or sets the base intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomIntensity">
            <summary>
            Gets or sets the bloom intensity
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseSaturation">
            <summary>
            Gets or sets the base saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BloomSaturation">
            <summary>
            Gets or sets the bloom saturation
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomIntensity">
            <summary>
            Gets or sets the Base/BloomIntensity variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.BloomEffect.BaseBloomSaturation">
            <summary>
            Gets or sets the BaseBloomSaturation variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect">
            <summary>
            Transition effect that reveals two visuals through a growing/shrinking circle. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the Feather amount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseProperty">
            <summary>
            Dependency property which modifies the circle movement.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShaderProperty">
            <summary>
            Dependency property which modifies the reverseShader variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CircleRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CircleRevealTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.Reverse">
            <summary>
            Gets or sets playing the circle reveal backward
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CircleRevealTransitionEffect.ReverseShader">
            <summary>
            Gets or sets playing the circle reveal backward into the shader
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect">
            <summary>
            Transition effect that transitions two visuals using a cloud 
            texture as the sampler threshold.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.CloudyTransitionEffect">
            <summary>
            Defines a transition shader effect that uses an image as a sampler threshold
            for interpolating pixel value between two visuals. 
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect">
            <summary>
            Defines a transition shader effect that provides a random value
            allowing the effect to provide variance each time the effect is run.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeedProperty">
            <summary>
            Dependency property which modifies the RandomSeed variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.#ctor">
            <summary>
            Updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RandomizedTransitionEffect.RandomSeed">
            <summary>
            Gets or sets the RandomSeed variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImageProperty">
            <summary>
            Dependency property which modifies the CloudImage variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.CloudyTransitionEffect.CloudImage">
            <summary>
            Gets or sets the CloudImage variable within the shader used for sampling. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.CloudRevealTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the CloudRevealTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of CloudRevealTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.ColorToneEffect">
            <summary>
            Effects that modifies the color tone of a visual using
            two colors as the sampling.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DesaturationProperty">
            <summary>
            This property is mapped to the Desaturation variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmountProperty">
            <summary>
            This property is mapped to the Toned variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColorProperty">
            <summary>
            This property is mapped to the LightColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColorProperty">
            <summary>
            This property is mapped to the DarkColor variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.ColorToneEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Desaturation">
            <summary>
            Gets or sets the Desaturation variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.ToneAmount">
            <summary>
            Gets or sets the Toned variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.LightColor">
            <summary>
            Gets or sets the LightColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.DarkColor">
            <summary>
            Gets or sets the DarkColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.ColorToneEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.EmbossedEffect">
            <summary>
            Effect that simulates an embossed look to the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.HeightProperty">
            <summary>
            This property is mapped to the Height variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.EmbossedEffect.ColorProperty">
            <summary>
            This property is mapped to the Color variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.EmbossedEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Color">
            <summary>
            Gets or sets the Color variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.EmbossedEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.FadeTransitionEffect">
            <summary>
            Transition effect that gradually transitions from one visual to another.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.FadeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the FadeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of FadeTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect">
            <summary>
            Effect that simulates a magnifying lens.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadiusProperty">
            <summary>
            Gets or sets the InnerRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadiusProperty">
            <summary>
            Gets or sets the OuterRadius variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.CenterProperty">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.AmountProperty">
            <summary>
            Gets or sets the amount variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.InputProperty">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.generalTransform">
            <summary>
            The transform used for this shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.InnerRadius">
            <summary>
            Gets or sets the inner radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.OuterRadius">
            <summary>
            Gets or sets the outer radius variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Amount">
            <summary>
            Gets or sets the ShrinkFactor: 
            The higher the shrink factor the "smaller" the content inside the ellipse will appear. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.EffectMapping">
            <summary>
            Gets the EffectMapping.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform">
            <summary>
            The GeneralTransform corrosponding to the Magnify effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.biasValue">
            <summary>
            Attempt to transform a point based on the effect.
            </summary>
            <param name="targetPoint">The point to transform.</param>
            <param name="result">The result if available.</param>
            <returns>Return true if successful.</returns>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.effect">
            <summary>
            The effect instance.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.IsInverse">
            <summary>
            If the transform is an inverse.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.inverseTransform">
            <summary>
            The transform specific to this Effect.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.MagnifyEffect)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="fx">The source effect.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            This particular effect keeps axis aligned lines axis aligned, so transformation of the rect is just
            transformation of its corner points.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The output rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.OutToIn(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            For the inverse of the shader, we need to find Pin which is the Pixel Ouput, given Pout the texture input (is the reverse of the shader)
            However, the shader algorithm is dependant on the radius of the pixel output from the center, which is a variable that we don't
            have when computing the inverse. We need to perform bisection in order to converge using the equation below
            PHatout = PHat_in*Scalar where
            PHatout = Pout - Pcenter  
            pHatin = Pin -Pcenter
            
            Scalar is dependent on the radius of Pin (which we don't have). 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.InToOut(System.Windows.Point,System.Double,System.Double,System.Windows.Point,System.Double)">
            <summary>
            Given a pixel output (Pin) find the texture input (Pout)
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.PointIsInCircle(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Determines if a point is within an ellipse.
            </summary>
            <param name="pt">The test point.</param>
            <param name="center">The center point of the ellipse.</param>
            <param name="radius">The radius of the ellipse.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MagnifyEffect.MagnifyGeneralTransform.Inverse">
            <summary>
            Gets the inverse transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.MonochromeEffect">
             <summary>
            Effect that turns a visual into a monochrom color
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.ColorProperty">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.MonochromeEffect.InputProperty">
            <summary>
            Gets or sets the Input of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.MonochromeEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Color">
            <summary>
            Gets or sets the FilterColor variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.MonochromeEffect.Input">
            <summary>
            Gets or sets the input used in the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateEffect">
            <summary>
            Effect that pixelates a visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.PixelateEffect.PixelationProperty">
            <summary>
            This property is mapped to the pixelation amount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Pixelation">
            <summary>
            Gets or sets the amount of pixelation inside the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.PixelateEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.PixelateTransitionEffect">
            <summary>
            Transition effect that increase/decrease pixelation between two visuals.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.PixelateTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the PixelateTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of PixelateTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect">
            <summary>
            Transition effects that performs a radial blur of the current visual  as the new visual is introduced.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RadialBlurTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RadialBlurTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RadialBlurTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleEffect">
            <summary>
            Effect that simulates water ripples on the visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.CenterProperty">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.MagnitudeProperty">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.FrequencyProperty">
            <summary>
            Gets or sets the Frequency variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.PhaseProperty">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.RippleEffect.InputProperty">
            <summary>
            Gets or sets the input brush used in the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Center">
            <summary>
            Gets or sets the center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Magnitude">
            <summary>
            Gets or sets the Amplitude variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Frequency">
            <summary>
            Gets or sets the frequency variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Phase">
            <summary>
            Gets or sets the Phase variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.RippleEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.RippleTransitionEffect">
            <summary>
            Transition effect that simulate water ripple during transition. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.RippleTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the RippleTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of RippleTransitionEffect effect.</returns>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SharpenEffect">
            <summary>
            Effects that makes a visual more crisp and sharper. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.AmountProperty">
            <summary>
            This property is mapped to the Amount variable within the pixel shader. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SharpenEffect.HeightProperty">
            <summary>
            This property is mapped to the Width variable within the pixel shader. 
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SharpenEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Amount">
            <summary>
            Gets or sets the Amount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Height">
            <summary>
            Gets or sets the Height variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SharpenEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideDirection">
            <summary>
            Define the slide orientation
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SlideInTransitionEffect">
            <summary>
            Transition effect that slide the current visual away, revealing the new visual. 
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirectionProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormalProperty">
            <summary>
            Dependency property which modifies the SlideAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SlideInTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SlideInTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideDirection">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SlideInTransitionEffect.SlideNormal">
            <summary>
            Gets or sets the SlideAmount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect">
             <summary>
            Transition effect that swirl the current visual while introducing the new visual.
             </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmountProperty">
            <summary>
            Dependency property which modifies the TwistAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCountProperty">
            <summary>
            Dependency property which modifies the number of cell where pixels will be twisted.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor(System.Double)">
            <summary>
            Creates an instance and sets the shader's twist variable to the specified values.
            </summary>
            <param name="twist">level of swirl twist</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the SmoothSwirlGridTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of SmoothSwirlGridTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.TwistAmount">
            <summary>
            Gets or sets the TwistAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SmoothSwirlGridTransitionEffect.CellCount">
            <summary>
            Gets or sets the CellCount variable within the shader.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect">
            <summary>
            Effect that swirls the current visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.InputProperty">
            <summary>
            The explict input for this pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.CenterProperty">
            <summary>
            This property is mapped to the Center variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmountProperty">
            <summary>
            This property is mapped to the SwirlStrength variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequencyProperty">
            <summary>
            This property is mapped to the AngleFrequency variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.generalTransform">
            <summary>
            The transform used when this Effect is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Center">
            <summary>
            Gets or sets the Center variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.TwistAmount">
            <summary>
            Gets or sets the SwirlStrength variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.AngleFrequency">
            <summary>
            Gets or sets the AngleFrequency variable within the shader.
            We do not expose this property. 
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.Input">
            <summary>
            Gets or sets the Input shader sampler.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.EffectMapping">
            <summary>
            Gets the GeneralTransform for this effect.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform">
            <summary>
            For transforming input and tree transformations.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.theEffect">
            <summary>
            The instance of the Effect.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.thisIsInverse">
            <summary>
            The inverse of the transform.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.inverseTransform">
            <summary>
            The inverse of this GeneralTransform.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.#ctor(Microsoft.Expression.Media.Effects.SwirlEffect)">
            <summary>
            Creates an instance of this class.
            </summary>
            <param name="eff">The effect itself.</param>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TransformBounds(System.Windows.Rect)">
            <summary>
            For this operation, the bounds is the bounding box of the 4 transformed points. 
            Need to transform each of them, and then circumscribe.  This is true for both the 
            forward and the inverse.
            </summary>
            <param name="rect">The input rect.</param>
            <returns>The transformed rect.</returns>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
            <summary>
            Attempt to transform inPoint with the Swirl effect.
            </summary>
            <param name="targetPoint">The input point.</param>
            <param name="result">The output point after transformed using the Swirl effect.</param>
            <returns>True and throws if false.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.SwirlEffect.SwirlGeneralTransform.Inverse">
            <summary>
            Gets a clone of the inverse of the current transform.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WaveTransitionEffect">
            <summary>
            Transition effect that waves the current visual while introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.MagnitudeProperty">
            <summary>
            Dependency property which modifies the Magnitude variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.PhaseProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WaveTransitionEffect.FrequencyProperty">
            <summary>
            Dependency property which modifies the Phase variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.#ctor">
            <summary>
            Creates an instance of the shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WaveTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WaveTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WaveTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Magnitude">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Phase">
            <summary>
            Gets or sets the phase of the wave
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WaveTransitionEffect.Frequency">
            <summary>
            Gets or sets the magnitude of the wave
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeDirection">
            <summary>
            Define the wipe direction.
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Media.Effects.WipeTransitionEffect">
            <summary>
            Transition effect that wipes the current visual introducing the new visual.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirectionProperty">
            <summary>
            Dependency property which modifies the preset of the wipe
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmountProperty">
            <summary>
            Dependency property which modifies the FuzzyAmount variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOriginProperty">
            <summary>
            Dependency property which modifies the LineOrigin variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormalProperty">
            <summary>
            Dependency property which modifies the LineNormal variable within the pixel shader.
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffsetProperty">
            <summary>
            Dependency property which modifies the LineOffset variable within the pixel shader.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.#ctor">
            <summary>
            Creates an instance and updates the shader's variables to the default values.
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Media.Effects.WipeTransitionEffect.DeepCopy">
            <summary>
            Makes a deep copy of the WipeTransitionEffect effect. 
            </summary>
            <returns>A clone of current instance of WipeTransitionEffect effect.</returns>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.WipeDirection">
            <summary>
            Gets or sets the direction of the wipe.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.FeatherAmount">
            <summary>
            Gets or sets the FuzzyAmount variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOrigin">
            <summary>
            Gets or sets the LineOrigin variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineNormal">
            <summary>
            Gets or sets the LineNormal variable within the shader.
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Media.Effects.WipeTransitionEffect.LineOffset">
            <summary>
            Gets or sets the LineOffset variable within the shader.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hant\Microsoft.Expression.Interactions.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Expression.Interactions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Expression.Interactivity.Core.ActionCommand">
            <summary>
包裝方法之 ICommand 的基本實作，該方法不採用任何參數或採用一個參數。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action)">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 類別的新例項。
            </summary>
<param name="action">動作。</param>
<remarks>使用此建構函式來提供忽略 ICommand 參數的動作。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.#ctor(System.Action{System.Object})">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ActionCommand"/> 類別的新例項。
            </summary>
<param name="objectAction">採用物件參數的動作。</param>
<remarks>使用此建構函式來提供動作，該動作會使用 Execute 方法所傳送的物件參數。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecute(System.Object)">
            <summary>
定義用來判斷命令是否能以其目前狀態執行的方法。
            </summary>
<param name="parameter">命令所用的資料。如果命令不需要傳送資料，此物件可設為 Null。</param>
            <returns>
永遠傳回 true。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ActionCommand.Execute(System.Object)">
            <summary>
定義叫用命令時要呼叫的方法。
            </summary>
<param name="parameter">命令所用的資料。如果命令不需要傳送資料，此物件可設為 Null。</param>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Core.ActionCommand.System#Windows#Input#ICommand#CanExecuteChanged">
            <summary>
在發生影響是否應執行命令的變更時發生。不會由 ActionCommand 觸發。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction">
            <summary>
叫用時會將指定屬性變更為指定值的動作。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.ChangePropertyAction"/> 類別的新例項。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Invoke(System.Object)">
            <summary>
叫用動作。
            </summary>
<param name="parameter">動作的參數。如果動作不需要參數，可將參數設為 Null 參照。</param>
<exception cref="T:System.ArgumentException">在目標上找不到含有 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> 的屬性。</exception>
<exception cref="T:System.ArgumentException">無法將 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName"/> 設為 <c cref="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value"/> 指定的值。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.PropertyName">
            <summary>
取得或設定要變更的屬性名稱。這是相依性屬性。
            </summary>
<value>要變更的屬性名稱。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Value">
            <summary>
取得或設定要設定的值。這是相依性屬性。
            </summary>
<value>要設定的值。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Duration">
            <summary>
取得或設定叫用 ChangePropertyAction 時會出現之動畫的持續時間。這是相依性屬性。如果取消設定持續時間，將不會套用動畫。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.ChangePropertyAction.Ease">
            <summary>
取得或設定叫用 ChangePropertyAction 時要與動畫搭配使用的加/減速功能。這是相依性屬性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager">
            <summary>
ExtendedVisualStateManager 是自訂的 VisualStateManager，可將版面配置屬性的動畫變順暢。利用這個自訂的 VisualStateManager，狀態可包含對 Grid.Column 等屬性的變更、可將元素高度變更為 [自動] 或從 [自動] 變更等等。使用適當切換的 GeneratedDuration 和 GeneratedEasingFunction，可在一段時間後將這些變更變順暢。請參閱下方的「VisualStateManager 覆寫」區域，以取得演算法的一般描述。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UseFluidLayoutProperty">
            <summary>
VisualStateGroup 是否可以使用 [流體版面配置]。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValuesProperty">
            <summary>
VisualStateGroup 會將這些原始值的清單保留在附加屬性中。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutStoryboardProperty">
            <summary>
擷取每個狀態的版面配置專用屬性，然後附加至狀態。這些屬性會從狀態本身移除。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CurrentStateProperty">
            <summary>
記住目前狀態。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.MovingElements">
            <summary>
這是目前移動中的一組元素。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutTransitionStoryboard">
            <summary>
這是正在以動畫顯示轉換的腳本。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.LayoutProperties">
            <summary>
此清單包含所有已知的版面配置屬性。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.PathToPropertyMap">
            <summary>
Silverlight 不提供從 PropertyPath 取得 DependencyProperty 的直接方法，因此，此結構是用於找出追蹤的路徑。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.StopAnimations">
            <summary>
停止動畫並取代為了支援該動畫所進行的版面配置變更。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTransition(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState)">
            <summary>
找出 VisualStateManager 將用於以動畫顯示變更的轉換，讓版面配置動畫可以符合持續時間及加/減速。
            </summary>
<param name="group">發生轉換的群組</param>
<param name="previousState">原本的狀態</param>
<param name="state">要成為的狀態</param>
<returns>轉換</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.ExtractLayoutStoryboard(System.Windows.VisualState)">
            <summary>
針對狀態從腳本移除所有版面配置影響的屬性，並在附加屬性中快取這些屬性。
            </summary>
<param name="state">要移到的狀態</param>
<returns>包含該狀態之版面配置屬性的腳本</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.FindTargetElements(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
目標元素集就是可能已在版面配置轉換中移動的所有元素集。此集合是下列的終止：- 含有在狀態中以動畫顯示之版面配置屬性的元素。- 集合中元素的同層級項目。- 集合中元素的父項。
             
後續的程式碼會在版面配置變更之前及之後檢查這些矩形。
            </summary>
<param name="control">其版面配置正在變更狀態的控制項</param>
<param name="layoutStoryboard">包含版面配置變更的腳本</param>
<param name="originalValueRecords">先前狀態瀏覽中，可能還原的任何先前值</param>
<param name="movingElements">目前移動中的一組元素 (如果有狀態變更轉換正在進行)</param>
<returns>其版面配置可能已經變更的整組元素</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetRectsOfTargets(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
為目標清單中的所有元素取得一組矩形。
            </summary>
<param name="targets">要考慮的元素集</param>
<param name="movingElements">目前移動中的元素集</param>
<returns>將元素對應至其矩形的字典</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetLayoutRect(System.Windows.FrameworkElement)">
            <summary>
取得元素的版面配置矩形，方法是取得版面配置位置，然後計算使用的是哪個部分的位置。
            </summary>
<param name="element">要取得其矩形的元素</param>
<returns>該元素的版面配置矩形</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.GetOldOpacities(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord},System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
取得狀態變更時元素的不透明度，而非可見度，因為狀態變更可能正在處理中，因此目前的值是最重要的。
            </summary>
<param name="control">其狀態正在變更的控制項</param>
<param name="layoutStoryboard">含有版面配置屬性的腳本</param>
<param name="originalValueRecords">一組原始值</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.SetLayoutStoryboardProperties(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.Windows.Media.Animation.Storyboard,System.Collections.Generic.List{Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord})">
            <summary>
瀏覽版面配置腳本並使用 SetValue 設定所有屬性，以啟用對 UpdateLayout 的呼叫，而不使時間軸滴答，因為這會導致轉譯。所有遭到覆寫的值會儲存在 OriginalValueRecords 集合中，以便稍後可取代這些值。
            </summary>
<param name="control">其狀態正在變更的控制項</param>
<param name="layoutStoryboard">保存版面配置屬性的腳本</param>
<param name="originalValueRecords">原始值存放區</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.WrapMovingElementsInCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Windows.Rect})">
            <summary>
將所有要移動的元素當做版面配置動畫的結果，並將它們包裝在畫布中，使其不影響其同層級元素。
            </summary>
<param name="movingElements">要移動的元素集</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.UnwrapMovingElementsFromCanvases(System.Collections.Generic.List{System.Windows.FrameworkElement})">
            <summary>
將所有一直在移動的元素當做版面配置動畫的結果，並將它們從其畫布取消包裝。
            </summary>
<param name="movingElements">一直在移動的元素集</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CopyLayoutProperties(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Boolean)">
            <summary>
將版面配置屬性從來源元素複製到目標元素，以便將它們從來源清除。
            </summary>
<param name="source">版面配置屬性的來源</param>
<param name="target">版面配置屬性的目的地</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.CreateLayoutTransitionStoryboard(System.Windows.VisualTransition,System.Collections.Generic.List{System.Windows.FrameworkElement},System.Collections.Generic.Dictionary{System.Windows.FrameworkElement,System.Double})">
            <summary>
建立要用於以動畫顯示轉換的實際腳本。使用所有先前計算的結果。
            </summary>
<param name="duration">動畫的持續時間</param>
<param name="ease">要在動畫中使用的加/減速功能</param>
<param name="movingElements">要移動的元素集</param>
<param name="oldOpacities">其可見度正在變更之元素的原有不透明度</param>
<returns>腳本</returns>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.ExtendedVisualStateManager.OriginalLayoutValueRecord">
            <summary>
OriginalValueRecord 會記住在狀態中變更之屬性的原始值。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveScope">
            <summary>
這個列舉型別指出 FluidMoveBehavior 是套用至它所附加到的元素，還是套用至該元素的子項。&quot;Self&quot; 適用於單一元素應呈現特殊行為的情況；&quot;Children&quot; 則適用於相同行為應套用至 WrapPanel 所有子項，或套用至 ItemsControl 之 ItemsHost 面板的情況。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior">
            <summary>
監控元素 (或一組元素) 之版面配置變更，並在需要時將元素平順地移至新位置的行為。此行為不會以動畫顯示元素的大小或可見度，它只會以動畫顯示該元素在其父容器內的位移。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.DurationProperty">
            <summary>
移動持續時間的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesToProperty">
            <summary>
行為範圍的 DependencyProperty。如需詳細資訊，請參閱 FluidMoveScope。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActiveProperty">
            <summary>
行為之使用中狀態的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseXProperty">
            <summary>
要用於移動的水平元件之 EasingFunction 的 DependencyProperty。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseYProperty">
            <summary>
要用於移動的垂直元件之 EasingFunction 的 DependencyProperty。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.Duration">
            <summary>
移動的持續時間。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.AppliesTo">
            <summary>
指出行為只要套用至此元素，或套用至元素的所有子項 (如果該元素是面板)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.IsActive">
            <summary>
指出行為目前是否使用中。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseX">
            <summary>
要用於移動之水平元件的 EasingFunction。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.FluidMoveBehavior.EaseY">
            <summary>
要用於移動之垂直元件的 EasingFunction。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.GoToStateAction">
            <summary>
叫用此動作可將 FrameworkElement 轉換為指定的 VisualState。
            </summary>
            <remarks>
如果已設定 TargetName 屬性，此動作會嘗試變更目標元素的狀態。如果未設定，它會查看元素樹狀目錄，以嘗試找出定義狀態的替代目標。ControlTemplate 和 UserControl 是兩個常見的可能目標。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.OnTargetChanged(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
當目標變更時呼叫。如果未設定 TargetName 屬性，此動作會具有自訂行為。
            </summary>
            <param name="oldTarget"></param>
            <param name="newTarget"></param>
<exception cref="T:System.InvalidOperationException">找不到含有狀態的適當 FrameworkElement。</exception>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.GoToStateAction.Invoke(System.Object)">
            <summary>
當符合某些條件且叫用動作時，會呼叫此方法。
            </summary>
            <param name="parameter"></param>
<exception cref="T:System.InvalidOperationException">無法將目標變更為指定的 StateName。</exception>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.UseTransitions">
            <summary>
是否要使用 VisualTransition 來轉換狀態。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.GoToStateAction.StateName">
            <summary>
VisualState 的名稱。  
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.HyperlinkAction">
            <summary>
將瀏覽至指定超連結的動作。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.HyperlinkAction.Invoke(System.Object)">
            <summary>
當符合某些條件且叫用動作時，會呼叫此方法。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.NavigateUri">
            <summary>
要開啟之頁面的 URI。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.HyperlinkAction.TargetWindow">
            <summary>
應在其中開啟 NavigateUri 之視窗或索引標籤的名稱。 
            </summary>
            <remarks>
下面幾個值具有特殊意義：&quot;_blank&quot; 會在新的瀏覽器視窗中載入、&quot;_parent&quot; 會嘗試在父框架中載入，而 &quot;_self&quot; 會以目前的頁面或框架為目標。 
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Input.KeyTrigger">
            <summary>
由鍵盤事件觸發的觸發程序。如果偵測到目標按鍵和輔助按鍵，它就會觸發。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Key">
            <summary>
必須按下以使觸發程序觸發的按鍵。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.Modifiers">
            <summary>
必須為使用中才能使觸發程序觸發的修飾詞 (預設為未按下修飾詞)。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Input.KeyTrigger.FiredOn">
            <summary>
是否要聆聽 KeyDown 或 KeyUp 事件。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior">
            <summary>
重新置放附加的元素以回應元素上的滑鼠拖曳筆勢。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.XProperty">
            <summary>
拖曳的元素之 X 位置的 DependencyProperty，相對於根元素的左邊。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.YProperty">
            <summary>
拖曳的元素之 Y 位置的 DependencyProperty，相對於根元素的頂端。
            </summary>
        </member>
        <member name="F:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBoundsProperty">
            <summary>
ConstrainToParentBounds 屬性的 DependencyProperty。如果為 true，將會限制拖曳的元素要保持在其父容器的界限內。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition(System.Windows.Point)">
            <summary>
嘗試將關聯元素的位置更新為指定的座標。
            </summary>
<param name="point">根座標中元素的所要位置。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslation(System.Double,System.Double)">
            <summary>
將相對位置平移套用至關聯的元素。
            </summary>
<param name="x">根座標中所要平移的 X 元件。</param>
<param name="y">根座標中所要平移的 Y 元件。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ApplyTranslationTransform(System.Double,System.Double)">
            <summary>
將指定平移套用至關聯元素的 RenderTransform。
            </summary>
<param name="x">父座標中平移的 X 元件。</param>
<param name="y">父座標中平移的 Y 元件。</param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.UpdatePosition">
            <summary>
根據關聯元素目前呈現的位置來更新 X 和 Y 屬性。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.IsValidConstrainedMove(System.Windows.Point)">
            <summary>
決定指定的游標位置是否應該算是拖曳作業的一部分。
            </summary>
<param name="currentPosition">游標位置。</param>
            <returns>
	如果提供的位置應視為拖曳作業的一部分則為 <c>true</c>，否則為 <c>false</c>。
            </returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RectContainsRect(System.Windows.Rect,System.Windows.Rect)">
            <summary>
檢查某個矩形是否由另一個矩形所包含。
            </summary>
<param name="rect1">包含的矩形。</param>
<param name="rect2">被包含的矩形。</param>
<returns>如果 rect1 包含 rect2 則為 <c>true</c>，否則為 <c>false</c></returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.TransformAsVector(System.Windows.Media.GeneralTransform,System.Double,System.Double)">
            <summary>
轉換為向量。
            </summary>
<param name="transform">轉換。</param>
<param name="x">向量的 X 元件。</param>
<param name="y">向量的 Y 元件。</param>
<returns>包含由轉換為向量所轉換之 X 和 Y 值的點。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.GetTransformOffset(System.Windows.Media.GeneralTransform)">
            <summary>
取得轉換位移。
            </summary>
<param name="transform">轉換。</param>
<returns>轉換的位移。</returns>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnAttached">
            <summary>
在行為附加到 AssociatedObject 後呼叫。
            </summary>
<remarks>覆寫此設定以便將功能連接至 AssociatedObject。</remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.OnDetaching">
            <summary>
當行為正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
<remarks>覆寫此設定以便從 AssociatedObject 取消連接功能。</remarks>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragBegun">
            <summary>
起始拖曳筆勢時發生。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Dragging">
            <summary>
處理拖曳筆勢更新時發生。
            </summary>
        </member>
        <member name="E:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.DragFinished">
            <summary>
完成拖曳筆勢時發生。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.X">
            <summary>
取得或設定拖曳的元素之 X 位置，相對於根元素的左邊。這是相依性屬性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.Y">
            <summary>
取得或設定拖曳的元素之 Y 位置，相對於根元素的頂端。這是相依性屬性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ConstrainToParentBounds">
            <summary>
取得或設定值，該值指出是否限制拖曳的元素要保持在其父容器的界限內。這是相依性屬性。
            </summary>
            <value>
	如果將拖曳的元素應限制在其父容器的界限內則為 <c>true</c>，否則為 <c>false</c>。
            </value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ActualPosition">
            <summary>
取得根座標中關聯元素的螢幕位置。
            </summary>
<value>根座標中關聯元素的螢幕位置。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ElementBounds">
            <summary>
取得元素座標中的元素界限。
            </summary>
<value>元素座標中的元素界限。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.ParentElement">
            <summary>
取得關聯物件的父元素。
            </summary>
<value>關聯物件的父元素。</value>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Layout.MouseDragElementBehavior.RootElement">
            <summary>
取得關聯物件所在之場景的根元素。
            </summary>
<value>關聯物件所在之場景的根元素。</value>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction">
            <summary>
將播放完成聲音的動作。
            </summary>
            <remarks>
此動作適用於不需要停止或控制的短音效。如果您要嘗試建立音樂播放程式或遊戲，它可能不符合您的需求。
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Media.PlaySoundAction"/> 類別的新例項。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.SetMediaElementProperties(System.Windows.Controls.MediaElement)">
            <summary>
當叫用動作時，會使用此方法來自訂動態建立的 MediaElement。
            </summary>
            <remarks>
對於想要延伸 PlaySoundAction 的動作撰寫者，此方法可能很實用。如果您想要控制 MediaElement Balance 屬性，可以從 PlaySoundAction 繼承並覆寫此方法。
            </remarks>
            <param name="mediaElement"></param>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Invoke(System.Object)">
            <summary>
當符合某些條件且應該叫用動作時，會呼叫此方法。 
            </summary>
            <remarks>
每次叫用動作時會播放新的聲音。雖然實作可能隨時變更，呼叫者應預期這會建立新的 MediaElement，當聲音完成或媒體無法播放時會清除該 MediaElement。
            </remarks>
            <param name="parameter"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Source">
            <summary>
定義聲音檔位置的 URI。這是用於設定 MediaElement 的 Source 屬性。這是相依性屬性。
            </summary>
            <remarks>
聲音可以是 MediaElement 所支援的任何檔案格式。如果是影片，只會播放音訊部分。
            </remarks>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.PlaySoundAction.Volume">
            <summary>
控制聲音的音量。這是用於設定 MediaElement 的 Volume 屬性。這是相依性屬性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.RemoveElementAction">
            <summary>
叫用時會從樹狀目檔移除目標元素的動作。
            </summary>
            <remarks>
此動作可能會失敗。該動作知道如何從共同父代移除元素，而不是從自訂集合或直接操作視覺化樹狀目錄。
            </remarks>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardAction">
            <summary>
能夠以腳本為目標的抽象類別。
            </summary>
            <remarks>
此類別可為動作撰寫者提供以腳本為目標的標準方式。設計工具可選擇為繼承自此動作的類別提供特殊的編輯經驗，因而改善設計師的經驗。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardAction.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
當 Storyboard 屬性變更時，會呼叫此方法。
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardAction.Storyboard">
            <summary>
目標腳本。這是相依性屬性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction">
            <summary>
叫用時將變更目標腳本狀態的動作。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.ControlStoryboardAction.Invoke(System.Object)">
            <summary>
當符合某些條件且應該叫用動作時，會呼叫此方法。此方法會嘗試依照 ControlStoryboardOption 所定義的方式，變更目標腳本。
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardTrigger">
            <summary>
能夠以腳本為目標的抽象類別。
            </summary>
            <remarks>
此類別可為觸發程序撰寫者 提供以腳本為目標的標準方式。設計工具可選擇為繼承自此觸發程序的類別提供特殊的編輯經驗，因而改善設計師的經驗。 
            </remarks>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.OnStoryboardChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
當 Storyboard 屬性變更時，會呼叫此方法。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Media.StoryboardTrigger.Storyboard">
            <summary>
目標腳本。這是相依性屬性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger">
            <summary>
聆聽腳本完成的觸發程序。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Media.StoryboardCompletedTrigger"/> 類別的新例項。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.Core.TimerTrigger">
            <summary>
觸發程序，由在其來源發生之指定事件所觸發，且會在該事件觸發後經過一段延遲時間再觸發。
            </summary>
        </member>
        <member name="M:Microsoft.Expression.Interactivity.Core.TimerTrigger.#ctor">
            <summary>
初始化 <see cref="T:Microsoft.Expression.Interactivity.Core.TimerTrigger"/> 類別的新例項。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.MillisecondsPerTick">
            <summary>
取得或設定滴答聲之間要等候的毫秒數。這是相依性屬性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.Core.TimerTrigger.TotalTicks">
            <summary>
取得或設定在觸發程序完成前要觸發的滴答聲總數。這是相依性屬性。
            </summary>
        </member>
        <member name="T:Microsoft.Expression.Interactivity.ExceptionStringTable">
            <summary>
強型別資源類別，用於查詢當地語系化字串等等。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
傳回此類別所使用的快取 ResourceManager 例項。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.Culture">
            <summary>
使用此強型別資源類別，為所有資源查閱覆寫目前執行緒的 CurrentUICulture 屬性。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotFindPropertyNameExceptionMessage">
            <summary>
查詢類似「在類型 &quot;{1}&quot; 上找不到名為 &quot;{0}&quot; 的屬性。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionCannotSetValueExceptionMessage">
            <summary>
查詢類似「無法將類型 &quot;{0}&quot; 的值指定給類型 &quot;{2}&quot; 的屬性 &quot;{1}&quot;。&quot;{1}&quot; 屬性只能指定類型 &quot;{2}&quot; 的值。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.ChangePropertyActionPropertyIsReadOnlyExceptionMessage">
            <summary>
查詢類似「類型 &quot;{1}&quot; 所定義的屬性 &quot;{0}&quot; 未公開 set 方法，因此無法修改。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionStateChangeFailed">
            <summary>
查詢類似「無法將目標 {0} 的狀態變更為 {1}。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.GoToStateActionTargetHasNoStateGroups">
            <summary>
查詢類似「目標 {0} 未定義任何 VisualStateGroups。」的當地語系化字串。 .
            </summary>
        </member>
        <member name="P:Microsoft.Expression.Interactivity.ExceptionStringTable.UnsupportedRemoveTargetExceptionMessage">
            <summary>
查詢類似「不支援 RemoveElementAction 的目標。」的當地語系化字串。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\SourceIndex\release.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Changes in Sources Server 6 Title _PID_LINKBASEChanges in Sources Server 6 Normal.dot Microsoft Office Wordbjbj5G5G release.doc - Changes in Source Server 6.4.06. This release of Source Server incorporates significant changes to the indexing scripts, as well as new features and new documentation.   The documentation for Source Server has been restructured into three files.  It is important that all of these documents be examined before implementing Source Server in your build scripts. srcsrv.doc - standard publicly released documentation supplemental.doc - internal docs specific to Source Depot release.doc - this document The indexing scripts have been completely restructured. ssindex.cmd - master indexing script sd.pm - Source Depot module sdindex.cmd - Source Depot wrapper for ssindex.cmd p4.pm - Perforce module p4index.cmd  - Perforce wrapper for ssindex.cmd vss.pm - Visual SourceSafe module vssindex.cmd - Visual SourceSafe wrapper for ssindex.cmd ssindex.cmd is the single unified indexing script that works with all supported version control systems.  It is called with a module specifying the desired version control system, by using the  system command line switch.  This switch can be set to SD, P4, or VSS.  You can skip this step by using one of the wrapper scripts, sdindex.cmd, p4index.cmd, or vssindex.cmd.  Almost all Microsoft projects will be using the Source Depot module and can be called with the sdindex.cmd wrapper script. You can get generic help for working with the new script by calling the script for help as so ssindex.cmd You can get Source Depot specific help by calling the script as so ssindex.cmd -system=sd -? The old script for source indexing was sdsrcind.cmd.  This is no longer distributed or supported.  There are some differences between the old script parameters and the new ones.  In the following table, the old command line switch is boldfaced in black and the new one (if applicable) is boldfaced in red. This switch was used to delete srcsrv.srv and srcsrv.have files that might have remained from a previous run.  It no longer applies because these files are no longer generated by the new scripts. -src [SourceDir] -source=[SourceDir] This specifies the directory to initialize source list from.  The default is the current directory.  You can now do this by setting srcsrv_source in the environment or using the  source command line switch. -sym [SymbolDir] -symbols=[SymbolDir] This specifies the root directory containing the PDBs to add the source server stream to.  You can now do this by setting srcsrv_symbols in the environment or using the  symbols command line switch. -label [LabelText] -label=[LabelText] Index all enlistments as they match the specified source depot label.  This indexing method takes more time, but does not require the source to be synced to the state of the build.  PDBs indexed with this method will cause the client debugger to access the source by label instead of by version number.  The command line switch for this is unchanged, however you can also use the sd_label environment variable to pass the same information. -nopdbs  -save Tells the script to skip the step of actually writing the source indexing information to the PDBs.  This option was used to prepare source and server file lists to be used by the  append option.  This switch is no longer supported.  You can achieve the same  results by setting the symbols directory to a non-existent directory.   Another effect of this option was to save the depot and source information to file that could be used by the  append command line switch (described later).  This functionality is replaced by the  save command line switch.   -append  -load Causes the script not to initialize the source list or server list.  Instead, all new source and server information is appended to these pre-existing files (srcsrv.have and srcsrv.srv).  This option infers  i, and allows the user to combine source and server file lists.  This has been replaced by the  load command line switch.  If used along with the  save command line switch, the entire set of source and depot information will be saved to file for reuse.  Normally, the combination of  load and  save  will be used with a nonexistent symbols path to avoid the actual instrumentation of the symbols. Both the  source and  symbols switches now accept semicolon-delineated paths.  This allows you to specify multiple paths for both of these values. As well as the new scripts and syntax, there is a new feature that adds information to the pdb that assists a debugger client in knowing when a depot is unavailable to the user.  This is used to prevent repeated attempts to load from a location that will not work.  The feature is automatically added by these scripts and need no interaction from the user to be utilized.  However client debuggers will need upgrades to take advantage of this information. PDB files indexed using these new scripts will work fine with older client debugger releases. xgxgx
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hans\System.Windows.Interactivity.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Interactivity</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
代表具有共享的 AssociatedObject 的 IAttachedObject 的集合，并且在该 AssociatedObject 更改时向集合的内容提供更改通知。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
供可以附加到另一个对象的对象使用的接口。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的对象。
            </summary>
<param name="dependencyObject">要附加到的对象。</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
将此实例与其关联的对象分离。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
获得关联的对象。
            </summary>
<value>关联的对象。</value>
<remarks>代表此实例附加到的对象。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.AttachableCollection`1"/> 类的新实例。
            </summary>
<remarks>内部，因为这不应在此程序集的外部被继承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
在将集合附加到 AssociatedObject 后立即调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
在集合与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemAdded(`0)">
            <summary>
在将新项目添加到集合中时调用。
            </summary>
<param name="item">新项目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemRemoved(`0)">
            <summary>
在从集合中删除项目时调用。
            </summary>
<param name="item">删除的项目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.VerifyAdd(`0)">
<exception cref="T:System.InvalidOperationException">无法将此实例多次添加到集合中。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的对象。
            </summary>
<param name="dependencyObject">要附加到的对象。</param>
<exception cref="T:System.InvalidOperationException">IAttachedObject 已附加到另一个对象。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
将此实例与其关联的对象分离。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
在其上承载集合的对象。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
获得关联的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior`1">
            <summary>
将状态信息和零个或更多个 ICommand 封装到一个可附加的对象中。
            </summary>
<typeparam name="T"><see cref="T:System.Windows.Interactivity.Behavior`1"/> 可附加到的类型。</typeparam>
            <remarks>
	Behavior 是用于向对象提供可附加的状态和命令的基类。Behavior 可以附加到的类型可以由泛型参数来控制。替代 OnAttached() 和 OnDetaching() 方法，以挂钩和解除挂钩来自 AssociatedObject 的任何必要处理程序。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
将状态信息和零个或更多个 ICommand 封装到一个可附加的对象中。
            </summary>
<remarks>这是基础结构类。行为设计者应从 Behavior&lt;T&gt; 而不是从此类中派生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
在行为附加到 AssociatedObject 后调用。
            </summary>
<remarks>替代它以便将功能挂钩到 AssociatedObject。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
在行为与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
<remarks>替代它以便将功能从 AssociatedObject 中解除挂钩。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的对象。
            </summary>
<param name="dependencyObject">要附加到的对象。</param>
<exception cref="T:System.InvalidOperationException">已在另一个元素上承载 Behavior。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 未满足 Behavior 类型约束的要求。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
将此实例与其关联的对象分离。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
可将此行为附加到的类型。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
获得此行为附加到的对象。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
获得关联的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.Behavior`1"/> 类的新实例。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior`1.AssociatedObject">
            <summary>
获得此 <see cref="T:System.Windows.Interactivity.Behavior`1"/> 附加到的对象。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
代表具有共享的 AssociatedObject 的行为的集合，并且在该 AssociatedObject 更改时向集合的内容提供更改通知。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> 类的新实例。
            </summary>
<remarks>内部，因为这不应在此程序集的外部被继承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
在将集合附加到 AssociatedObject 后立即调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
在集合与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemAdded(System.Windows.Interactivity.Behavior)">
            <summary>
在将新项目添加到集合中时调用。
            </summary>
<param name="item">新项目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemRemoved(System.Windows.Interactivity.Behavior)">
            <summary>
在从集合中删除项目时调用。
            </summary>
<param name="item">删除的项目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditor">
            <summary>
为可重用的属性值编辑器枚举可能的值。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Element">
            <summary>
在设计时使用元素选取器（如果支持的话）编辑此属性。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Storyboard">
            <summary>
在设计时使用情节提要选取器（如果支持的话）编辑此属性。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.StateName">
            <summary>
在设计时使用状态选取器（如果支持的话）编辑此属性。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute">
            <summary>
将给定的编辑器类型与在其上应用 CustomPropertyValueEditor 的属性相关联。
            </summary>
<remarks>使用此属性改善在设计时对指示元素（按名称）、情节提要或状态（按名称）的属性进行的编辑。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.#ctor(System.Windows.Interactivity.CustomPropertyValueEditor)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute"/> 类的新实例。
            </summary>
<param name="customPropertyValueEditor">自定义属性值编辑器。</param>
        </member>
        <member name="P:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.CustomPropertyValueEditor">
            <summary>
获得或设置自定义属性值编辑器。
            </summary>
<value>自定义属性值编辑器。</value>
        </member>
        <member name="T:System.Windows.Interactivity.DefaultTriggerAttribute">
            <summary>
提供有关为给定的操作或命令实例化哪种 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的设计工具信息。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 类的新实例。
            </summary>
<param name="targetType">此属性应用于的类型。</param>
<param name="triggerType">要实例化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的类型。</param>
<param name="parameters">指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的单个参数。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> 未从 TriggerBase 派生。</exception>
<remarks>如果指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 具有单个参数，则此构造函数很有用。所获得的代码将与 CLS 兼容。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 类的新实例。
            </summary>
<param name="targetType">此属性应用于的类型。</param>
<param name="triggerType">要实例化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的类型。</param>
<param name="parameters">指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的构造函数参数。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> 未从 TriggerBase 派生。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.Instantiate">
            <summary>
实例化此实例。
            </summary>
<returns>DefaultTriggerAttribute 指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/>。</returns>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TargetType">
            <summary>
获得此 DefaultTriggerAttribute 应用于的类型。
            </summary>
<value>此 DefaultTriggerAttribute 应用于的类型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TriggerType">
            <summary>
获得要实例化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的类型。
            </summary>
<value>要实例化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的类型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.Parameters">
            <summary>
获得要传递给 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 构造函数的参数。
            </summary>
<value>要传递给 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 构造函数的参数。</value>
        </member>
        <member name="T:System.Windows.Interactivity.EventTrigger">
            <summary>
一个触发器，它侦听其源上的指定事件，并且在触发该事件时触发。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase`1">
            <summary>
代表一个触发器，它可以侦听不同于其 AssociatedObject 的元素。
            </summary>
<typeparam name="T">此触发器可以关联的类型。</typeparam>
            <remarks>
	EventTriggerBase 扩展 TriggerBase，以添加与它附加到的元素不同的其他元素的知识。这允许用户将触发器/操作对附加到一个元素，并调用此操作以响应位于别的地方的其他元素中的更改。替代 OnSourceChanged 以挂钩或解除挂钩源元素上的处理程序，并为关联的元素替代 OnAttached/OnDetaching。源元素的类型可以由泛型类型参数约束。如果需要控制 AssociatedObject 的类型，请在派生类型上设置 TypeConstraintAttribute。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase">
            <summary>
代表一个触发器，它可以侦听不同于其 AssociatedObject 的元素。
            </summary>
<remarks>这是基础结构类。触发器设计者应从 EventTriggerBase&lt;T&gt; 而不是从此类中派生。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase">
            <summary>
代表可以有条件地调用操作的对象。
            </summary>
<remarks>这是基础结构类。触发器设计者应从 Trigger&lt;T&gt; 而不是从此类中派生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)">
            <summary>
调用与此触发器关联的所有操作。
            </summary>
<remarks>派生类应调用此方法以触发触发器。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnAttached">
            <summary>
在触发器附加到 AssociatedObject 后调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnDetaching">
            <summary>
在触发器与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的对象。
            </summary>
<param name="dependencyObject">要附加到的对象。</param>
<exception cref="T:System.InvalidOperationException">无法同时在多个对象上承载相同的 Trigger。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 未满足 Trigger 类型约束的要求。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Detach">
            <summary>
将此实例与其关联的对象分离。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObject">
            <summary>
获得触发器附加到的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.Actions">
            <summary>
获得与此触发器关联的操作。
            </summary>
<value>与此触发器关联的操作。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
获得关联的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.GetEventName">
            <summary>
指定此 EventTriggerBase 所侦听的事件的名称。
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)">
            <summary>
在触发与此 EventTriggerBase 关联的事件时调用。默认情况下，这将在触发器上调用所有操作。
            </summary>
<param name="eventArgs">包含事件数据的 <see cref="T:System.EventArgs"/> 实例。</param>
<remarks>替代它以便提供有关何时将调用与此触发器关联的操作的更细致控制。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnSourceChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
在源更改时调用。
            </summary>
<param name="oldSource">旧的源。</param>
<param name="newSource">新的源。</param>
<remarks>应在派生类中替代此函数，以便将功能挂钩到更改的源对象和将功能从这些对象中解除挂钩。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnAttached">
            <summary>
在触发器附加到 AssociatedObject 后调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnDetaching">
            <summary>
在触发器与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.RegisterEvent(System.Object,System.String)">
<exception cref="T:System.ArgumentException">无法在目标上找到 eventName。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
<remarks>在派生类型上定义 TypeConstraintAttribute，以约束它可能附加到的类型。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint">
            <summary>
获得源类型约束。
            </summary>
<value>源类型约束。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceName">
            <summary>
获得或设置此 EventTriggerBase 作为源侦听的元素的名称。如果未设置或无法解析名称，则将使用 AssociatedObject。这是依赖属性。
            </summary>
<value>源元素的名称。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.Source">
            <summary>
获得解析的源。如果未设置或无法解析 <c ref="SourceName"/>，则默认为 AssociatedObject。
            </summary>
<value>解析的源对象。</value>
<remarks>通常，在派生类中应使用此属性来取代 AssociatedObject。</remarks>
<exception cref="T:System.InvalidOperationException"><c cref="P:System.Windows.Interactivity.EventTriggerBase.Source"/> 所指向的元素未满足类型约束的要求。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTriggerBase`1"/> 类的新实例。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.OnSourceChanged(`0,`0)">
            <summary>
在源属性更改时调用。
            </summary>
<remarks>替代它以便将功能挂钩到指定的源（而不是 AssociatedObject）和将功能从此源中解除挂钩。</remarks>
<param name="oldSource">旧的源。</param>
<param name="newSource">新的源。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase`1.Source">
            <summary>
获得解析的源。如果未设置或无法解析 <c ref="SourceName"/>，则默认为 AssociatedObject。
            </summary>
<value>解析的源对象。</value>
<remarks>通常，在派生类中应使用此属性来取代 AssociatedObject。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTrigger"/> 类的新实例。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor(System.String)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTrigger"/> 类的新实例。
            </summary>
<param name="eventName">事件的名称。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTrigger.EventName">
            <summary>
获得或设置要侦听的事件的名称。这是依赖属性。
            </summary>
<value>事件的名称。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
拥有 Triggers 和 Behaviors 附加属性的静态类。处理 AssociatedObject 更改通知的传播。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.TriggersProperty">
            <summary>
此属性用作公共的 Triggers 附加属性的内部后备存储。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
此属性用作公共的 Behaviors 附加属性的内部后备存储。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)">
            <summary>
获得包含与指定对象关联的触发器的 TriggerCollection。
            </summary>
<param name="obj">通过其检索触发器的对象。</param>
<returns>包含与指定对象关联的触发器的 TriggerCollection。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)">
            <summary>
获得与指定对象关联的 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>。
            </summary>
<param name="obj">通过其检索 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> 的对象。</param>
<returns>包含与指定对象关联的行为的 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnBehaviorsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">无法同时在多个对象上承载相同的 BehaviorCollection。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnTriggersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">无法同时在多个对象上承载相同的 TriggerCollection。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
帮助程序函数，用来取代 FrameworkElement.IsLoaded，因为 Silverlight 没有与之类似的属性。
            </summary>
<param name="element">所关注的元素。</param>
<returns>如果已加载此元素，则为 true，否则为 false</returns>
        </member>
        <member name="T:System.Windows.Interactivity.InvokeCommandAction">
            <summary>
在被调用时，在宿主行为上执行指定的操作。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction`1">
            <summary>
代表封装功能单元的可附加对象。
            </summary>
<typeparam name="T">可将此操作附加到的类型。</typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction">
            <summary>
代表封装功能单元的可附加对象。
            </summary>
<remarks>这是基础结构类。操作设计者应从 TriggerAction&lt;T&gt; 而不是从此类中派生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.CallInvoke(System.Object)">
            <summary>
尝试调用操作。
            </summary>
<param name="parameter">操作的参数。如果操作不需要参数，则可以将参数设置为空引用。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Invoke(System.Object)">
            <summary>
调用操作。
            </summary>
<param name="parameter">操作的参数。如果操作不需要参数，则可以将参数设置为空引用。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnAttached">
            <summary>
在操作附加到 AssociatedObject 后调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnDetaching">
            <summary>
在操作与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的对象。
            </summary>
<param name="dependencyObject">要附加到的对象。</param>
<exception cref="T:System.InvalidOperationException">无法同时在多个对象上承载相同的 TriggerAction。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 未满足 TriggerAction 类型约束的要求。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Detach">
            <summary>
将此实例与其关联的对象分离。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsEnabled">
            <summary>
获得或设置一个值，该值指示此操作在被调用时是否将运行。这是依赖属性。
            </summary>
            <value>
	如果此操作在被调用时将运行，则为 <c>true</c>，否则为 <c>false</c>。
            </value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObject">
            <summary>
获得此操作附加到的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsHosted">
            <summary>
获得或设置一个指示是否附加此实例的值。
            </summary>
<value>如果附加此实例，则为 <c>true</c>，否则为 <c>false</c>。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
获得关联的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> 类的新实例。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObject">
            <summary>
获得此 <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> 附加到的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.Invoke(System.Object)">
            <summary>
调用操作。
            </summary>
<param name="parameter">操作的参数。如果操作不需要参数，则可以将参数设置为空引用。</param>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.OnAttached">
            <summary>
在集合附加到 AssociatedObject 后调用。
            </summary>
<exception cref="T:System.InvalidOperationException">必须在行为上承载 InvokeActionCommand。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandName">
            <summary>
获得或设置此操作应调用的命令的名称。
            </summary>
<value>此操作应调用的命令的名称。</value>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
获得或设置命令参数。
            </summary>
<value>命令参数。</value>
<remarks>这是传递给 ICommand.CanExecute 和 ICommand.Execute 的值。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolvedEventArgs">
            <summary>
提供有关在解析名称更改时影响到哪些对象的数据。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolver">
            <summary>
帮助程序类，用于处理此逻辑：根据主机元素提供的上下文，将 TargetName 解析为 Target 元素。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.NameResolver.UpdateObjectFromName(System.Windows.DependencyObject)">
            <summary>
尝试通过在名称范围引用元素的上下文中的名称来更新所解析的对象。
            </summary>
<param name="oldObject">旧的解析对象。</param>
            <remarks>
重设现有的目标，并尝试通过当前主机的上下文解析当前的 TargetName。如果它无法通过主机的上下文进行解析，它将继续沿着可视化树向上，直至获得解析为止。如果在它到达根部时尚未获得解析，则它将 Target 设置为 NULL，并在 Debug 输出中写入警告消息。
            </remarks>
        </member>
        <member name="E:System.Windows.Interactivity.NameResolver.ResolvedElementChanged">
            <summary>
在所解析的元素更改时发生。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Name">
            <summary>
获得或设置要尝试解析的元素的名称。
            </summary>
<value>要尝试解析的名称。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Object">
            <summary>
所解析的对象。如果 TargetName 为 NULL 或为空，或者如果未尝试进行解析，则将返回引用元素。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.NameScopeReferenceElement">
            <summary>
获得或设置通过其执行名称解析的引用元素。
            </summary>
<value>引用元素。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.PendingReferenceElementLoad">
            <summary>
获得或设置一个值，它指示是否挂起引用元素的加载。
            </summary>
            <value>
	如果挂起引用元素的加载，则为 <c>true</c>，否则为 <c>false</c>。
            </value>
            <remarks>
如果未加载主机，则将无法解析名称。在这种情况下，延迟解析并利用此属性跟踪该事实。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction`1">
            <summary>
代表一项操作，可以将该操作确定为目标以影响不同于其 AssociatedObject 的对象。
            </summary>
<typeparam name="T">有关目标的类型约束。</typeparam>
            <remarks>
	TargetedTriggerAction 扩展 TriggerAction，以添加与它附加到的元素不同的其他元素的知识。这允许用户在与操作附加到的元素不同的元素上调用操作，以响应触发器的触发。替代 OnTargetChanged 以挂钩或解除挂钩目标元素上的处理程序，并为关联的元素替代 OnAttached/OnDetaching。目标元素的类型可以由泛型类型参数约束。如果需要控制 AssociatedObject 的类型，请在派生类型上设置 TypeConstraintAttribute。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction">
            <summary>
代表一项操作，可以将该操作确定为目标以影响不同于其 AssociatedObject 的对象。
            </summary>
<remarks>这是基础结构类。操作设计者应从 TargetedTriggerAction&lt;T&gt; 而不是从此类中派生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnTargetChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
在目标更改时被调用。
            </summary>
<param name="oldTarget">旧的目标。</param>
<param name="newTarget">新的目标。</param>
<remarks>应在派生类中替代此函数，以便将功能挂钩到更改的源对象和将功能从这些对象中解除挂钩。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnAttached">
            <summary>
在操作附加到 AssociatedObject 后调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnDetaching">
            <summary>
在操作与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetName">
            <summary>
获得或设置目标的名称。如果未设置或无法解析 TargetName，则目标将默认为 AssociatedObject。这是依赖属性。
            </summary>
<value>目标的名称。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.Target">
            <summary>
获得目标对象。如果未设置或无法解析 TargetName，则默认为 AssociatedObject。
            </summary>
<value>目标。</value>
<remarks>通常，在派生类中应使用此属性来取代 AssociatedObject。</remarks>
<exception cref="T:System.InvalidOperationException">目标元素未满足类型约束的要求。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
<remarks>在派生类型上定义 TypeConstraintAttribute，以约束它可能附加到的类型。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetTypeConstraint">
            <summary>
获得目标的类型约束。
            </summary>
<value>目标的类型约束。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TargetedTriggerAction`1"/> 类的新实例。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.OnTargetChanged(`0,`0)">
            <summary>
在目标属性更改时被调用。
            </summary>
<remarks>替代它以便在指定的目标（而不是 AssociatedObject）上挂钩和解除挂钩功能。</remarks>
<param name="oldTarget">旧的目标。</param>
<param name="newTarget">新的目标。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction`1.Target">
            <summary>
获得目标对象。如果未设置或无法解析 TargetName，则默认为 AssociatedObject。
            </summary>
<value>目标。</value>
<remarks>通常，在派生类中应使用此属性来取代 AssociatedObject。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerActionCollection">
            <summary>
代表具有共享的 AssociatedObject 的操作的集合，并且在该 AssociatedObject 更改时向集合的内容提供更改通知。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerActionCollection"/> 类的新实例。
            </summary>
<remarks>内部，因为这不应在此程序集的外部被继承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnAttached">
            <summary>
在将集合附加到 AssociatedObject 后立即调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnDetaching">
            <summary>
在集合与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemAdded(System.Windows.Interactivity.TriggerAction)">
            <summary>
在将新项目添加到集合中时调用。
            </summary>
<param name="item">新项目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemRemoved(System.Windows.Interactivity.TriggerAction)">
            <summary>
在从集合中删除项目时调用。
            </summary>
<param name="item">删除的项目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase`1">
            <summary>
代表可以有条件地调用操作的对象。
            </summary>
<typeparam name="T">可将此触发器附加到的类型。</typeparam>
            <remarks>
	TriggerBase 是用于控制操作的基类。替代 OnAttached() 和 OnDetaching()，以便在 AssociatedObject 上挂钩和解除挂钩处理程序。可以通过指定泛型参数来约束派生的 TriggerBase 可以附加到的类型。调用 InvokeActions() 以触发与此 TriggerBase 关联的所有操作。
            </remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerBase`1"/> 类的新实例。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObject">
            <summary>
获得触发器附加到的对象。
            </summary>
<value>关联的对象。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObjectTypeConstraint">
            <summary>
获得关联的对象的类型约束。
            </summary>
<value>关联的对象的类型约束。</value>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerCollection">
            <summary>
代表具有共享的 AssociatedObject 的触发器的集合，并且在该 AssociatedObject 更改时向集合的内容提供更改通知。
             </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerCollection"/> 类的新实例。
            </summary>
<remarks>内部，因为这不应在此程序集的外部被继承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnAttached">
            <summary>
在将集合附加到 AssociatedObject 后立即调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnDetaching">
            <summary>
在集合与其 AssociatedObject 分离时（但在它实际发生之前）调用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemAdded(System.Windows.Interactivity.TriggerBase)">
            <summary>
在将新项目添加到集合中时调用。
            </summary>
<param name="item">新项目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemRemoved(System.Windows.Interactivity.TriggerBase)">
            <summary>
在从集合中删除项目时调用。
            </summary>
<param name="item">删除的项目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.TypeConstraintAttribute">
            <summary>
指定有关 TargetedTriggerAction 和 EventTriggerBase 的 AssociatedObject 的类型约束。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TypeConstraintAttribute.#ctor(System.Type)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TypeConstraintAttribute"/> 类的新实例。
            </summary>
<param name="constraint">约束类型。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TypeConstraintAttribute.Constraint">
            <summary>
获得约束类型。
            </summary>
<value>约束类型。</value>
        </member>
        <member name="T:System.Windows.Interactivity.ExceptionStringTable">
            <summary>
强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
返回此类使用的已缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.Culture">
            <summary>
为使用此强类型资源类进行的所有资源查找替代当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorCollectionMultipleTimesExceptionMessage">
            <summary>
查找类似于“无法在多个对象上设置同一个 BehaviorCollection。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorMultipleTimesExceptionMessage">
            <summary>
查找类似于“行为实例无法一次附加到多个对象。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerActionMultipleTimesExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“无法同时在多个 TriggerCollections 中主持 TriggerAction 实例。在将 TriggerAction 实例添加到另一个 TriggerCollection 前请从当前 TriggerCollection 中删除该实例。”。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerCollectionMultipleTimesExceptionMessage">
            <summary>
查找类似于“无法在多个对象上设置同一个 TriggerCollection。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerMultipleTimesExceptionMessage">
            <summary>
查找类似于“触发器实例无法一次附加到多个对象。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CommandDoesNotExistOnBehaviorWarningMessage">
            <summary>
查找类似于“命令‘{0}’不存在或还未在 {1} 上公布。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“‘{0}’不是 TriggerType 参数的有效类型。确保‘{0}’是从 TriggerBase 派生。”。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DuplicateItemInCollectionExceptionMessage">
            <summary>
查找类似于“无法将‘{0}’的同一实例多次添加到‘{1}’。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.EventTriggerCannotFindEventNameExceptionMessage">
            <summary>
查找类似于“在类型‘{1}’上找不到名为‘{0}’的事件。”的本地化字符串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.InvokeActionCommandMustBeHostedOnBehaviorExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“InvokeCommandAction 必须附加到 Behavior。为此，可以通过将其添加到 Behavior 对象的 Triggers 集合内的一个触发器的 Actions 集合来完成。”。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.RetargetedTypeConstraintViolatedExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“类型‘{0}’的对象不能具有类型‘{1}’的 {3} 属性。类型‘{0}’的实例只能具有类型‘{2}’的 {3} 属性。”。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.TypeConstraintViolatedExceptionMessage">
            <summary>
查找类似于以下内容的本地化字符串：“无法将类型‘{0}’附加到类型‘{1}’。类型‘{0}’的实例只能附加到类型‘{2}’的对象。”。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.UnableToResolveTargetNameWarningMessage">
            <summary>
查找类似于“无法解析 TargetName‘{0}’。”的本地化字符串。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\Silverlight\Blend\Silverlight\v4.0\Libraries\zh-Hant\System.Windows.Interactivity.xml ===
﻿<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Interactivity</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Interactivity.AttachableCollection`1">
            <summary>
代表含有共用 AssociatedObject 的 IAttachedObject 集合，並在該 AssociatedObject 變更時提供變更通知給其內容。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.IAttachedObject">
            <summary>
可附加到其他物件之物件的介面。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的物件。
            </summary>
<param name="dependencyObject">要附加到的物件。</param>
        </member>
        <member name="M:System.Windows.Interactivity.IAttachedObject.Detach">
            <summary>
將此例項從其關聯的物件卸離。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.IAttachedObject.AssociatedObject">
            <summary>
取得關聯的物件。
            </summary>
<value>關聯的物件。</value>
<remarks>代表例項要附加到的物件。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.AttachableCollection`1"/> 類別的新例項。
            </summary>
<remarks>內部，因為這不應該在此組譯碼以外被繼承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnAttached">
            <summary>
在集合附加到 AssociatedObject 後立即呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.OnDetaching">
            <summary>
當集合正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemAdded(`0)">
            <summary>
當新增項目至集合時呼叫。
            </summary>
<param name="item">新項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.ItemRemoved(`0)">
            <summary>
從集合移除項目時呼叫。
            </summary>
<param name="item">移除的項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.VerifyAdd(`0)">
<exception cref="T:System.InvalidOperationException">無法將例項多次新增到集合。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的物件。
            </summary>
<param name="dependencyObject">要附加到的物件。</param>
<exception cref="T:System.InvalidOperationException">已將 IAttachedObject 附加到不同的物件。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.AttachableCollection`1.Detach">
            <summary>
將此例項從其關聯的物件卸離。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.AssociatedObject">
            <summary>
主控集合的物件。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.AttachableCollection`1.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
取得關聯的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior`1">
            <summary>
將狀態資訊及零或多個 ICommands 封裝到可附加的物件中。
            </summary>
<typeparam name="T">可將 <see cref="T:System.Windows.Interactivity.Behavior`1"/> 附加到的類型。</typeparam>
            <remarks>
	Behavior 是將可附加的狀態及命令提供給物件的基底類別。Behavior 可以附加到的類型可由泛型參數來控制。覆寫 OnAttached() 和 OnDetaching() 方法，以便從 AssociatedObject 連接及取消連接任何必要的處理常式。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.Behavior">
            <summary>
將狀態資訊及零或多個 ICommands 封裝到可附加的物件中。
            </summary>
<remarks>這是基礎結構類別。行為撰寫者應從 Behavior&lt;T&gt; 衍生，而不是從這個類別衍生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnAttached">
            <summary>
在行為附加到 AssociatedObject 後呼叫。
            </summary>
<remarks>覆寫此設定以便將功能連接至 AssociatedObject。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.OnDetaching">
            <summary>
當行為正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
<remarks>覆寫此設定以便從 AssociatedObject 取消連接功能。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的物件。
            </summary>
<param name="dependencyObject">要附加到的物件。</param>
<exception cref="T:System.InvalidOperationException">已在不同的元素上主控 Behavior。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 不符合 Behavior 類型限制。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior.Detach">
            <summary>
將此例項從其關聯的物件卸離。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedType">
            <summary>
此行為可附加到的類型。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.AssociatedObject">
            <summary>
取得此行為附加到的物件。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
取得關聯的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="M:System.Windows.Interactivity.Behavior`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.Behavior`1"/> 類別的新例項。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.Behavior`1.AssociatedObject">
            <summary>
取得此 <see cref="T:System.Windows.Interactivity.Behavior`1"/> 附加到的物件。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.BehaviorCollection">
            <summary>
代表含有共用 AssociatedObject 的行為集合，並在該 AssociatedObject 變更時提供變更通知給其內容。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> 類別的新例項。
            </summary>
<remarks>內部，因為這不應該在此組譯碼以外被繼承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnAttached">
            <summary>
在集合附加到 AssociatedObject 後立即呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.OnDetaching">
            <summary>
當集合正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemAdded(System.Windows.Interactivity.Behavior)">
            <summary>
當新增項目至集合時呼叫。
            </summary>
<param name="item">新項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.BehaviorCollection.ItemRemoved(System.Windows.Interactivity.Behavior)">
            <summary>
從集合移除項目時呼叫。
            </summary>
<param name="item">移除的項目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditor">
            <summary>
為可重複使用的屬性值編輯器列舉可能的值。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Element">
            <summary>
使用元素選擇器 (如果有支援) 在設計階段編輯此屬性。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.Storyboard">
            <summary>
使用腳本選擇器 (如果有支援) 在設計階段編輯此屬性。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.CustomPropertyValueEditor.StateName">
            <summary>
使用狀態選擇器 (如果有支援) 在設計階段編輯此屬性。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute">
            <summary>
讓指定編輯器類型與套用 CustomPropertyValueEditor 的屬性產生關聯。
            </summary>
<remarks>使用這個屬性，為代表元素 (依名稱)、腳本或狀態 (依名稱) 的屬性改善設計階段編輯。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.#ctor(System.Windows.Interactivity.CustomPropertyValueEditor)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.CustomPropertyValueEditorAttribute"/> 類別的新例項。
            </summary>
<param name="customPropertyValueEditor">自訂屬性值編輯器。</param>
        </member>
        <member name="P:System.Windows.Interactivity.CustomPropertyValueEditorAttribute.CustomPropertyValueEditor">
            <summary>
取得或設定自訂屬性值編輯器。
            </summary>
<value>自訂屬性值編輯器。</value>
        </member>
        <member name="T:System.Windows.Interactivity.DefaultTriggerAttribute">
            <summary>
提供有關要為指定動作或命令具現化什麼 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的設計工具資訊。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 類別的新例項。
            </summary>
<param name="targetType">此屬性套用到的類型。</param>
<param name="triggerType">要具現化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 類型。</param>
<param name="parameters">指定之 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的單一引數。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> 不是從 TriggerBase 衍生。</exception>
<remarks>如果指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 具有單一引數，則此建構函式會很有用。產生的程式碼將符合 CLS 標準。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.#ctor(System.Type,System.Type,System.Object[])">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.DefaultTriggerAttribute"/> 類別的新例項。
            </summary>
<param name="targetType">此屬性套用到的類型。</param>
<param name="triggerType">要具現化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 類型。</param>
<param name="parameters">指定之 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 的建構函式引數。</param>
<exception cref="T:System.ArgumentException"><c cref="F:System.Windows.Interactivity.DefaultTriggerAttribute.triggerType"/> 不是從 TriggerBase 衍生。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.DefaultTriggerAttribute.Instantiate">
            <summary>
具現化此例項。
            </summary>
<returns>DefaultTriggerAttribute 指定的 <see cref="T:System.Windows.Interactivity.TriggerBase"/>。</returns>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TargetType">
            <summary>
取得此 DefaultTriggerAttribute 套用到的類型。
            </summary>
<value>此 DefaultTriggerAttribute 套用到的類型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.TriggerType">
            <summary>
要具現化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 類型。
            </summary>
<value>要具現化的 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 類型。</value>
        </member>
        <member name="P:System.Windows.Interactivity.DefaultTriggerAttribute.Parameters">
            <summary>
取得傳送至 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 建構函式的參數。
            </summary>
<value>傳送至 <see cref="T:System.Windows.Interactivity.TriggerBase"/> 建構函式的參數。</value>
        </member>
        <member name="T:System.Windows.Interactivity.EventTrigger">
            <summary>
在其來源聆聽指定的事件並在該事件觸發時觸發的觸發程序。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase`1">
            <summary>
代表可聆聽其 AssociatedObject 以外之元素的觸發程序。
            </summary>
<typeparam name="T">此觸發程序可以產生關聯的類型。</typeparam>
            <remarks>
	EventTriggerBase 會延伸 TriggerBase 以新增另一個元素 (而不是它所附加到的元素) 的知識。這可讓使用者將一對觸發程序/動作附加到一個元素並叫用動作，以回應他處另一個元素的變更。覆寫 OnSourceChanged 以便在來源元素上連接或取消連接處理常式，以及關聯元素的 OnAttached/OnDetaching。來源元素的類型可受到泛型型別參數的限制。如果您需要控制 AssociatedObject 的類型，請在衍生類型上設定 TypeConstraintAttribute。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.EventTriggerBase">
            <summary>
代表可聆聽其 AssociatedObject 以外之元素的觸發程序。
            </summary>
<remarks>這是基礎結構類別。觸發程序撰寫者應從 EventTriggerBase&lt;T&gt; 衍生，而不是從這個類別衍生。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase">
            <summary>
代表可以有條件地叫用動作的物件。
            </summary>
<remarks>這是基礎結構類別。觸發程序撰寫者應從 Trigger&lt;T&gt; 衍生，而不是從這個類別衍生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.InvokeActions(System.Object)">
            <summary>
叫用所有與此觸發程序關聯的動作。
            </summary>
<remarks>衍生的類別應呼叫此項目以使觸發程序觸發。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnAttached">
            <summary>
在觸發程序附加到 AssociatedObject 後呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.OnDetaching">
            <summary>
當觸發程序正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的物件。
            </summary>
<param name="dependencyObject">要附加到的物件。</param>
<exception cref="T:System.InvalidOperationException">無法同時在多個物件上主控相同的觸發程序。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 不符合 Trigger 類型限制。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase.Detach">
            <summary>
將此例項從其關聯的物件卸離。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObject">
            <summary>
取得觸發程序附加到的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件的類型限制。
            </summary>
<value>關聯物件類型限制。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.Actions">
            <summary>
取得與此觸發程序關聯的動作。
            </summary>
<value>與此觸發程序關聯的動作。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
取得關聯的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.GetEventName">
            <summary>
指定此 EventTriggerBase 正在聆聽之事件的名稱。
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnEvent(System.EventArgs)">
            <summary>
當觸發與此 EventTriggerBase 關聯的事件時呼叫。根據預設，這會叫用觸發程序上的所有動作。
            </summary>
<param name="eventArgs">包含事件資料的 <see cref="T:System.EventArgs"/> 例項。</param>
<remarks>覆寫此例項以便在叫用與此觸發程序關聯的動作時，提供更精細的控制。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnSourceChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
當來源變更時呼叫。
            </summary>
<param name="oldSource">舊來源。</param>
<param name="newSource">新來源。</param>
<remarks>應該在衍生類別中覆寫此函數，以便從變更的來源物件連接或取消連接功能。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnAttached">
            <summary>
在觸發程序附加到 AssociatedObject 後呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.OnDetaching">
            <summary>
當觸發程序正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase.RegisterEvent(System.Object,System.String)">
<exception cref="T:System.ArgumentException">在目標上找不到 eventName。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件的類型限制。
            </summary>
<value>關聯物件類型限制。</value>
<remarks>在衍生的類型上定義 TypeConstraintAttribute，以限制它可附加到的類型。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceTypeConstraint">
            <summary>
取得來源類型限制。
            </summary>
<value>來源類型限制。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.SourceName">
            <summary>
取得或設定此 EventTriggerBase 當做來源聆聽的元素名稱。如果未設定或無法解析名稱，將會使用 AssociatedObject。這是相依性屬性。
            </summary>
<value>來源元素的名稱。</value>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase.Source">
            <summary>
取得解析的來源。如果未設定或無法解析 <c ref="SourceName"/>，則會預設為 AssociatedObject。
            </summary>
<value>解析的來源物件。</value>
<remarks>一般而言，此屬性應該用於取代衍生類別中的 AssociatedObject。</remarks>
<exception cref="T:System.InvalidOperationException"><c cref="P:System.Windows.Interactivity.EventTriggerBase.Source"/> 指向的元素不符合類型限制。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTriggerBase`1"/> 類別的新例項。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTriggerBase`1.OnSourceChanged(`0,`0)">
            <summary>
當來源屬性變更時呼叫。
            </summary>
<remarks>覆寫此項目以便從指定的來源 (而非 AssociatedObject) 連接或取消連接功能。</remarks>
<param name="oldSource">舊來源。</param>
<param name="newSource">新來源。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTriggerBase`1.Source">
            <summary>
取得解析的來源。如果未設定或無法解析 <c ref="SourceName"/>，則會預設為 AssociatedObject。
            </summary>
<value>解析的來源物件。</value>
<remarks>一般而言，此屬性應該用於取代衍生類別中的 AssociatedObject。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTrigger"/> 類別的新例項。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.EventTrigger.#ctor(System.String)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.EventTrigger"/> 類別的新例項。
            </summary>
<param name="eventName">事件的名稱。</param>
        </member>
        <member name="P:System.Windows.Interactivity.EventTrigger.EventName">
            <summary>
取得或設定要聆聽的事件名稱。這是相依性屬性。
            </summary>
<value>事件的名稱。</value>
        </member>
        <member name="T:System.Windows.Interactivity.Interaction">
            <summary>
擁有 Triggers 和 Behaviors 附加屬性的靜態類別。處理 AssociatedObject 變更通知的傳播。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.TriggersProperty">
            <summary>
此屬性是當做公用 Triggers 附加屬性的內部備份存放區使用。
            </summary>
        </member>
        <member name="F:System.Windows.Interactivity.Interaction.BehaviorsProperty">
            <summary>
此屬性是當做公用 Behaviors 附加屬性的內部備份存放區使用。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetTriggers(System.Windows.DependencyObject)">
            <summary>
取得包含與指定物件關聯之觸發程序的 TriggerCollection。
            </summary>
<param name="obj">要從中擷取觸發程序的物件。</param>
<returns>包含與指定物件關聯之觸發程序的 TriggerCollection。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.GetBehaviors(System.Windows.DependencyObject)">
            <summary>
取得與指定物件關聯的 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>。
            </summary>
<param name="obj">要從中擷取 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/> 的物件。</param>
<returns>包含與指定物件關聯之行為的 <see cref="T:System.Windows.Interactivity.BehaviorCollection"/>。</returns>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnBehaviorsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">無法同時在多個物件上主控相同的 BehaviorCollection。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.OnTriggersChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
<exception cref="T:System.InvalidOperationException">無法同時在多個物件上主控相同的 TriggerCollection。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.Interaction.IsElementLoaded(System.Windows.FrameworkElement)">
            <summary>
取代 FrameworkElement.IsLoaded 的 Helper 函式，因為 Silverlight 沒有這樣的屬性。
            </summary>
<param name="element">相關的元素。</param>
<returns>如果元素已載入則為 true，否則為 false</returns>
        </member>
        <member name="T:System.Windows.Interactivity.InvokeCommandAction">
            <summary>
叫用時在主控行為上執行指定的動作。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction`1">
            <summary>
代表封裝功能單元的可附加物件。
            </summary>
<typeparam name="T">此動作可附加到的類型。</typeparam>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerAction">
            <summary>
代表封裝功能單元的可附加物件。
            </summary>
<remarks>這是基礎結構類別。動作撰寫者應從 TriggerAction&lt;T&gt; 衍生，而不是從這個類別衍生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.CallInvoke(System.Object)">
            <summary>
嘗試叫用動作。
            </summary>
<param name="parameter">動作的參數。如果動作不需要參數，可將參數設為 Null 參照。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Invoke(System.Object)">
            <summary>
叫用動作。
            </summary>
<param name="parameter">動作的參數。如果動作不需要參數，可將參數設為 Null 參照。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnAttached">
            <summary>
在動作附加到 AssociatedObject 後呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.OnDetaching">
            <summary>
當動作正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Attach(System.Windows.DependencyObject)">
            <summary>
附加到指定的物件。
            </summary>
<param name="dependencyObject">要附加到的物件。</param>
<exception cref="T:System.InvalidOperationException">無法同時在多個物件上主控相同的 TriggerAction。</exception>
<exception cref="T:System.InvalidOperationException">dependencyObject 不符合 TriggerAction 類型限制。</exception>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction.Detach">
            <summary>
將此例項從其關聯的物件卸離。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsEnabled">
            <summary>
取得或設定指出此動作是否會在叫用時執行的值。這是相依性屬性。
            </summary>
            <value>
	如果此動作會在叫用時執行則為 <c>true</c>，否則為 <c>false</c>。
            </value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObject">
            <summary>
取得此動作附加到的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件類型限制。
            </summary>
<value>關聯物件類型限制。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.IsHosted">
            <summary>
取得或設定指出是否附加此例項的值。
            </summary>
<value>如果附加此例項則為 <c>true</c>，否則為 <c>false</c>。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction.System#Windows#Interactivity#IAttachedObject#AssociatedObject">
            <summary>
取得關聯的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerAction`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> 類別的新例項。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObject">
            <summary>
取得此 <see cref="T:System.Windows.Interactivity.TriggerAction`1"/> 附加到的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerAction`1.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件類型限制。
            </summary>
<value>關聯物件類型限制。</value>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.Invoke(System.Object)">
            <summary>
叫用動作。
            </summary>
<param name="parameter">動作的參數。如果動作不需要參數，可將參數設為 Null 參照。</param>
        </member>
        <member name="M:System.Windows.Interactivity.InvokeCommandAction.OnAttached">
            <summary>
在集合附加到 AssociatedObject 後呼叫。
            </summary>
<exception cref="T:System.InvalidOperationException">必須在行為上主控 InvokeActionCommand。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandName">
            <summary>
取得或設定此動作應叫用的命令名稱。
            </summary>
<value>此動作應叫用的命令名稱。</value>
        </member>
        <member name="P:System.Windows.Interactivity.InvokeCommandAction.CommandParameter">
            <summary>
取得或設定命令參數。
            </summary>
<value>命令參數。</value>
<remarks>這是傳送至 ICommand.CanExecute 和 ICommand.Execute 的值。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolvedEventArgs">
            <summary>
提供有關哪些物件會在解析名稱變更時受影響的資料。
            </summary>
        </member>
        <member name="T:System.Windows.Interactivity.NameResolver">
            <summary>
Helper 類別，用來處理根據主機元素所提供的內容，將 TargetName 解析為目標元素的邏輯 。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.NameResolver.UpdateObjectFromName(System.Windows.DependencyObject)">
            <summary>
嘗試以名稱範圍參照元素之內容中的名稱，來更新解析的物件。
            </summary>
<param name="oldObject">舊的解析物件。</param>
            <remarks>
重設現有的目標，並嘗試從目前主機的內容解析目前的 TargetName。如果無法從主機的內容解析，則會在視覺化樹狀目錄中繼續往上，直到解析為止。如果到達根時仍無法解析，則會將目標設為 Null，並在除錯輸出中寫入警告訊息。
            </remarks>
        </member>
        <member name="E:System.Windows.Interactivity.NameResolver.ResolvedElementChanged">
            <summary>
在解析的元素已變更時發生。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Name">
            <summary>
取得或設定要嘗試解析的元素名稱。
            </summary>
<value>要嘗試解析的名稱。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.Object">
            <summary>
解析的物件。將傳回參照元素是 TargetName 為 Null 或空白，或者是否未嘗試進行解析。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.NameScopeReferenceElement">
            <summary>
取得或設定要從中執行名稱解析的參照元素。
            </summary>
<value>參照元素。</value>
        </member>
        <member name="P:System.Windows.Interactivity.NameResolver.PendingReferenceElementLoad">
            <summary>
取得或設定指出參照元素載入是否擱置的值。
            </summary>
            <value>
	如果 [擱置參照元素載入] 則為 <c>true</c>，否則為 <c>false</c>。
            </value>
            <remarks>
如果尚未載入主機，將不會解析名稱。在這種情況下，請延遲解析並使用此屬性來追蹤該事實。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction`1">
            <summary>
代表可作為目標來影響其 AssociatedObject 以外之物件的動作。
            </summary>
<typeparam name="T">對目標的類型限制。</typeparam>
            <remarks>
	TargetedTriggerAction 會延伸 TriggerAction 以新增另一個元素 (而不是它所附加到的元素) 的知識。這可讓使用者在不是所附加到的元素上叫用動作，以回應觸發程序的觸發。覆寫 OnTargetChanged 以便在目標元素上連接或取消連接處理常式，以及關聯元素的 OnAttached/OnDetaching。目標元素的類型可受到泛型型別參數的限制。如果您需要控制 AssociatedObject 的類型，請在衍生類型上設定 TypeConstraintAttribute。
            </remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TargetedTriggerAction">
            <summary>
代表可作為目標來影響其 AssociatedObject 以外之物件的動作。
            </summary>
<remarks>這是基礎結構類別。動作撰寫者應從 TargetedTriggerAction&lt;T&gt; 衍生，而不是從這個類別衍生。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnTargetChangedImpl(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
當目標變更時呼叫。
            </summary>
<param name="oldTarget">舊目標。</param>
<param name="newTarget">新目標。</param>
<remarks>應該在衍生類別中覆寫此函數，以便從變更的來源物件連接或取消連接功能。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnAttached">
            <summary>
在動作附加到 AssociatedObject 後呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction.OnDetaching">
            <summary>
當動作正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetName">
            <summary>
取得或設定目標的名稱。如果未設定或無法解析 TargetName，目標會預設為 AssociatedObject。這是相依性屬性。
            </summary>
<value>目標的名稱。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.Target">
            <summary>
取得目標物件。如果未設定或無法解析 TargetName，則會預設為 AssociatedObject。
            </summary>
<value>目標。</value>
<remarks>一般而言，此屬性應該用於取代衍生類別中的 AssociatedObject。</remarks>
<exception cref="T:System.InvalidOperationException">目標元素不符合類型限制。</exception>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件類型限制。
            </summary>
<value>關聯物件類型限制。</value>
<remarks>在衍生的類型上定義 TypeConstraintAttribute，以限制它可附加到的類型。</remarks>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction.TargetTypeConstraint">
            <summary>
取得目標類型限制。
            </summary>
<value>目標類型限制。</value>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TargetedTriggerAction`1"/> 類別的新例項。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TargetedTriggerAction`1.OnTargetChanged(`0,`0)">
            <summary>
當目標屬性變更時呼叫。
            </summary>
<remarks>覆寫此項目以便在指定的目標 (而非 AssociatedObject) 上連接或取消連接功能。</remarks>
<param name="oldTarget">舊目標。</param>
<param name="newTarget">新目標。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TargetedTriggerAction`1.Target">
            <summary>
取得目標物件。如果未設定或無法解析 TargetName，則會預設為 AssociatedObject。
            </summary>
<value>目標。</value>
<remarks>一般而言，此屬性應該用於取代衍生類別中的 AssociatedObject。</remarks>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerActionCollection">
            <summary>
代表含有共用 AssociatedObject 的動作集合，並在該 AssociatedObject 變更時提供變更通知給其內容。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerActionCollection"/> 類別的新例項。
            </summary>
<remarks>內部，因為這不應該在此組譯碼以外被繼承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnAttached">
            <summary>
在集合附加到 AssociatedObject 後立即呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.OnDetaching">
            <summary>
當集合正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemAdded(System.Windows.Interactivity.TriggerAction)">
            <summary>
當新增項目至集合時呼叫。
            </summary>
<param name="item">新項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerActionCollection.ItemRemoved(System.Windows.Interactivity.TriggerAction)">
            <summary>
從集合移除項目時呼叫。
            </summary>
<param name="item">移除的項目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerBase`1">
            <summary>
代表可以有條件地叫用動作的物件。
            </summary>
<typeparam name="T">此觸發程序可附加到的類型。</typeparam>
            <remarks>
	TriggerBase 是用來控制動作的基底類別。覆寫 OnAttached() 和 OnDetaching()，以便在 AssociatedObject 上連接及取消連接處理常式。您可以透過指定泛型參數，來限制衍生 TriggerBase 可附加到的類型。呼叫 InvokeActions() 以觸發所有與此 TriggerBase 關聯的動作。
            </remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerBase`1.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerBase`1"/> 類別的新例項。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObject">
            <summary>
取得觸發程序附加到的物件。
            </summary>
<value>關聯的物件。</value>
        </member>
        <member name="P:System.Windows.Interactivity.TriggerBase`1.AssociatedObjectTypeConstraint">
            <summary>
取得關聯物件的類型限制。
            </summary>
<value>關聯物件類型限制。</value>
        </member>
        <member name="T:System.Windows.Interactivity.TriggerCollection">
            <summary>
代表含有共用 AssociatedObject 的觸發程序集合，並在該 AssociatedObject 變更時提供變更通知給其內容。
             </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.#ctor">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TriggerCollection"/> 類別的新例項。
            </summary>
<remarks>內部，因為這不應該在此組譯碼以外被繼承。</remarks>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnAttached">
            <summary>
在集合附加到 AssociatedObject 後立即呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.OnDetaching">
            <summary>
當集合正要從其 AssociatedObject 卸離但尚未實際發生前呼叫。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemAdded(System.Windows.Interactivity.TriggerBase)">
            <summary>
當新增項目至集合時呼叫。
            </summary>
<param name="item">新項目。</param>
        </member>
        <member name="M:System.Windows.Interactivity.TriggerCollection.ItemRemoved(System.Windows.Interactivity.TriggerBase)">
            <summary>
從集合移除項目時呼叫。
            </summary>
<param name="item">移除的項目。</param>
        </member>
        <member name="T:System.Windows.Interactivity.TypeConstraintAttribute">
            <summary>
在 TargetedTriggerAction 和 EventTriggerBase 的 AssociatedObject 上指定類型限制。
            </summary>
        </member>
        <member name="M:System.Windows.Interactivity.TypeConstraintAttribute.#ctor(System.Type)">
            <summary>
初始化 <see cref="T:System.Windows.Interactivity.TypeConstraintAttribute"/> 類別的新例項。
            </summary>
<param name="constraint">限制類型。</param>
        </member>
        <member name="P:System.Windows.Interactivity.TypeConstraintAttribute.Constraint">
            <summary>
取得限制類型。
            </summary>
<value>限制類型。</value>
        </member>
        <member name="T:System.Windows.Interactivity.ExceptionStringTable">
            <summary>
強型別資源類別，用於查詢當地語系化字串等等。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.ResourceManager">
            <summary>
傳回此類別所使用的快取 ResourceManager 例項。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.Culture">
            <summary>
使用此強型別資源類別，為所有資源查閱覆寫目前執行緒的 CurrentUICulture 屬性。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorCollectionMultipleTimesExceptionMessage">
            <summary>
查詢類似「無法在多個物件上設定相同的 BehaviorCollection。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostBehaviorMultipleTimesExceptionMessage">
            <summary>
查詢類似「無法將 Behavior 的例項同時附加到一個以上的物件。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerActionMultipleTimesExceptionMessage">
            <summary>
查詢類似「無法同時在多個 TriggerCollections 中主控 TriggerAction 的例項。請先將它從其中一個 TriggerCollection 移除，然後再新增到另外一個。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerCollectionMultipleTimesExceptionMessage">
            <summary>
查詢類似「無法在多個物件上設定相同的 TriggerCollection。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CannotHostTriggerMultipleTimesExceptionMessage">
            <summary>
查詢類似「無法將觸發程序的例項同時附加到一個以上的物件。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.CommandDoesNotExistOnBehaviorWarningMessage">
            <summary>
查詢類似「命令 &quot;{0}&quot; 不存在或是未於 {1} 上公開。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DefaultTriggerAttributeInvalidTriggerTypeSpecifiedExceptionMessage">
            <summary>
查詢類似「&quot;{0}&quot; 不是 TriggerType 參數的有效類型。請確認 &quot;{0}&quot; 是衍生自 TriggerBase。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.DuplicateItemInCollectionExceptionMessage">
            <summary>
查詢類似「無法將相同的 &quot;{0}&quot; 例項多次新增到 &quot;{1}&quot;。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.EventTriggerCannotFindEventNameExceptionMessage">
            <summary>
查詢類似「在類型 &quot;{1}&quot; 上找不到名為 &quot;{0}&quot; 的事件。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.InvokeActionCommandMustBeHostedOnBehaviorExceptionMessage">
            <summary>
查詢類似「InvokeCommandAction 必須附加到 Behavior。您可以將它新增到 Behavior 物件之 Triggers 集合中 Trigger 的 Actions 集合，以完成這項附加作業。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.RetargetedTypeConstraintViolatedExceptionMessage">
            <summary>
查詢類似「類型 &quot;{0}&quot; 的物件不能有類型 &quot;{1}&quot; 的 {3} 屬性。類型 &quot;{0}&quot; 的例項只能有類型 &quot;{2}&quot; 的 {3} 屬性。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.TypeConstraintViolatedExceptionMessage">
            <summary>
查詢類似「無法將類型 &quot;{0}&quot; 附加到類型 &quot;{1}&quot;。類型 &quot;{0}&quot; 的例項只能附加到類型 &quot;{2}&quot; 的物件。」的當地語系化字串。
            </summary>
        </member>
        <member name="P:System.Windows.Interactivity.ExceptionStringTable.UnableToResolveTargetNameWarningMessage">
            <summary>
查詢類似「無法解析 TargetName &quot;{0}&quot;。」的當地語系化字串。
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\SourceIndex\supplemental.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Microsoft Corporation Currently, two Windows release builds have been  source-indexed and archived on \\symbols\symbols Title _PID_HLINKSCurrently, two Windows release builds have been  source-indexed and archived on \\symbols\symbols Pat Styles Normal.dotm Pat Styles Microsoft Office Word[Content_Types].xml  _rels/.rels  theme/theme/themeManager.xml theme/theme/theme1.xml Ex9uy ~-9pF 3(x8hZ o5m/j< theme/theme/_rels/themeManager.xml.rels} [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="no"?> <a:clrMap xmlns:a="http://schemas.microsoft.com/office/officeart/2005/8/oartml" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/>supplemental.doc   Source Depot and Source Server Overview Currently, all Windows release builds have been source-indexed and archived on \\symbols\symbols.  If you find a build that you feel should be indexed, send email to the Source Server Administration DL (srcsrvad). The source server works by extracting the appropriate files from Source Depot.  Therefore, you must have the sufficient privileges on the depots the access the source.  You can request such access by contacting the owner of the depot you wish to use. Since this technology is exposed through dbghelp.dll, it can be used by any application that uses the DbgHelp API to access symbols.  If your application uses DIA for symbols, DbgHelp will still work, but the PDBs will be opened twice.  The required binaries are: dbghelp.dll srcsrv.dll Whatever client program is used to access the version control system.  For Source Depot, this is sd.exe. Source Indexing Installation Supporting this technology in your builds will require additions to your build process.  First, you need to install the Source Server tools to your build machine.  You can get them from \\dbg\srcsrv\latest.  The root of this directory contains the scripts used to instrument a build.  It also contains subdirectories containing executables for each of the supported platforms.  These are named X86, IA64, and AMD64.  You need to add to your path the directory that contains the scripts as well as the appropriate subdirectory for your platform.  If you wish to combine the files into a single directory or to overlay these files into a directory already in your path, feel free to do so. The indexing system is a collection of executables and Perl scripts.  You will need Perl 5.6 or greater to run them.  HYPERLINK "\\\\dbg\\srcsrv"  \\dbg\srcsrv  also contains the latest version of this document and srcsrv.ini.  You can examine old source server releases in \\dbg\srcsrv\release. srcsrv.ini One of the files installed is srcsrv.ini.  This file is the master list of all version control servers that are using this system.  Each entry in this file has the following format: WIN_WINDOWS=windowsdepot.sys-ntgroup.ntdev.microsoft.com:2016 The above example assigns a name to the unique information that identifies the server that maintains your source files.  In this case, it is a Source Depot server.  This information can be obtained by examining the sd.ini file on the build machine.  It is possible that the server may already be listed in the srcsrv.ini. Regardless, presuming that you are using a server that is not on the list, you need to create logical names to indicate your servers.  Keeping these names short will help to reduce the extra file size eventually added to the output PDBs.  To ensure that the names are unique, email srcsrvad with the desired information.  We will reply with a new version of srcsrv.ini that includes your server(s).  We will also add them to the master copy of this file so that new installations will take yours into account.  You can acquire this information with the SDP program described later in this document. Source Server will not work for entries without logical server names maintained in srcsrv.ini. If you examine the srcsrv.ini file closely, you may see multiple instances of the same logical name mapped to different servers.  This is not what it seems.  In actuality, they point to different network names that map to the same actual machine. ssindex.cmd When your build is complete,  you can source index the PDBs using the ssindex.cmd script.  This script calls a Perl program that enumerates through a directory and finds all source depot enlistments.  Then it builds a list of files checked into version control on the machine along with the version of each such file.  Lastly, it stores a subset of this information in the PBDs generated by your build. It is essential that no files be checked out or modified from their checked in state on the build machine.  Otherwise small changes made to the files in question will not be reflected in the source obtained by the debugger.  Furthermore, any source files that are generated as part of the build process should be checked in if you want these to be available later. sdp.exe This program is used by the script to find all enlistments by searching recursively through a directory tree for the file sd.ini.  This program will also execute Source Depot commands whenever it finds an enlistment. If you want to get information about all enlistments, run the following command from the root of your source: C:\nt>sdp.exe info ... ------- SDP INFO: C:\nt\base ------- User name: NTDEV\patst Client name: PATSTYLES Client host: PATSTYLES Client root: c:\nt\base Current directory: c:\nt\base Client address: 157.59.16.200:2889 Server address: frostbite.sys-wingroup.ntdev.corp.microsoft.com:2003 Server time: 2003/04/28 13:53:35 (GMT-07:00) Server version: SDS 2.5.4816.4 (NT X86) ------- SDP INFO: C:\nt\enduser ------- User name: NTDEV\patst Client name: PATSTYLES Client host: PATSTYLES Client root: c:\nt\enduser Current directory: c:\nt\enduser Client address: 157.59.16.200:2890 Server address: crevasse.sys-wingroup.ntdev.corp.microsoft.com:2007 Server time: 2003/04/28 13:53:35 (GMT-07:00) Server version: SDS 2.5.4816.4 (NT X86) In this case, two enlistments were found.  You can use this to learn the server address of your Source Depot servers so that we can update srcsrv.ini.  The   indicates to sdp.exe that you want the search to be recursive.   This program is also used by the indexing scripts to index all enlistments below a specified location. Custom Scripts The Windows build labs do not use these scripts for source indexing.  They have found that it is faster to incorporate the individual tasks of source indexing directly into their build scripts.  The WinSE team found that the generic scripts provided here did not work well for them because they build a single executable at a time.  You may also find that it is more desirable to modify your build scripts manually.  If that is the case, please contact us and we will help you out. Source indexing requires that the build machine have access to the version control system that provides the source that is built.  Some build machines don t have access to version control and instead copy the source from a master machine.  If this is how your build machine is set up, you need to provide a share to the master machine that contains the PDBs and run the script from there.  Make sure that the directory trees for the source are identical on both machines.   Otherwise you will need to modify the script to perform text substitution on the source file list so that it matches that used on the actual build machine. There will surely be other times that a need will arise to modify ssindex.cmd.  Please inform us if you see such a need.  We will help you and it is possible that this would give us a chance to improve the generic script to work in more special cases than it currently does. Getting Help The Source Server SIG email group (srcsrv) has been created for questions concerning Source Server as well as a way to be informed of updates to the system.  You can join this group by using the tool at http://autodl. For updates to srcsrv.ini, email  Source Server Administration  (srcsrvad). PAGE \# "'Page: '#' In case this ever becomes public, we ll need some legal disclaimers about Microsoft and Perl.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\SourceIndex\sourcedepot.doc ===
Microsoft Office Word Document MSWordDoc Word.Document.8Source Depot and Source Server Title _PID_LINKBASE _PID_HLINKSSource Depot and Source Server Normal.dot Microsoft Office Wordbjbj5G5G supplemental.doc   Source Depot and Source Server Overview Currently, all Windows release builds have been source-indexed and archived on \\symbols\symbols.  If you find a build that you feel should be indexed, send email to the Source Server Administration DL (srcsrvad). The source server works by extracting the appropriate files from Source Depot.  Therefore, you must have the sufficient privileges on the depots the access the source.  You can request such access by contacting the owner of the depot you wish to use. Since this technology is exposed through dbghelp.dll, it can be used by any application that uses the DbgHelp API to access symbols.  If your application uses DIA for symbols, DbgHelp will still work, but the PDBs will be opened twice.  The required binaries are: dbghelp.dll srcsrv.dll Whatever client program is used to access the version control system.  For Source Depot, this is sd.exe. Source Indexing Installation Supporting this technology in your builds will require additions to your build process.  First, you need to install the Source Server tools to your build machine.  You can get them from \\dbg\srcsrv\latest.  The root of this directory contains the scripts used to instrument a build.  It also contains subdirectories containing executables for each of the supported platforms.  These are named X86, IA64, and AMD64.  You need to add to your path the directory that contains the scripts as well as the appropriate subdirectory for your platform.  If you wish to combine the files into a single directory or to overlay these files into a directory already in your path, feel free to do so. The indexing system is a collection of executables and Perl scripts.  You will need Perl 5.6 or greater to run them.  HYPERLINK "\\\\dbg\\srcsrv"  \\dbg\srcsrv  also contains the latest version of this document and srcsrv.ini.  You can examine old source server releases in \\dbg\srcsrv\release. srcsrv.ini One of the files installed is srcsrv.ini.  This file is the master list of all version control servers that are using this system.  Each entry in this file has the following format: WIN_WINDOWS=windowsdepot.sys-ntgroup.ntdev.microsoft.com:2016 The above example assigns a name to the unique information that identifies the server that maintains your source files.  In this case, it is a Source Depot server.  This information can be obtained by examining the sd.ini file on the build machine.  It is possible that the server may already be listed in the srcsrv.ini. Regardless, presuming that you are using a server that is not on the list, you need to create logical names to indicate your servers.  Keeping these names short will help to reduce the extra file size eventually added to the output PDBs.  To ensure that the names are unique, email srcsrvad with the desired information.  We will reply with a new version of srcsrv.ini that includes your server(s).  We will also add them to the master copy of this file so that new installations will take yours into account.  You can acquire this information with the SDP program described later in this document. Source Server will not work for entries without logical server names maintained in srcsrv.ini. If you examine the srcsrv.ini file closely, you may see multiple instances of the same logical name mapped to different servers.  This is not what it seems.  In actuality, they point to different network names that map to the same actual machine. ssindex.cmd When your build is complete,  you can source index the PDBs using the ssindex.cmd script.  This script calls a Perl program that enumerates through a directory and finds all source depot enlistments.  Then it builds a list of files checked into version control on the machine along with the version of each such file.  Lastly, it stores a subset of this information in the PBDs generated by your build. It is essential that no files be checked out or modified from their checked in state on the build machine.  Otherwise small changes made to the files in question will not be reflected in the source obtained by the debugger.  Furthermore, any source files that are generated as part of the build process should be checked in if you want these to be available later. sdp.exe This program is used by the script to find all enlistments by searching recursively through a directory tree for the file sd.ini.  This program will also execute Source Depot commands whenever it finds an enlistment. If you want to get information about all enlistments, run the following command from the root of your source: C:\nt>sdp.exe info ... ------- SDP INFO: C:\nt\base ------- User name: NTDEV\patst Client name: PATSTYLES Client host: PATSTYLES Client root: c:\nt\base Current directory: c:\nt\base Client address: 157.59.16.200:2889 Server address: frostbite.sys-wingroup.ntdev.corp.microsoft.com:2003 Server time: 2003/04/28 13:53:35 (GMT-07:00) Server version: SDS 2.5.4816.4 (NT X86) ------- SDP INFO: C:\nt\enduser ------- User name: NTDEV\patst Client name: PATSTYLES Client host: PATSTYLES Client root: c:\nt\enduser Current directory: c:\nt\enduser Client address: 157.59.16.200:2890 Server address: crevasse.sys-wingroup.ntdev.corp.microsoft.com:2007 Server time: 2003/04/28 13:53:35 (GMT-07:00) Server version: SDS 2.5.4816.4 (NT X86) In this case, two enlistments were found.  You can use this to learn the server address of your Source Depot servers so that we can update srcsrv.ini.  The   indicates to sdp.exe that you want the search to be recursive.   This program is also used by the indexing scripts to index all enlistments below a specified location. Custom Scripts The Windows build labs do not use these scripts for source indexing.  They have found that it is faster to incorporate the individual tasks of source indexing directly into their build scripts.  The WinSE team found that the generic scripts provided here did not work well for them because they build a single executable at a time.  You may also find that it is more desirable to modify your build scripts manually.  If that is the case, please contact us and we will help you out. Source indexing requires that the build machine have access to the version control system that provides the source that is built.  Some build machines don t have access to version control and instead copy the source from a master machine.  If this is how your build machine is set up, you need to provide a share to the master machine that contains the PDBs and run the script from there.  Make sure that the directory trees for the source are identical on both machines.   Otherwise you will need to modify the script to perform text substitution on the source file list so that it matches that used on the actual build machine. There will surely be other times that a need will arise to modify ssindex.cmd.  Please inform us if you see such a need.  We will help you and it is possible that this would give us a chance to improve the generic script to work in more special cases than it currently does. Getting Help The Source Server SIG email group (srcsrv) has been created for questions concerning Source Server as well as a way to be informed of updates to the system.  You can join this group by using the tool at http://autodl. For updates to srcsrv.ini, email  Source Server Administration  (srcsrvad).
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\SourceIndex\srcsrv.doc ===
Microsoft Office Word 97-2003 Document MSWordDoc Word.Document.8Microsoft Corporation Source Server Title _PID_HLINKSSource Server Pat Styles Normal.dotm Pat Styles Microsoft Office Word[Content_Types].xml _rels/.rels theme/theme/themeManager.xml theme/theme/theme1.xml w toc'v 3Vq%'#q :\TZaG IqbJ#x T[XF64 theme/theme/_rels/themeManager.xml.rels K(M&$R(.1 [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="yes"?> <a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/><b:Sources xmlns:b="http://schemas.microsoft.com/office/word/2004/10/bibliography" xmlns="http://schemas.microsoft.com/office/word/2004/10/bibliography"/><?xml version="1.0" encoding="UTF-8" standalone="no"?> <ds:datastoreItem ds:itemID="{FAACE558-C98B-4859-949C-8589B38B2A3F}" xmlns:ds="http://schemas.openxmlformats.org/officeDocument/2006/customXml"><ds:schemaRefs><ds:schemaRef ds:uri="http://schemas.microsoft.com/office/word/2004/10/bibliography"/></ds:schemaRefs></ds:datastoreItem>Microsoft Source Server Table Of Contents  TOC \o "1-3" \h \z \u   HYPERLINK \l "_Toc159298314"  Table Of Contents  PAGEREF _Toc159298314 \h   HYPERLINK \l "_Toc159298315"  General Concepts and Usage  PAGEREF _Toc159298315 \h   HYPERLINK \l "_Toc159298316"  Usage and Source Indexing  PAGEREF _Toc159298316 \h   HYPERLINK \l "_Toc159298317"  Using Source Server with a Debugger  PAGEREF _Toc159298317 \h   HYPERLINK \l "_Toc159298318"  Retrieving the Source File  PAGEREF _Toc159298318 \h   HYPERLINK \l "_Toc159298319"  Source Indexing  PAGEREF _Toc159298319 \h   HYPERLINK \l "_Toc159298320"  Creating a Source Control Provider Module  PAGEREF _Toc159298320 \h   HYPERLINK \l "_Toc159298321"  Language Specification Version 1  PAGEREF _Toc159298321 \h   HYPERLINK \l "_Toc159298322"  Source Server Data Blocks  PAGEREF _Toc159298322 \h   HYPERLINK \l "_Toc159298323"  How Source Server Works  PAGEREF _Toc159298323 \h   HYPERLINK \l "_Toc159298324"  Handling Server Errors  PAGEREF _Toc159298324 \h   HYPERLINK \l "_Toc159298325"  API and Usage  PAGEREF _Toc159298325 \h   HYPERLINK \l "_Toc159298326"  Language Specification Version 2  PAGEREF _Toc159298326 \h   HYPERLINK \l "_Toc159298327"  SRCSRVCMD  PAGEREF _Toc159298327 \h   HYPERLINK \l "_Toc159298328"  Notes on Visual SourceSafe  PAGEREF _Toc159298328 \h   HYPERLINK \l "_Toc159298329"  The Database  PAGEREF _Toc159298329 \h   HYPERLINK \l "_Toc159298330"  Current Project  PAGEREF _Toc159298330 \h   HYPERLINK \l "_Toc159298331"  Working Folder  PAGEREF _Toc159298331 \h   HYPERLINK \l "_Toc159298332"  Labels  PAGEREF _Toc159298332 \h   HYPERLINK \l "_Toc159298333"  Credentials  PAGEREF _Toc159298333 \h   HYPERLINK \l "_Toc159298334"  Platform  PAGEREF _Toc159298334 \h   HYPERLINK \l "_Toc159298335"  Debugging  PAGEREF _Toc159298335 \h   HYPERLINK \l "_Toc159298336"  VSSDump  PAGEREF _Toc159298336 \h   HYPERLINK \l "_Toc159298337"  Notes on CVS (Concurrent Versions System)  PAGEREF _Toc159298337 \h   HYPERLINK \l "_Toc159298338"  Disclaimer  PAGEREF _Toc159298338 \h   HYPERLINK \l "_Toc159298339"  CVSROOT  PAGEREF _Toc159298339 \h   HYPERLINK \l "_Toc159298340"  Client Computer  PAGEREF _Toc159298340 \h   HYPERLINK \l "_Toc159298341"  Revision Tags  PAGEREF _Toc159298341 \h   HYPERLINK \l "_Toc159298342"  HTTP Sites and UNC Shares  PAGEREF _Toc159298342 \h   HYPERLINK \l "_Toc159298343"  Set up the web site  PAGEREF _Toc159298343 \h   HYPERLINK \l "_Toc159298344"  Extract and locate the source files  PAGEREF _Toc159298344 \h   HYPERLINK \l "_Toc159298345"  Modify the pdb source indexing streams  PAGEREF _Toc159298345 \h   HYPERLINK \l "_Toc159298346"  UNC Shares  PAGEREF _Toc159298346 \h   HYPERLINK \l "_Toc159298347"  Supporting HTTP/UNC along with regular version control with the same pdb  PAGEREF _Toc159298347 \h  General Concepts and Usage Usage and Source Indexing The source server enables a client to retrieve the exact version of the source files that were used to build an application. Because the source code for a module can change between versions and over the course of years, it is important to look at the source code as it existed when the version of the module in question was built. The source server retrieves the appropriate files from source control. To use the source server, the application must have been source indexed. Using Source Server with a Debugger To use the source server with WinDbg, KD, NTSD, or CDB, ensure that you have installed a recent version of the Debugging Tools for Windows package (version 6.3 or later). Then, include srv* in the .srcpath command as follows: .srcpath srv*;c:\mysource Note that this example also includes a traditional source path. If the debugger cannot retrieve the file from the source server, it will search the specified path. If a source file is retrieved by the source server, it will remain on your hard drive after the debugging session is over. Source files are stored locally in the src subdirectory of the Debugging Tools for Windows installation directory. If you experience any trouble extracting the source files from the debugger, start the debugger with the  n command line parameter to view the actual source extraction commands along with the output of those commands.  !sym noisy will do the same thing, but you may have already missed important information from previous extraction attempts.  This is because the debugger will give up trying to access source from version control repositories that appear to be unreachable. Retrieving the Source File To facilitate the use of Source Server from tools other than the debuggers listed above, the DbgHelp API provides access to source server functionality through the SymGetSourceFile function. To retrieve the name of the source file to be retrieved, call the SymEnumSourceFiles or SymGetLineFromAddr64 function. Source Indexing The source indexing system is a collection of executable files and Perl scripts. The Perl scripts require Perl 5.6 or greater (not included). They are installed with the debugger package in a subdirectory sdk\srcsrv.  To work with these tools, they should all be installed in the path. Generally, binaries are source indexed during the build process after the application has been built. The information needed by Source Server is stored in the PDB files. Source Server currently supports the following source-control systems Perforce  Microsoft Visual SourceSafe Microsoft Team Foundation Server You can also create a custom script to index your code for a different source-control system.  One such module for Subversion is included in this package.  Anyone interested in using Source Server with CVS should send email to   HYPERLINK "mailto:windbgfb@microsoft.com"  windbgfb@microsoft.com The following table lists the Source Server tools. Description SrcSrv.ini This file is the master list of all source control servers.  Each entry has the following format: MYSERVER=serverinfo When using Perforce, the server info consists of the full network path to the server, followed by a colon, followed by the port number it uses.  For example: MYSERVER=machine.corp.company.com:1666 Srcsrv.ini is a required file when actually source indexing a build using the modules shipped with this package.  This entry creates an alias that will be used to describe the server info.  The value should be unique for every server you support. This file can also be installed on the computer running the debugger.  When Source Server starts, it looks at srcsrv.ini for values; these values will override the information contained in the PDB file.  This enables users to configure a debugger to use an alternate source control server at debug time.  However if you manage your servers well and don t rename them, there should be no need to include this file with your client debugger installations. This file also serves other purposes on the client side.  For more information, see the sample srcsrv.ini installed with the Source Server tools. SSIndex.cmd This script builds the list of files checked into source control along with the version information of each file.  It stores a subset of this information in the PDB files generated when you built the application.  The script uses one of the following Perl modules to interface with source control p4.pm (Perforce) vss.pm (Visual SourceSafe) tfs.pm (Team Foundation Servers) svn.pm (Subversion) For more information, run the script with the   (verbose help) option or examine the script. SrcTool.exe This utility lists all files indexed within the PDB file.  For each file, it lists the full path, source control server, and version number of the file.  You can use this information for reference. You can also use srctool.exe to list the raw source file information from the pdb.  To do this, use the   switch on the command line.   SrcTool.exe has other options as well.  Use the   switch to see them.  Of most interest, is that srctool.exe can get used to actually extract all of the source files from version control.  This is done with the   switch. Note:  Previous versions of this program used to create a directory called   below the current one, when extracting files.  This is no longer the case.  If you want this directory used, you need to create it yourself and run out of there. PdbStr.exe This utility is used by the indexing scripts to insert the version control information into the  srcsrv  alternate stream of the target PDB file.  It can also read any stream from a PDB file.  You can use this information to verify that the indexing scripts are working properly. For more information, run the utility with the   option. VSSDump.exe This utility is used by the indexing script for Visual SourceSafe.  It gathers the list of source files to be indexed.  This program is also a valuable command line utility that you can use to examine which files may be processed by the indexing script. To prepare for source indexing, edit srcsrv.ini so that it contains an entry for your version control server.  This is an operation that you will do only once.  Details are listed in the sample version of this file.  You can use an environment variable or switch to the indexing script to denote the location of this file.   However, it is best to put it in the same directory as the script, because the contents of this file are intended to be global across all projects in your business or development system.  This file serves to uniquely identify different version control servers.  Note that you can provide a different version of this file to debuggers so that they look at a replicated copy of the version control server.  This can be useful if you want to reduce traffic on the server. To source index a particular build, make certain that no source files are checked out on the build computer.  If any files are checked out and edited, then those changes will not be reflected in the final source indexed PDB files.  Furthermore, if your build process includes a pre-compilation pass that generates source files from other files, then you need to check those generated files into version control as part of the pre-compilation. Upon completion of the build, set the current working directory to be the root of all source and generated PDB files.  Then run the indexing script ssindex.cmd.  You will need to specify what version control system you are using as a parameter.  For example: ssindex.cmd  server=vss Ssindex.cmd accepts parameters that allow you to run the script from anywhere and to specify the location of the source files and pdb separately.  This is most useful if the source is kept in another location from the output pdb files.  Example: ssindex.cmd  server=vss  source=c:\source  symbols=c:\outputdir These directories can also be specified with environment variables.  Use the -? or -?? command line options for more information... C:\ >ssindex.cmd -system=vss -? -------------------------------------------------------------------------------- SSIndex.cmd [/option=<value> [...]] [ModuleOptions] [/Debug] General source server settings:      NAME              SWITCH      ENV. VAR        Default   -----------------------------------------------------------------------------   1) srcsrv.ini        Ini         SRCSRV_INI      .\srcsrv.ini   2) Source root       Source      SRCSRV_SOURCE   .   3) Symbols root      Symbols     SRCSRV_SYMBOLS  .   4) Control system    System      SRCSRV_SYSTEM   <N/A>   5) Save File (opt.)  Save        SRCSRV_SAVE     <N/A>   6) Load File (opt.)  Load        SRCSRV_LOAD     <N/A> Visual Source Safe specific settings:      NAME            SWITCH      ENV. VAR        Default   -----------------------------------------------------------------------------   A) VSS Server      Server      SSDIR            <N/A>   B) VSS Client      Client      SSROOT           <Current directory>   C) VSS Project     Project     SSPROJECT        <N/A>   D) VSS Label       Label       SSLABEL          <N/A> Precedence is: Default, environment, cmdline switch. (ie. env overrides default, switch overrides env). Using '/debug' will turn on verbose output. Use "SSIndex.cmd -??" for verbose help information. See the Source Server documentation for more information. -------------------------------------------------------------------------------- You can also use one of the provided wrapper scripts (vssindex.cmd) to avoid specifying the version control system.  The script will source index all PDB files found in the current directory and below, with version control information to locate all source files found in the current directory and below.  You can specify different locations for these files by using environment variables and command line switches. Upon completion of the source indexing, you can test the output by running srctool.exe on the PDB files.  This program will display whether the PDB is source indexed or not.  It will also display the specific information for every source file.  Lastly, it displays the number of indexed sources and the number of sources that no indexing information was found for.  It sets an %ERRORLEVEL% of -1 if the file is not source indexed.  Otherwise it sets %ERRORLEVEL% to the number of indexed source files. Creating a Source Control Provider Module The source server includes provider modules for Perforce (p4.pm) and Visual Source Safe (vss.pm).   It is possible to generate your own modules to support other version control systems.  Included in this package is svn.pm, which was written by Shahar Talmi of Safeend, Ltd.  This shows how you can modify one of the existing scripts to support the Subversion Version Control system. To create your own provider module, you must implement the following set of interfaces. $module::SimpleUsage()  Purpose: Displays simple module usage information to STDOUT.  Parameters: None  Return value: None  $module::VerboseUsage()  Purpose: Displays in-depth module usage information to STDOUT. Parameters: None  Return value: None  $objref = $module::new(@CommandArguments)  Purpose: Initializes an instance of the provider module. Parameters: All @ARGV arguments that weren t recognized by ssIndex.cmd as being general arguments. Return value: A reference that can be used in later operations.  $objref->GatherFileInformation($SourcePath, $ServerHashReference)  Purpose: Enables the module to gather the required source indexing information for the directory specified by the $SourcePath parameter. The module should not assume that this entry will be called only once for each object instance, as ssIndex.cmd may call it multiple times for different paths. Parameters:  (1) The local directory containing the source to be indexed.  (2)  A reference to a hash containing all of the entries from the specified srcsrv.ini file.  Return value: None  ($VariableHashReference, $FileEntry) = $objref->GetFileInfo($LocalFile)  Purpose: Provides the necessary information to extract a single, specific file from the source control system. Parameters: A fully-qualified file name Return value:  (1)  A hash reference of the variables necessary to interpret the returned $FileEntry.  SSIndex.cmd caches these variables for every source file used by a single debug file to reduce the amount of information written to the source index stream.  (2)  The file entry to be written to the source index stream to allow SrcSrv.dll to extract this file from source control. The exact format of this line is specific to the source control system.  $TextString = $objref->LongName()  Purpose: Provides a descriptive string to identify the source control provider to the end user. Parameters: None Return value: The descriptive name of the source control system.  @StreamVariableLines = $objref->SourceStreamVariables()  Purpose: Enables the source control provider to add source control specific variables to the source stream for each debug file. The sample modules use this method for writing the required EXTRACT_CMD and EXTRACT_TARGET variables. Parameters: None Return value: The list of entries for the source stream variables.  Language Specification Version 1 Source Server Data Blocks Source server relies on two blocks of data within the PDB file. Source file list.  Building a module automatically creates a list of fully-qualified paths to the source files used to build the module. Data block.  Indexing the source as described previously adds an alternate stream to the PDB file named  srcsrv . The script that inserts this data is dependent on the specific build process and source control system in use. The data block is divided into three sections: ini, variables, and source files. It has the following syntax. SRCSRV: ini ------------------------------------------------  VERSION=1 VERCTRL=<source_control_str> DATETIME=<date_time_str> SRCSRV: variables ------------------------------------------  SRCSRVTRG=%sdtrg%  SRCSRVCMD=%sdcmd%  SRCSRVENV=var1=string1\bvar2=string2  DEPOT=//depot  SDCMD=sd.exe -p %fnvar%(%var2%) print -o %srcsrvtrg% -q %depot%/%var3%#%var4%  SDTRG=%targ%\%var2%\%fnbksl%(%var3%)\%var4%\%fnfile%(%var1%)  WIN_SDKTOOLS= sserver.microsoft.com:4444  SRCSRV: source files ---------------------------------------  <path1>*<var2>*<var3>*<var4>  <path2>*<var2>*<var3>*<var4>  <path3>*<var2>*<var3>*<var4>  <path4>*<var2>*<var3>*<var4>  SRCSRV: end ------------------------------------------------ All text is interpreted literally, except for text enclosed in percent signs (%). Text enclosed in percent signs is treated as a variable name to be resolved recursively, unless it is one of the following functions: %fnvar%()  The parameter text should be enclosed in percent signs and treated as a variable to be expanded.  %fnbksl%()  All forward slashes (/) in the parameter text should be replaced with backward slashes (\).  %fnfile%()  All path information in the parameter text should be stripped out, leaving only the file name.  The ini section contains variables that describe the requirements. The indexing script can add any number of variables to this section. The following are examples: VERSION  The language specification version. This variable is required.   Someone developing a script based on this language specification should set this value to 1.  The Source Server client code will not attempt to execute any script that has a value greater than it.  Current versions of srcsrv.dll use the value of 2.   VERCTL  A string that describes the source control product. This variable is optional.  DATETIME  A string that indicates the date and time the PDB file was processed. This variable is optional.  The variables section contains variables that describe how to extract a file from source control. It can also be used to define commonly used text as variables to reduce the size of the data block. SRCSRVTRG  Describes how to build the target path for the extracted file. This is a required variable.  SRCSRVCMD  Describes how to build the command to extract the file from source control. This includes the name of the executable file and its command-line parameters. This is required if any extraction command needs to be executed.  SRCSRVENV  A string that lists environment variables to be created during the file extraction. Separate multiple entries with a backspace character (\b). This is an optional variable.  SRCSRVVERCTRL  Specifies the version control system in use.  For Perforce, this is  perforce .  For Visual SourceSafe, this is  .  For Team Foundation Server, this is  .  This variable is used to persist server errors. This is an optional variable. SRCSRVERRDESC  This is a text snippet that matches what is emitted by the version control client when it is unable to contact the server that contains the source files to extract.  Source Server uses this value to check for connection problems. This is an optional variable. SRCSRVERRVAR  This indicates which variable in a file entry corresponds to a version control server.  It is used by Source Server to identify commands that won t work, based on previous failures.  The format of the text is   where X is the number of the variable being indicated.  This is an optional variable. The source files section contains an entry for each source file that has been indexed. The contents of each line are interpreted as variables with the names VAR1, VAR2, VAR3, and so on until VAR10. The variables are separated by asterisks. VAR1 must specify the fully-qualified path to the source file as listed elsewhere in the PDB file. For example, the following line: c:\proj\src\file.cpp*TOOLS_PRJ*tools/mytool/src/file.cpp*3  is interpreted as follows: VAR1=c:\proj\src\file.cpp VAR2=TOOLS_PRJ VAR3=tools/mytool/src/file.cpp VAR4=3 In this example, VAR4 is a revision number. However, most source control systems support labeling files in such a way that the source state for a given build can be restored. Therefore, you could alternately use the label for the build. The sample data block could be modified to contain a variable such as the following: LABEL=BUILD47  Then, presuming the source control system uses the at sign (@) to indicate a label, you could modify the SRCSRVCMD variable as follows: sd.exe -p %fnvar%(%var2%) print -o %srcsrvtrg% -q %depot%/%var3%@%label% How Source Server Works The source server client is implemented in symsrv.dll. The client does not extract information directly from the PDB file; it uses a symbol handler such as the one implemented in dbghelp.dll. It is essentially a recursive variable substitution engine that creates a command line that can be used to extract the proper source file from the source control system. Your code should not call Symsrv.dll directly. To integrate its functionality into your application, use the SymGetSourceFile function. The first version of source server works as follows.  (This behavior may change in future versions.) First, the client calls SrcSrvInit with the target path to be used as a base for all source file extractions.  This path is stored in the special variable TARG. When dbghelp loads a module s PDB file, it extracts the SrcSrv stream from the PDB and passes this data block to SrcSrv by calling SrcSrvLoadModule. Then when dbghelp needs to grab a source file, it calls SrcSrvGetFile to retrieve a specified source file from version control. Srcsrv looks through all the source file entries in the data block for an entry that matches exactly the requested source spec.  This match is to be found in VAR1. Once srcsrv finds the entry, it fills in the special variables (VAR1, VAR2, etc.) with the contents of this source file entry. Now the SRCSRVTRG variable is resolved using these special variables.  Beginning with the source line used in the previous example, the following shows how these variables are resolved.  Each line shows the resolution of one more special variable.  The resolved variables are shown in red. SRCSRVTRG=%sdtrg%  SDTRG=%targ%\%var2%\%fnbksl%(%var3%)\%var4%\%fnfile%(%var1%) c:\src\%var2%\%fnbksl%(%var3%)\%var4%\%fnfile%(%var1%) c:\src\WIN_SDKTOOLS\%fnbksl%(%var3%)\%var4%\%fnfile%(%var1%) c:\src\WIN_SDKTOOLS\%fnbksl%( sdktools/debuggers/srcsrv/shell.cpp)\%var4%\%fnfile%(%var1%) c:\src\WIN_SDKTOOLS\ sdktools\debuggers\srcsrv\shell.cpp\%var4%\%fnfile%(%var1%) c:\src\WIN_SDKTOOLS\ sdktools\debuggers\srcsrv\shell.cpp\3\%fnfile%(%var1%) c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\%fnfile%( c:\db\srcsrv\shell.cpp) c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\shell.cpp Notice how this generated target path is unique and will not allow two versions of the same file to be extracted to the same location. Srcsrv now looks to see if the file is already there.  If it is, srcsrv returns the location to the caller.  Otherwise, srcsrv builds the execution command to extract the file by resolving SRCSRVCMD. In the following example, each line shows the resolution of one more special variable.  The resolved variables are shown in red. DEPOT=//depot  WIN_SDKTOOLS= sserver.microsoft.com:4444  SRCSRVCMD=%sdcmd%  SDCMD=sd.exe -p %fnvar%(%var2%) print -o %srcsrvtrg% -q %depot%/%var3%#%var4%  sd.exe -p %fnvar%(WIN_SDKTOOLS) print -o %srcsrvtrg% -q %depot%/%var3%#%var4%  sd.exe -p sserver.microsoft.com:4444  print -o %srcsrvtrg% -q %depot%/%var3%#%var4%  sd.exe -p sserver.microsoft.com:4444  print -o c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\shell.cpp -q %depot%/%var3%#%var4%  sd.exe -p sserver.microsoft.com:4444  print -o c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\shell.cpp -q //depot/%var3%#%var4%  sd.exe -p sserver.microsoft.com:4444  print -o c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\shell.cpp -q //depot/ sdktools/debuggers/srcsrv/shell.cpp#%var4%  sd.exe -p sserver.microsoft.com:4444  print -o c:\src\WIN_SDKTOOLS\sdktools\debuggers\srcsrv\shell.cpp\3\shell.cpp -q //depot/ sdktools/debuggers/srcsrv/shell.cpp#3  Now srcsrv executes this command line.  If the result of this command line is a file in the expected location, then this path is returned to the caller. Note that if a variable cannot be resolved, an attempt is made to look it up as an OS environment variable.  If that fails, the variable name is deleted from the text being processed. Two consecutive percent sign characters are interpreted as a single percent sign. Handling Server Errors Sometimes a client will be unable to extract any files at all from a single version control server.  This can be because the server is down and off the network or because the user does not have appropriate privileges to access the source.  However the time consumed attempting to get this source can slow things down significantly.  In this situation, it is desirable to disable any attempt to extract from a source that has been proven to be unavailable. Whenever Source Server fails to extract a file, it examines the output text produced by the command.  If any part of this command contains an exact match for the contents of the SRCSRVERRDESC, then all future commands to the same version control server will be skipped.  Note that you can define multiple error strings by adding numbers or arbitrary text to the end of the SRCSRVERRDESC variable name.  Examples: SRCSRVERRDESC=foo: server not found SRCSRVERRDESC_2=bar: network error The identity of the server is acquired from SRCSRVERRVAR. So if SRCSRVERRVAR contains   and the file entry in the pdb looks like this c:\proj\src\file.cpp*TOOLS_PRJ*tools/mytool/src/file.cpp*3 Then all future attempts to grab source using a file entry that contains  TOOLS_PRJ  in variable 2 will be bypassed. You can also add error indicators on the debugger client by editing srcsrv.ini.  Instructions are provided in the sample file provided. API and Usage This document allows you to understand how to prepare instrumentation scripts so that this source server technology can be integrated into your build or version control system. This document exposes many of the specifics of how srcsrv.dll is called by symbol handler code.  However this information is not static and will not become so in the future.  No one should attempt to write code that calls srcsrv.dll directly.  This is reserved for dbghelp.dll or the Visual Studio products.  Third party vendors wishing to integrate such functionality in their products should use the SymGetSourceFile function.  This function, along with others in the DbgHelp API, is described in the dbghelp.chm documentation. Language Specification Version 2 SRCSRVCMD This package ships with a srcsrv.dll that is able to operate without SRCSRVCMD being defined in the srcsrv data stream of a PDB.  While it is of no use for normal file extraction from source control systems, it is useful for direct access of files from a UNC share or HTTP site.  Such usage is described later in this document. Notes on Visual SourceSafe The Database The default Visual SourceSafe database can be set with the SSDIR environment variable.  If it is not set there, the Source Server indexing script can usually determine this from the registry.  If it can t, the script will prompt you to set SSDIR.  Regardless, this database value must be listed in your srcsrv.ini file along with a simple alias to identify the database.  More instructions can be found in the comments in srcsrv.ini.  You should add the entry in the [variables] section of the file as so MYDATABASE=\\server\VssShare Current Project Visual SourceSafe works with the concept of a  current project .  The Source Server indexing script respects this value and limits itself to process only source files that are part of the current project.  You can see what the current project is with the  ss.exe project  command.  If you want to change the current project, you can do so with the  ss.exe cp  command.  For example, if you want all projects to be processed you would do so by setting the current project to the root, as so ss.exe cp $/ Working Folder Visual SourceSafe projects are associated with  working folders .  A working folder is the location on the client computer which corresponds to the root of a project.  However it is possible for such a computer to obtain and build source without a working folder being specified, normally through  ss.exe get   or when creating projects through the Visual Studio interface.  This mode of operation is incompatible with Source Server indexing.  Source Server requires that a working folder be specified.  If you have not set a working folder, you can do so with the following command ss.exe workfold <project> <folder> Labels Visual SourceSafe is not able to determine what version of a file exists within the working directory of a build machine.  Consequently, you must use labels to stamp the project with an identifier that will be used to extract source files on the debugger client.  So before indexing, you need to make sure that all changes are checked into the database and then apply a label to it with the  ss.exe label  command.  In the following example, the label  VERSION_3  is applied to a project called  $/sdktools E:\nt\user>ss.exe label $/sdktools Label for $/sdktools: VERSION_3 Comment for $/sdktools: This is a comment. After the label is applied, you can specify this label to the Source Server indexing script by setting the environment variable, SSLABEL, or by passing it as a command line parameter vssindex.cmd  label=VERSION_3 Again, this label is required for Source Server indexing to work.  Note that if you pass a label that doesn t exist in the project, it might take a long time for the script to complete and the results will be of no use. Credentials If your Visual SourceSafe database requires a user and optional password in order to access it, then these values must be set through the SSUSER and SSPWD environment variables.  This applies not only at the time the build is indexed, but also on the debugger client.   Platform Visual SourceSafe is an X86 application and the source indexing scripts and tools for it are installed only with the X86 package of Debugging Tools for Windows. Debugging As described previously, SSUSER and SSPWD may need to be set in your debugging environment.  Furthermore, please note that the version of srcsrv.dll that ships with Visual Studio 2005 is not able to detect if Visual SourceSafe (ss.exe) is prompting for credentials.  This will result in a hang in the application.  You can upgrade with the srcsrv.dll that ships with  Debugging Tools for Windows  to prevent this.  Regardless, the credentials must be set for source extraction to work, if your Visual SourceSafe database requires them. If Visual SourceSafe is not set in the path of your debugging computer, you can get around this by adding an entry to the srcsrv.ini file that works with your debugger.  When using a standard installation of Visual Studio, this file should be located in the following location %PROGRAMFILES%\Microsoft Visual Studio 8\Common7\IDE\srcsrv.ini In the [trusted commands] section described previously, add an entry like the following, making sure that the path points to the correct location of ss.exe. ss.exe= C:\Program Files\Microsoft Visual SourceSafe\ss.exe VSSDump VSSDump.exe is a program that is used by the indexing scripts to locate and resolve source files to the database.  You can also use this program standalone so as to diagnose issues when source indexing.  Calling the program with   will list the command line parameters vssdump: enumerates files in the current VSS project.       -a                ignores the current project and lists all projects.       -p:<projectname>  specifies a VSS project to use.                         not to be used -with '-a'       -d:<directory>    specifies a root directory                         otherwise the current directory is used.       -l:<label>        specifies a version label       -t                don't test version to match a passed label       -v:<sharepath>    specifies location of the VSS database - overrides SSDIR       -r                recurse subdirectories       -f                don't list files - just directories       -i                ignore current directory and list entire project                         not to be used with '-r'       -s                format output for scripting       -c                display only the VSS configuration info Notes on CVS (Concurrent Versions System) Disclaimer The cvs module for Source Server was developed using Concurrent Versions System (CVS) 1.11.17 (client).  It has not been tested with any other versions of cvs.  Furthermore it has not been tested extensively.  We have noticed that the great variance in user installations has exposed a lot of opportunities for the scripts to fail.  So anyone using this beta of the scripts should consider that there is a chance he or she will have to do a little Perl debugging of the scripts to make they work out.  Those finding they need to do this should please let us know by posting to the microsoft.public.windbg newsgroup so that we can help you and enhance the scripts. CVSROOT On the machine that you source index the build, CVSROOT cannot contain password and user information.  You should use cvs.exe to set your credentialing information.  To prepare srcsrv.ini for cvs indexing you need to enter an alias for your repository that will uniquely identify it from any others in your network.  This repository needs to match the value of CVSROOT in your environment.  There is no need to set this value in the srcsrv.ini that you keep with your debugger clients since the alias will be defined in the source indexed pdb.  Client Computer The client computer that will be extracting files during debugging does not need a cvs sandbox or CVSROOT set.  It does need cvs binaries in the path and if the repository is locked, you will need to set the username and password with cvs.exe. Revision Tags Cvs is unable to extract a file by its version number.  Instead it must be done using what is known as a  .  So when indexing a cvs-based system you need to make sure that all changes are checked into the repository and then apply a tag with the  cvs tag  command.  Then when indexing the file, make certain you use the  label  command line parameter to specify the tag that you want to associate with the build you are indexing.   You can achieve the same result by setting CVS_LABEL in the environment.  Other values can be set from the environment or the command line.  Don t forget to use the -? command line parameter to examine your choices and to make sure that all was configured correctly. ssindex.cmd  system=cvs -?? HTTP Sites and UNC Shares It is possible to set up a web site that provides version-specific source to the windbg.exe debugger through the srcsrv module.  Such a mechanism does not provide dynamic extraction of the source files from version control; however it is a valuable feature because it allows you to set the source path of windbg.exe to a single unified path that will provide source from many versions of many modules, instead of having to set separate paths for each debugging scenario.  This is not of interest to debugging clients that have direct access to the actual version control systems, but can be of assistance to those wanting to provide secure http-based access to source from remote locations.  The web sites in question can be secured through HTTPS and smartcards, if desired.  This same technique can be used to provide source files through a simple UNC share.   Set up the web site Set up a web site to share the source files from and note the root directory of the site.  You will probably also want to make the pdbs available on the web site, using Symbol Server technology.  So you might have symbols and source made available from locations such as this https://diehelkthidoeodlby.com/symbols https://diehelkthidoeodlby.com/source While it is outside the scope of this document to describe how to set up a web site, there are some step-by-step instructions for doing this in symhttp.doc that ships with the  Debugging Tools For Windows  package.  Please note that much of these instructions apply specifically to symbol servers. Extract and locate the source files Use srctool.exe  x to extract all the source files from all the modules that you want to provide source for.  You need to run this tool on pdb files that have already been source indexed for your version control system and you will need to run the tool on a computer that has version control access.  This will put all the source files into a common directory tree.  Copy the contents of this tree to the root of the web site.  You can do this as often as you wish on any new products or modules that you wish to add.  There is no worry about files overwriting each other, since the directory tree structure keep dissimilar files separated and uniquely accessible. A script file called walk.cmd is provided in this package to make it easier to run srctool.exe and other scripts on all matching files within a directory tree.  walk.cmd walks recursively through a directory tree and executes any specified command on any file that matches a passed file mask.  You can pass a simple file mask if you want it to start in the current working directory, or you can pass the starting directory with the file mask.  Here is an example walk.cmd c:\symbols\*.pdb srctool.exe -x This will run the srctool file extraction on all pdb files in c:\symbols or directories below it. Modify the pdb source indexing streams For the debugger clients to use the Source Server web site, the pdbs must be modified to point to it.  Normally you would make a copy of all the pdbs, change them, and make them available from a separate location, usually the web site, itself.   Three files are provided to assist you in reconfiguring the pdbs.  cv2http.cmd and cv2http.pl extract the Source Server stream, modify it through a perl script, and put the altered stream back in the pdb. cv2http.cmd: pdb  alias  url                    you must specify a pdb file,                    a logical http site alias                    and the URL of the site The script takes three required parameters pdb:  specifies the name of the pdb to modify. alias: specifies the logical name to apply to your web site. specifies the full URL of the site. The alias parameter is especially interesting; as it will be stored in the pdb as a variable name that can be overridden on the debugger client in srcsrv.ini should you ever move the location of the web site. This script requires that all the standard Source Server tools be available in the path, since it calls both srctool.exe and pdbstr.exe.  Don t forget that cv2http.pl is a Perl script and can be modified as you see fit to meet your needs. You can use walk.cmd to modify an entire set of pdb files. walk.cmd *.pdb cv2http.cmd HTTP_ALIAS https://diehelkthidoeodlby.com/source The above command will call cv2http.cmd on every pdb file in a tree, passing the following parameters the name of each pdb  HTTP_ALIAS for the alias https://diehelkthidoeodlby.com/source for the url. After running this command on a tree of pdb files, they will be ready for installation into the web site (or whatever location you want to put them.  You may want to refer to the Symbol Server documentation for more details on this.  Remember that you can use srctool.exe and pdbstr.exe to examine the changes to the pdbs. UNC Shares There is nothing preventing you from using these same scripts to provide source files from a simple UNC share.  To do this, just eliminate all the previously described steps for setting up a web site.  When calling cv2http.cmd, replace the url parameter with the root of the UNC share that you extracted the source files to with srctool.exe, like so walk.cmd *.pdb cv2http.cmd MY_SOURCE_ROOT \\server\share Supporting HTTP/UNC along with regular version control with the same pdb Imagine the scenario in which you want to support your developers using the standard Source Server functionality that extracts files from version control, however you also want to make source files available through a web site or UNC share.  This may make sense if you have set up a test lab that does not have access to version control.  It is possible to support both users using the same set of pdbs. First, extract the source files using srctool.exe as described previously and make the share available as either a web site or UNC share.  Then ignore all the steps that convert the pdbs using cv2http.cmd.   Now on the computers that will use the HTTP/UNC shares, edit the srcsrv.ini that is in the debugger directory.  In the [variables] section of the file, add the following three statements MY_SOURCE_ROOT=\\server\share SRCSRVCMD= SRCSRVTRG=%MY_SOURCE_ROOT%\%var2%\%var3%\%var4%\%fnfile%(%var1%) You should replace  \\server\share  with the root of  the UNC share you are providing or the URL of the web site that contains the source files.  You can also change  MY_SOURCE_ROOT  to be any alias you want that describes this location.  With these exceptions, everything else should be entered exactly as described. All debuggers set up in this fashion will ignore the standard version control extraction instructions, and will, instead, access the source files from the location specified.  Meanwhile, all debuggers without these items included in srcsrv.ini will use the normal version control mechanism to extract source files. shYhGYhY socZcSOSOJOJO
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\SourceIndex\srcsrv.ini ===
;
; Double entries to handle both the server names as SD sees them and the server
; names as they're referenced in postbuild.  Both aliases resolve to the same
; physical server.  If there are more than one, then the first one listed is the
; primary name to be used in all future references.  Boilerplates have been added
; to match this name, unless otherwise indicated.
;
; Sometimes you will see the same depot mapped to multiple aliases.  This is
; backwards compatibility with old names.  However they are not used by the
; source indexing scripts.
;
;
; To get your version control server listed in this file, contact mailto:srcsrvad.
;

; All lines beginning with a semicolon (such as this) are ignored
; and can be used as comments.  Blank lines are also ignored.
; Note that the first non-whitespace character on a line must be
; a semicolon, for the line to be registered as a comment.  Semicolons that
; exist anywhere in the middle of text is treated as part of the text.

[variables]

; You can use these entries to redirect source server to a share or http site.
; See srcsrv.doc for details
;
;SRCSRVCMD=
;MY_SOURCE_ROOT=c:\home\tmp\root
;SRCSRVTRG=%my_source_root%\%var2%\%var3%\%var4%\%fnfile%(%var1%)

; http://CoreXT - CoreXT root depot

COREXT_ROOT=spgsources.redmond.corp.microsoft.com:1492
COREXT_TEST=bgit-sdcorext:2732

; mailto:SPGBT
STU-SD-01=etgdepot.redmond.corp.microsoft.com:4000
STU-SD-02=AVISA-1:4000

; mailto: msgrsrv - Windows Messenger
MSN_WLMSGRSRV=bsdmessenger:1673
MSN_WLMSGRSRV=tkbgitsdbdry01.redmond.corp.microsoft.com:1673

;mailto: ddsdadm - DevDiv

DEVDIV=ddrtsd:4000
DEVDIV_RTSD=ddrtsd:4000
DD_WHIDBEY=ddrtsd:4000
DD_WHIDBEY=tkbgitsddevdv01.redmond.corp.microsoft.com:4000

; mailto:isasdadm - US-US-BED Haifa Design Center

SBU_MSFW=haifasd.middleeast.corp.microsoft.com:4001
SBU_MSFW=haifasd:4001

; mailto:smbld - Operations Manager Group

MOM=Bgit-sdsmkernel:4445
MOM=smkernel.redmond.corp.microsoft.com:4444

; mailto:psbldadm - PTT (Product Studio, etc.)

PTT=tkbgitsd01.redmond.corp.microsoft.com:6000

; mailto:JOHNJA --Real Time Messaging Group

LCSLMBLD=BGIT-SDRTCNET:12011
LCSLMBLD=TKBGITSDRTC01.sys-wingroup.ntdev.corp.microsoft.com:12011
LCSLMBLD=tkbgitsd05.sys-wingroup.ntdev.corp.microsoft.com:12011

;mailto:garywa - Window Mobile

MDD=tkbgitsdwce02.redmond.corp.microsoft.com:5000

; mailto:vmproddv - Virtual Machine Product Development Group source

VMPRODDV_SRC=TKBGITSD02.redmond.corp.microsoft.com:4045

; mailto:drozee - Commerce Server

COMSRV=BGIT-SDBPI1:2298
COMSRV=TKBGITSDBPI01.redmond.corp.microsoft.com:2298
COMSRV=ebizdepot2.redmond.corp.microsoft.com:4001

; mailto:bpidbld - Biztalk Server

BTSSRV=TKBGITSDBPI01.redmond.corp.microsoft.com:2300

; mailto:obuild - Office Build

OFFICE=OFFDEPOT1:4000

; mailto:catadmin - Content Access Technologies Team

ZDRM_CATT=BGIT-SDCATT:2745

; http://infra - Windows Sources

WIN_ADMIN=admindepot.sys-ntgroup.ntdev.microsoft.com:2002
WIN_ADMIN=snowline.sys-wingroup.ntdev.corp.microsoft.com:2002
WIN_ADMIN=savoy.sys-wingroup.ntdev.corp.microsoft.com:2002

WIN_BASE=basedepot.sys-ntgroup.ntdev.microsoft.com:2003
WIN_BASE=sleet.sys-wingroup.ntdev.corp.microsoft.com:2003
WIN_BASE=subzero.sys-wingroup.ntdev.corp.microsoft.com:2003

WIN_COM=comdepot.sys-ntgroup.ntdev.microsoft.com:2004
WIN_COM=snowblind.sys-wingroup.ntdev.corp.microsoft.com:2004

WIN_DRIVERS=driversdepot.sys-ntgroup.ntdev.microsoft.com:2005
WIN_DRIVERS=crevasse.sys-wingroup.ntdev.corp.microsoft.com:2005

WIN_DS=dsdepot.sys-ntgroup.ntdev.microsoft.com:2006
WIN_DS=snowline.sys-wingroup.ntdev.corp.microsoft.com:2006

WIN_ENDUSER=enduserdepot.sys-ntgroup.ntdev.microsoft.com:2007
WIN_ENDUSER=crevasse.sys-wingroup.ntdev.corp.microsoft.com:2007

WIN_INETCORE=inetcoredepot.sys-ntgroup.ntdev.microsoft.com:2008
WIN_INETCORE=icefield.sys-wingroup.ntdev.corp.microsoft.com:2008

WIN_INETSRV=inetsrvdepot.sys-ntgroup.ntdev.microsoft.com:2009
WIN_INETSRV=sleet.sys-wingroup.ntdev.corp.microsoft.com:2009
WIN_INETSRV=subzero.sys-wingroup.ntdev.corp.microsoft.com:2003

WIN_MULTIMEDIA=multimediadepot.sys-ntgroup.ntdev.microsoft.com:2010
WIN_MULTIMEDIA=permafrost.sys-wingroup.ntdev.corp.microsoft.com:2010

WIN_NET=netdepot.sys-ntgroup.ntdev.microsoft.com:2011
WIN_NET=glacier.sys-wingroup.ntdev.corp.microsoft.com:2011

WIN_NTTEST1=nttest1depot.sys-ntgroup.ntdev.microsoft.com:7001
WIN_NTTEST1=tundra.sys-wingroup.ntdev.corp.microsoft.com:7001

WIN_NTTEST3=nttest3depot.sys-ntgroup.ntdev.microsoft.com:7003
WIN_NTTEST3=tundra.sys-wingroup.ntdev.corp.microsoft.com:7003

WIN_NTTEST5=nttest5depot.sys-ntgroup.ntdev.microsoft.com:7005
WIN_NTTEST5=windchill.sys-wingroup.ntdev.corp.microsoft.com:7005
WIN_BVT=nttest5depot.sys-ntgroup.ntdev.microsoft.com:7005
WIN_BVT=snowshoe.sys-wingroup.ntdev.corp.microsoft.com:7005

WIN_NTTEST_NET=NTTest2Depot.sys-ntgroup.ntdev.microsoft.com:7002
WIN_NTTEST_NET=tundra.sys-wingroup.ntdev.corp.microsoft.com:7002

WIN_NTTEST_IIS=iistestdepot.sys-ntgroup.ntdev.microsoft.com:7100
WIN_IISTEST=iistestdepot.sys-ntgroup.ntdev.microsoft.com:7100
WIN_IISTEST=windchill.sys-wingroup.ntdev.corp.microsoft.com:7100

WIN_PRINTSCAN=printscandepot.sys-ntgroup.ntdev.microsoft.com:2012
WIN_PRINTSCAN=snowplow.sys-wingroup.ntdev.corp.microsoft.com:2012

WIN_PUBLIC=publicdepot.sys-ntgroup.ntdev.microsoft.com:2017
WIN_PUBLIC=timberline.sys-wingroup.ntdev.corp.microsoft.com:2017

WIN_ROOT=rootdepot.sys-ntgroup.ntdev.microsoft.com:2001
WIN_ROOT=margo.sys-wingroup.ntdev.corp.microsoft.com:2001

WIN_SDKTOOLS=sdktoolsdepot.sys-ntgroup.ntdev.microsoft.com:2013
WIN_SDKTOOLS=glacier.sys-wingroup.ntdev.corp.microsoft.com:2013
WIN_SDKTOOLS=snowblind.sys-wingroup.ntdev.corp.microsoft.com:2013

WIN_SHELL=shelldepot.sys-ntgroup.ntdev.microsoft.com:2014
WIN_SHELL=sleet.sys-wingroup.ntdev.corp.microsoft.com:2014

WIN_SQL=sqldepot.sys-ntgroup.ntdev.microsoft.com:1666
WIN_SQL=tkbgitsdwin01.sys-wingroup.ntdev.corp.microsoft.com:1666
WIN_SQL=tkbgitsdsql01.sys-wingroup.ntdev.corp.microsoft.com:1666
WIN_SQL=sqlvault.sys-wingroup.ntdev.corp.microsoft.com:1666
WIN_SQL=sqlvault:1666

WIN_TERMSRV=termsrvdepot.sys-ntgroup.ntdev.microsoft.com:2015
WIN_TERMSRV=glacier.sys-wingroup.ntdev.corp.microsoft.com:2015

WIN_WINDOWS=windowsdepot.sys-ntgroup.ntdev.microsoft.com:2016
WIN_WINDOWS=snowblind.sys-wingroup.ntdev.corp.microsoft.com:2016

WIN_SPECS=ntspecdepot.sys-ntgroup.ntdev.microsoft.com:5001
WIN_SPECS=snowshoe.sys-wingroup.ntdev.corp.microsoft.com:5001

WIN_DESKTOP=desktopdepot.sys-ntgroup.ntdev.microsoft.com:2018
WIN_DESKTOP=snowline.sys-wingroup.ntdev.corp.microsoft.com:2018

WIN_TESTSRC=roottestdepot.sys-ntgroup.ntdev.microsoft.com:3001
WIN_TESTSRC=sleet.sys-wingroup.ntdev.corp.microsoft.com:3001

WIN_LOC1=savoy.sys-wingroup.ntdev.corp.microsoft.com:8006
; not found

WIN_LOC2=freshpowder.sys-wingroup.ntdev.corp.microsoft.com:8003
; wrong server - WIN_LOC3=NTLoc3Depot.sys-ntgroup.ntdev.microsoft.com:8003

WIN_LOC3=freshpowder.sys-wingroup.ntdev.corp.microsoft.com:8004
; no boilerplate

; For questions about this depot or to report issues, email shlsdown.

WIN_TEST_SHELL=Shelltest.ntdev.corp.microsoft.com:2000

; mailto:qfebld - Windows 2000 QFE sources

WIN2000_QFE01=win2k01depot.sys-ntgroup.ntdev.microsoft.com:7001
WIN2000_QFE01=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7001

WIN2000_QFE02=win2k02depot.sys-ntgroup.ntdev.microsoft.com:7002
WIN2000_QFE02=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7002

WIN2000_QFE03=win2k03depot.sys-ntgroup.ntdev.microsoft.com:7003
WIN2000_QFE03=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7003

WIN2000_QFE04=win2k04depot.sys-ntgroup.ntdev.microsoft.com:7004
WIN2000_QFE04=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7004

WIN2000_QFE05=win2k05depot.sys-ntgroup.ntdev.microsoft.com:7005
WIN2000_QFE05=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7005

WIN2000_QFE06=win2k06depot.sys-ntgroup.ntdev.microsoft.com:7006
WIN2000_QFE06=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7006

WIN2000_QFE07=win2k07depot.sys-ntgroup.ntdev.microsoft.com:7007
WIN2000_QFE07=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7007

WIN2000_QFE08=win2k08depot.sys-ntgroup.ntdev.microsoft.com:7008
WIN2000_QFE08=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7008

WIN2000_QFE09=win2k09depot.sys-ntgroup.ntdev.microsoft.com:7009
WIN2000_QFE09=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7009

WIN2000_QFE10=win2k10depot.sys-ntgroup.ntdev.microsoft.com:7010
WIN2000_QFE10=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7010

WIN2000_QFE11=win2k11depot.sys-ntgroup.ntdev.microsoft.com:7011
WIN2000_QFE11=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7011

WIN2000_QFE12=win2k12depot.sys-ntgroup.ntdev.microsoft.com:7012
WIN2000_QFE12=tkbgitsd08.sys-ntgroup.ntdev.microsoft.com:7012

WIN2000_QFE13=win2k13depot.sys-ntgroup.ntdev.microsoft.com:7013
WIN2000_QFE13=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7013

WIN2000_QFE14=win2k14depot.sys-ntgroup.ntdev.microsoft.com:7014
WIN2000_QFE14=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7014

WIN2000_QFE15=win2k15depot.sys-ntgroup.ntdev.microsoft.com:7015
WIN2000_QFE15=tkbgitsd08.sys-wingroup.ntdev.corp.microsoft.com:7015

; mailto:qfebld - Windows 2000, XP archive source
; (for milestones released before source symbol indexing)

WINSE_ARCH=winsesymidx.ntdev.corp.microsoft.com:8001

[trusted commands]

;An extraction command that begins with any of the text displayed
;in the following entries will never present a warning to the user
;about potential security problems.

sd.exe

;You can also replace an extraction command.  This is useful for
;specifying a full path to the executable, reducing the security
;risks.

someprogram.exe=c:\bin\x86\someprogram.exe

[SourceControlIndexExcludes]
Extensions=asmmeta:asp:aspx:bmp:cfg:cmd:dbg:def:dll:doc:exe:frm:gif:htm:html:ico:ini:jpeg:jpg:lib:log:msi:obj:pdb:pl:pm:png:resx:sln:sql:txt:user:vcproj:webinfo:wxs:xls:xml:msg:vcf:vcs:ics:ppt:ofc:pst:xsl:xsd:xsf
Files=CodeTags.txt:dirs:makefile:makefile.inc:project.mk:sources:sources.inc
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.ExceptionMessageBox.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ExceptionMessageBox</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.MessageBox">
			<summary>The exception message box is a programmatic interface that is installed with and used by Microsoft SQL Server 2005 graphical components. The exception message box is a supported interface that you can use in your custom applications to provide significantly more control over the messaging experience than is provided by the <see cref="T:System.Windows.Forms.MessageBox"></see> class. It also gives your users the options to save error message content for later reference and to get help on messages. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs">
			<summary>Returns information when the <see cref="E:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.OnCopyToClipboard"></see> event occurs.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs.#ctor">
			<summary>Creates a new instance of <see cref="T:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs"></see> with the default properties.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs.#ctor(System.String)">
			<summary>Creates a new instance of <see cref="T:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs"></see> with the specified copied text.</summary>
			<param name="clipboardText">Error message information being copied.</param>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs.ClipboardText">
			<summary>Gets the error message information being copied.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.CopyToClipboardEventArgs.EventHandled">
			<summary>Gets or sets whether the <see cref="E:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.OnCopyToClipboard"></see> event is handled.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.CopyToClipboardEventHandler">
			<summary>Delegate that handles the <see cref="E:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.OnCopyToClipboard"></see> event that occurs when error information is copied to the Clipboard.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox">
			<summary>Displays a message box that can be customized with text, buttons, and symbols to improve the customer experience with a Microsoft Windows .NET Framework-based application. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the default properties.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.Exception)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> by using information from the specified <see cref="T:System.Exception"></see>.</summary>
			<param name="exception"><see cref="T:System.Exception"></see> that contains the top-level text, inner exception text, caption, data, help link, and optional additional information to display in the exception message box.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.String)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the supplied top-level error message text.</summary>
			<param name="text">Error text of the top-level message.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.Exception,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> by using information from the specified <see cref="T:System.Exception"></see> and by specifying the buttons to display in the message box.</summary>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the message box. </param>
			<param name="exception"><see cref="T:System.Exception"></see> that contains the top-level text, inner exception text, caption, data, help link, and optional additional information to display in the exception message box.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.String,System.String)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the supplied top-level error message text and the dialog box caption of the exception message box.</summary>
			<param name="caption">Caption of the exception message box. </param>
			<param name="text">Error text of the top-level message.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.Exception,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> by using information from the specified <see cref="T:System.Exception"></see> and by specifying the buttons and symbol to display in the message box.</summary>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="symbol"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> enumeration that specifies the symbol to display in the exception message box. </param>
			<param name="exception"><see cref="T:System.Exception"></see> that contains the top-level text, inner exception text, caption, data, help link, and optional additional information to display in the exception message box.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.String,System.String,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the supplied top-level error message text and the dialog box caption of the exception message box. The method also specifies buttons to display in the exception message box. </summary>
			<param name="caption">Caption of the exception message box. </param>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="text">Error text of the top-level message.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.Exception,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> by using information from the specified <see cref="T:System.Exception"></see> and by specifying the buttons, symbol, and default button to display in the exception message box. .</summary>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="defaultButton"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton"></see> enumeration that specifies the default button for the exception message box. </param>
			<param name="symbol"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> enumeration that specifies the symbol to display in the exception message box. </param>
			<param name="exception"><see cref="T:System.Exception"></see> that contains the top-level text, inner exception text, caption, data, help link, and optional additional information to display in the exception message box. </param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.String,System.String,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the supplied top-level error message text and dialog box caption of the exception message box. The method also specifies the buttons and symbol to display in the exception message box. </summary>
			<param name="symbol"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> enumeration that specifies the symbol to display in the exception message box.</param>
			<param name="caption">Dialog box caption of the exception message box. </param>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="text">Error text of the top-level message.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.Exception,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> by using information from the specified <see cref="T:System.Exception"></see> and by specifying the buttons, symbol, default button, and other properties to display in the exception message box.</summary>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="defaultButton"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton"></see> enumeration that specifies the default button for the exception message box.</param>
			<param name="symbol"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> enumeration that specifies the symbol to display in the exception message box.</param>
			<param name="options">The <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions"></see> enumeration that controls other behaviors of the exception message box.</param>
			<param name="exception"><see cref="T:System.Exception"></see> that contains the top-level text, inner exception text, caption, data, help link, and optional additional information to display in the exception message box.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.#ctor(System.String,System.String,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol,Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton)">
			<summary>Creates an instance of <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBox"></see> with the supplied top-level error message text and dialog box caption of the message box. The method also specifies the buttons, symbol, and default button to display in the exception message box. </summary>
			<param name="defaultButton"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton"></see> enumeration that specifies the default button for the exception message box.</param>
			<param name="symbol"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> enumeration that specifies the symbol to display in the exception message box.</param>
			<param name="caption">Dialog box caption of the exception message box. </param>
			<param name="buttons"><see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> enumeration that specifies the buttons to display in the exception message box. </param>
			<param name="text">Error text of the top-level message.</param>
		</member>
		<member name="E:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.OnCopyToClipboard">
			<summary>Occurs when exception message text is copied from the message box to the Clipboard.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.GetMessageText(System.Exception)">
			<summary>Returns the string that a user can copy to the clipboard when the exception is displayed in an exception message box. </summary>
			<returns><see cref="T:System.String"></see> that contains the full content of the message.</returns>
			<param name="exception">An <see cref="T:System.Exception"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.SetButtonText(System.String)">
			<summary>Sets the text for the custom text button when only one button is displayed in the exception message box.</summary>
			<param name="button1Text">Text for the first custom button.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.SetButtonText(System.String,System.String)">
			<summary>Sets the text for the custom text buttons when only two buttons are displayed in the exception message box.</summary>
			<param name="button2Text">Text for the second custom button.</param>
			<param name="button1Text">Text for the first custom button.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.SetButtonText(System.String,System.String,System.String)">
			<summary>Sets the text for the custom text buttons when only three buttons are displayed in the exception message box.</summary>
			<param name="button3Text">Text for the third custom button.</param>
			<param name="button2Text">Text for the second custom button.</param>
			<param name="button1Text">Text for the first custom button.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.SetButtonText(System.String,System.String,System.String,System.String)">
			<summary>Sets the text for the custom text buttons when only four buttons are displayed in the exception message box.</summary>
			<param name="button4Text">Text for the fourth custom button.</param>
			<param name="button3Text">Text for the third custom button.</param>
			<param name="button2Text">Text for the second custom button.</param>
			<param name="button1Text">Text for the first custom button.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.SetButtonText(System.String,System.String,System.String,System.String,System.String)">
			<summary>Sets the text for the custom text buttons when only five buttons are displayed in the exception message box.</summary>
			<param name="button4Text">Text for the fourth custom button.</param>
			<param name="button3Text">Text for the third custom button.</param>
			<param name="button2Text">Text for the second custom button.</param>
			<param name="button5Text">Text for the fifth custom button.</param>
			<param name="button1Text">Text for the first custom button.</param>
		</member>
		<member name="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Show(System.Windows.Forms.IWin32Window)">
			<summary>Shows the exception message box as a modal dialog box centered on the parent window.</summary>
			<returns>The <see cref="T:System.Windows.Forms.DialogResult"></see> of the button clicked by the user. </returns>
			<param name="Owner">Parent window for the exception message box.</param>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.AbortButtonText">
			<summary>Gets the default text for the Abort button.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Beep">
			<summary>Specifies whether to play an audible sound when the message is displayed. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Buttons">
			<summary>Gets or sets the buttons to display in the message box. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons"></see> value. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CancelButtonText">
			<summary>Gets the default text for the Cancel button. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Caption">
			<summary>Gets or sets the dialog box caption of the exception message box. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxRegistryKey">
			<summary>Sets an opened <see cref="T:Microsoft.Win32.RegistryKey"></see> that controls the check box that is displayed on the exception message box when <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowCheckbox"></see> is true. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxRegistryMeansDoNotShowDialog">
			<summary>Determines whether the registry value content specified by <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxRegistryKey"></see> and <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxRegistryValue"></see> indicates a previous user decision not to view this message. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxRegistryValue">
			<summary>Gets or sets the registry value name that controls the check box on the exception message box when <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowCheckbox"></see> is true. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CheckBoxText">
			<summary>Gets or sets the text to display in the check box on the exception message box when <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowCheckbox"></see> is true. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CustomDialogResult">
			<summary>Gets the clicked custom text dialog button. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.CustomSymbol">
			<summary>Gets or sets a custom bitmap to use as the symbol on the exception message box. </summary>
			<returns>A <see cref="T:System.Drawing.Bitmap"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Data">
			<summary>Gets the <see cref="T:System.Collections.IDictionary"></see> interface that stores help link and advanced information associated with the top-level message. </summary>
			<returns>An <see cref="T:System.Collections.IDictionary"></see> interface.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.DefaultButton">
			<summary>Gets or sets the default button on the message box. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.DefaultDialogResult">
			<summary>Gets or sets the value returned by the <see cref="M:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Show(System.Windows.Forms.IWin32Window)"></see> method when the user has previously indicated not to show a given message again. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.FailButtonText">
			<summary>Gets the default text for the Fail button.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Font">
			<summary>Gets or sets the font used in the message box. </summary>
			<returns>A <see cref="T:System.Drawing.Font"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.HelpLink">
			<summary>Gets or sets the link to the help file or help Web page associated with the top-level message. </summary>
			<returns>A <see cref="T:System.String"></see> URL value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.IgnoreButtonText">
			<summary>Gets the default text for the Ignore button. </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.InnerException">
			<summary>Gets or sets the <see cref="T:System.Exception"></see> instance associated with the lower-level message(s). </summary>
			<returns>An <see cref="T:System.Exception"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.IsCheckBoxChecked">
			<summary>Specifies whether the check box is selected when <see cref="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowCheckbox"></see> is true. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Message">
			<summary>Gets or sets the <see cref="T:System.Exception"></see> that contains the message to display. </summary>
			<returns>An <see cref="T:System.Exception"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.MessageLevelDefault">
			<summary>Gets or sets the number of message levels to display in the message box. </summary>
			<returns>An <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.NoButtonText">
			<summary>Gets the default text for the No button </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.OKButtonText">
			<summary>Gets the default text for the OK button </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Options">
			<summary>Gets or sets miscellaneous display options for the message box </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.RetryButtonText">
			<summary>Gets the default text for the Retry button.</summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowCheckBox">
			<summary>Specifies whether to show the check box in the exception message box. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.ShowToolBar">
			<summary>Specifies whether to show the command button toolbar on the exception message box. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Symbol">
			<summary>Gets or sets the symbol to display in the exception message box. </summary>
			<returns>An <see cref="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.Text">
			<summary>Gets or sets the text of the top-level message to display in the exception message box </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.UseOwnerFont">
			<summary>Specifies whether to retrieve the font of the owner window and use it as the font for the exception message box. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.MessageBox.ExceptionMessageBox.YesButtonText">
			<summary>Gets the default text for the Yes button </summary>
			<returns>A <see cref="T:System.String"></see> value.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons">
			<summary>Specifies the button to display in the exception message box. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.AbortRetryIgnore">
			<summary>Display the Abort, Retry, and Ignore buttons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.Custom">
			<summary>Display buttons with custom button text.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.OK">
			<summary>Display the OK button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.OKCancel">
			<summary>Display the OK and Cancel buttons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.RetryCancel">
			<summary>Display the Retry and Cancel buttons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.YesNo">
			<summary>Display Yes and No buttons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxButtons.YesNoCancel">
			<summary>Display Yes, No, and Cancel buttons.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton">
			<summary>Sets the default button in the exception message box.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton.Button1">
			<summary>The first button is the default button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton.Button2">
			<summary>The second button is the default button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton.Button3">
			<summary>The third button is the default button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton.Button4">
			<summary>The fourth button is the default button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDefaultButton.Button5">
			<summary>The fifth button is the default button.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult">
			<summary>Identifies the button that the user clicked to close the exception message box when custom text buttons are used.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.Button1">
			<summary>The first custom text button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.Button2">
			<summary>The second custom text button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.Button3">
			<summary>The third custom text button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.Button4">
			<summary>The fourth custom text button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.Button5">
			<summary>The fifth custom text button.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxDialogResult.None">
			<summary>Custom text buttons are not used.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions">
			<summary>Specifies miscellaneous display options for the exception message box.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions.None">
			<summary>No other behaviors are required.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions.RightAlign">
			<summary>Display text with right-hand alignment. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxOptions.RtlReading">
			<summary>Display text reading right-to-left.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol">
			<summary>Specifies the symbol that is displayed in the exception message box.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Asterisk">
			<summary>The system asterisk symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Error">
			<summary>The system error symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Exclamation">
			<summary>The system exclamation point symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Hand">
			<summary>The system hand symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Information">
			<summary>The system information symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.None">
			<summary>No symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Question">
			<summary>The system question mark symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Stop">
			<summary>The system stop sign symbol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.MessageBox.ExceptionMessageBoxSymbol.Warning">
			<summary>The system warning symbol.</summary>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SqlServer.ConnectionInfo.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.ConnectionInfo</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Management.Common">
			<summary>The <see cref="Microsoft.SqlServer.Management.Common"></see> namespace contains classes that represent a connection to an instance of SQL Server from an SMO or RMO application. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.AutoDisconnectMode">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.AutoDisconnectMode"></see> enumeration contains values that are used to specify the automatic disconnection options for a connection to an instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.AutoDisconnectMode.DisconnectIfPooled">
			<summary>The connection is disconnected from the instance of MicrosoftSQL Server if the connection is pooled.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.AutoDisconnectMode.NoAutoDisconnect">
			<summary>The connection is not disconnected automatically.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.CapturedSql">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.CapturedSql"></see> class represents the Transact-SQL commands that are sent to the instance of Microsoft SQL Server by way of the referenced connection but then redirected to a buffer rather than run immediately on the instance of SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.CapturedSql.Add(System.String)">
			<summary>Adds a Transact-SQL statement to the captured Transact-SQL commands in the buffer.</summary>
			<param name="sqlStatement">A <see cref="T:System.String"></see> value that specifies the Transact-SQL statement.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.CapturedSql.Clear">
			<summary>Clears the buffer that contains the captured Transact-SQL commands.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.CapturedSql.Text">
			<summary>Gets the captured Transact-SQL commands in the buffer.</summary>
			<returns>A <see cref="T:System.Collections.Specialized.StringCollection"></see> system object value that contains the captured Transact-SQL commands.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException"></see> class is an exception that is raised when an unsuccessful attempt is made to change the password of the logon used to establish a connection with the instance of MicrosoftSQL Server by using SQL Server Authentication.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ChangePasswordFailureException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException"></see> class is an exception that is raised when an unsuccessful attempt is made to change the connection to the instance of Microsoft SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionCannotBeChangedException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionException"></see> class is an exception that is raised when an error occurs on the connection to the instance of Microsoft SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionException"></see> class with the specified serialization information and streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> system object that specifies the streaming context for the exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> system object that specifies the serialization information for the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionFailureException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionFailureException"></see> class is an exception that is raised when an unsuccessful attempt is made to establish a connection with the instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionFailureException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionFailureException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionFailureException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionFailureException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionFailureException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionFailureException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> object is a base class that is used in the construction of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class and it represents information used to connect to an instance of SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.#ctor(Microsoft.SqlServer.Management.Common.ConnectionInfoBase)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> class based on the specified object.</summary>
			<param name="conn">A <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> object value that specifies connection information on which to base the new object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.#ctor(Microsoft.SqlServer.Management.Common.ConnectionType)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> class with the specified connection type.</summary>
			<param name="serverType">A <see cref="T:Microsoft.AnalysisServices.ConnectionType"></see>  object value that specifies the type of connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.ToString">
			<summary>Returns the object as a string value.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionInfoBase"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.ServerCaseSensitivity">
			<summary>Gets or sets the server case sensitivity for the connection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity"></see> system object value that specifies the server case sensitivity for the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.ServerType">
			<summary>Gets or sets the server connection type.</summary>
			<returns>A <see cref="T:Microsoft.AnalysisServices.ConnectionType"></see> system object value that specifies the type of connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionInfoBase.ServerVersion">
			<summary>Gets or sets the version information about the instance of SQL Server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion"></see> system object value that specifies the version information about the instance of SQL Server.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionManager">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionManager"></see> class manages the connection to an instance of SQL Server.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Common.ConnectionManager.InfoMessage">
			<summary>The event that occurs when the instance of SQL Server generates an informational message. </summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Common.ConnectionManager.RemoteLoginFailed">
			<summary>This event occurs when a remote login fails to connect to the instance of SQL Server.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Common.ConnectionManager.StateChange">
			<summary>The event that occurs when the instance of SQL Server changes state. </summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Common.ConnectionManager.StatementExecuted">
			<summary>The event that occurs when the instance of SQL Server executes a statement on the current connection. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionManager.Connect">
			<summary>Connects to the instance of SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionManager.Disconnect">
			<summary>Disconnects from the instance of SQL Server.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.AutoDisconnectMode">
			<summary>Gets or sets the automatic disconnection mode of the referenced connection to the instance of SQL Server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.AutoDisconnectMode"></see> object value that specifies the automatic disconnection mode of the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.CapturedSql">
			<summary>Gets the Transact-SQL statements that are captured when the connection is running in capture mode.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.CapturedSql"></see> object value that contains the captured Transact-SQL statements.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.InUse">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection is being used.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object value that specifies whether the connection is in use.If True, the connection is in use.In False (default), the connection is not in use.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.IsOpen">
			<summary>Gets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection is currently open.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection is open.If True, the connection is open.If False (default), the connection is not open.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.LockTimeout">
			<summary>Gets or sets the time in seconds required for the connection to time out when the current transaction is locked.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the time in seconds for the connection to time out when the current transaction is locked.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.ServerVersion">
			<summary>Gets the version of the connected instance of SQL Server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion"></see> object value that specifies the version of the connected instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionManager.SqlConnectionObject">
			<summary>Gets the connection object.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlConnection"></see> object value that specifies the connection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionSettings">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionSettings"></see> class represents the settings used by a connection to an instance of a server, such as MicrosoftSQL Server. The <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class inherits <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionSettings"></see> class. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionSettings.NoConnectionTimeout">
			<summary>Gets or sets the <see cref="T:System.Int32"></see> value that specifies the time the connection takes to time out in seconds.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the time the connection takes to time out in seconds.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ConnectionSettings.ToString">
			<summary>Returns the referenced object name as a string.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the referenced object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ApplicationName">
			<summary>Gets or sets the name of the application that has established the connection with the server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the application.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ConnectAsUser">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection is established using impersonation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection is established using impersonation.If True, the connection is established using impersonation.If False (default), the connection is established using the credentials specified by the <see cref="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.Login"></see> and <see cref="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.Password"></see> properties.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ConnectAsUserName">
			<summary>Gets or sets the name of the user when connecting using impersonation.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the user name used when the connection is established using impersonation of a user.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ConnectAsUserPassword">
			<summary>Gets or sets the password for the user when connecting using impersonation.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the user password used when the connection is established using impersonation of a user.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ConnectionString">
			<summary>Gets or sets the connection string used to establish a connection with a specified data source. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the connection string used to establish a connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ConnectTimeout">
			<summary>Gets or sets the connection time-out period in seconds.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the connection time-out period in seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.DatabaseName">
			<summary>Gets or sets the database required by the connection.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the database specified by the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.EncryptConnection">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection is encrypted.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection is encrypted.If True, the connection is encrypted.If False (default), the connection is not encrypted.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.Login">
			<summary>Gets or sets the logon required to establish a connection with the instance of the server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the logon required to establish a connection with the instance of the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.LoginSecure">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property that specifies whether the connection is established to the server by using Windows Authentication or SQL Server Authentication.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection is established to the server by using Windows Authentication or SQL Server Authentication.If True (default), Windows Authentication is used to establish a connection with the server.If False, SQL Server Authentication is used to establish a connection with the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.MaxPoolSize">
			<summary>Gets or sets the maximum number of connections in a connection pool that the specified connection accepts when establishing a connection with a server.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the maximum number of connections in a connection pool.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.MinPoolSize">
			<summary>Gets or sets the minimum number of connections in a connection pool that the specified connection accepts when establishing a connection with a server.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the minimum number of connections in a connection pool.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.MultipleActiveResultSets">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether more than one active result set is permitted.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether more than one active result set is permitted.If True, multiple active result sets are permitted.If False (default), multiple active result sets are not permitted.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.NetworkProtocol">
			<summary>Gets or sets the network protocol used to establish the connection to the server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.NetworkProtocol"></see> object value that specifies the network protocol used to establish the connection to the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.NonPooledConnection">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection may be pooled or nonpooled.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection may be pooled or nonpooled. If True, the connection must be nonpooled and not be part of a connection pool.If False (default), the connection may be pooled and part of a connection pool.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.PacketSize">
			<summary>Gets or sets the packets of data sent between the client and the server over the network in bytes.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the network packet size in bytes.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.Password">
			<summary>Gets or sets the password used with the logon to establish a connection with the server when SQL Server Authentication is used. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the password that is required when you are using SQL Server Authentication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.PooledConnectionLifetime">
			<summary>Gets or sets the lifetime of the pooled connection.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the lifetime of the pooled connection in seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.SecurePassword">
			<summary>Gets or sets the secure password used with the logon to establish a connection with the server when SQL Server Authentication is used. </summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> value that specifies the secure password that is required when you are using SQL Server Authentication.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.ServerInstance">
			<summary>Gets or sets the name of the server. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ConnectionSettings.WorkstationId">
			<summary>Gets or sets the ID value that uniquely identifies the workstation.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the workstation.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ConnectionType">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionType"></see> enumeration contains values that are used to specify the type of server with which the connection is established.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.Olap">
			<summary>An Analysis Services online analytical processing (OLAP) server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.ReportServer">
			<summary>A Reporting Services server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.Sql">
			<summary>An instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.SqlCE">
			<summary>An instance of MicrosoftSQL Server CE.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.SqlConnection">
			<summary>A connection to an instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ConnectionType.WmiManagementScope">
			<summary>A Microsoft Windows Management Instrumentation (WMI) management service connection.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs"></see> class represents the arguments used when a data transfer event is raised.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.DataTransferEventArgs.#ctor(Microsoft.SqlServer.Management.Common.DataTransferEventType,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs"></see> class for the specified event and with the specified message.</summary>
			<param name="eventType">A <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> object that specifies the type of event that is associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs"></see> object.</param>
			<param name="message">A string value that specifies the message text associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> object.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferEventArgs.DataTransferEventType">
			<summary>Gets the type of data transfer event associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs"></see> object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> object that specifies the type of data transfer event associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventArgs"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferEventArgs.Message">
			<summary>Gets the message text associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> object.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the message text associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferEventHandler">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventHandler"></see> class represents the method that handles the event raised by the data transfer process.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferEventType">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferEventType"></see> enumeration contains values that are used to specify the type of data transfer event.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferEventType.Information">
			<summary>An informational event.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferEventType.Progress">
			<summary>A progress event.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferEventType.Warning">
			<summary>A warning event.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs"></see> class represents the arguments used when a data transfer progress event is raised.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs.DataTransferProgressEventType">
			<summary>Gets the type of data transfer progress event associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs"></see> object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType"></see> object that specifies the type of data transfer progress event associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs.Exception">
			<summary>Gets the exception associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType"></see> object.</summary>
			<returns>An Exception object value that specifies the exception associated with the <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs.ProgressCount">
			<summary>Gets the current number of items transferred. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the current number of items transferred..</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.DataTransferProgressEventArgs.TransferId">
			<summary>Gets the ID value that uniquely identifies the data transfer progress event. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the data transfer progress event.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventHandler">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventHandler"></see> class represents the method that handles the event raised by the data transfer progress reporting process.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType"></see> enumeration contains values that are used to specify the type of data transfer progress event.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.AllowedToFailPrologueSql">
			<summary>An event that occurs when a prologue Transact-SQL command is allowed to fail.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.CancelQuery">
			<summary>An event that occurs when a Transact-SQL query is canceled.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.CommitTransaction">
			<summary>An event that occurs when a transaction is committed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.Error">
			<summary>An event that occurs when an error occurs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.ExecuteCompensatingSql">
			<summary>An event that occurs when compensating Transact-SQL commands are executed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.ExecuteEpilogueSql">
			<summary>An event that occurs when epilogue Transact-SQL commands are executed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.ExecuteNonTransactableSql">
			<summary>An event that occurs when non-transactable Transact-SQL commands are executed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.ExecutePrologueSql">
			<summary>An event that occurs when prologue Transact-SQL commands are executed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.ExecutingDataFlow">
			<summary>An event that occurs when executing data flow.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.GenerateDataFlow">
			<summary>An event that occurs when generating data flow.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.RollbackTransaction">
			<summary>An event that occurs when a transaction is rolled back.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.StartTransaction">
			<summary>An event that occurs when a transaction is started.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.DataTransferProgressEventType.TransferringRows">
			<summary>An event that occurs when transferring rows.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ExecutionFailureException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionFailureException"></see> class is an exception that is raised when an execution failure is encountered on the connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ExecutionFailureException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionFailureException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ExecutionFailureException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionFailureException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ExecutionFailureException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionFailureException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ExecutionTypes">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionTypes"></see> enumeration contains values that are used to specify execution options for the Transact-SQL commands sent to the server using the referenced connection.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.ContinueOnError">
			<summary>Continue execution after an error occurs.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.Default">
			<summary>Default execution path.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.NoCommands">
			<summary>No executable commands.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.NoExec">
			<summary>No execution.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.ParseOnly">
			<summary>Parse the executable commands only.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ExecutionTypes.QuotedIdentifierOn">
			<summary>Identifiers are used to delimit commands.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.FixedServerRoles">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.FixedServerRoles"></see> enumeration contains values that are used to specify fixed server roles that can be assigned to logons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.BulkAdmin">
			<summary>Administers bulk operations.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.DBCreator">
			<summary>Can create databases.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.DiskAdmin">
			<summary>Can alter resources.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.None">
			<summary>No server role.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.ProcessAdmin">
			<summary>Can alter connections.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.SecurityAdmin">
			<summary>Can alter logons.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.ServerAdmin">
			<summary>Can alter MicrosoftSQL Server settings, shut down the SQL Server Service, create and alter endpoints, alter the SQL Server state, and alter resources.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.SetupAdmin">
			<summary>Can alter linked servers.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.FixedServerRoles.SysAdmin">
			<summary>Can control any aspect of the instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IAlterable">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IAlterable"></see> class represents an interface that implements the Alter method on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IAlterable.Alter">
			<summary>Updates any property changes on an instance of Microsoft SQL Server. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ICreatable">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ICreatable"></see> class represents an interface that implements the Create method on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ICreatable.Create">
			<summary>Creates an object on the server as defined by the referenced SQL Server Management Objects (SMO) object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IDataTransferProvider">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IDataTransferProvider"></see> class represents an interface that implements data transfers on the referenced connection.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Common.IDataTransferProvider.TransferEvent">
			<summary>Represents the event raised when the transfer process occurs.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IDataTransferProvider.Configure(Microsoft.SqlServer.Management.Common.ITransferMetadataProvider)">
			<summary>Configures the data transfer interface for the data transfer process.</summary>
			<param name="metadataProvider">An <see cref="T:Microsoft.SqlServer.Management.Common.ITransferMetadataProvider"></see> object that specifies the metadata required for the data transfer process.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IDataTransferProvider.ExecuteTransfer">
			<summary>Executes the transfer process.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IDroppable">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IDroppable"></see> class represents an interface that implements the Drop method on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IDroppable.Drop">
			<summary>Removes the referenced object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IMarkForDrop">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IMarkForDrop"></see> class represents an interface that implements the IMarkForDrop method on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IMarkForDrop.MarkForDrop(System.Boolean)">
			<summary>Marks the referenced object to be dropped next time its parent object is altered by the Alter method. </summary>
			<param name="dropOnAlter">A <see cref="T:System.Boolean"></see> value that specifies whether to drop an object when its parent object is altered with the Alter method.If True, the object is dropped when the Alter method is run on the parent object.If False, the object is dropped immediately.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.InvalidArgumentException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.InvalidArgumentException"></see> class is an exception that is raised when a parameter that is not valid is passed to a method on the referenced connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidArgumentException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidArgumentException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidArgumentException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidArgumentException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidArgumentException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidArgumentException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException"></see> class is an exception that is raised when a property is set to a value that is not valid on the referenced connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.InvalidPropertyValueException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IRenamable">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IRenamable"></see> class represents an interface that implements the Rename method on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.IRenamable.Rename(System.String)">
			<summary>Renames the referenced object.</summary>
			<param name="newname">A <see cref="T:System.String"></see> value that specifies the new name of the object.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.IRestrictedAccess">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.IRestrictedAccess"></see> class represents an interface that implements single-user access to the server for the referenced connection.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.IRestrictedAccess.SingleConnection">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property that specifies whether access to the server is restricted to a single user.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether access to the server is restricted to a single user.If True, access to the server is restricted to a single user.If False (default), access to the server is not restricted and multiple users can connect.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ITransferMetadataProvider">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ITransferMetadataProvider"></see> class represents an interface that implements the transfer metadata process on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.GetOptions">
			<summary>Gets the options for the transfer metadata process on the referenced connection.</summary>
			<returns>A <see cref="T:System.Collections.SortedList"></see> system object that contains the options for the transfer metadata process.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.SaveMetadata">
			<summary>Saves the metadata for the transfer process on the referenced connection.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.NetworkProtocol">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.NetworkProtocol"></see> enumeration contains values that are used to specify network protocols used on the network where the referenced connection is established. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.AppleTalk">
			<summary>AppleTalk network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.BanyanVines">
			<summary>Banyan Vines network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.Multiprotocol">
			<summary>Multiprotocol network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.NamedPipes">
			<summary>Named pipes network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.NotSpecified">
			<summary>Network protocol is not specified.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.NWLinkIpxSpx">
			<summary>NWLink IPX/SPX network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.SharedMemory">
			<summary>Shared memory.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.TcpIp">
			<summary>TCP/IP network protocol.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.NetworkProtocol.Via">
			<summary>VIA network protocol.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.NotInTransactionException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.NotInTransactionException"></see> class is an exception that is raised when an error occurs within a transaction on the referenced connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.NotInTransactionException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.NotInTransactionException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.NotInTransactionException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.NotInTransactionException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.NotInTransactionException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.NotInTransactionException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.OlapConnectionInfo">
			<summary>This class supports the SQL Server Management Objects infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.OlapConnectionInfo.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.OlapConnectionInfo.CreateConnectionObject">
			<summary>Creates the connection object and returns the <see cref="T:System.Data.IDbConnection"></see> object value.</summary>
			<returns>A <see cref="T:System.Data.IDbConnection"></see> value that specifies the connection object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.OlapConnectionInfo.ConnectionString">
			<summary>Gets the connection string.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the connection string.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException"></see> class is an exception that is raised when an unavailable property is requested on the connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotAvailableException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.PropertyNotSetException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotSetException"></see> class is an exception that is raised when a process requests a property that has not been set on the connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotSetException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotSetException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotSetException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotSetException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.PropertyNotSetException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.PropertyNotSetException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity"></see> enumeration contains values that are used to specify whether the server is sensitive to the case (lower or upper) of text.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity.CaseInsensitive">
			<summary>The server is case-insensitive.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity.CaseSensitive">
			<summary>The server is case-sensitive.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerCaseSensitivity.Unknown">
			<summary>The case-sensitivity of the server is unknown.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerConnection">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object represents a connection to a server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor(System.Data.SqlClient.SqlConnection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class with the specified connection parameters.</summary>
			<param name="sqlConnection">A <see cref="T:System.Data.SqlClient.SqlConnection"></see> system object that specifies connection parameters associated with the referenced connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor(Microsoft.SqlServer.Management.Common.SqlConnectionInfo)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class with the specified connection information.</summary>
			<param name="sci">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the connection information that is required to establish a connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class with the specified server instance.</summary>
			<param name="serverInstance">A <see cref="T:System.String"></see> value that specifies the name of the instance of the server with which the connection is established.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor(System.String,System.String,System.Security.SecureString)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class with the specified server instance and logon credentials.</summary>
			<param name="userName">A <see cref="T:System.String"></see> value that specifies the logon account used to establish the referenced connection.</param>
			<param name="serverInstance">A <see cref="T:System.String"></see> value that specifies the name of the instance of the server with which the connection is established.</param>
			<param name="password">A <see cref="T:System.Security.SecureString"></see> value that specifies the password used with the logon account.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> class with the specified server instance and logon credentials.</summary>
			<param name="userName">A <see cref="T:System.String"></see> value that specifies the logon account used to establish the referenced connection.</param>
			<param name="serverInstance">A <see cref="T:System.String"></see> value that specifies the name of the instance of the server with which the connection is established.</param>
			<param name="password">A <see cref="T:System.String"></see> value that specifies the password used with the logon account.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.BeginTransaction">
			<summary>Starts a transaction on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.Cancel">
			<summary>Cancels the connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ChangePassword(System.Security.SecureString)">
			<summary>Changes the login password that is used with standard authentication.</summary>
			<param name="newPassword">A <see cref="T:System.Security.SecureString"></see> value that specifies the new password.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ChangePassword(System.String)">
			<summary>Changes the logon password that is used with standard authentication.</summary>
			<param name="newPassword">A <see cref="T:System.String"></see> value that specifies the new password.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.CommitTransaction">
			<summary>Commits the current transaction on the referenced connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.Copy">
			<summary>Returns a copy of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object that is a copy of the referenced <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(System.String)">
			<summary>Executes a statement that does not return a result set.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the total number of rows affected by the Transact-SQL command for UPDATE, INSERT, and DELETE statements. For all other types of statements, the return value is -1.</returns>
			<param name="sqlCommand">A <see cref="T:System.String"></see> value that specifies the Transact-SQL command to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(System.Collections.Specialized.StringCollection)">
			<summary>Executes a batch of statements that do not return a result set.</summary>
			<returns>An <see cref="T:System.Int32"></see> array value that specifies the total number of rows affected by each element of the <see cref="T:System.Collections.Specialized.StringCollection"></see> object used as the sqlCommands parameter. The return value specifies the total number of rows affected by the Transact-SQL command for UPDATE, INSERT, and DELETE statements. For all other types of statements, the return value is -1.</returns>
			<param name="sqlCommands">A <see cref="T:System.Collections.Specialized.StringCollection"></see> system object value that specifies the batches of Transact-SQL statements to be executed. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(System.String,Microsoft.SqlServer.Management.Common.ExecutionTypes)">
			<summary>Executes a statement with the specified execution options that does not return a result set.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the total number of rows affected by the Transact-SQL command for UPDATE, INSERT, and DELETE statements. For all other types of statements, the return value is -1.</returns>
			<param name="executionType">An <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionTypes"></see> object value that specifies the execution options for the Transact-SQL statement.</param>
			<param name="sqlCommand">A <see cref="T:System.String"></see> value that specifies the Transact-SQL command to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteNonQuery(System.Collections.Specialized.StringCollection,Microsoft.SqlServer.Management.Common.ExecutionTypes)">
			<summary>Executes a batch of statements with the specified execution options that does not return a result set.</summary>
			<returns>An <see cref="T:System.Int32"></see> array value that specifies the total number of rows affected by each element of the <see cref="T:System.Collections.Specialized.StringCollection"></see> object used as the sqlCommands parameter. The return value specifies the total number of rows affected by the Transact-SQL command for UPDATE, INSERT, and DELETE statements. For all other types of statements, the return value is -1.</returns>
			<param name="sqlCommands">A <see cref="T:System.Collections.Specialized.StringCollection"></see> system object value that specifies the batches of Transact-SQL statements to be executed. </param>
			<param name="executionType">An <see cref="T:Microsoft.SqlServer.Management.Common.ExecutionTypes"></see> object value that specifies the execution options for the Transact-SQL statement.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteReader(System.String)">
			<summary>Executes Transact-SQL statements that return one or multiple result sets.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlDataReader"></see> object value that contains one or more result sets.</returns>
			<param name="sqlCommand">A <see cref="T:System.String"></see> value that specifies the Transact-SQL command to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteScalar(System.String)">
			<summary>Executes a Transact-SQL statement and returns the first column of the first row as an object value.</summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies the first column of the first row of the result set.</returns>
			<param name="sqlCommand">A <see cref="T:System.String"></see> value that specifies the Transact-SQL command to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteScalar(System.Collections.Specialized.StringCollection)">
			<summary>Executes a batch of Transact-SQL statements and returns the first column of the first row as an object value.</summary>
			<returns>An object array value that specifies the first column of the first row for each result set.</returns>
			<param name="sqlCommands">A <see cref="T:System.Collections.Specialized.StringCollection"></see> system object value that specifies the batches of Transact-SQL statements to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteWithResults(System.String)">
			<summary>Executes a Transact-SQL statement that returns a result set.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> system object value that contains the result set.</returns>
			<param name="sqlCommand">A <see cref="T:System.String"></see> value that specifies the Transact-SQL command to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.ExecuteWithResults(System.Collections.Specialized.StringCollection)">
			<summary>Executes a batch of Transact-SQL statements that return multiple result sets.</summary>
			<returns>A <see cref="T:System.Data.DataSet"></see> system object array value that contains multiple result sets.</returns>
			<param name="sqlCommands">A <see cref="T:System.Collections.Specialized.StringCollection"></see> system object value that specifies the batches of Transact-SQL statements to be executed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.IsInFixedServerRole(Microsoft.SqlServer.Management.Common.FixedServerRoles)">
			<summary>Tests whether the logon associated with the referenced connection is a member of the specified fixed server role.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the logon is a member of the specified fixed server role.If True, the logon is a member of the specified fixed server role.If False, the logon is not a member of the specified fixed server role.</returns>
			<param name="fixedServerRole">A <see cref="P:Microsoft.SqlServer.Management.Common.ServerConnection.FixedServerRoles"></see> object value that specifies the fixed server role to be compared with the logon.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerConnection.RollBackTransaction">
			<summary>Rolls back the current transaction.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.BatchSeparator">
			<summary>Gets or sets the string value used to separate batches in the referenced connection.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the batch separator for the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.FixedServerRoles">
			<summary>Gets the fixed server role associated with the referenced connection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.FixedServerRoles"></see> object value that specifies the fixed server role associated with the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.ProcessID">
			<summary>Gets the ID value that uniquely identifies the process associated with the referenced connection to the server.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the ID value that uniquely identifies the process associated with the referenced connection to the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.SqlExecutionModes">
			<summary>Gets or sets the execution mode associated with the referenced connection to the server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.SqlExecutionModes"></see> object value that specifies the execution mode associated with the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.StatementTimeout">
			<summary>Gets or sets the number of seconds a statement is given to run before failing with a time-out error.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of seconds a statement is given to run before failing with a time-out error.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.TransactionDepth">
			<summary>Gets the current transaction depth for the referenced connection.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the current transaction depth for the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.TrueLogin">
			<summary>Gets the current logon record name used by the referenced connection.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the current logon record name used by the referenced connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.TrueName">
			<summary>Gets the name of the server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerConnection.UserProfile">
			<summary>Gets the user profile associated with the referenced connection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.ServerUserProfiles"></see> object value that specifies the user profile associated with the referenced connection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs"></see> class represents the arguments used when a server message event is raised.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs.#ctor(System.Data.SqlClient.SqlError)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs"></see> class for the specified event and with the specified error.</summary>
			<param name="sqlError">A <see cref="T:System.Data.SqlClient.SqlError"></see> system object value that specifies the error associated with the server message event.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs.ToString">
			<summary>Returns a <see cref="T:System.String"></see> that represents the <see cref="T:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs"></see> object.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the <see cref="T:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerMessageEventArgs.Error">
			<summary>Gets the error associated with the server message event.</summary>
			<returns>A <see cref="T:System.Data.SqlClient.SqlError"></see> system object value that specifies the error associated with the server message event.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerMessageEventHandler">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerMessageEventHandler"></see> class represents the method that handles the event raised by a server message.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerUserProfiles">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerUserProfiles"></see> enumeration contains values that are used to specify user profiles on the server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerUserProfiles.All">
			<summary>All types of profiles.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerUserProfiles.CreateDatabase">
			<summary>Creates a create database profile.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerUserProfiles.CreateXP">
			<summary>Creates a create extended stored procedure profile.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.ServerUserProfiles.None">
			<summary>No profile is created.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.ServerVersion">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion"></see> class represents the version information for the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerVersion.#ctor(System.Int32,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion"></see> class.</summary>
			<param name="major">An <see cref="T:System.Int32"></see> value that specifies the major part of the server version number.</param>
			<param name="minor">An <see cref="T:System.Int32"></see> value that specifies the minor part of the server version number.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerVersion.#ctor(System.Int32,System.Int32,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.ServerVersion"></see> class.</summary>
			<param name="buildNumber">An <see cref="T:System.Int32"></see> value that specifies the build number part of the server version number.</param>
			<param name="major">An <see cref="T:System.Int32"></see> value that specifies the major part of the server version number.</param>
			<param name="minor">An <see cref="T:System.Int32"></see> value that specifies the minor part of the server version number.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.ServerVersion.ToString">
			<summary>Returns the object in string format. </summary>
			<returns>An <see cref="T:System.String"></see> value that specifies the object in string format.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerVersion.BuildNumber">
			<summary>Gets the build number part of the server version information. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the build number part of the server version information.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerVersion.Major">
			<summary>Gets the build number part of the server version information. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the build number part of the server version information.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.ServerVersion.Minor">
			<summary>Gets the build number part of the server version information. </summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the build number part of the server version information.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object represents information that is required to establish a connection to an instance of SQL Server. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.#ctor(Microsoft.SqlServer.Management.Common.SqlConnectionInfo)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> class.</summary>
			<param name="conn">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the object on which to base the new <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> class.</summary>
			<param name="serverName">A <see cref="T:System.String"></see> object value that specifies the instance of SQL Server.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.#ctor(Microsoft.SqlServer.Management.Common.ServerConnection,Microsoft.SqlServer.Management.Common.ConnectionType)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> class.</summary>
			<param name="serverConnection">A <see cref="T:Microsoft.SqlServer.Management.Common.ServerConnection"></see> object value that specifies an existing connection on which to base the new <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object.</param>
			<param name="connectionType">A <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionType"></see> object value that specifies the type of connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> class.</summary>
			<param name="serverName">A <see cref="T:System.String"></see> object value that specifies the instance of SQL Server.</param>
			<param name="userName">A <see cref="T:System.String"></see> object value that specifies the user who is connected to the instance of SQL Server.</param>
			<param name="password">A <see cref="T:System.String"></see> object value that specifies the password supplied by the user to connect to the instance of SQL Server.</param>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.DefaultNetworkProtocol">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.NetworkProtocol"></see> object that specifies the default network protocol for the connection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.Copy">
			<summary>Returns a copy of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the copy of the original, referenced <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.CreateConnectionObject">
			<summary>Creates a system connection object.</summary>
			<returns>A <see cref="T:System.Data.IDbConnection"></see> system object value that specifies the connection object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.ToString">
			<summary>Returns the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object in string format.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.ApplicationName">
			<summary>Gets or sets the name of the application that is connected to the instance of SQL Server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the application.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.ConnectionProtocol">
			<summary>Gets or sets the network protocol used by the connection to the instance of SQL Server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.NetworkProtocol"></see> value that specifies the network protocol used by the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.ConnectionString">
			<summary>Gets the connection string used when the connection is established with the instance of SQL Server.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the connection string used to establish the connection to the instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.EncryptConnection">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether the connection information is encrypted. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection information is encrypted.If True, the connection information is encrypted.If False (default), the connection information is not encrypted.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.MaxPoolSize">
			<summary>Gets or sets the maximum number of execution threads in a thread pool that the connection will accept. </summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the maximum number of threads in a thread pool the connection will accept.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.MinPoolSize">
			<summary>Gets or sets the minimum number of execution threads in a thread pool that the connection will accept. </summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the minimum number of threads in a thread pool the connection will accept.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.PacketSize">
			<summary>Gets or sets the network packet size used by the connection to send and receive data in bytes. </summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the network packet sized used by the connection in bytes.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.PoolConnectionLifeTime">
			<summary>Gets or sets the pool connection period in seconds. </summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the pool connection period in seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.Pooled">
			<summary>Gets or sets the <see cref="T:System.Data.SqlTypes.SqlBoolean"></see> property value that specifies whether the connection is pooled. </summary>
			<returns>A <see cref="T:System.Data.SqlTypes.SqlBoolean"></see> value that specifies whether the connection is pooled.If True, the connection is pooled.If False (default), the connection is not pooled.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlConnectionInfo.WorkstationId">
			<summary>Gets or sets the value that uniquely identifies the client workstation. </summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the value that uniquely identifies the client workstation.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.SqlExecutionModes">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.SqlExecutionModes"></see> enumeration contains values that are used to specify whether the commands sent to the referenced connection to the server are executed immediately or saved in a buffer. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlExecutionModes.CaptureSql">
			<summary>Transact-SQL statements that are sent to the referenced connection to the server are saved in a buffer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlExecutionModes.ExecuteAndCaptureSql">
			<summary>Transact-SQL statements that are sent to the referenced connection to the server are both saved in a buffer and forwarded to the server for immediate execution. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlExecutionModes.ExecuteSql">
			<summary>Transact-SQL statements that are sent to the referenced connection to the server are forwarded to the server for immediate execution. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class represents information used to connect to the instance of SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.#ctor(Microsoft.SqlServer.Management.Common.ConnectionType)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
			<param name="serverType">A <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionType"></see> object value that specifies the type of connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.#ctor(Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
			<param name="conn">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> object value on which to base the new object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.#ctor(System.String,Microsoft.SqlServer.Management.Common.ConnectionType)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
			<param name="serverName">A <see cref="T:System.String"></see> value that specifies the instance of SQL Server.</param>
			<param name="serverType">A <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionType"></see> object value that specifies the type of connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.#ctor(System.String,System.String,System.String,Microsoft.SqlServer.Management.Common.ConnectionType)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> class.</summary>
			<param name="serverName">A <see cref="T:System.String"></see> value that specifies the instance of SQL Server.</param>
			<param name="userName">A <see cref="T:System.String"></see> value that specifies the user name.</param>
			<param name="serverType">A <see cref="T:Microsoft.SqlServer.Management.Common.ConnectionType"></see> object value that specifies the type of connection.</param>
			<param name="password">A <see cref="T:System.String"></see> value that specifies the password.</param>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.DefaultConnTimeout">
			<summary>A <see cref="T:System.Int32"></see> that specifies the default connection time out period in seconds.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.DefaultQueryTimeout">
			<summary>A <see cref="T:System.Int32"></see> that specifies the default query time out period in seconds.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.NoTimeOut">
			<summary>A <see cref="T:System.Int32"></see> that specifies there is no time out.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ConnectionParmsChanged">
			<summary>Changes the connection parameters.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.CreateConnectionObject">
			<summary>Creates the connection object and returns the <see cref="T:System.Data.IDbConnection"></see> object value.</summary>
			<returns>A <see cref="T:System.Data.IDbConnection"></see> value that specifies the connection object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ToString">
			<summary>Returns the object as a string value.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the <see cref="T:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ConnectionString">
			<summary>Gets the connection string.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the connection string.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ConnectionStringInternal">
			<summary>Gets or sets the internal connection string.</summary>
			<returns>A <see cref="T:System.Text.StringBuilder"></see> value that specifies the internal connection string.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ConnectionTimeout">
			<summary>Gets or sets the number of seconds before a connection times out.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the connection timeout period.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ConnectionTimeoutInternal">
			<summary>Gets or sets the internal connection timeout period in seconds.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the internal connection timeout period.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.DatabaseName">
			<summary>Gets or sets the database with which the connection is established. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the database to which the connection is established.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.DatabaseNameInternal">
			<summary>Gets or sets the internal database name. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the internal database name.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.IntegratedSecurityInternal">
			<summary>Gets or sets the Boolean property value that specifies whether the connection supports integrated security. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection supports integrated security.If True, the connection supports integrated security.If False (default), the connection does not support integrated security.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.Password">
			<summary>Gets or sets the password used to establish a connection. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the password used to establish a connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.QueryTimeout">
			<summary>Gets or sets the number of seconds before a query times out.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the query timeout period.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.QueryTimeoutInternal">
			<summary>Gets or sets the internal query timeout period in seconds.</summary>
			<returns>A <see cref="T:System.Int32"></see> value that specifies the internal query timeout period.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.SecurePassword">
			<summary>Gets or sets the secure password used to establish a connection. </summary>
			<returns>A <see cref="T:System.Security.SecureString"></see> value that specifies the password used to establish a connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ServerName">
			<summary>Gets or sets the name of the instance of SQL Server. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.ServerNameInternal">
			<summary>Gets or sets the internal name of the instance of SQL Server. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the internal name of the instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.UseIntegratedSecurity">
			<summary>Gets or sets the Boolean property value that specifies whether the connection uses integrated security. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the connection uses integrated security.If True, the connection does not use integrated security.If False (default), the connection does use integrated security.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlOlapConnectionInfoBase.UserName">
			<summary>Gets or sets the user that is connecting to the instance of SQL Server. </summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the user that is connecting to the instance of SQL Server.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException"></see> class is an exception that is raised when a Microsoft SQL Server management error is encountered on the connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlServerManagementException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlServerManagementException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlServerManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException"></see> class with the specified serialization information and streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> system object value that specifies the streaming context associated with the exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> system object value that specifies the serialization information associated with the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.SqlServerManagementException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.SqlServerManagementException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.SqlServerManagementException.ProductName">
			<summary>Gets the name of the product that caused the exception.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the product that caused the exception.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.StatementEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.StatementEventArgs"></see> class represents the arguments used when a statement event is raised.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.StatementEventArgs.#ctor(System.String,System.DateTime)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.StatementEventArgs"></see> class for the specified Transact-SQL statement at the specified time and date.</summary>
			<param name="sqlStatement">A <see cref="T:System.String"></see> value that specifies the Transact-SQL statement that caused the statement event.</param>
			<param name="timeStamp">A <see cref="T:System.DateTime"></see> system object value that specifies the time and date of the statement event.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.StatementEventArgs.ToString">
			<summary>Returns a <see cref="T:System.String"></see> value that represents the <see cref="T:Microsoft.SqlServer.Management.Common.StatementEventArgs"></see> object.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the <see cref="T:Microsoft.SqlServer.Management.Common.StatementEventArgs"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.StatementEventArgs.SqlStatement">
			<summary>Gets the Transact-SQL statement that caused the statement event.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the Transact-SQL statement that caused the statement event.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Common.StatementEventArgs.TimeStamp">
			<summary>Gets the time and date when the statement event occurred.</summary>
			<returns>A <see cref="T:System.DateTime"></see> system object value that specifies the time and date when the statement event occurred.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.StatementEventHandler">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.StatementEventHandler"></see> class represents the method that handles the event raised by a statement.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Common.TransferException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Common.TransferException"></see> class is an exception that is raised when a Microsoft SQL Server transfer error is encountered on the connection to the server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.TransferException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.TransferException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.TransferException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.TransferException"></see> class with the specified message text.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text describing the event that caused the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.TransferException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.TransferException"></see> class with the specified serialization information and streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> system object value that specifies the streaming context associated with the exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> system object value that specifies the serialization information associated with the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Common.TransferException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Common.TransferException"></see> class with the specified message text and inner exception.</summary>
			<param name="innerException">An <see cref="T:System.Exception"></see> object that contains the inner exception. This is used for situations when one exception causes another exception to be raised. </param>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message text that describes the event that caused the exception.</param>
		</member>
		<member name="N:Microsoft.SqlServer.Management.Trace">
			<summary>The <see cref="N:Microsoft.SqlServer.Management.Trace"></see> namespace contains the Microsoft SQL Server Trace and Replay objects. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.IDataRecordChanger">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.IDataRecordChanger"></see> object is a Trace and Replay object that represents the current record.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.IDataRecordChanger.SetValue(System.Int32,System.Object)">
			<summary>Sets a value in the specified position.</summary>
			<param name="val">An <see cref="T:System.Object"></see> system object value that specifies the value to set the field at the specified position.</param>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the index position at which to set the value.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ITraceDataWriter">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.ITraceDataWriter"></see> object provides programmatic access to the data writer for the SQL Trace.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.ITraceDataWriter.WriteNotify">
			<summary>Raises a write notify event.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.ITraceDataWriter.Write">
			<summary>Writes the SQL Trace.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the write operation was successful.If True, the write operation succeeded.If False, the write operation failed.RemarksThis namespace, class, or member is supported only in version 2.0 of the Microsoft .NET Framework. </returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayEventArgs"></see> object provides programmatic access to the arguments used to report events that occur when replaying trace on an instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayEventHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayEventHandler"></see> event handler.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayMode">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayMode"></see> enumeration contains values that are used to specify the type of synchronization used during the trace replay.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Trace.ReplayMode.ConnectionLevelSync">
			<summary>The replay is synchronized at a connection level.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Trace.ReplayMode.SequentialReplay">
			<summary>The replay is sequential.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayPauseHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayPauseHandler"></see> event handler.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayResultEventHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayResultEventHandler"></see> event handler.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayStartHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayStartHandler"></see> event handler.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.ReplayStopHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayStopHandler"></see> event handler.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.SqlTraceException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class represents the general exception raised by the SQL Server Management Objects (SMO) trace objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class with the specified serialization information and the specified streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object value that specifies the streaming context for the SQL Trace exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object value that specifies the serialization information for the SQL Trace exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class with the specified message and inner exception.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace exception.</param>
			<param name="innerException">An <see cref="T:System.Exception"></see> object value that specifies the inner exception for the SQL Trace exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor(System.Type,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class with the specified source type and the specified message.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace exception.</param>
			<param name="messageSource">A <see cref="T:System.Type"></see> system object value that specifies the source of the exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceException.#ctor(System.Type,System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceException"></see> class with the specified source type, message and inner exception.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace exception.</param>
			<param name="messageSource">A <see cref="T:System.Type"></see> system object value that specifies the source of the exception.</param>
			<param name="innerException">An <see cref="T:System.Exception"></see> object value that specifies the inner exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.SqlTraceFailToInstantiateTypeException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToInstantiateTypeException"></see> class represents the exception raised when a SQL Server Management Objects (SMO) trace object operation fails to instantiate an object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToInstantiateTypeException.#ctor">
			<summary>Initiates a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToInstantiateTypeException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToInstantiateTypeException.#ctor(System.String)">
			<summary>Initiates a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToInstantiateTypeException"></see> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the SQL Trace Fail to Instantiate Type exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToInstantiateTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToInstantiateTypeException"></see> class with the specified serialization information and the specified streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object value that specifies the streaming context for the SQL Trace Fail to Instantiate Type exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object value that specifies the serialization information for the SQL Trace Fail to Instantiate Type exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToInstantiateTypeException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToInstantiateTypeException"></see> class with the specified message and inner exception.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace Fail to Instantiate Type exception.</param>
			<param name="innerException">An <see cref="T:System.Exception"></see> object value that specifies the inner exception for the SQL Trace Fail to Instantiate Type exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class represents the exception raised by the SQL Server Management Objects (SMO) trace objects when an Inst API assembly fails to load.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace Fail to Load Inst API Assembly exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class with the specified serialization information and the specified streaming context.</summary>
			<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object value that specifies the streaming context for the SQL Trace Fail to Load Inst API Assembly exception.</param>
			<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object value that specifies the serialization information for the SQL Trace Fail to Load Inst API Assembly exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class with the specified message and inner exception.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace Fail to Load Inst API Assembly exception.</param>
			<param name="innerException">An <see cref="T:System.Exception"></see> object value that specifies the inner exception for the SQL Trace Fail to Load Inst API Assembly exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.SqlTraceFailToLoadInstAPIAssemblyException.#ctor(System.Type,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.SQLTraceFailToLoadInstAPIAssemblyException"></see> class with the specified message source and message.</summary>
			<param name="message">A <see cref="T:System.String"></see> value that specifies the message associated with the general SQL Trace Fail to Load Inst API Assembly exception.</param>
			<param name="messageSource">A <see cref="T:System.Type"></see> system object value that specifies the source of the message.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceEventArgs">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceEventArgs"></see> object provides programmatic access to the arguments used to report events that occur when collecting trace from an instance of MicrosoftSQL Server.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceEventArgs.CurrentRecord">
			<summary>Gets the current record in the trace.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the current record.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceEventArgs.SkipRecord">
			<summary>Gets the Boolean value that specifies whether the current record is traced or skipped.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the current record is traced or skipped.If True, the current record is skipped.If False (default), the current record is traced.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceFile">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> class is a Trace object that represents a trace log file.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceFile.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceFile.InitializeAsReader(System.String)">
			<summary>Initializes the specified <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> object for reading data from the trace log file.</summary>
			<param name="fileName">A <see cref="T:System.String"></see> value that specifies the trace log file in which to read the trace data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceFile.InitializeAsReplayOutputWriter(System.String)">
			<summary>Initializes the specified <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> object for writing data to the trace log file only.</summary>
			<param name="destinationFileName">A <see cref="T:System.String"></see> value that specifies the destination trace log file in which to write the new trace data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceFile.InitializeAsWriter(Microsoft.SqlServer.Management.Trace.TraceReader,System.String)">
			<summary>Initializes the specified <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> object for reading trace data from a <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object, analyzing the data, and writing data the referenced trace log file.</summary>
			<param name="source">A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object that specifies the trace log file that contains trace data. This object can represent a trace table or a trace file.</param>
			<param name="destinationFileName">A <see cref="T:System.String"></see> value that specifies the destination trace log file in which to write the new trace data.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceReader">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> class is an abstract Trace Object class that is used in the construction of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceServer"></see> class, the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class, and the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> class.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Management.Trace.TraceReader.currentRow">
			<summary>Specifies the current row.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.Close">
			<summary>Closes the trace reader.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.Dispose">
			<summary>Deletes the trace reader information.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetBoolean(System.Int32)">
			<summary>Returns a <see cref="T:System.Boolean"></see> value from the record at the specified column position.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetByte(System.Int32)">
			<summary>Returns a <see cref="T:System.Byte"></see> value from the record at the specified column position.</summary>
			<returns>An <see cref="T:System.Uint8"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
			<summary>Gets a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the number of bytes returned in the array.</returns>
			<param name="buffer">A <see cref="T:System.Uint8"></see> array into which to read the stream of bytes.</param>
			<param name="bufferoffset">An <see cref="T:System.Int32"></see> value that specifies the index at which to begin the read operation.</param>
			<param name="fieldOffset">An <see cref="T:System.Int32"></see> value that specifies the index within the field from which to begin the read operation.</param>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position from which to retrieve the byte array value.</param>
			<param name="length">An <see cref="T:System.Int32"></see> value that specifies the number of bytes to read.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetChar(System.Int32)">
			<summary>Gets a character value of the specified column.</summary>
			<returns>A <see cref="T:System.Char"></see> value of the specified column.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position from which to retrieve the by character value.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetChars(System.Int32,System.Char[],System.Int32,System.Int32,System.Int32)">
			<summary>Gets a character array value from the record at the specified column position.</summary>
			<returns>An int32 value that specifies the number of characters returned in the array.</returns>
			<param name="fieldoffset">An <see cref="T:System.Int32"></see> value that specifies the index position within the record from which to begin the read operation.</param>
			<param name="buffer">A <see cref="T:System.Uint8"></see> array that specifies the buffer into which to read the character array.</param>
			<param name="bufferoffset">An <see cref="T:System.Int32"></see> value that specifies the index from which to start the read operation.</param>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the character array value.</param>
			<param name="length">An <see cref="T:System.Int32"></see> value that specifies the number of characters to read.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
			<summary>Gets a character array value from the record at the specified column position.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that specifies the number of characters returned in the array.</returns>
			<param name="buffer">A <see cref="T:System.Uint8"></see> array that specifies the buffer into which to read the character array.</param>
			<param name="bufferoffset">An <see cref="T:System.Int32"></see> value that specifies the index from which to start the read operation.</param>
			<param name="fieldOffset">An <see cref="T:System.Int32"></see> value that specifies the index position within the record from which to begin the read operation.</param>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the character array value.</param>
			<param name="length">An <see cref="T:System.Int32"></see> value that specifies the number of characters to read.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetData(System.Int32)">
			<summary>Returns <see cref="T:System.Data.IDataReader"></see> object used when the field points to a remote data structure.</summary>
			<returns>An <see cref="T:System.Data.IDataReader"></see> system object that specifies a remote data structure.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the index of the field.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetDataTypeName(System.Int32)">
			<summary>Gets the data type of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetDateTime(System.Int32)">
			<summary>Gets a <see cref="T:System.DateTime"></see> value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.DateTime"></see> system object value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetDecimal(System.Int32)">
			<summary>Gets a <see cref="T:System.Decimal"></see> value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.Decimal"></see> system object value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetDouble(System.Int32)">
			<summary>Gets a floating point value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.Float64"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetFieldType(System.Int32)">
			<summary>Returns the field type of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.Type"></see> system object value that specifies the field type of the data value.  </returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetFloat(System.Int32)">
			<summary>Gets a floating point value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.Float32"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetGuid(System.Int32)">
			<summary>Gets a <see cref="T:System.Guid"></see> system value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.Guid"></see> system object value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetInt16(System.Int32)">
			<summary>Gets a small integer value of the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Int16"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetInt32(System.Int32)">
			<summary>Gets an integer value of the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetInt64(System.Int32)">
			<summary>Gets a long integer value of the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Int64"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetName(System.Int32)">
			<summary>Gets the name of the field at the specified column position.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the name of the specified column.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetOrdinal(System.String)">
			<summary>Gets the ordinal value of the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the ordinal value at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetSchemaTable">
			<summary>Gets a table that describes the schema.</summary>
			<returns>A <see cref="T:System.Data.DataTable"></see> system object value that specifies a description of the schema.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetStream(System.Int32)">
			<summary>Gets the stream of data.</summary>
			<returns>A <see cref="T:System.IO.Stream"></see> system object value that specifies the data stream at the column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetString(System.Int32)">
			<summary>Gets a <see cref="T:System.String"></see> value at the specified column position.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position at which to retrieve the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetTimeSpan(System.Int32)">
			<summary>Gets a <see cref="T:System.TimeSpan"></see> value of the data value at the specified column position.</summary>
			<returns>A <see cref="T:System.TimeSpan"></see> system value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetValue(System.Int32)">
			<summary>Gets a value of the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Object"></see> system value that represents the data at the specified column position.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.GetValues(System.Object[])">
			<summary>Gets an array of values from the data value at the specified column position.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of objects returned in the array.</returns>
			<param name="i">An array of <see cref="T:System.Object"></see> values that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.IsDBNull(System.Int32)">
			<summary>Specifies whether the specified column is set to null. </summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the specified column is set to null.If True, the value is null.If False, the is not null.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.IsNull(System.Int32)">
			<summary>Gets a <see cref="T:System.Boolean"></see> value that specifies whether value of the data at the specified column position is null.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether value of the data at the specified column is null.If True, the value is null.If False, the value is not null.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the column position of the data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.NextResult">
			<summary>Moves to the next result in the trace.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the next result exists.If True, the next result exists.If False, the next result does not exist and the method failed.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.Read">
			<summary>Reads the trace record.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the method succeeded in reading the trace record.If True, the trace was read successfully.If False, the trace was not read.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReader.TranslateSubclass(System.String,System.String,System.Int32)">
			<summary>Translates the sub class.</summary>
			<returns>A <see cref="T:System.String"></see> value that specifies the sub class translation.</returns>
			<param name="subclass">An <see cref="T:System.Int32"></see> value that specifies the sub class.</param>
			<param name="column">A <see cref="T:System.String"></see> value that specifies the column.</param>
			<param name="eventClass">A <see cref="T:System.String"></see> value that specifies the event class.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.Depth">
			<summary>Gets the depth value for the trace reader.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the depth of the trace reader.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.FieldCount">
			<summary>Gets the number of columns in the data.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the field count.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.IsClosed">
			<summary>Gets the <see cref="T:System.Boolean"></see> property value that specifies whether the trace reader is closed.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the trace reader is closed.If True, the trace reader is closed.If False (default), the trace reader is open.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.Item(System.Int32)">
			<summary>Gets the column specified by the index position.</summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies the column.</returns>
			<param name="i">An <see cref="T:System.Int32"></see> value that specifies the index position of the column in the record.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.Item(System.String)">
			<summary>Gets the column with the specified name.</summary>
			<returns>An <see cref="T:System.Object"></see> system object value that specifies the column.</returns>
			<param name="name">A <see cref="T:System.String"></see> value that specifies the name of the column.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReader.RecordsAffected">
			<summary>Gets the number of records of data.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of records of data.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceReaderWriter">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReaderWriter"></see> class is an abstract Trace Objects class that is used in the construction of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class and the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReaderWriter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReaderWriter"></see> class.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReaderWriter.WriteNotify">
			<summary>Raises an event when the trace is written to the trace file or trace table.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReaderWriter.Close">
			<summary>Closes the trace reader and writer.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReaderWriter.Write">
			<summary>Writes the trace to the trace file or the trace table.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether the trace was written successfully to the trace file or trace table.If True, the trace was written successfully.If False, the trace was not written successfully.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceReplay">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReplay"></see> object is a Replay object that represents the replay operation for trace log files and trace tables.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReplay"></see> class.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReplay.ReplayEvent">
			<summary>Invokes the handler before an event is replayed.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReplay.ReplayPause">
			<summary>Invokes the handler before a replayed trace is paused.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReplay.ReplayResultEvent">
			<summary>Invokes the handler before a result is returned from a replayed event.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReplay.ReplayStart">
			<summary>Invokes the handler before a replayed trace is started.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Management.Trace.TraceReplay.ReplayStop">
			<summary>Invokes the handler before a replayed trace is stopped.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.Dispose">
			<summary>Deletes the trace information.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.Finalize">
			<summary>Completes the trace replay.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.Pause">
			<summary>Pauses the trace replay.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.Start">
			<summary>Starts the trace replay.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplay.Stop">
			<summary>Stops the trace replay.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplay.Connection">
			<summary>Gets or sets the connection with an instance of Microsoft SQL Server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the connection with an instance of SQL Server.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplay.Options">
			<summary>Gets or sets the configuration options for replaying the trace.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReplayOptions"></see> object value that specifies the configuration options for replaying the trace.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplay.OutputFile">
			<summary>Gets or sets the name of an optional file to which trace replay output is streamed.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceFile"></see> object value that specifies the output file.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplay.OutputTable">
			<summary>Gets or sets the name of an optional table to which trace replay output is streamed.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> object value that specifies the output table.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplay.Source">
			<summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object that contains the trace to be replayed.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object value that specifies the source of the trace.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceReplayOptions">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReplayOptions"></see> object is a Replay object that represents the configuration settings required when replaying a trace.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReplayOptions"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.HealthMonitorPollInterval">
			<summary>Gets or sets the interval between checking for unused threads in seconds.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the interval between checking for unused threads in seconds.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.HealthMonitorWaitInterval">
			<summary>Gets or sets the maximum permitted lifetime of an unused thread.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the maximum permitted lifetime of an unused thread.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.KeepResults">
			<summary>Gets or sets the <see cref="T:System.Boolean"></see> property value that specifies whether to keep the replay results.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that specifies whether to keep the results.If True, the results are kept.If False (default), the results are not kept.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.Mode">
			<summary>Gets or sets whether the trace replay sequential or synchronized.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Management.Trace.ReplayMode"></see> object value that specifies the trace mode.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Management.Trace.TraceReplayOptions.NumberOfReplayThreads">
			<summary>Gets or sets the number of threads used when replaying the trace.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that specifies the number of threads used to replay the trace.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceServer">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceServer"></see> class is a Trace object that represents a new trace on an instance of Microsoft SQL Server.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceServer.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceServer"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceServer.InitializeAsReader(Microsoft.SqlServer.Management.Common.ConnectionInfoBase,System.String)">
			<summary>Initializes the server as a trace reader.</summary>
			<param name="serverConnInfo">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the connection information required to establish a connection with the instance of Microsoft SQL Server that is to be traced.</param>
			<param name="profileFileName">A <see cref="T:System.String"></see> value that specifies the path and the name of the file that contains the SQL Server Profiler trace profile. For information about how to create a trace profile manually using SQL Server Profiler, see SQL Server Profiler Procedures.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceServer.Pause">
			<summary>Pauses the trace.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceServer.Restart">
			<summary>Restarts the trace.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceServer.Stop">
			<summary>Stops the trace.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.TraceTable">
			<summary>The <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class is a Trace object that represents a table of trace information.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceTable.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceTable.InitializeAsReader(Microsoft.SqlServer.Management.Common.ConnectionInfoBase,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class for reading trace data.</summary>
			<param name="serverConnInfo">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the information required to establish a connection with the instance of Microsoft SQL Server that contains the trace table.</param>
			<param name="tableOwner">A <see cref="T:System.String"></see> value that specifies the schema to which the trace table belongs.</param>
			<param name="tableName">A <see cref="T:System.String"></see> value that specifies the name of the trace table.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceTable.InitializeAsReplayOutputWriter(Microsoft.SqlServer.Management.Common.ConnectionInfoBase,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> class for writing replay trace information.</summary>
			<param name="serverConnInfo">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the information required to establish a connection with the instance of Microsoft SQL Server that contains the trace table.</param>
			<param name="destinationTableName">A <see cref="T:System.String"></see> value that specifies the name of the trace table to write the replay trace output data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Management.Trace.TraceTable.InitializeAsWriter(Microsoft.SqlServer.Management.Trace.TraceReader,Microsoft.SqlServer.Management.Common.ConnectionInfoBase,System.String)">
			<summary>Initializes the specified <see cref="T:Microsoft.SqlServer.Management.Trace.TraceTable"></see> object for reading trace data from a <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object, analyzing the data, and writing data to the referenced trace table.</summary>
			<param name="source">A <see cref="T:Microsoft.SqlServer.Management.Trace.TraceReader"></see> object value that specifies the source of the trace data. This object can represent a trace table or a trace file.</param>
			<param name="serverConnInfo">A <see cref="T:Microsoft.SqlServer.Management.Common.SqlConnectionInfo"></see> object value that specifies the information required to establish a connection with the instance of Microsoft SQL Server that contains the trace table.</param>
			<param name="destinationTableName">A <see cref="T:System.String"></see> value that specifies the name of the trace table to write the replay trace output data.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Management.Trace.WriteNotifyEventHandler">
			<summary>Represents the <see cref="T:Microsoft.SqlServer.Management.Trace.WriteNotifyEventHandler"></see> handler.</summary>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.ReportingServices.Interfaces.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ReportingServices.Interfaces</name>
	</assembly>
	<members>
		<member name="N:Microsoft.ReportingServices.DataProcessing">
			<summary>The Microsoft.ReportingServices.DataProcessing namespace is modeled after a subset of the Microsoft .NET data provider interfaces. These interfaces contain the minimal subset of the .NET data provider functionality needed by the report server to process custom data, and do not reflect a fully implemented .NET data provider. You do not need to create a new data processing extension for Reporting Services, if an existing data provider already implements the data processing extension interfaces. As in the case of a .NET data provider, a Reporting Services data processing extension enables you to connect to a data source in order to retrieve data.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.CommandBehavior">
			<summary>Describes of the results of the query and its effect on the database.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.DataProcessing.CommandBehavior.SchemaOnly">
			<summary>The query returns column information only, and does not affect the database state.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.DataProcessing.CommandBehavior.SingleResult">
			<summary>The query returns a single result set. Execution of the query may affect the database state.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.CommandType">
			<summary>Specifies how a command string is interpreted.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.DataProcessing.CommandType.StoredProcedure">
			<summary>The name of a stored procedure.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.DataProcessing.CommandType.TableDirect">
			<summary>When the <see cref="T:Microsoft.ReportingServices.DataProcessing.CommandType"></see> property is set to TableDirect, the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandText"></see> property should be set to the name of the table or tables to be accessed. The user may be required to use escape character syntax or include qualifying characters if any of the tables named contain any special characters. All rows and columns of the named table or tables will be returned when you call one of the Execute methods.  In order to access multiple tables, use a comma-delimited list, without spaces or padding, containing the names of the tables to access. When the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandText"></see> property names multiple tables, a join of the specified tables is returned.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.DataProcessing.CommandType.Text">
			<summary>A text command.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataMultiValueParameter">
			<summary>Represents a multivalued parameter to a Command object.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataMultiValueParameter.Values">
			<summary>Gets or sets the values of the parameters.</summary>
			<returns>A collection of objects containing the values for the parameters.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataParameter">
			<summary>Represents a parameter to a Command object.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataParameter.ParameterName">
			<summary>Gets or sets the name of the <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameter"></see>.</summary>
			<returns>A string containing the name of the parameter.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataParameter.Value">
			<summary>Gets or sets the value of the parameter.</summary>
			<returns>An Object that is the value of the parameter. The default value is Null.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataParameterCollection">
			<summary>Represents a collection of all parameters relevant to a Command object.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataParameterCollection.Add(Microsoft.ReportingServices.DataProcessing.IDataParameter)">
			<summary>Adds an object to the end of the parameter collection.</summary>
			<returns>The position into which the new element was inserted.</returns>
			<param name="parameter">The <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameter"></see> to add to the collection.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataReader">
			<summary>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by Reporting Services Data Processing Extensions that access relational databases.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetFieldType(System.Int32)">
			<summary>Gets the Type information corresponding to the type of object that is returned from <see cref="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetValue(System.Int32)"></see>.</summary>
			<returns>The Type information corresponding to the type of Object that would be returned from <see cref="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetValue(System.Int32)"></see>.</returns>
			<param name="fieldIndex">The index of the field to find.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetName(System.Int32)">
			<summary>Gets the name of the field to find.</summary>
			<returns>The name of the field, or the empty string ("") if there is no value to return.</returns>
			<param name="fieldIndex">The index of the field to find.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetOrdinal(System.String)">
			<summary>Return the index of the named field.</summary>
			<returns>The index of the named field.</returns>
			<param name="fieldName">The name of the field to find.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReader.GetValue(System.Int32)">
			<summary>Return the value of the specified field.</summary>
			<returns>The value of the field at the specified index. </returns>
			<param name="fieldIndex">The index of the field to find.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReader.Read">
			<summary>Advances the <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataReader"></see> to the next record.</summary>
			<returns>A value of true if the enumerator was successfully advanced to the next record, or a value of false if the enumerator has passed the end of the result set.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataReader.FieldCount">
			<summary>Gets the number of fields in the data reader.</summary>
			<returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default value is -1.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataReaderExtension">
			<summary>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is used by SQL Server Reporting Services to retrieve aggregation-specific information about a result set.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReaderExtension.IsAggregationField(System.Int32)">
			<summary>Indicates whether the data is aggregated by the field with the given index.</summary>
			<returns>A value of true if the current row is an aggregation field; otherwise, false.</returns>
			<param name="index">The index of the field within the record.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataReaderExtension.AggregationFieldCount">
			<summary>Gets the number of fields by which the data is aggregated.</summary>
			<returns>When not positioned in a valid record set, 0; otherwise the number of aggregation columns in the current record. The default is -1.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDataReaderExtension.IsAggregateRow">
			<summary>Indicates whether the current row contains aggregate data.</summary>
			<returns>A value of true if the current row contains aggregate data; otherwise, false.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDataReaderFieldProperties">
			<summary>Provides a means of reading field properties from result sets obtained using the <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataReader"></see> or <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataReaderExtension"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReaderFieldProperties.GetPropertyCount(System.Int32)">
			<summary>Returns the number of properties for a specified field.</summary>
			<returns>The property count for the specified field.</returns>
			<param name="fieldIndex">The index of the field.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReaderFieldProperties.GetPropertyName(System.Int32,System.Int32)">
			<summary>Returns the name of a specified property for a specified field.</summary>
			<returns>A string containing the name of the specified property.</returns>
			<param name="fieldIndex">The index of the field.</param>
			<param name="propertyIndex">The index of the property.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDataReaderFieldProperties.GetPropertyValue(System.Int32,System.Int32)">
			<summary>Returns the name of a specified property for a specified field.</summary>
			<returns>An object containing the value of the specified property.</returns>
			<param name="fieldIndex">The index of the field.</param>
			<param name="propertyIndex">The index of the property.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbCollationProperties">
			<summary>Represents the collation properties for a connection to a data source, and is implemented by SQL Server Reporting Services data processing extensions that access relational databases.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbCollationProperties.GetCollationProperties(System.String@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
			<summary>Returns the collation properties used for a connection.</summary>
			<returns>Returns true if the collation properties could be detected for the current connection. </returns>
			<param name="caseSensitive">Indicates that the collation should be case sensitive.</param>
			<param name="cultureName">The name of the culture to use for collation.</param>
			<param name="accentSensitive">Indicates that the collation should be accent sensitive.</param>
			<param name="widthSensitive">Indicates that the collation should be width sensitive.</param>
			<param name="kanatypeSensitive">Indicates that the collation should be kana type sensitive.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbCommand">
			<summary>Represents a statement that is executed while an open connection to a data source exists.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbCommand.Cancel">
			<summary>Attempts to cancel the execution of an <see cref="T:Microsoft.ReportingServices.DataProcessing.IDbCommand"></see>.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbCommand.CreateParameter">
			<summary>Creates a new instance of an <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameter"></see> object.</summary>
			<returns>An <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameter"></see> object.</returns>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbCommand.ExecuteReader(Microsoft.ReportingServices.DataProcessing.CommandBehavior)">
			<summary>Executes the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandText"></see> against the Connection and builds an <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataReader"></see>.</summary>
			<returns>An <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataReader"></see> object.</returns>
			<param name="behavior">The index of the field for which to retrieve properties.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandText">
			<summary>Gets or sets the text command to run against the data source.</summary>
			<returns>The text command to execute. The default value is an empty string ("").</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandTimeout">
			<summary>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</summary>
			<returns>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandType">
			<summary>Indicates or specifies how the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandText"></see> property is interpreted (as text, a stored procedure, etc.).</summary>
			<returns>One of the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.CommandType"></see> values. The default is Text.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.Parameters">
			<summary>Gets the <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameterCollection"></see>.</summary>
			<returns>The parameters of the query or stored procedure.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbCommand.Transaction">
			<summary>Gets or sets the transaction in which the Command object of a SQL Server Reporting Services data provider executes.</summary>
			<returns>The transaction object of a Reporting Services data provider execution. The default value is a null reference (Nothing in Visual Basic).</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbCommandAnalysis">
			<summary>Represents additional command information for analyzing a query and returning a list of parameter names used in the query.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbCommandAnalysis.GetParameters">
			<summary>Returns an <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameterCollection"></see> object representing a list of parameters used in the query.</summary>
			<returns>An <see cref="T:Microsoft.ReportingServices.DataProcessing.IDataParameterCollection"></see> object representing a list of parameters used in the query.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbConnection">
			<summary>Represents an open connection to a data source, and is implemented by SQL Server Reporting Services data processing extensions that access relational databases.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbConnection.BeginTransaction">
			<summary>Begins a database transaction.</summary>
			<returns>An object representing the new transaction.</returns>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbConnection.Close">
			<summary>Closes the connection to the database.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbConnection.CreateCommand">
			<summary>Creates and returns a Command object associated with the connection.</summary>
			<returns>A Command object associated with the connection.</returns>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbConnection.Open">
			<summary>Opens a database connection with the settings specified by the <see cref="P:Microsoft.ReportingServices.DataProcessing.IDbConnection.ConnectionString"></see> property of the provider-specific Connection object.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbConnectionExtension">
			<summary>Represents additional connection properties that can be implemented by SQL Server Reporting Services data processing extensions.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbConnectionExtension.Impersonate">
			<summary>Sets the username of the user that is impersonated while queries are executed. This property is ignored by the report server if impersonation is not supported by the data provider.</summary>
			<returns>The username of the user that is impersonated while queries are executed.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbConnectionExtension.IntegratedSecurity">
			<summary>Indicates whether the connection should use integrated security rather than supply a username and password.</summary>
			<returns>A value of true if the connection should use integrated security for authentication; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbConnectionExtension.UserName">
			<summary>Gets or sets the username to use when connecting to the database. Overrides any username specified in the connection string.</summary>
			<returns>The user name to use when authenticating the client.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbTransaction">
			<summary>Represents a transaction to be performed at a data source.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbTransaction.Commit">
			<summary>Commits the database transaction.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.DataProcessing.IDbTransaction.Rollback">
			<summary>Rolls back a transaction from a pending state.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.DataProcessing.IDbTransactionExtension">
			<summary>Represents additional transaction properties that can be implemented by SQL Server Reporting Services data processing extensions.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.DataProcessing.IDbTransactionExtension.AllowMultiConnection">
			<summary>Indicates whether the provider extension allows a single transaction to be used across multiple connections.</summary>
			<returns>A value of true if the provider allows a single transaction to be used across multiple connections; otherwise, false.</returns>
		</member>
		<member name="N:Microsoft.ReportingServices.Interfaces">
			<summary>Contains classes and interfaces that enable you to construct and send custom notifications to users through your own delivery extensions, and to build custom security extensions for Reporting Services.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.AceCollection">
			<summary>Represents a collection of access control entries specifying access rights for one or more trustees.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.AceCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.AceCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.AceCollection.Add(Microsoft.ReportingServices.Interfaces.AceStruct)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.AceCollection"></see>.</summary>
			<returns>The position into which the new access control entry was inserted.</returns>
			<param name="ace">An <see cref="T:Microsoft.ReportingServices.Interfaces.AceStruct"></see> object that represents an access control entry to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.AceCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.AceCollection"></see> class.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.AceStruct">
			<summary>An access control entry for a trustee (user, group, or computer) that specifies the operations that a trustee can perform on items in the report server database.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.AceStruct.#ctor(Microsoft.ReportingServices.Interfaces.AceStruct)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.AceStruct"></see> class based on an existing <see cref="T:Microsoft.ReportingServices.Interfaces.AceStruct"></see> object.</summary>
			<param name="other">An existing <see cref="T:Microsoft.ReportingServices.Interfaces.AceStruct"></see> object.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.AceStruct.#ctor(System.String)">
			<summary>Creates a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.AceStruct"></see> class with the specified principal name.</summary>
			<param name="name">A user, group, or computer name.</param>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.CatalogOperations">
			<summary>Represents operations that users can perform on catalog item types. Catalog item types include roles, schedules, system properties, and jobs.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.DatasourceOperations">
			<summary>Represents operations that users can perform on data source item types.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.FolderOperations">
			<summary>Represents operations that users can perform on folder item types.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.PrincipalName">
			<summary>A user, group, or computer name.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.ReportOperations">
			<summary>Represents operations that users can perform on report item types.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.AceStruct.ResourceOperations">
			<summary>Represents operations that users can perform on resource item types.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.CatalogOperation">
			<summary>Describes the operations that a user can perform on the catalog.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.CancelJobs">
			<summary>The user may cancel running jobs.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.CreateRoles">
			<summary>The user may create roles.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.CreateSchedules">
			<summary>The user may create schedules.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.DeleteRoles">
			<summary>The user may delete roles.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.DeleteSchedules">
			<summary>The user may delete schedules.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ExecuteReportDefinition">
			<summary>The user may execute report definitions within the report server.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.GenerateEvents">
			<summary>The user may generate events within the report server.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ListJobs">
			<summary>The user may retrieve a list of running jobs.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ReadRoleProperties">
			<summary>The user may read role-specific properties which include the individual tasks associated with the roles.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ReadSchedules">
			<summary>The user may read schedules.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ReadSystemProperties">
			<summary>The user may read system properties.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.ReadSystemSecurityPolicy">
			<summary>The user may read security policies set at the system level.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.UpdateRoleProperties">
			<summary>The user may modify role-specific properties, which include the individual tasks associated with the roles.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.UpdateSchedules">
			<summary>The user may modify schedules.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.UpdateSystemProperties">
			<summary>The user may modify system-level properties.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.CatalogOperation.UpdateSystemSecurityPolicy">
			<summary>The user may modify security policies set at the system level.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection">
			<summary>Represents a collection of catalog operations.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.CatalogOperation)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection"></see>.</summary>
			<returns>The position into which the new catalog operation was inserted.</returns>
			<param name="operation">The catalog operation to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.CatalogOperationsCollection"></see> class.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.CreateAndRegisterStream">
			<summary>Creates and registers a stream and is called by a report server to retrieve the stream to which to render a report.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.DatasourceOperation">
			<summary>Describes the operations that a user can perform on a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.Delete">
			<summary>The user may delete a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.ReadAuthorizationPolicy">
			<summary>The user may read the security policies associated with a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.ReadContent">
			<summary>The user may read the contents of a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.ReadProperties">
			<summary>The user may read properties associated with a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.UpdateContent">
			<summary>The user may modify the contents of a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.UpdateDeleteAuthorizationPolicy">
			<summary>The user may modify or delete the security policies associated with a shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.DatasourceOperation.UpdateProperties">
			<summary>The user may modify the properties associated with a shared data source.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection">
			<summary>Represents a collection of data source operations.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.DatasourceOperation)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection"></see>.</summary>
			<returns>The position into which the new data source operation was inserted.</returns>
			<param name="operation">The data source operation to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.DatasourceOperationsCollection"></see> class.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.Extension">
			<summary>Represents an extension in SQL Server Reporting Services.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Extension.#ctor(System.String,System.String,System.Boolean)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.Extension"></see> class.</summary>
			<param name="visible">Indicates whether an extension is visible in a user interface.</param>
			<param name="localizedName">The localized name of the extension to be used for display purposes in a user interface.</param>
			<param name="name">The name of the extension as defined in the configuration file.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Extension.LocalizedName">
			<summary>Gets the localized name of the extension to be used for display purposes in a user interface.</summary>
			<returns>The localized name of the extension.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Extension.Name">
			<summary>Gets the name of the extension as defined in the configuration file. For example, a delivery extension can return a value of Report Server E-mail.</summary>
			<returns>The name of the extension as defined in the report server configuration file.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Extension.Visible">
			<summary>Indicates whether an extension is visible in a user interface.</summary>
			<returns>A Boolean value indicating whether the extension is visible.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.FolderOperation">
			<summary>Describes the operations that a user can perform on a folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.CreateDatasource">
			<summary>The user may create a shared data source in the specified folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.CreateFolder">
			<summary>The user may add a subfolder to the specified folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.CreateModel">
			<summary>The user may create a model in the specified folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.CreateReport">
			<summary>The user may create a report in the specified folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.CreateResource">
			<summary>The user may create a resource in the specified folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.Delete">
			<summary>The user may delete the specified folder. The user may delete the contents of the folder if the user has delete permissions on all items.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.ReadAuthorizationPolicy">
			<summary>The user may read the security policies associated with the folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.ReadProperties">
			<summary>The user may read the extended folder properties.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.UpdateDeleteAuthorizationPolicy">
			<summary>The user may update or delete the security policy associated with the folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.FolderOperation.UpdateProperties">
			<summary>The user may update or modify extended folder properties.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection">
			<summary>Represents a collection of folder operations.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.FolderOperation)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection"></see>.</summary>
			<returns>The position into which the new folder operation was inserted.</returns>
			<param name="operation">The folder operation to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.FolderOperationsCollection"></see> class. In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own. However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is String.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension">
			<summary>Represents an authentication extension in SQL Server Reporting Services.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension.GetUserInfo(System.Security.Principal.IIdentity@,System.IntPtr@)">
			<summary>Returns the current user identity.</summary>
			<param name="userId">[out] A user account token. This token is primarily used by the report server as a handle to a Windows account in support of credential management for Windows authentication.</param>
			<param name="userIdentity">[out] The identity of the current user. The value of IIdentity may appear in a user interface and should be human readable.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension.IsValidPrincipalName(System.String)">
			<summary>Indicates whether the specified principal name is valid.</summary>
			<returns>Returns true if the supplied user name represents a valid principal name.</returns>
			<param name="principalName">The user, group, or computer name.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension.LogonUser(System.String,System.String,System.String)">
			<summary>Creates a logon session for the user associated with the given credentials.</summary>
			<param name="userName">The name associated with the credentials.</param>
			<param name="authority">Optional. The specific authority to use to authenticate a user (for example, a Windows domain).</param>
			<param name="password">The password associated with the credentials.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension">
			<summary>Represents an extension that can be used to extend the authorization feature of SQL Server Reporting Services.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.CatalogOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given catalog operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operation being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.CatalogOperation[])">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given array of catalog operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperations">The operations being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.DatasourceOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given data source operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operation being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.FolderOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given folder operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operation being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.FolderOperation[])">
			<summary>Checks a user's authorization credentials against a security descriptor for operations on an item in the report server database</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperations">The operations being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.ModelItemOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given model item operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operations being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.ModelOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given model operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operations being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.ReportOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given report operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operation being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.ResourceOperation)">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given resource operation.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperation">The operation being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CheckAccess(System.String,System.IntPtr,System.Byte[],Microsoft.ReportingServices.Interfaces.ResourceOperation[])">
			<summary>Indicates whether a user is authorized to access an item in the report server database for a given array of resource operations.</summary>
			<returns>Returns true if the currently authenticated user is granted access to the item based on the supplied operation and security descriptor.</returns>
			<param name="userName">The name of the user requesting access to the report server.</param>
			<param name="secDesc">The security descriptor for the item.</param>
			<param name="requiredOperations">The operations being requested by the report server for a given user.</param>
			<param name="userToken">A user account token. This token is primarily used by the report server as a handle to a Microsoft Windows account in support of credential management for Windows authentication.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.CreateSecurityDescriptor(Microsoft.ReportingServices.Interfaces.AceCollection,Microsoft.ReportingServices.Interfaces.SecurityItemType,System.String@)">
			<summary>Returns the security descriptor that is stored with an individual item in the report server database.</summary>
			<returns>A serialized access code list.</returns>
			<param name="itemType">The type of item for which the security descriptor is created.</param>
			<param name="stringSecDesc">Optional. A user-friendly description of the security descriptor that can be used for debugging. This is not stored by the report server.</param>
			<param name="acl">The access code list created by the report server for the item. It contains a collection of access code entries.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IAuthorizationExtension.GetPermissions(System.String,System.IntPtr,Microsoft.ReportingServices.Interfaces.SecurityItemType,System.Byte[])">
			<summary>Returns the set of permissions granted a specific user for an item in the report server database.</summary>
			<returns>A StringCollection that contains the name of each permission associated with the user for a given item.</returns>
			<param name="userName">The name of the user as returned by the <see cref="M:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension.GetUserInfo(System.Security.Principal.IIdentity@,System.IntPtr@)"></see> method of <see cref="T:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension"></see>.</param>
			<param name="itemType">The type of item in the report server database for which the permissions are returned.</param>
			<param name="secDesc">The security descriptor associated with the item.</param>
			<param name="userToken">A pointer to the user ID returned by the <see cref="M:Microsoft.ReportingServices.Interfaces.IAuthenticationExtension.GetUserInfo(System.Security.Principal.IIdentity@,System.IntPtr@)"></see> method.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IDeliveryExtension">
			<summary>Represents a delivery extension in SQL Server Reporting Services.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.Deliver(Microsoft.ReportingServices.Interfaces.Notification)">
			<summary>Delivers the report notification to a user based on the contents of the notification.</summary>
			<returns>A Boolean value indicating whether or not the delivery was successful.</returns>
			<param name="notification">A <see cref="T:Microsoft.ReportingServices.Interfaces.Notification"></see> object containing information required by the delivery extension to deliver a report.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.ValidateUserData(Microsoft.ReportingServices.Interfaces.Setting[])">
			<summary>Used to determine whether a given set of delivery extension settings are valid.</summary>
			<returns>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects containing extension settings that have been validated by the delivery extension.</returns>
			<param name="settings">An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects containing extension settings supplied by a client.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.ExtensionSettings">
			<summary>Gets a list of settings that are used by the delivery extension to create a notification or report.</summary>
			<returns>The settings of a delivery extension.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.IsPrivilegedUser">
			<summary>Indicates whether the user is allowed access to all the functionality of the extension. </summary>
			<returns>A Boolean value that indicates whether the user is allowed access to all the functionality of the extension. When set to false, the extension prevents the user from accessing functionality as defined by the report server. The default value is false. If a user that creates the subscription has Manage All Subscriptions permission as part of his or her defined role, the value of the property is true.This property is never set by your delivery extension. You must implement the <see cref="P:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.IsPrivilegedUser"></see> property so that the report server can properly manage it, but it is never used by your delivery extension code.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IDeliveryExtension.ReportServerInformation">
			<summary>Gets information about the report server that the delivery extension requires in order to perform deliveries.</summary>
			<returns>An <see cref="T:Microsoft.ReportingServices.Interfaces.IDeliveryReportServerInformation"></see> interface that can be used to obtain specific information about a report server prior to delivering report notifications, for example, the list of installed rendering extensions.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IDeliveryReportServerInformation">
			<summary>Contains information about the report server that is required by delivery extensions. For example, a list of the available rendering extensions.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IDeliveryReportServerInformation.RenderingExtension">
			<summary>An array of <see cref="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Extension"></see> objects representing the rendering extensions currently deployed on a report server.</summary>
			<returns>A list of rendering extensions that are currently available on the report server.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IDeliveryReportServerInformation.ServerSettings">
			<summary>Gets the setting values for the current extension.</summary>
			<returns>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IExtension">
			<summary>Represents an extension in SQL Server Reporting Services.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IExtension.SetConfiguration(System.String)">
			<summary>Used to pass custom configuration data to an extension.</summary>
			<param name="configuration">The XML string from the configuration file that contains extension configuration data.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.IExtension.LocalizedName">
			<summary>Gets the localized name of the extension to be displayed in a user interface.</summary>
			<returns>The localized name of the extension.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.IRenderStream">
			<summary>Provides support for rendering multiple streams from a rendering extension.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.IRenderStream.Finish">
			<summary>Allows the rendering extension to indicate that there is no additional content to be added to the given stream. </summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl">
			<summary>Represents the means to retrieve delivery extension-specific subscription information from the user (for example, e-mail addresses).</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.Validate">
			<summary>Used to determine whether the settings for a delivery extension are valid.</summary>
			<returns>A Boolean indicating whether the information specified in the <see cref="P:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.UserData"></see> property is valid.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.Description">
			<summary>Gets the description of the delivery that is displayed in Report Manager.</summary>
			<returns>The description of the delivery that is displayed in Report Manager.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.IsPrivilegedUser">
			<summary>Indicates whether the user is allowed access to all the functionality of the extension.</summary>
			<returns>A Boolean that indicates whether the user is allowed access to all the functionality of the extension. When set to false, the extension prevents the user from accessing functionality as defined by the extension. The default value is false.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.ReportServerInformation">
			<summary>Gets information about the report server that the delivery extension requires in order to perform deliveries.</summary>
			<returns>An <see cref="T:Microsoft.ReportingServices.Interfaces.IDeliveryReportServerInformation"></see> interface that can be used to obtain specific information about a report server prior to delivering report notifications, for example, the list of installed rendering extensions.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ISubscriptionBaseUIUserControl.UserData">
			<summary>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects that define the extension settings for a notification.</summary>
			<returns>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects set by the subscription owner.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute">
			<summary>Provides the localized name of an extension.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute"></see> class. </summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute"></see> class. </summary>
			<param name="name">The name of the extension.  Used as the key to determine which localization to return.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.Equals(System.Object)">
			<summary>Determines if the object supplied is the same as the current object.</summary>
			<returns>A Boolean value indicating if the objects are equal.</returns>
			<param name="obj">The object used for comparison.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.GetHashCode">
			<summary>Returns a unique hash code for the object.</summary>
			<returns>An integer representing the hash code for the object.</returns>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.GetLocalizedString(System.String)">
			<summary>Returns the correct localized extension name.</summary>
			<returns>A string containing the localized name of the extension.</returns>
			<param name="value">The language-neutral name of the extension.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.LocalizedNameAttribute.Name">
			<summary>Gets the localized name of the extension.</summary>
			<returns>A string containing the localized name of the extension.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation">
			<summary>Describes the types of operations allowed on a model item.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelItemOperation.ReadProperties">
			<summary>Allows the user to read properties for a model item.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection"></see>.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection.#ctor">
			<summary>Constructs a <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection"></see> object.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.ModelItemOperation)">
			<summary>Adds a <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> to the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection"></see>.</summary>
			<returns>The position into which the new <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> was inserted.</returns>
			<param name="operation">A <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> object.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection.Item(System.Int32)">
			<summary>Returns a <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> in the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperationsCollection"></see>.</summary>
			<returns>A <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> object.</returns>
			<param name="index">The zero-based index of the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelItemOperation"></see> to get.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ModelOperation">
			<summary>Describes the operations that a user may perform on a model.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.Delete">
			<summary>A user may delete a model.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.ReadAuthorizationPolicy">
			<summary>A user may read the security policy associated with a model.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.ReadContent">
			<summary>A user may read the content of a given model. </summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.ReadDatasource">
			<summary>A user may read properties associated with the model's data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.ReadModelItemAuthorizationPolicies">
			<summary>A user may read the security policy associated with a given model.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.ReadProperties">
			<summary>A user may read the properties associated with a model. </summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.UpdateContent">
			<summary>A user may update the content of a given model. </summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.UpdateDatasource">
			<summary>A user may update  the data source associated with a given model. </summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.UpdateDeleteAuthorizationPolicy">
			<summary>A user may modify or delete the security policy associated with a given model. </summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.UpdateModelItemAuthorizationPolicies">
			<summary>A user may update the security policy associated with a given model item.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ModelOperation.UpdateProperties">
			<summary>A user may update the properties associated with a given model. </summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection">
			<summary>Represents a collection of <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection.#ctor">
			<summary>Constructs a new <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection"></see> object.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.ModelOperation)">
			<summary>Adds a <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> to the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection"></see>.</summary>
			<returns>An integer value representing the position into which the new <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> was inserted.</returns>
			<param name="operation">A <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> object.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection.Item(System.Int32)">
			<summary>Returns a <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> in the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperationsCollection"></see>.</summary>
			<returns>A <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> object from the collection.</returns>
			<param name="index">The zero-based index of the <see cref="T:Microsoft.ReportingServices.Interfaces.ModelOperation"></see> to get.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.Notification">
			<summary>Represents subscription information that delivery extensions use to deliver reports.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Notification.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.Notification"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Notification.Save">
			<summary>Saves changes made to a <see cref="T:Microsoft.ReportingServices.Interfaces.Notification"></see> object in the associated subscription.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.Attempt">
			<summary>Indicates how many times the report server has attempted to deliver the notification.</summary>
			<returns>A Boolean value that indicates how many times the report server has attempted to deliver the notification.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.MaxNumberOfRetries">
			<summary>Indicates the maximum number of times the report server attempts to deliver the notification. This value is based on information contained in the delivery extension's configuration file.</summary>
			<returns>The maximum number of times the report server retries to deliver the notification.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.Owner">
			<summary>The user name of the owner who generated the notification. User name is in the form of domain\alias.</summary>
			<returns>The user name of the owner who generated the subscription.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.Report">
			<summary>A <see cref="P:Microsoft.ReportingServices.Interfaces.Notification.Report"></see> object containing information about the report that is associated with the subscription.</summary>
			<returns>Information about the report that is associated with the notification.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.Retry">
			<summary>Indicates that the report server should retry delivering the notification.</summary>
			<returns>A Boolean value indicating whether the report server should retry delivering the notification.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.Status">
			<summary>The status of the notification. Displayed in the subscription user interface.</summary>
			<returns>The status of the notification.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Notification.UserData">
			<summary>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> objects that defines the values of the extension settings for the notification.</summary>
			<returns>The setting values for the notification.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.OperationNames">
			<summary>Contains the field names and corresponding values for operations that users can perform on items in SQL Server Reporting Services.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCancelJobs">
			<summary>Specifies the operation "Cancel Jobs".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateAnySubscription">
			<summary>Specifies the operation "Create Any Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateDatasource">
			<summary>Specifies the operation "Create data source".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateFolder">
			<summary>Specifies the operation "Create Folder".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateLink">
			<summary>Specifies the operation "Create Link".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateReport">
			<summary>Specifies the operation "Create Report".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateResource">
			<summary>Specifies the operation "Create Resource".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateRoles">
			<summary>Specifies the operation "Create Roles".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateSchedules">
			<summary>Specifies the operation "Create Schedules".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateSnapshot">
			<summary>Specifies the operation "Create Report History".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperCreateSubscription">
			<summary>Specifies the operation "Create Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDelete">
			<summary>Specifies the operation "Delete".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDeleteAnySubscription">
			<summary>Specifies the operation "Delete Any Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDeleteHistory">
			<summary>Specifies the operation "Delete Report History".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDeleteRoles">
			<summary>Specifies the operation "Delete Roles".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDeleteSchedules">
			<summary>Specifies the operation "Delete Schedules".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperDeleteSubscription">
			<summary>Specifies the operation "Delete Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperExecute">
			<summary>Specifies the operation "Execute".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperExecuteAndView">
			<summary>Specifies the operation "Execute and View".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperGenerateEvents">
			<summary>Specifies the operation "Generate Events".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperListHistory">
			<summary>Specifies the operation "List Report History".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperListJobs">
			<summary>Specifies the operation "List Jobs".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperManageSharedSchedules">
			<summary>Specifies the operation "Manage Shared Schedules".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadAnySubscription">
			<summary>Specifies the operation "Read Any Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadAuthorizationPolicy">
			<summary>Specifies the operation "Read Security Policies".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadContent">
			<summary>Specifies the operation "Read Content".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadDatasources">
			<summary>Specifies the operation "Read Data Sources".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadParameters">
			<summary>Specifies the operation "Read Parameters".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadPolicy">
			<summary>Specifies the operation "Read Policy".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadProperties">
			<summary>Specifies the operation "Read System Properties".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadReportDefinition">
			<summary>Specifies the operation "Read Report Definition".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadRoleProperties">
			<summary>Specifies the operation "Read Role Properties".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadSchedules">
			<summary>Specifies the operation "Read Schedules".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadSubscription">
			<summary>Specifies the operation "Read Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperReadSystemSecurityPolicy">
			<summary>Specifies the operation "Read System Security Policies".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateAnySubscription">
			<summary>Specifies the operation "Update Any Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateContent">
			<summary>Specifies the operation "Update Content".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateDatasources">
			<summary>Specifies the operation "Update Data Sources".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateDeleteAuthorizationPolicy">
			<summary>Specifies the operation "Update Security Policies".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateParameters">
			<summary>Specifies the operation "Update Parameters".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdatePolicy">
			<summary>Specifies the operation "Update Policy".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateProperties">
			<summary>Specifies the operation "Update Properties".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateReportDefinition">
			<summary>Specifies the operation "Update Report Definition".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateRoleProperties">
			<summary>Specifies the operation "Update Role Properties".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateSchedules">
			<summary>Specifies the operation "Update Schedules".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateSubscription">
			<summary>Specifies the operation "Update Subscription".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateSystemProperties">
			<summary>Specifies the operation "Update System Properties".</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.OperationNames.OperUpdateSystemSecurityPolicy">
			<summary>Specifies the operation "Update System Security Policies."</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.RenderedOutputFile">
			<summary>Represents the output from a rendering extension. A <see cref="T:Microsoft.ReportingServices.Interfaces.RenderedOutputFile"></see> object contains the associated filename and type information that is required by the delivery extension in order to process the stream returned by the rendering extension.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.RenderedOutputFile"></see> class.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Data">
			<summary>The data stream that contains the report that is output by the rendering extension.</summary>
			<returns>A data stream representing the rendered report.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Encoding">
			<summary>The type of encoding for the file stream returned by the <see cref="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Data"></see> property.</summary>
			<returns>The encoding of the report file stream.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Extension">
			<summary>The extension of the file returned by the <see cref="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Data"></see> property. The extension matches the file type specified in the <see cref="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Type"></see> property.</summary>
			<returns>The file extension of the encoded data stream. Common file extensions for reports are HTM, XLS, and TIF.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Type">
			<summary>The MIME type of the stream in the <see cref="P:Microsoft.ReportingServices.Interfaces.RenderedOutputFile.Data"></see> property.</summary>
			<returns>The MIME type of the stream.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.Report">
			<summary>Represents report-specific information and methods that enable delivery extensions to deliver reports to users.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Report.Render(System.String,System.String)">
			<summary>Renders a report in a specific format using the information stored in the properties of the <see cref="T:Microsoft.ReportingServices.Interfaces.Report"></see> object. </summary>
			<returns>An array of <see cref="T:Microsoft.ReportingServices.Interfaces.RenderedOutputFile"></see> objects produced by the rendering extension selected in the renderFormat parameter.</returns>
			<param name="renderFormat">The name of the format that is used to render the report. The format corresponds to one of the available rendering extensions installed on the report server.</param>
			<param name="deviceInfo">An XML string that defines a list of extension parameters for the rendering extension that is used to format the report so that it can be delivered correctly based on the requirements of the delivery extension.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Report.Date">
			<summary>The server date and time at which the report was executed.</summary>
			<returns>The date and time at which the report was executed.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Report.Name">
			<summary>The name of the report that is associated with the notification.</summary>
			<returns>The name of the report.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Report.URL">
			<summary>The URL to the report on the report server.</summary>
			<returns>The URL to the report. The URL is the full URL access string to the report. For more information, see URL Access.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ReportOperation">
			<summary>Describes the operations that a user can perform on a report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.CreateAnySubscription">
			<summary>The user may create any subscription associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.CreateLink">
			<summary>The user may link to a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.CreateResource">
			<summary>The user may create a resource in a given folder.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.CreateSnapshot">
			<summary>The user may create a report history snapshot associated with the given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.CreateSubscription">
			<summary>The user may create a subscription associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.Delete">
			<summary>The user may delete a report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.DeleteAnySubscription">
			<summary>The user may delete any subscription associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.DeleteHistory">
			<summary>The user may delete report history snapshots associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.DeleteSubscription">
			<summary>Users may delete subscriptions of which they are owners.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.Execute">
			<summary>A user may execute a report, but not view it.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ExecuteAndView">
			<summary>A user may execute and view and report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ListHistory">
			<summary>A user may view the report history associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadAnySubscription">
			<summary>Users may read the properties of any subscription associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadAuthorizationPolicy">
			<summary>A user may read the security policy associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadDatasource">
			<summary>A user may read properties associated with a report's data sources.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadPolicy">
			<summary>A user may read the cache and snapshot policies associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadProperties">
			<summary>A user may read the properties associated with a report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadReportDefinition">
			<summary>A user may read the report definition of a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.ReadSubscription">
			<summary>Users may read the properties associated with report subscriptions of which they are the owners.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateAnySubscription">
			<summary>A user may update or modify any subscription associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateDatasource">
			<summary>A user may update or modify single data sources associated with a given report. This does not include shared data source.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateDeleteAuthorizationPolicy">
			<summary>A user may modify or delete the security policy associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateParameters">
			<summary>A user may update or modify the parameter values associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdatePolicy">
			<summary>A user may modify or update the cache or snapshot policies associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateProperties">
			<summary>A user may modify or update the properties associated with a given report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateReportDefinition">
			<summary>A user may modify or update the report definition of a report.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ReportOperation.UpdateSubscription">
			<summary>A user may modify or update report subscriptions of which he or she is the owner.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection">
			<summary>Represents a collection of report operations.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.ReportOperation)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection"></see>.</summary>
			<returns>The position into which the new report operation was inserted.</returns>
			<param name="operation">The report operation to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.ReportOperationsCollection"></see> class.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ResourceOperation">
			<summary>Describes the operations that a user can perform on a resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.Delete">
			<summary>The user may delete a given resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.ReadAuthorizationPolicy">
			<summary>The user may read the security policy associated with a resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.ReadContent">
			<summary>The user may read the MIME content of a resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.ReadProperties">
			<summary>The user may read resource properties.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.UpdateContent">
			<summary>The user may update or modify the MIME content of a resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.UpdateDeleteAuthorizationPolicy">
			<summary>The user may update or delete the security policy associated with a resource.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.ResourceOperation.UpdateProperties">
			<summary>The user may modify or update resource properties.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection">
			<summary>Represents a collection of resource operations.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection.Add(Microsoft.ReportingServices.Interfaces.ResourceOperation)">
			<summary>Adds an object to the end of the <see cref="T:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection"></see>.</summary>
			<returns>The position into which the new resource operation was inserted.</returns>
			<param name="operation">The resource operation to add to the collection.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index. In C#, this property is the indexer for the <see cref="T:Microsoft.ReportingServices.Interfaces.ResourceOperationsCollection"></see> class.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.SecurityItemType">
			<summary>Describes the item associated with a specific authorization request.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Catalog">
			<summary>Represents the entire report server database.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Datasource">
			<summary>Represents a data source item type.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Folder">
			<summary>Represents a folder item type.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Report">
			<summary>Represents a report item type.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Resource">
			<summary>Represents a resource item type.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.SecurityItemType.Unknown">
			<summary>Represents an unknown item type.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.Setting">
			<summary>Represents a setting for an extension.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Setting.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.Setting"></see> class.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Setting.AddValidValue(Microsoft.ReportingServices.Interfaces.ValidValue)">
			<summary>Adds a valid value using the <see cref="T:Microsoft.ReportingServices.Interfaces.ValidValue"></see> class.</summary>
			<param name="val">A <see cref="T:Microsoft.ReportingServices.Interfaces.ValidValue"></see> object that contains the label and the value for the setting.</param>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.Setting.AddValidValue(System.String,System.String)">
			<summary>Adds a valid value for a setting using a label and a value.</summary>
			<param name="val">The actual value of the setting that is passed to the delivery extension.</param>
			<param name="label">The display value for the setting as presented in a user interface.</param>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.DisplayName">
			<summary>The localized name of the extension setting that is displayed to the user.</summary>
			<returns>A String representing the name of the setting that is displayed in a user interface, such as Report Manager.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Encrypted">
			<summary>Indicates whether the extension setting value should be encrypted in the report server database.</summary>
			<returns>A Boolean value indicating whether a value for the setting should be encrypted in the report server database.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Error">
			<summary>An error that describes a problem with the value of the setting.</summary>
			<returns>An error message that describes a problem with the value of the setting.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Field">
			<summary>The name of the field used to derive the value of the setting.</summary>
			<returns>A String value representing the name of the field that is used to derive the value of the setting.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.IsPassword">
			<summary>Indicates whether the setting value should be returned in calls to the SOAP API.</summary>
			<returns>A Boolean value indicating whether the setting value should be returned in calls to the SOAP API.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Name">
			<summary>Gets the name of the setting.</summary>
			<returns>A String value representing the name of the setting.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.ReadOnly">
			<summary>Indicates whether a setting is read-only.</summary>
			<returns>A Boolean value indicating whether a setting is read-only.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Required">
			<summary>Indicates whether a value for the setting is required by the extension.</summary>
			<returns>A Boolean value indicating whether a value for the setting is required.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.ValidValues">
			<summary>A set of values that can be configured for the setting.</summary>
			<returns>A collection of <see cref="T:Microsoft.ReportingServices.Interfaces.ValidValue"></see> objects containing the valid values for the setting.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.Setting.Value">
			<summary>Gets or sets the value for the setting.</summary>
			<returns>A String value containing the value of thesetting.</returns>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.StreamOper">
			<summary>Defines the operation that is used by the <see cref="T:Microsoft.ReportingServices.Interfaces.CreateAndRegisterStream"></see> method. Rendering extensions may request a stream that is available for client applications through SOAP or URL access or a temporary stream to be used during the rendering process.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.StreamOper.CreateAndRegister">
			<summary>Create a stream and register its name so that it can be returned through the SOAP API for subsequent client requests. The first stream registered is the primary output stream.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.StreamOper.CreateOnly">
			<summary>Only create a stream. This feature is used to create temporary streams that can be used by the rendering extension to handle large memory requirements. This temporary stream is not available for subsequent client requests.</summary>
		</member>
		<member name="F:Microsoft.ReportingServices.Interfaces.StreamOper.RegisterOnly">
			<summary>Register the stream as a secondary stream for the rendering extension. The method does not create a stream, but instead, the callback returns null and registers the name.</summary>
		</member>
		<member name="T:Microsoft.ReportingServices.Interfaces.ValidValue">
			<summary>Represents a valid value for an extension setting.</summary>
		</member>
		<member name="M:Microsoft.ReportingServices.Interfaces.ValidValue.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ReportingServices.Interfaces.ValidValue"></see> class.</summary>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ValidValue.Label">
			<summary>The label of the setting value.</summary>
			<returns>A String representing the label of the setting that is displayed in a user interface, such as Report Manager.</returns>
		</member>
		<member name="P:Microsoft.ReportingServices.Interfaces.ValidValue.Value">
			<summary>A valid value for the setting.</summary>
			<returns>A String representing a valid value for the setting that is used by the delivery extension to deliver notifications.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SqlServer.Dts.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.Dts.Design</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Design">
			<summary>The namespace <see cref="N:Microsoft.SqlServer.Dts.Design"></see> contains classes and interfaces to create user interface elements and connect them to the tasks so properties of the tasks can be set.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute">
			<summary>Defines a <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute"></see> attribute for the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute"></see> class by using an F1 keyword parameter. </summary>
			<param name="f1Keyword">The keyword of the Help topic to display.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Design.HelpContextAttribute"></see> class by using the F1 keyword, collection, and filter parameters. </summary>
			<param name="f1Keyword">The keyword of the Help topic to display.</param>
			<param name="helpCollection">The Help collection from which to retrieve the Help.</param>
			<param name="helpFilter">The filter applied to the Help.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.F1Keyword">
			<summary>Gets or sets a String containing the keyword to be used in looking up Help.</summary>
			<returns>A String containing the keyword to be used in looking up Help.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.HelpCollection">
			<summary>Gets or sets a String containing the Help collection from which to retrieve the Help.</summary>
			<returns>A String containing the Help collection from which to obtain the Help.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.HelpContextAttribute.HelpFilter">
			<summary>Gets or sets a String containing any filters that are in place to narrow down the search in the Help collection.</summary>
			<returns>A String containing any filters that are in place to narrow down the search in the Help collection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo">
			<summary>Provides detailed information about an error or warning event generated by SSIS control flow or data flow components during design.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.GetMessage">
			<summary>Returns a String that contains the error message, component, and the subcomponent, for each error.</summary>
			<returns>A String that contains the error message, component, and subcomponent.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.GetMessage(System.Boolean)">
			<summary>Returns a String that contains the error message.</summary>
			<returns>When true, a String that contains the error message. When false, a String that contains the error message, component and subcomponent information.</returns>
			<param name="descriptionOnly">A Boolean that indicates whether the error message only is returned, or the error message plus component and subcomponent information.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Component">
			<summary>Returns the IComponent interface of the object that raised the event.</summary>
			<returns>An IComponent that is the component associated with the error.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Description">
			<summary>Returns the text of the message.</summary>
			<returns>A String containing the error message.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.ErrorCode">
			<summary>Returns an Integer that identifies the error message.</summary>
			<returns>An Integer that identifies the error message.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.HelpContext">
			<summary>Returns the identifier of the topic in the Help file.</summary>
			<returns>An Integer containing the topic identifier.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.HelpFile">
			<summary>Returns the path to the Help file that contains detailed information.</summary>
			<returns>A String containing the path to the Help file.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.Level">
			<summary>Returns a TraceLevel enumeration value indicating what messages to output for the Debug, Trace and TraceSwitch classes.</summary>
			<returns>A TraceLevel enumeration value indicating what messages to output for the Debug, Trace and TraceSwitch classes.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.SourceComponent">
			<summary>Returns the name of the component where the error originated.</summary>
			<returns>A String containing the name of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IComponentErrorInfo.SubComponent">
			<summary>Returns an arbitrary String that identifies the sub-module within a source: for example, the transform in a Pipeline task.</summary>
			<returns>A String containing the submodule that is the source of the error.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Design.IDtsClipboardService">
			<summary>Provides developers using the task and transform user interface the ability to query if their task or transform was generated as part of a copy/paste or cut/paste operation.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IDtsClipboardService.IsPasteActive">
			<summary>Gets a Boolean that indicates whether or not paste operations are currently active. Tasks and components can use this value to see if they were generated as a result of a paste operation.</summary>
			<returns>A Boolean indicating whether or not paste operations are currently active. A value of true indicates that the paste operations are currently active.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService">
			<summary>Gives data flow components access to the parent Data Flow task and its <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see> container.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService.Pipeline">
			<summary>Gets the parent Data Flow task of a data flow component.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90"></see> that represents the parent Data Flow task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Design.IDtsPipelineEnvironmentService.PipelineTaskHost">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see> that represents the TaskHost container of the parent Data Flow task.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see> that represents the TaskHost container of the parent Data Flow task.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Design.IErrorCollectionService">
			<summary>Used to capture events from data flow components when you need to capture all the errors and warnings raised by the component instead of receiving only the last error or warning.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.ClearErrors">
			<summary>Clears the error cache.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.GetErrorMessage(System.Boolean)">
			<summary>Returns a String that contains the error message.</summary>
			<returns>When true, a String that contains the error message. When false, a String that contains the error message, component and subcomponent information.</returns>
			<param name="descriptionOnly">A Boolean that indicates whether the error message only is returned, or the error message plus component and subcomponent information.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Design.IErrorCollectionService.GetErrors">
			<summary>Retrieves the list of errors and stores them in an ICollection.</summary>
			<returns>An ICollection that contains the errors.</returns>
		</member>
		<member name="N:Microsoft.SqlServer.Dts.Pipeline.Design">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Pipeline.Design"></see> namespace contains the interface that is used when developing a user interface for a data flow component.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute">
			<summary>Notifies the data flow designer at design time that the user interface of the component will manage the component viewer by itself.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute.#ctor">
			<summary>Initializes a new instance of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Design.CustomComponentViewHandlerAttribute"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI">
			<summary>Defines the methods called by the SSIS Designer for the user interface of a data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Delete(System.Windows.Forms.IWin32Window)">
			<summary>Called when the component is deleted from the SSIS Designer surface.</summary>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the component.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Edit(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Variables,Microsoft.SqlServer.Dts.Runtime.Connections)">
			<summary>Called when a component is edited.</summary>
			<returns>A value of true specifies that the component has been modified.</returns>
			<param name="variables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see> collection that is accessible to the data flow task containing the component.</param>
			<param name="connections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see> collection that is accessible to the data flow task containing the component.</param>
			<param name="parentWindow">The System.Windows.Forms.IWin32Window of the SSIS Designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Help(System.Windows.Forms.IWin32Window)">
			<summary>[Reserved for future use.]</summary>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the component.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.Initialize(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90,System.IServiceProvider)">
			<summary>Called to initialize the user interface of the component.</summary>
			<param name="dtsComponentMetadata">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component.</param>
			<param name="serviceProvider">The IServiceProviderhttp://go.microsoft.com/fwlink/?LinkId=33994 interface provided by the SSIS designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI.New(System.Windows.Forms.IWin32Window)">
			<summary>Called when a component is initially added to a Data Flow task.</summary>
			<param name="parentWindow">The System.Windows.Forms.IWin32Window of SSIS Designer.</param>
		</member>
		<member name="N:Microsoft.SqlServer.Dts.Runtime.Design">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Runtime.Design"></see> namespace provides the classes and interfaces used to create and instantiate user interfaces for tasks and run-time extension objects.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs">
			<summary>Defines a base class for classes that provide the context of arguments that the SSIS Designer displays in the Connection Manager Editor when creating or editing connection managers. Currently the FILE and MULTIFILE connection manager editors support these parameters.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs"></see> class. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs.Empty">
			<summary>An empty <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs"></see> object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs">
			<summary>Provides the context of arguments that the SSIS Designer displays in the File Connection Manager Editor when creating or editing File connection managers.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.Collections.ICollection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> class using a collection of usage types specific to this connection. </summary>
			<param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see> enumerations available to choose from. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> class using a String to specify what file types are valid for this connection.</summary>
			<param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.#ctor(System.String,System.Collections.ICollection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> class, initializing both the file type filter and the usage types. </summary>
			<param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see> enumerations available to choose from. </param>
			<param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.FileFilter">
			<summary>Gets or sets a pipe-delimited String containing the file types that are valid for the connection.</summary>
			<returns>A String containing the file types that are valid for the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs.SupportedUsageTypes">
			<summary>Gets or sets a collection containing the available usage types. Valid usage types are defined in <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see>.</summary>
			<returns>A collection containing the available usage types.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI">
			<summary>Defines the interface for editing connection managers. This class is inherited by all connection manager user interfaces. It returns the connection manager user interface that is used for editing the connection manager.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Delete(System.Windows.Forms.IWin32Window)">
			<summary>Provides notification for tasks. This method is called before an existing connection manager is removed from the package.</summary>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Edit(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
			<summary>Edits an existing connection manager.</summary>
			<returns>true if the connection manager was modified.</returns>
			<param name="connections">The connections available for editing.</param>
			<param name="connectionUIArg">A class that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs"></see>, such as the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> or <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see>.</param>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.Initialize(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.IServiceProvider)">
			<summary>Initializes the connection manager user interface. This method is called when you need to create connections of a specific type.</summary>
			<param name="connectionManager">The connection manager to initialize.</param>
			<param name="serviceProvider">The object used to get registered services. Defines a mechanism for retrieving services offered by the designer for such activities as monitoring changes to components.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionManagerUI.New(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
			<summary>Provides notification to tasks of newly created connection managers. This method is called after a new connection manager is added to the package.</summary>
			<returns>true if a new connection was created.</returns>
			<param name="connections">The connections collection to add the new connection to, or the connections to show in a drop-down or other control in the user interface.</param>
			<param name="connectionUIArg">A class that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs"></see>, such as the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see> or <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see>.</param>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService">
			<summary>Provides a service that can be used by various user interfaces to create new connections. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.AddConnectionToPackage(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
			<summary>Adds existing connections to a package designer so that the designer is aware of a new connection manager</summary>
			<returns>true if the connection is not null, false otherwise.</returns>
			<param name="connectionManager">The connect manager to register in the package designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.CreateConnection(System.String)">
			<summary>Creates a new connection using the connection type specified as a parameter.</summary>
			<returns>An ArrayList containing the collection of connections created. An empty collection is returned if an error occurs or if the user cancels the request.</returns>
			<param name="connectionType">The type of connection you want to put in the array.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.CreateConnection(System.String,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
			<summary>Creates a new connection using the connection type specified as a parameter.</summary>
			<returns>An ArrayList containing the collection of connections created. An empty collection is returned if an error occurs, or if the user cancels the request.</returns>
			<param name="connectionType">The type of connection to create.</param>
			<param name="connectionUIArg">Provides information to allow you to create contextual information regarding the new connection manager. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.CreateConnectionFromDataSource">
			<summary>Displays a list of existing data sources and allows users to create connection managers based on data sources.</summary>
			<returns>An ArrayList that contains the collection of the connections created. An empty collection is returned if an error occurs, or if the user cancels the request.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.EditConnection(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
			<summary>Edits a specific existing connection and returns a value that indicates whether the connection was modified.</summary>
			<returns>true if the connection was modified.</returns>
			<param name="connectionManager">The connection manager to edit.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.EditConnection(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,Microsoft.SqlServer.Dts.Runtime.Design.ConnectionManagerUIArgs)">
			<summary>Edits a specific existing connection and returns a value to indicate whether the connection was modified.</summary>
			<returns>true if the connection was modified.</returns>
			<param name="connectionManager">The connection manager to edit.</param>
			<param name="connectionUIArg">The context argument. For FILE connection managers, this argument is of type <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.FileConnectionManagerUIArgs"></see>. For MULTIFILE connection managers, this argument is of type <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetAMOObject(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
			<summary>Retrieves the AMO object for an OLAP connection.</summary>
			<returns>An AMO object.</returns>
			<param name="connectionManager">A connection manager for the OLAP connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetConnections">
			<summary>Retrieves all connection managers in the current package.</summary>
			<returns>A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetConnectionsOfType(System.String)">
			<summary>Returns all connections of the specified type found in the current package.</summary>
			<returns>An ArrayList that contains the connections.</returns>
			<param name="connectionType">The type of connection to return.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.GetDataSource(Microsoft.SqlServer.Dts.Runtime.ConnectionManager)">
			<summary>Retrieves the DataSource object for a connection.</summary>
			<returns>An object that contains the DataSource of the connection.</returns>
			<param name="connectionManager">The connection manager that you want the data source for.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.SetDataSourceID(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.String)">
			<summary>Allows the connection string for a run-time connection manager to be in synchronization with the connection string of a Data Source object, if both are in the same project. This synchronization is done whenever a package is opened in the designer.</summary>
			<param name="connectionManager">The connection manager that contains the reference to the dataSourceID.</param>
			<param name="dataSourceId">The GUID of the data source or data source view.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.SetReferencedProject(Microsoft.SqlServer.Dts.Runtime.ConnectionManager,System.String)">
			<summary>Sets the referenced project to a connection manager.</summary>
			<param name="connectionManager">The connection manager to assign.</param>
			<param name="projectUniqueName">The unique name of the project.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsConnectionService.IsDesignerOnline">
			<summary>Gets or sets a Boolean indicating whether the designer is working in an offline mode or online mode.</summary>
			<returns>true if the designer is working in an offline mode; false if the designer is working in online mode.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI">
			<summary>Defines the collection of methods and properties called by the SSIS Designer to initialize and display the user interface associated with log providers.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.Edit(System.Windows.Forms.IWin32Window)">
			<summary>Opens a user interface to edit a task.</summary>
			<returns>true indicates that the task properties were modified.</returns>
			<param name="parentWindow">The IWin32Window interface of the designer hosting the task.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.GetEnumerableValues">
			<summary>Returns an ArrayList of all the connection managers.</summary>
			<returns>An ArrayList.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.Initialize(Microsoft.SqlServer.Dts.Runtime.LogProvider,Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.Variables,System.IServiceProvider)">
			<summary>Initializes the log provider user interface.</summary>
			<param name="logProvider">The log provider being used.</param>
			<param name="variables">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see> collection for the package.</param>
			<param name="connections">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see> collection for the package.</param>
			<param name="serviceProvider">The object used to get registered services. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.SetValue(System.String,System.Int32)">
			<summary>Allows the user interface to do special handling for the &lt;New Connection...&gt; user interface.</summary>
			<param name="configString">The configuration string to use for the log provider. </param>
			<param name="index">The index in the ArrayList returned from <see cref="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.GetEnumerableValues"></see> pointing to the log entry to be modified.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.IsEditable">
			<summary>Indicates whether the <see cref="P:Microsoft.SqlServer.Dts.Runtime.LogProvider.ConfigString"></see> property on the log provider is editable. </summary>
			<returns>true if the <see cref="P:Microsoft.SqlServer.Dts.Runtime.LogProvider.ConfigString"></see> property on the log provider is editable.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.IDtsLogProviderUI.IsEnumerable">
			<summary>Indicates whether the user interface is modal or enumerable.</summary>
			<returns>true indicates enumerable; false if modal.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI">
			<summary>Defines the collection of methods and properties called by the SSIS Designer to initialize and display the user interface associated with a task.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.Delete(System.Windows.Forms.IWin32Window)">
			<summary>Deletes an existing task from the package.</summary>
			<param name="parentWindow">The name of the parent window.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.Initialize(Microsoft.SqlServer.Dts.Runtime.TaskHost,System.IServiceProvider)">
			<summary>Associates a user interface with its task. Called by the client, which is usually the designer application.</summary>
			<param name="taskHost">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see> of the task.</param>
			<param name="serviceProvider">The IServiceProviderhttp://go.microsoft.com/fwlink/?LinkId=33994 interface provided by the designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsTaskUI.New(System.Windows.Forms.IWin32Window)">
			<summary>Adds a new task to a package.</summary>
			<param name="parentWindow">The name of the parent window.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService">
			<summary>Accesses existing variables or creates new variables in a package.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer)">
			<summary>Creates a new variable. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>. </returns>
			<param name="dtsContainer">The default container that the variable belongs to.</param>
			<param name="parentWindow">The System.Windows.Forms.IWin32Window of the designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,System.String)">
			<summary>Prompts for and then creates a variable for a specified window and container. This method is a helper method for working with variables in a user interface.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</returns>
			<param name="defaultName">The default name of the variable.</param>
			<param name="dtsContainer">The default container that the variable belongs to.</param>
			<param name="parentWindow">The System.Windows.Forms.IWin32Window of the designer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.IDtsVariableService.PromptAndCreateVariable(System.Windows.Forms.IWin32Window,Microsoft.SqlServer.Dts.Runtime.DtsContainer,System.String,System.String,System.Type)">
			<summary>Prompts for and creates a variable for the specified window, container, and namespace. This method is a helper method for working with variables in a user interface.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</returns>
			<param name="defaultName">The default name of the variable.</param>
			<param name="defaultType">The default type of the variable.</param>
			<param name="dtsContainer">The default container that the variable belongs to.</param>
			<param name="defaultNamespace">The default namespace that the variable will belong in.</param>
			<param name="parentWindow">The System.Windows.Forms.IWin32Window of the designer.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs">
			<summary>Provides the context of arguments that the SSIS Designer displays in the Multifile Connection Manager Editor when creating or editing File connection managers that can reference multiple files.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.Collections.ICollection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see> class, using a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see> usage types specific to this connection. </summary>
			<param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see> enumerations available to choose from. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see> class using a String to specify what file types are valid for this connection.</summary>
			<param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs.#ctor(System.String,System.Collections.ICollection)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.MultiFileConnectionManagerUIArgs"></see> class, initializing both the file type filter and the usage types.</summary>
			<param name="supportedUsageTypes">A collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see> enumerations for usage types. </param>
			<param name="fileFilter">A file filter restricts the types of files offered in a user interface, such as *.txt.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint">
			<summary>Provides information about how expensive it is to recreate the user interface for a task. The lifetime hint enumeration is used as an attribute on a task.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint.RecreationExpensive">
			<summary>Recreating the user interface is expensive.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint.RecreationInexpensive">
			<summary>Recreating the user interface is not expensive.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute">
			<summary>Defines a task lifetime attribute that specifies how expensive a user interface is to re-create.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute.#ctor(Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute"></see> class. </summary>
			<param name="taskUILifetimeHint">A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint"></see> enumeration that describes how expensive this user interface is to re-create. </param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHintAttribute.TaskUILifetimeHint">
			<summary>Provides an estimate, stored as a lifetime hint, about how expensive it is to re-create a user interface. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Design.TaskUILifetimeHint"></see> enumeration, with valid values of RecreationExpensive and RecreationInexpensive.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SQLServer.DTSRuntimeWrap.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.DTSRuntimeWrap</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Runtime.Wrapper">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Runtime.Wrapper"></see> namespace provides the classes and interfaces used to create Control Flow components in the runtime. This assembly is a Primary Interop Assembly (PIA) for the namespace <see cref="N:Microsoft.SqlServer.Dts.Runtime"></see>, which is the assembly Microsoft.SqlServer.ManagedDTS (in microsoft.sqlserver.manageddts.dll). The classes in this namespace should not be instantiated. Instead, use the classes found in the <see cref="N:Microsoft.SqlServer.Dts.Runtime"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Application">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CreateFolderOnDtsServer(System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.CreateFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetPackageRoles(System.String,System.String,System.String@,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetServerInfo(System.String,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.GetServerVersionEx(System.String,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel@,System.String@,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFolderFromDtsServer(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFolderFromSQLServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFromDtsServer(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RemoveFromSQLServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.RenameFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SavePackage(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToSQLServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToSQLServerAs(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SaveToXML(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass.SetPackageRoles(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdo">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNet">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcel">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtp">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHost">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHostClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttp">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerHttpClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFileClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbc">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOdbcClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAP">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOLAPClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDb">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerOleDbClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType">
			<summary>Indicates the data type of columns in data flow components and the data flow buffer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BOOL">
			<summary>A Boolean value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_BOOL">
			<summary>A pointer to a Boolean value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_CY">
			<summary>A pointer to a currency value. This data type is an 8-byte value with a scale of 4 and a maximum precision of 19.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DATE">
			<summary>A pointer to a date structure that consists of year, month, date, and hour.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBDATE">
			<summary>A pointer to a date structure that consists of year, month, and date.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIME">
			<summary>A pointer to a time structure that consists of hour, minute, and second.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DBTIMESTAMP">
			<summary>A pointer to a timestamp structure that consists of year, month, hour, minute, second, and fraction.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_DECIMAL">
			<summary>A pointer to an exact numeric value with a fixed precision and a fixed scale. This data type is a 12-byte value with a separate sign, a scale of 0 to 28, and a maximum precision of 29.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_FILETIME">
			<summary>A pointer to a 64-bit value that represents the number of 100-nanosecond intervals since January 1, 1601.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_GUID">
			<summary>A pointer to a GUID.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I1">
			<summary>A pointer to a 1-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I2">
			<summary>A pointer to a 2-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I4">
			<summary>A pointer to a 4-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_I8">
			<summary>A pointer to an 8-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_NUMERIC">
			<summary>A pointer to an exact numeric value with a fixed precision and scale. This data type is a 16-byte value with a separate sign, a scale of 0 to 38, and a maximum precision of 38.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_R4">
			<summary>A pointer to a single-precision floating-point value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_R8">
			<summary>A pointer to a double-precision floating-point value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI1">
			<summary>A pointer to a 1-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI2">
			<summary>A pointer to a 2-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI4">
			<summary>A pointer to a 4-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYREF_UI8">
			<summary>A pointer to an 8-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_BYTES">
			<summary>A binary data value. The length is variable and the maximum length is 8,000 bytes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_CY">
			<summary>A currency value. This data type is an 8-byte value with a scale of 4 and a maximum precision of 19.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DATE">
			<summary>A date structure that consists of year, month, day, and hour.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBDATE">
			<summary>A date structure that consists of year, month, and date.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIME">
			<summary>A time structure that consists of hour, minute, and second.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DBTIMESTAMP">
			<summary>A timestamp structure that consists of year, month, hour, minute, second, and fraction.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_DECIMAL">
			<summary>An exact numeric value with a fixed precision and a fixed scale. This data type is a 12-byte value with a separate sign, a scale of 0 to 28, and a maximum precision of 29.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_EMPTY">
			<summary>A data type that does not have a value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_FILETIME">
			<summary>A 64-bit value that represents the number of 100-nanosecond intervals since January 1, 1601.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_GUID">
			<summary>A globally unique identifier (GUID).</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I1">
			<summary>A 1-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I2">
			<summary>A 2-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I4">
			<summary>A 4-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_I8">
			<summary>An 8-byte, signed integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_IMAGE">
			<summary>A binary value with a maximum size of 231–1 (2,147,483,647) bytes.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NTEXT">
			<summary>A Unicode character string with a maximum length of 2^30–1 (1,073,741,823) characters.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NULL">
			<summary>A data type with a value of NULL.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_NUMERIC">
			<summary>An exact numeric value with a fixed precision and scale. This data type is a 16-byte value with a separate sign, a scale of 0 to 38, and a maximum precision of 38.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_R4">
			<summary>A single-precision floating-point value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_R8">
			<summary>A double-precision floating-point value.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_STR">
			<summary>A null-terminated ANSI/MBCS character string.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_TEXT">
			<summary>An ANSI/MBCS character string with a maximum length of 231–1 (2,147,483,647) characters.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI1">
			<summary>A 1-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI2">
			<summary>A 2-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI4">
			<summary>A 4-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_UI8">
			<summary>An 8-byte, unsigned integer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType.DT_WSTR">
			<summary>A null-terminated Unicode character string.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT">
			<summary>Specifies the data type of the column. This is a value from the DataType enumeration that determines the type of DTP_VARIANT structure stored in each cell of this column. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.dwLength">
			<summary>Represents an unsigned integer that contains the length of the data in the union.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.u">
			<summary>Contains the data union.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT.vt">
			<summary>Represents an enumeration of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.Computer">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.DataBytes">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.ExecutionID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.MessageText">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.Operator">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.SourceID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER.SourceName">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventColumnFilter"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSBreakpointHitTest">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSBreakpointHitTest"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSCheckpointUsage">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSCheckpointUsage"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSConfigurationType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSConfigurationType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSEventFilterKind">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSEventFilterKind"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion">
			<summary>This enumeration maps the Extended Properties from the connection string in an OLEDB provider to the correct version of the Excel connection manager. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass"></see>. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_3">
			<summary>Uses Excel Version 3.0.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_4">
			<summary>Uses Excel Version 4.0.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_5">
			<summary>Uses Excel Version 5.0.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExcelVersion.DTSExcelVer_8">
			<summary>Uses Excel 97 through Excel 2000.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecResult">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecStatus"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecutionLocation">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecutionLocation"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSFileConnectionUsageType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSFileConnectionUsageType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSForcedExecResult">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSForcedExecResult"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSLogEntryFrequency"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLoggingMode">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSLoggingMode"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectHostType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSObjectHostType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSObjectReferenceType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageInformationFlags">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPackageInfoFlags"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPackageType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPackageType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPipelineComponentType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPipelineComponentType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPrecedenceEvalOp">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPrecedenceEvalOp"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPriorityClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPriorityClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProductLevel"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSPropertyKind">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSPropertyKind"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProtectionLevel">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProtectionLevel"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderSubType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProviderSubType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProviderType">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProviderType"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSSignatureStatus">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSSignatureStatus"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSTransactionOption">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSTransactionOption"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandler">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandlerClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandler"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluatorClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHost">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.InitializeForEachEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorHost"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachEnumeratorHostClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorHost"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumerator">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.ExportXML(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachItemEnumeratorClass.ImportXML(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoop">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForEachLoopClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoop">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForLoop"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.Close">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.CreateRemoteDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.DeleteFiles(System.String[])">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.DeleteRemoteDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.GetListing(System.String[]@,System.String[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.ReceiveFiles(System.String[],System.String,System.Boolean,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.SendFiles(System.String[],System.String,System.Boolean,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class.SetWorkingDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FtpClientConnection"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.HttpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.HttpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class.DownloadFile(System.String,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.HttpClientConnection"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class.ShowCertificateDialog(System.Int64)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.HttpClientConnection"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.CreateFolderOnDtsServer(System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.CreateFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.GetPackageRoles(System.String,System.String,System.String@,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.GetServerInfo(System.String,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.GetServerVersionEx(System.String,System.UInt32@,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel@,System.String@,System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RemoveFolderFromDtsServer(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RemoveFolderFromSQLServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RemoveFromDtsServer(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RemoveFromSQLServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.RenameFolderOnSQLServer(System.String,System.String,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SavePackage(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SaveToSQLServer(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SaveToSQLServerAs(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90,System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SaveToXML(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSApplication90.SetPackageRoles(System.String,System.String,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ApplicationClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90.ClearBreakpointTargets">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90.RemoveBreakpointTarget(System.Int32)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite90.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite90.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite90.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget90.ResetHitCount">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTargets90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireCustomEvent(System.String,System.String,System.Object[]@,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireError(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireProgress(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireQueryCancel(System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist90.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentPersist90.SaveToXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentPersist"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90.InsertAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90.InsertBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90.MoveAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90.MoveBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfiguration90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConfigurations90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager90.ReleaseConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager90.SetQualifier(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerDatabaseParameters90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerExcel90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerExcelClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFile90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFile90">
			<summary>This interface is used by the native connection managers. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.FlatFileColumn"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns90">
			<summary>This class is the enumerator over the collection of Columns. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns90.MoveAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn90)">
			<summary>This class is the enumerator over the collection of Columns. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns90.MoveBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumn90)">
			<summary>This class is the enumerator over the collection of Columns. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFlatFileColumns90.Remove(System.Object)">
			<summary>This class is the enumerator over the collection of Columns. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFlatFileClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerMultiFlatFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerFtp90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerFtpClass"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerInit90">
			<summary>This interface is inherited by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManagerInit90.InitializeConnectionManager(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90)">
			<summary>This interface is inherited by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerAdoNetClass"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ConnectionManagerSqlMobileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsContainer"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer90.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsContainer"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDataTypeInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSDBProviderInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects90.Next">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEnumReferencedObjects90.Reset">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EnumReferencedObjects"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSError90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsError"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsErrors"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSErrors90.Clear">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsErrors"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandler90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.EventHandler"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandlers"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventHandlers90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsEventHandlers"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfos"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90.Add(System.String,System.String,System.Boolean,System.String[]@,System.UInt16[]@,System.String[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfos"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnBreakpointHit(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointSite90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointTarget90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnCustomEvent(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost90,System.String,System.String,System.Object[]@,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnError(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnExecutionStatusChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSExecStatus,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnInformation(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnPostExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnPostValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnPreExecute(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnPreValidate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnProgress(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost90,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnQueryCancel(System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnTaskFailed(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnVariableValueChanged(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSContainer90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnWarning(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventsProvider90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.EventsProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Executable"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Executables"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables90.Join(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutable90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Executables"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutables90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Executables"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionLocation90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExecutionMetrics90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSExecutionMetrics"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator90.Evaluate(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90,System.Object@,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExpressionEvaluator90.IsBooleanExpression(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ExpressionEvaluator"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperties"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperties90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperties"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSExtendedProperty90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ExtendedProperty"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSForEachEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumerator90.InitializeForEachEnumerator(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSForEachEnumerator"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachEnumeratorInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItem"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItem90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItem"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator90.ExportXML(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemEnumerator90.ImportXML(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemEnumerator"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItems"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItems90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItems"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemsProvider90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValueEnumerator"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachItemValue90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Enumerators.Item.ForEachItemValue"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachLoop90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachLoop"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMapping90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMapping"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMappings"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForEachVariableMappings90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachVariableMappings"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSForLoop90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ForLoopClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.Close">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.CreateRemoteDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.DeleteFiles(System.String[])">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.DeleteRemoteDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.GetListing(System.String[]@,System.String[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.ReceiveFiles(System.String[],System.String,System.Boolean,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.SendFiles(System.String[],System.String,System.Boolean,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSFtpClientConnection90.SetWorkingDirectory(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.FTPClientConnection90Class"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHasInternalProperties90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHasInternalProperties90.GetInternalProperties(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection90.DownloadFile(System.String,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSHttpClientConnection90.ShowCertificateDialog(System.Int64)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.HttpClientConnection90Class"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90.FireError(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfos"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90.Add(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSLogEntryFrequency)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfos"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogEntryInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LoggingOptions"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions90.GetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LoggingOptions"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLoggingOptions90.SetColumnFilter(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_EVENT_COLUMN_FILTER)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LoggingOptions"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider90.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider90.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInit90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderBase"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviderInit90.InitializeLogProvider(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderBase"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviders"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProviders90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviders"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedForEachEnumeratorWrapper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedForEachEnumeratorWrapper90.SetManagedForEachEnumerator(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedForEachEnumeratorWrapper"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90.CloseManagedConnection(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90.DecryptDocument(System.String@,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90.EncryptDocument(System.String@,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90.OpenAssembly(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTS_MANAGED_INFO_TYPE)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedHelper90.SignDocument(System.String@,System.Int64,System.String,System.Int32,System.String,System.Int32)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper.ManagedPropertyHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper90.ReflectOnObject(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper.ManagedPropertyHelper"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedPropertyHelper90.SetPropertyValue(System.Object,System.Int32,System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagedHelper.ManagedPropertyHelper"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedSerializer90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ManagerSerializer"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSManagedTask90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSManagedTask"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSName90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSName"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectHost90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90.AddReference(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType,System.Int32@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90.DestroyList(System.Int32)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90.RemoveReference(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSObjectReferenceType,System.Int32@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90.SetListInfo(System.Int32,System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectVersionUpdate90.Update(System.String@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles90">
			<summary>Defines the native interface for the ODBC connection. A reference to this interface is returned from the <see cref="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.AcquireConnection(System.Object)"></see> method when the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> is of type ODBC. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles90.cstr">
			<summary>Returns a String that contains the completed connection string returned by the driver.</summary>
			<returns>A String that contains the connection string.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles90.hdbc">
			<summary>Returns an Integer that contains the ODBC database connection handle.</summary>
			<returns>An Integer that contains the ODBC database connection handle.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSODBCHandles90.henv">
			<summary>Returns an Integer that contains the ODBC environment handle.</summary>
			<returns>An Integer that contains the ODBC environment handle.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.ExportConfigurationFile(System.String)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.ImportConfigurationFile(System.String)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.LoadUserCertificateByHash(System.Byte[]@)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.LoadUserCertificateByName(System.String)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.PermitUnencryptedSave(System.Boolean)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackage90.ProcessConfiguration(System.String,System.Object)">
			<summary>This interface is implemented by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package"></see> and <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral"></see> interfaces.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackageInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos"></see>. </summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPackagePath90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPackagePath"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist90.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPersist90.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPersist"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPipelineComponentInfos90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraint90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PrecedenceConstraints"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPrecedenceConstraints90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PrecedenceConstraints"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProductLevel90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTSProductLevel"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperties"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperties90.Add(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperties"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPropertiesProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSPropertiesProvider90.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSPropertiesProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty90.SetExport(System.Object,System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty90.SetExpression(System.Object,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSProperty90.SetValue(System.Object,System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsProperty"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackage90.Stop">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRunningPackages90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90">
			<summary>This interface is inherited by native classes that are containers, and implemented by all objects in the <see cref="N:Microsoft.SqlServer.Dts.Runtime"></see> namespace. For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsObject"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders90.Add(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogProvider90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSelectedLogProviders90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.SelectedLogProviders"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSequence90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend90.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSSuspend90.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSSuspend"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTask90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskHost90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfo90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInfos90">
			<summary> For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfos"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInit90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSTaskInit90.InitializeTask(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnections90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSInfoEvents90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogging90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSUnsafeVariables90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSUnsafeVariables90.SetUnsafeVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariable90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.GetVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.LockForRead(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.LockForWrite(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.LockOneForRead(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.LockOneForWrite(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90.Reset">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90.Remove(System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90.Unlock">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variables"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWaitForMe90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Task"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarning90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarning"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings90">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarnings"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSWarnings90.Clear">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.DtsWarnings"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderEventLogClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHost">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderHostClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfiler">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLProfilerClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServer">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderSQLServerClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderTextFileClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFile">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.CloseLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.Log(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.LogProviderXMLFileClass.OpenLog">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProvider"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Package">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ExportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ImportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadUserCertificateByHash(System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.LoadUserCertificateByName(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.PermitUnencryptedSave(System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ProcessConfiguration(System.String,System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutral">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ExportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ImportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadUserCertificateByHash(System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.LoadUserCertificateByName(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.PermitUnencryptedSave(System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ProcessConfiguration(System.String,System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageNeutralClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemote">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.ExportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.ImportConfigurationFile(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.LoadUserCertificateByHash(System.Byte[]@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.LoadUserCertificateByName(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.PermitUnencryptedSave(System.Boolean)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.ProcessConfiguration(System.String,System.Object)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PackageRemoteClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraint">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PrecedenceConstraint"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.PrecedenceConstraintClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.PrecedenceConstraint"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Sequence">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.SequenceClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Sequence"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreator">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskCreatorClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHost">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSBreakpointManager90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSSuspend90_ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.IDTSSuspend90_SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.RegenerateID">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.ResumeExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SetExpression(System.String,System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.TaskHostClass.SuspendExecution">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskHost"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.Variable">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.LoadFromXML(System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableClass.SaveToXML(System.Object,System.Object,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Variable"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenser">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.#ctor">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.Contains(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
			<param name="Variable">The name of the variable to locate in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.GetVariables(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockForRead(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockForWrite(System.String)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockOneForRead(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.LockOneForWrite(System.String,Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariables90@)">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.VariableDispenserClass.Reset">
			<summary>For more information, see <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser"></see>.</summary>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SqlServer.DTSPipelineWrap.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.DTSPipelineWrap</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Pipeline.Wrapper">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Pipeline.Wrapper"></see> namespace provides the classes and interfaces used to create custom Data Flow components and to automate the Data Flow task.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapper">
			<summary>Configures the properties and column collections of a component.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass">
			<summary>Represents the design-time instance of a data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.#ctor">
			<summary>Instantiates an instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.AcquireConnections(System.Object)">
			<summary>Establishes a connection to a connection manager.</summary>
			<param name="pTransaction">The transaction the connection is participating in.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.DeleteExternalMetadataColumn(System.Int32,System.Int32)">
			<summary>Deletes the external metadata column at the specified index from the collection of external metadata columns.</summary>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.DeleteInput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</summary>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.DeleteOutput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see> collection of the component.</summary>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.DeleteOutputColumn(System.Int32,System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> collection of the component.</summary>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> to delete.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.DescribeRedirectedErrorCode(System.Int32)">
			<summary>Returns the description of an error code defined by the component.</summary>
			<returns>A String that contains a description for the error code specified by the errorCode parameter.</returns>
			<param name="hrErrorCode">The error code whose description is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.GetEnumerationCollection(System.String)">
			<summary>Returns the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> specified by the </summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see>.</returns>
			<param name="bstrEnumName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> object that is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.InsertExternalMetadataColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Inserts a new external metadata column into the collection of external metadata columns at the specified index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</returns>
			<param name="bstrName">The name of the new external metadata column.</param>
			<param name="bstrDescription">The description of the new external metadata column.</param>
			<param name="lExternalMetadataColumnIndex">The index at which the new external metadata column should be inserted into the collection.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.InsertInput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> of the component.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
			<param name="eInsertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by inputID.</param>
			<param name="lInputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.InsertOutput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object to the component.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object</returns>
			<param name="eInsertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object specified by outputID parameter.</param>
			<param name="lOutputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.InsertOutputColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object and inserts it into the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> of the component.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
			<param name="bstrName">Specifies the value assigned to the Name property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="lOutputColumnIndex">Specifies the location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="bstrDescription">Specifies the value assigned to the Description property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="lOutputID">Specifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object to add the column to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.MapInputColumn(System.Int32,System.Int32,System.Int32)">
			<summary>Establishes a relationship between an input column and a corresponding external metadata column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that the input column is mapped to.</returns>
			<param name="lExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
			<param name="lInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.MapOutputColumn(System.Int32,System.Int32,System.Int32,System.Boolean)">
			<summary>Establishes a relationship between an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> column and a corresponding <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> that is mapped to the output column.</returns>
			<param name="lExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="bMatch">Specifies whether the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> column should be set to match the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.OnDeletingInputColumn(System.Int32,System.Int32)">
			<summary>Called when an IDTSInputColunn90 object is being deleted from an IDTSInputColumnCollection90 of the component. </summary>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
			<param name="lInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object that is being deleted.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.OnInputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object of the component is attached to a downstream component.</summary>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.OnInputPathDetached(System.Int32)">
			<summary>Called when the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object of the component is disconnected from an upstream component.</summary>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that is disconnected.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.OnOutputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object of the component is attached to a downstream component.</summary>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that is attached.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.ProvideComponentProperties">
			<summary>Initializes or resets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.ReinitializeMetaData">
			<summary>Called to allow the component to repair problems with the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object that were identified by the component during the <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.Validate"></see> method.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.ReleaseConnections">
			<summary>Frees the connections established by the component during <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.AcquireConnections(System.Object)"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetComponentProperty(System.String,System.Object)">
			<summary>Assigns a value to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of the component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="vValue">The object assigned to the Value property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetExternalMetadataColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of the specified external metadata column.</summary>
			<param name="lPrecision">The numeric precision of the new external metadata column.</param>
			<param name="eDataType">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that contains the data type of the new external metadata column.</param>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lScale">The numeric scale of the new external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
			<param name="lCodePage">The code page of the new external metadata column.</param>
			<param name="lLength">The length of the new external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetExternalMetadataColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Sets an individual property on an external metadata column.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> that contains the modified property value.</returns>
			<param name="bstrPropertyName">The name of the property whose value is being set.</param>
			<param name="vtValue">The value to assign to the property.</param>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetInputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="vValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
			<param name="lInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetInputProperty(System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object in the component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</returns>
			<param name="vValue">The value to assign to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object whose custom property is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetOutputColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<param name="lPrecision">The total number of digits in the column.</param>
			<param name="lCodePage">The character set of the output column.</param>
			<param name="eDataType">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> to assign to the column.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lScale">The number of decimal places (digits to the right of the decimal point) allowed in the column.</param>
			<param name="lLength">The length of the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetOutputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</returns>
			<param name="vValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> whose property is set.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that contains the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetOutputProperty(System.Int32,System.String,System.Object)">
			<summary>Call this method to set the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object of the component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value is set.</returns>
			<param name="vValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value is set.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object whose property is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.SetUsageType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> of the component and sets the UsageType property of the column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> whose usage type is set, or null if the column was removed from the collection.</returns>
			<param name="eUsageType">The usage type of the input column.</param>
			<param name="pIDTSVirtualInputObject">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapperClass.Validate">
			<summary>Verifies that the component is configured correctly and ready to execute.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL">
			<summary>Contains metadata that describes the data stored in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.DataType">
			<summary>Specifies the data type of the values stored in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lCodePage">
			<summary>Specifies the character set used to interpret the data in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lLengthOffset">
			<summary>Gets the number of bytes from the beginning of a row to the length of the column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lMaxLength">
			<summary>Indicates the maximum length of the data stored in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lOffset">
			<summary>Indicates the number of bytes from the beginning of a row to where the column data begins.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lPrecision">
			<summary>Indicates the number of decimal places of the numeric data in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lScale">
			<summary>Indicates the scale of numeric data in a column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL.lStatusOffset">
			<summary>Indicates the offset from the beginning of a buffer row to the status value for a column.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM">
			<summary>Specifies the status for a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object. </summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_BADACCESSOR">
			<summary>Specifies that the deferred accessor validation for the column failed.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_BADSTATUS">
			<summary>Specifies that the status value given to the provider was not valid.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_CANTCONVERTVALUE">
			<summary>Specifies that the value cannot be converted because of potential data loss.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_CANTCREATE">
			<summary>Specifies that the status value for the column value cannot be created.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_DATAOVERFLOW">
			<summary>Specifies that conversion failed because the data value overflowed the specified type.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_DEFAULT">
			<summary>Specifies that the provider used the default value for an input parameter in a procedure.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_INTEGRITYVIOLATION">
			<summary>Specifies that the value for the column violated the integrity constraints for the column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_ISNULL">
			<summary>Specifies that the column contains no data and is null.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_OK">
			<summary>Specifies that the column contains data.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_PERMISSIONDENIED">
			<summary>Specifies that permission to write to the column was denied.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_SCHEMAVIOLATION">
			<summary>Specifies that the value for the column violated the schema's constraint for the column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_SIGNMISMATCH">
			<summary>Specifies that a signed value was provided for an unsigned type.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_TRUNCATED">
			<summary>Specifies that the variable-length data was truncated.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTPSTATUSENUM.DTPSTATUS_UNAVAILABLE">
			<summary>Specifies that the status of the column is not available.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferFlags">
			<summary>Contains values that are used to register a buffer with the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferFlags.BUFF_INIT">
			<summary>Specifies that the columns in new buffers of this type are initialized with zeros.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferFlags.BUFF_NOOLEDB">
			<summary>Specifies that the buffer does not contain status information in its rows.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferHandlePresetValues">
			<summary>Specifies a defined set of buffer handles.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferHandlePresetValues.H_ALL">
			<summary>Specifies that the handle is for all rows or all columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManager">
			<summary>Manages <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass">
			<summary>Creates and manages <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.CreateBuffer(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object based on the specified buffer type.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="pOwner">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component that owns the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</param>
			<param name="hBufferType">The ID of the registered <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.CreateFlatBuffer(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> of the specified size.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="pOwner">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object of the component that owns the buffer.</param>
			<param name="lSize">The size, in bytes, of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.FindColumnByLineageID(System.Int32,System.Int32)">
			<summary>Gets the location of a column in the specified <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
			<returns>An Integer that indicates the location, by index, of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</returns>
			<param name="nLineageID">The lineage ID of the column to locate in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
			<param name="hBufferType">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object that contains the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.GetBLOBObject(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90@)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> that is used to manipulate binary large objects (BLOBs).</summary>
			<param name="ppNewObject">The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.GetColumnCount(System.Int32)">
			<summary>Gets the number of columns in the specified registered buffer type.</summary>
			<returns>An Integer that specifies the number of columns defined for the registered <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="hBufferType">The ID of the registered buffer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.GetColumnInfo(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL@)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> structure for a column in the specified buffer definition.</summary>
			<param name="hCol">The column handle.</param>
			<param name="pCol">A reference parameter where the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> for the column is stored.</param>
			<param name="hBufferType">The ID of the buffer definition.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.GetRowWidth(System.Int32)">
			<summary>Gets the size of the row defined for the buffer type definition.</summary>
			<returns>An unsigned integer that specifies the size, in bytes, of the row defined by the buffer type definition.</returns>
			<param name="hBufferType">The specified buffer type definition whose row size is returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferManagerClass.RegisterBufferType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL@,System.Int32,System.UInt32)">
			<summary>Registers a buffer type with the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see>.</summary>
			<returns>An unsigned integer that contains the ID of the buffer type.</returns>
			<param name="cCols">The number of columns in the buffer type definition.</param>
			<param name="rgCols">A pointer to the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> structures that describe each of the columns in the buffer type definition.</param>
			<param name="lMaxRows">The maximum number of rows that the buffer can hold.</param>
			<param name="dwCreationFlags">A combination of the values in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferFlags"></see>.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSCustomPropertyExpressionType">
			<summary>Indicates whether the value of a custom property of a data flow component can be specified by using property expressions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSCustomPropertyExpressionType.CPET_NONE">
			<summary>The value of the custom property cannot be specified by using property expressions.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSCustomPropertyExpressionType.CPET_NOTIFY">
			<summary>The value of the custom property can be specified by using property expressions.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement">
			<summary>Specifies the location to insert a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in the collection.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement.IP_AFTER">
			<summary>Specifies to insert the object after the specified input or output object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement.IP_BEFORE">
			<summary>Specifies to insert the object before the specified input or output object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType">
			<summary>Specifies the objects that implement the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> interface in the data flow object model.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_COMPONENT">
			<summary>Specifies an object as a data flow component that implements the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90"></see> and <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90"></see> interfaces.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_COMPONENTVIEWER">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_DESTINATIONADAPTER">
			<summary>Specifies that an object is a destination component having one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects and zero <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_EXTERNALMETADATACOLUMN">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_INPUT">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_INPUTCOLUMN">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_OUTPUT">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_OUTPUTCOLUMN">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_PATH">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_PROPERTY">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_RUNTIMECONNECTION">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_SOURCEADAPTER">
			<summary>Specifies that an object is a source component that has one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects and zero <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_TRANSFORM">
			<summary>Specifies that an object is a transform component that has one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects and one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_UNSPECIFIED">
			<summary>Specifies that the object type was unknown to the data flow engine.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_VIRTUALINPUT">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_VIRTUALINPUTCOLUMN">
			<summary>Specifies that an object is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistenceFormat">
			<summary>Specifies the persistence format of the objects in a data flow task.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistenceFormat.PF_SQLSERVER">
			<summary>Specifies that an object is persisted in an instance of SQL Server.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistenceFormat.PF_XML">
			<summary>Specifies that the object is persisted in normal XML format.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState">
			<summary>Specifies how an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is persisted in the package XML file.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState.PS_DEFAULT">
			<summary>Specifies to persist the property directly in the package XML.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState.PS_PERSISTASCDATA">
			<summary>Specifies to wrap the property value in a CDATA section in the XML for the package.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState.PS_PERSISTASHEX">
			<summary>Specifies to store the property value as a hexadecimal value in the package XML.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPIPELINEVERSION">
			<summary>Specifies the version of the data flow engine installed on the computer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPIPELINEVERSION.DTSPIPELINE_CURRENTVERSION">
			<summary>The version of the data flow engine installed on the local computer.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition">
			<summary>Specifies how to proceed if an error or truncation occurs while processing a row.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition.RD_FailComponent">
			<summary>Specifies that the component will fail to execute.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition.RD_IgnoreFailure">
			<summary>Specifies that the component will ignore the failure and continue.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition.RD_NotUsed">
			<summary>Specifies that error row processing is not used.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition.RD_RedirectRow">
			<summary>Specifies that the row that contains the error is redirected to the error output.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType">
			<summary>Indicates how an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object is used by a component.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType.UT_IGNORED">
			<summary>The column is ignored by the component.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType.UT_READONLY">
			<summary>The component will read the values of an input column, but will not modify them.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType.UT_READWRITE">
			<summary>The component will read and write to the column data.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus">
			<summary>Specifies the return value of a call to <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.Validate"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_ISBROKEN">
			<summary>The component is incorrectly configured; typically, this indicates that a property is set incorrectly.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_ISCORRUPT">
			<summary>The component is irreparably damaged and must be completely reset. The designer calls the component's <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.ProvideComponentProperties"></see> method in response.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_ISVALID">
			<summary>The component is correctly configured and ready for execution.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_NEEDSNEWMETADATA">
			<summary>The component's metadata is outdated or corrupt, and a call to <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.ReinitializeMetaData"></see> will repair the component.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90">
			<summary>Used to read and write bytes to a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.AddData(System.Byte@,System.UInt32)">
			<summary>Adds bytes to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> object.</summary>
			<param name="dwLength">The number of bytes.</param>
			<param name="lpData">A pointer to the bytes to add to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.GetData(System.UInt32,System.Byte@,System.UInt32,System.UInt32@)">
			<summary>Retrieves the specified number of bytes from an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> object.</summary>
			<param name="dwLength">The number of bytes to retrieve.</param>
			<param name="lpPointer">A pointer to the bytes returned by the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</param>
			<param name="lpdwWritten">An out parameter that indicates the number of bytes written to the lpPointer parameter.</param>
			<param name="dwOffset">The location to begin retrieving the bytes.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.GetStream">
			<summary>Gets an <see cref="T:IStream"></see> object that can be used to read or write bytes in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</summary>
			<returns>An <see cref="T:IStream"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.PutData(System.UInt32,System.Byte@,System.UInt32,System.UInt32@)">
			<summary>Adds bytes in a specific location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see></summary>
			<param name="dwLength">The number of bytes to write.</param>
			<param name="lpdwRead">The number of bytes written to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</param>
			<param name="lpPointer">A pointer to the byte data to add to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</param>
			<param name="dwOffset">The location to begin writing the bytes.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.ResetData">
			<summary>Empties the bytes stored by an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.SetFromStream(Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream)">
			<summary>Adds bytes to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> from an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream"></see> object.</summary>
			<param name="pISequentialStream">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream"></see> that contains the bytes to add to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.Length">
			<summary>Gets the number of bytes stored in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see>.</summary>
			<returns>An Integer that specifies the number of bytes stored in the binary large object (BLOB).</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90.SpoolThreshold">
			<summary>Gets or sets the number of bytes to store in memory before writing to a temporary file.</summary>
			<returns>An Integer that indicates how many bytes are stored in memory before writing to a temporary file.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90">
			<summary>Represents an in-memory, two-dimensional storage object that contains rows and columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.AddBLOBData(System.Int32,System.Int32,System.Byte@,System.UInt32)">
			<summary>Appends byte data to a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="dwLength">The number of bytes to write.</param>
			<param name="hCol">The column handle.</param>
			<param name="lpData">A pointer to the bytes that are written to the column.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.AddRow(System.IntPtr)">
			<summary>Adds a new row to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
			<returns>The handle for the newly created row.</returns>
			<param name="ppRowStart">A pointer to the beginning of the new row in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.Clone(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90)">
			<summary>Creates a private copy of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object that is a copy of the original buffer.</returns>
			<param name="pOwner">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component creating the cloned buffer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.DirectErrorRow(System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sends a row in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> whose <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsErrorOut"></see> property is true.</summary>
			<param name="lErrorColumn">The index of the column that caused the error condition.</param>
			<param name="lErrorCode">The component defined error code that identifies the error condition.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object the row is sent to.</param>
			<param name="hRow">The handle to the row being directed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.DirectRow(System.Int32,System.Int32)">
			<summary>Sends a row in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</summary>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBLOBData(System.Int32,System.Int32,System.UInt32,System.Byte@,System.UInt32,System.UInt32@)">
			<summary>Retrieves an array of bytes from a binary large object (BLOB) stored in a column of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="dwLength">The number of bytes to retrieve from the column.</param>
			<param name="dwOffset">The location in the byte data stored in the column from which to begin reading bytes.</param>
			<param name="hCol">The column handle.</param>
			<param name="lpPointer">A reference parameter that points to the first byte in the array of bytes that are retrieved.</param>
			<param name="lpdwWritten">An out parameter that indicates the number of bytes written to the lpPointer parameter.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBLOBLength(System.Int32,System.Int32,System.UInt32@)">
			<summary>Gets the number of bytes contained in a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hCol">The handle of the column in the row.</param>
			<param name="pdwBytes">An out parameter that contains the number of bytes in the row.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBLOBObject(System.Int32,System.Int32)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> that is used to read and write the bytes in a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> object.</returns>
			<param name="hCol">The handle of the column.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBLOBStream(System.Int32,System.Int32)">
			<summary>Gets an <see cref="T:IStream"></see> interface used to access the binary large object (BLOB) stored in a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>An <see cref="T:IStream"></see> interface.</returns>
			<param name="hCol">The column handle.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBoundaryInfo(System.UInt32@,System.UInt32@)">
			<summary>Gets the number of columns and the maximum number of rows that an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> can hold.</summary>
			<param name="pdwCols">An out parameter that contains the number of columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
			<param name="pdwMaxRows">The maximum number of rows that can be held in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetColumnCount">
			<summary>Gets the number of columns in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>An unsigned integer that contains the number of columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetColumnInfo(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL@)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> structure for the specified column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hCol">The column handle.</param>
			<param name="pCol">An out DTP_BUFFCOL structure.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetData(System.Int32,System.Int32)">
			<summary>Retrieves the data stored in a specified row and column of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT"></see> object that contains the data stored in the specified column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</returns>
			<param name="hCol">The handle for the column.</param>
			<param name="hRow">The handle for the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetDataByRef(System.Int32,System.Int32)">
			<summary> (Feature deprecated, see Remarks.) Gets a pointer to the data stored in a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>
														This feature will be removed in a future version of Microsoft SQL Server. Avoid using this feature in new development work, and plan to modify applications that currently use this feature.
													The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT"></see> that contains the data in the column.</returns>
			<param name="hCol">The handle of the column.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetFlatMemory">
			<summary>Gets a pointer to the bytes stored by an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>A pointer to the beginning of the bytes stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetID">
			<summary>Retrieves the ID of a buffer.</summary>
			<returns>An unsigned integer that contains the ID of the buffer.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetManager">
			<summary>Gets a buffer manager.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> for the buffer.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetRowCount">
			<summary>Gets the number of rows stored in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<returns>An unsigned integer that contains the number of rows in the buffer.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetRowDataBytes(System.Int32,System.Int32@,System.IntPtr)">
			<summary>(Feature deprecated, see Remarks.) Gets a pointer to the start of a row in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="pData">An out parameter that contains a pointer to the beginning of the row.</param>
			<param name="plCB">An out parameter that contains the number of bytes in the row.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetRowStarts(System.UInt32,System.IntPtr)">
			<summary>(Feature deprecated, see Remarks.) Use the <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetData(System.Int32,System.Int32)"></see> or <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetBLOBData(System.Int32,System.Int32,System.UInt32,System.Byte@,System.UInt32,System.UInt32@)"></see> method instead of the <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetRowStarts(System.UInt32,System.IntPtr)"></see> method.</summary>
			<param name="pbRowStarts">An out pointer that holds the address of the beginning of the row.</param>
			<param name="dwRowsRequested">The number of rows requested.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetStatus(System.Int32,System.Int32,System.UInt32@)">
			<summary>Retrieves the status information of a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="pDBStatus">The status value of the column.</param>
			<param name="hCol">The handle to the column.</param>
			<param name="hRow">The handle to the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.GetType">
			<summary>Gets the handle of a buffer type.</summary>
			<returns>An unsigned integer that contains the handle of the registered buffer type.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.IsEndOfRowset">
			<summary>Specifies whether an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> has reached the end of its collection of rows.</summary>
			<returns>true if there are more rows coming from the upstream component; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.IsNull(System.Int32,System.Int32,System.Boolean@)">
			<summary>Checks whether a specified column is null.</summary>
			<param name="pfNull">An out parameter that indicates whether the column value is null.</param>
			<param name="hCol">The handle of the column.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.LockData">
			<summary>Locks the data in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.MoveRow(System.Int32,System.Int32)">
			<summary>Moves a row in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> to a new location.</summary>
			<param name="hTo">The new location of the row.</param>
			<param name="hFrom">The current location of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.PrepareDataStatusForInsert(System.Int32)">
			<summary>Sets the status value of the columns in a range of rows.</summary>
			<param name="hRow">The handle of the row to set, or <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferHandlePresetValues.H_ALL"></see> if all the rows in the buffer are to be set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.RemoveRow(System.Int32)">
			<summary>Deletes a row from an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hRow">The handle of the row to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.ResetBLOBData(System.Int32,System.Int32)">
			<summary>Deletes the bytes stored in a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hCol">The column handle.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetBLOBFromObject(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90)">
			<summary>Assigns the data contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> to a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="pIDTSBLOBObject">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> that contains the data that is written to the column.</param>
			<param name="hCol">The column handle.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetBLOBFromStream(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream)">
			<summary>Assigns data to a binary large object (BLOB) column from a sequential stream.</summary>
			<param name="hCol">The column handle.</param>
			<param name="pIStream">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.ISequentialStream"></see> interface pointer.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetData(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DTP_VARIANT@)">
			<summary>Assigns data to a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hCol">The handle of the column.</param>
			<param name="pData">The DTP_VARIANT data assigned to the column.</param>
			<param name="hRow">The handle of the row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetEndOfRowset">
			<summary>Notifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> that the component has finished adding rows to an output <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetErrorInfo(System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the error information for a row. </summary>
			<param name="lErrorColumn">The lineage ID of the column that causes the error.</param>
			<param name="lErrorCode">The component defined error code that occurred while processing the column.</param>
			<param name="lOutputID">The ID of the error <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that the row was sent to.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SetStatus(System.Int32,System.Int32,System.UInt32)">
			<summary>Sets the status information of a column in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="dbStatus">The status information of the column.</param>
			<param name="hCol">The column handle.</param>
			<param name="hRow">The row handle.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.SwapRows(System.Int32,System.Int32)">
			<summary>Swaps the location of two rows in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</summary>
			<param name="hOther">The handle to the second row.</param>
			<param name="hOne">The handle to the first row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90.UnlockData">
			<summary>Unlocks the data in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90">
			<summary>Creates and manages <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.CreateBuffer(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> based on the specified buffer type.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="pOwner">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component that owns the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
			<param name="hBufferType">The ID of the registered <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.CreateFlatBuffer(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> of the specified size.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="pOwner">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object of the component that owns the buffer.</param>
			<param name="lSize">The size, in bytes, of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.FindColumnByLineageID(System.Int32,System.Int32)">
			<summary>Gets the location, by index, of a column in a specified <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</summary>
			<returns>An integer that indicates the location, by index, of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</returns>
			<param name="nLineageID">The lineage ID of the column to locate in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>.</param>
			<param name="hBufferType">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object that contains the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.GetBLOBObject(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90@)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> that is used to manipulate binary large objects (BLOBs).</summary>
			<param name="ppNewObject">The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBLOBObject90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.GetColumnCount(System.Int32)">
			<summary>Gets the number of columns in a specified registered buffer type.</summary>
			<returns>An integer that specifies the number of columns defined for the registered <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</returns>
			<param name="hBufferType">The ID of the registered buffer.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.GetColumnInfo(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL@)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> structure for a column in a specified buffer definition.</summary>
			<param name="hCol">The column handle.</param>
			<param name="pCol">A reference parameter where the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> for the column is stored.</param>
			<param name="hBufferType">The ID of the buffer definition.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.GetRowWidth(System.Int32)">
			<summary>Gets the size, in bytes, of the row defined for the buffer type definition.</summary>
			<returns>An unsigned integer that specifies the size, in bytes, of the row defined by the buffer type definition.</returns>
			<param name="hBufferType">The specified buffer type definition whose row size is returned.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90.RegisterBufferType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL@,System.Int32,System.UInt32)">
			<summary>Registers a buffer type with an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see>.</summary>
			<returns>An unsigned integer that contains the ID of the buffer type.</returns>
			<param name="cCols">The number of columns in the buffer type definition.</param>
			<param name="rgCols">A pointer to the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTP_BUFFCOL"></see> structures that describe each of the columns in the buffer type definition.</param>
			<param name="lMaxRows">The maximum number of rows that the buffer can hold.</param>
			<param name="dwCreationFlags">A combination of the values in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSBufferFlags"></see>.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90">
			<summary>Contains the definition of a data flow component, including the custom properties, inputs, outputs, and input and output columns defined on a data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.FireCustomEvent(System.String,System.String,System.Object[]@,System.String,System.Boolean@)">
			<summary>Raises a custom event defined by a component.</summary>
			<param name="EventName">The name of the custom event.</param>
			<param name="ppsaArguments">The array of arguments that match the arguments defined when the custom event is defined.</param>
			<param name="EventText">The text that describes the event.</param>
			<param name="pbFireAgain">Specifies whether the event should be raised again in the future.</param>
			<param name="SubComponent">The name of the component that raises the custom event.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.FireError(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>Raises an <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnError(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)"></see> event.</summary>
			<param name="pbCancel">Specifies whether execution of the component is cancelled.</param>
			<param name="SubComponent">The name of the component that raises the event.</param>
			<param name="ErrorCode">The component-defined error code.</param>
			<param name="Description">The description of the error.</param>
			<param name="HelpFile">The help file that provides more information about the error event.</param>
			<param name="HelpContext">The context ID for the error.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.FireInformation(System.Int32,System.String,System.String,System.String,System.Int32,System.Boolean@)">
			<summary>Raises an <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnInformation(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Boolean@)"></see> event.</summary>
			<param name="SubComponent">The name of the component that raises the event.</param>
			<param name="pbFireAgain">Specifies whether execution of the component is cancelled.</param>
			<param name="Description">The description of the information event.</param>
			<param name="InformationCode">The component-defined information code.</param>
			<param name="HelpFile">The help file that provides more information about the error event.</param>
			<param name="HelpContext">The context ID for the error.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.FireProgress(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)">
			<summary>Raises an <see cref="M:Microsoft.SqlServer.Dts.Runtime.IDTSEvents.OnProgress(Microsoft.SqlServer.Dts.Runtime.TaskHost,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Boolean@)"></see> event.</summary>
			<param name="pbFireAgain">true if this event should continue to be raised as task execution continues; otherwise, false.</param>
			<param name="lPercentComplete">The percentage of the task that has completed.</param>
			<param name="lProgressCountHigh">The high 32-bits of the units completed.</param>
			<param name="bstrProgressDescription">A description of the progress and status.</param>
			<param name="bstr SubComponent">Additional information about the event source.</param>
			<param name="lProgressCountLow">The low 32-bits of the units completed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.FireWarning(System.Int32,System.String,System.String,System.String,System.Int32)">
			<summary>Raises an <see cref="M:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEvents90.OnWarning(Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSRuntimeObject90,System.Int32,System.String,System.String,System.String,System.Int32,System.String)"></see> event.</summary>
			<param name="SubComponent">The name of the component that raises the warning.</param>
			<param name="Description">The description of the warning.</param>
			<param name="HelpFile">The help file that contains more information about the warning.</param>
			<param name="HelpContext">The help context ID of the warning.</param>
			<param name="WarningCode">The component-defined error code.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.GetComponentView">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90"></see> interface for a component, which supports transactional edits of the component metadata.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90"></see> interface of the component.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.GetErrorDescription(System.Int32)">
			<summary>Gets the description of an internal Integration Services error code.</summary>
			<returns>A String that contains the description of the specified error code.</returns>
			<param name="hrError">The error code whose description is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IncrementPipelinePerfCounter(System.UInt32,System.UInt32)">
			<summary>Increments a data flow performance counter.</summary>
			<param name="dwCounterID">The ID of the performance counter to increment.</param>
			<param name="dwDifference">The amount by which to increment the counter.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.Instantiate">
			<summary>Creates an instance of a component specified by the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ComponentClassID"></see> property.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.CManagedComponentWrapper"></see> class of the component.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.PostLogMessage(System.String,System.String,System.String,System.DateTime,System.DateTime,System.Int32,System.Byte[]@)">
			<summary>Writes an entry in a package log.</summary>
			<param name="bstrMessageText">The message included in the log text.</param>
			<param name="bstrEventName">The name of the log entry.</param>
			<param name="psaDataBytes">An array of bytes included with the log entry.</param>
			<param name="bstrSourceName">The name of the component that creates the log entry.</param>
			<param name="dateStartTime">The beginning time of the event.</param>
			<param name="dateEndTime">The end time of the event.</param>
			<param name="lDataCode">The data code of the log entry.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.RemoveInvalidInputColumns">
			<summary>Removes invalid <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> objects from an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.Validate">
			<summary>Invokes validation of the component metadata.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.AreInputColumnsValid">
			<summary>Gets a value that indicates whether the input columns in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> reference existing columns from the upstream component.</summary>
			<returns>true if the input columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> reference upstream columns; otherwise, false. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ComponentClassID">
			<summary>Gets or sets the CLSID of a component that is described by the component metadata.</summary>
			<returns>The CLSID or PROGID of the component represented by the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ContactInfo">
			<summary>Gets or sets the contact information of the developer of a component.</summary>
			<returns>A String that contains the contact information for the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.CustomPropertyCollection">
			<summary>Gets the collection of custom properties exposed by a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> collection for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.Description">
			<summary>Gets or sets the description of a component.</summary>
			<returns>A String that contains the description of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ID">
			<summary>Gets or sets the ID of a component.</summary>
			<returns>An Integer that contains the ID of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IdentificationString">
			<summary>Gets a string that uniquely identifies the component.</summary>
			<returns>A String that uniquely identifies the component metadata.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.InputCollection">
			<summary>Gets the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects for a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IsDefaultLocale">
			<summary>Gets a value that specifies whether the locale used by a component is the default locale for the computer where the component is executing.</summary>
			<returns>true if the locale of the metadata is the default locale on the computer; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.LocaleID">
			<summary>Gets or sets the locale used by a component.</summary>
			<returns>An Integer that specifies the locale used by the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.Name">
			<summary>Gets or sets the name of a component.</summary>
			<returns>A String that contains the name of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ObjectType">
			<summary>Gets a value indicating that the component is a data flow component.</summary>
			<returns>The <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_COMPONENT"></see> value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.OutputCollection">
			<summary>Gets the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects defined by a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see> of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.PipelineVersion">
			<summary>Gets or sets the version of the data flow task within which a component is designed to execute.</summary>
			<returns>An integer that specifies the version of the data flow task within which the component is designed to execute.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.RuntimeConnectionCollection">
			<summary>Gets the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> objects for a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90"></see> for the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.UsesDispositions">
			<summary>Gets or sets a value that indicates whether a component has an error output.</summary>
			<returns>true if the component has an error output; otherwise, false. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.ValidateExternalMetadata">
			<summary>Gets or sets a value that controls whether a component validates its column metadata against its external data source at design time.</summary>
			<returns>true if the component should validate its column metadata against the external data source during design time; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.Version">
			<summary>Gets or sets the version of a component.</summary>
			<returns>An Integer that contains the version number of the component.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.FindObjectByID(System.Int32)">
			<summary>Locates a requested object in the collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of a requested object in the collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.GetEnumerator">
			<summary>Returns an IEnumerator for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<returns>An IEnumerator object that can be used to iterate the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> objects.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.GetObjectByID(System.Int32)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object from an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object from the collection that has the specified ID.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Retrieves the location in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object.</summary>
			<returns>An Integer that contains the location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object whose location in the collection is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object and adds it to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.NewAt(System.Int32)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object at the specified location in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object.</returns>
			<param name="lIndex">The location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection to create the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.RemoveAll">
			<summary>Removes each of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> objects in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.RemoveObjectByID(System.Int32)">
			<summary>Deletes the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object with the specified ID.</summary>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object to remove from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object at the specified location in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<param name="Index">The location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Moves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object to a new location in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</summary>
			<param name="lNewIndex">The location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> that the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object is moved to.</param>
			<param name="lOldIndex">The location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object that is being moved.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.Count">
			<summary>Gets the number of elements contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see>.</summary>
			<returns>An Integer that contains the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> objects in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90">
			<summary>Allows changes to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of a data flow component to be rolled back.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90.Cancel">
			<summary>Cancels changes to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of a data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentView90.Commit">
			<summary>Commits changes to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of a data flow component.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90">
			<summary>Contains custom information about an object in a data flow task.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.ContainsID">
			<summary>Gets or sets a value indicating whether the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.Value"></see> stored in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object contains the ID of another object in a data flow layout.</summary>
			<returns>true if the value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object contains the ID of another object in the data flow; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>A string that contains the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.EncryptionRequired">
			<summary>Gets or sets a value indicating whether the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.Value"></see> in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object must be encrypted.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> should be encrypted; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.ExpressionType">
			<summary>Gets or sets a value indicating whether the value of the custom property can be specified by using property expressions.</summary>
			<returns>One of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSCustomPropertyExpressionType"></see> values.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.ID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>An Integer that contains the unique ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.IdentificationString">
			<summary>Gets a string that uniquely identifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>A String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.Name">
			<summary>Gets or sets the name of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>A String that contains the name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.ObjectType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> of the custom property.</summary>
			<returns>The <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_PROPERTY"></see> from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.State">
			<summary>Gets or sets a value from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState"></see> that controls how the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> value is stored in the package XML.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistState"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.TypeConverter">
			<summary>Specifies the type converter for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>A String that specifies the type converter for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.UITypeEditor">
			<summary>Specifies the editor for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>A String that identifies the editor for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90.Value">
			<summary>Gets or sets the object value of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</summary>
			<returns>An object that contains the value of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.FindObjectByID(System.Int32)">
			<summary>Locates a requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of a requested object in a collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object whose index to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see>.</summary>
			<returns>An IEnumerator that can iterate through the custom property collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.GetObjectByID(System.Int32)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> object that has the specified ID.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object having the specified ID value.</returns>
			<param name="lID">The ID of the custom property to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Gets the index of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object that has the specified ID.</summary>
			<returns>An integer that contains the location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> in the zero-based collection.</returns>
			<param name="lID">The ID of the custom property whose index is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object and adds it to the end of the collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.NewAt(System.Int32)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object at the specified location in the collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</returns>
			<param name="lIndex">The location in the collection to create the new property.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.RemoveAll">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object in a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.RemoveObjectByID(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> having the specified ID.</summary>
			<param name="lID">The ID of the property to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object at the location specified by Index.</summary>
			<param name="Index">The location in the collection to remove the custom property.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object in a collection.</summary>
			<param name="lNewIndex">The new location of the property in the collection.</param>
			<param name="lOldIndex">The current location of the property in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.Count">
			<summary>Gets the number of elements contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see>.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90">
			<summary>Defines the design-time methods of a data flow component written in C++ and COM.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.AcquireConnections(System.Object)">
			<summary>Establishes a connection to a connection manager.</summary>
			<param name="pTransaction">The transaction associated with the connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.DeleteExternalMetadataColumn(System.Int32,System.Int32)">
			<summary>Deletes the external metadata column at the specified index from the collection of external metadata columns.</summary>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  with which the external metadata column is associated.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.DeleteInput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</summary>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.DeleteOutput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see> collection.</summary>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.DeleteOutputColumn(System.Int32,System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> collection.</summary>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> to delete.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.DescribeRedirectedErrorCode(System.Int32)">
			<summary>Returns the description of the specified error code.</summary>
			<returns>The description of the error code.</returns>
			<param name="hrErrorCode">The error code whose descriptive string is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.GetEnumerationCollection(System.String)">
			<summary>Returns the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> of a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> of the component.</returns>
			<param name="bstrEnumName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.InsertExternalMetadataColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Inserts a new external metadata column into the collection of external metadata columns at the specified index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</returns>
			<param name="bstrName">The name of the new external metadata column.</param>
			<param name="bstrDescription">The description of the new external metadata column.</param>
			<param name="lExternalMetadataColumnIndex">The index at which the new external metadata column should be inserted into the collection.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  with which the external metadata column is associated.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.InsertInput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see>.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that was added to the input collection</returns>
			<param name="eInsertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by inputID.</param>
			<param name="lInputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.InsertOutput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
			<param name="eInsertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object specified by outputID.</param>
			<param name="lOutputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.InsertOutputColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object and inserts it into the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see>.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
			<param name="bstrName">Specifies the value assigned to the Name property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="lOutputColumnIndex">Specifies the location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="bstrDescription">Specifies the value assigned to the Description property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="lOutputID">Specifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> to add the column to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.MapInputColumn(System.Int32,System.Int32,System.Int32)">
			<summary>Establishes a relationship between an input column and a corresponding external metadata column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that the input column is mapped to.</returns>
			<param name="lExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
			<param name="lInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.MapOutputColumn(System.Int32,System.Int32,System.Int32,System.Boolean)">
			<summary>Establishes a relationship between an output column and a corresponding external metadata column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> that is mapped to the output column.</returns>
			<param name="lExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that is linked to the output column.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="bMatch">Indicates whether the output column and external metadata columns match.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.OnDeletingInputColumn(System.Int32,System.Int32)">
			<summary>Called when deleting an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see>.</summary>
			<param name="lInputID">Specifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that is being removed.</param>
			<param name="lInputColumnID">Specifies the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that is being removed.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.OnInputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object is connected to another component through the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> interface.</summary>
			<param name="lInputID">Contains the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that is attached.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.OnInputPathDetached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object that contains the specified <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object is deleted.</summary>
			<param name="lInputID">Specifies the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that was connected to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.OnOutputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object of the component is attached to a downstream component.</summary>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.ProvideComponentProperties">
			<summary>Initializes the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ComponentMetaData"></see> of the component when a component is first added to the data flow task.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.ReinitializeMetaData">
			<summary>Fixes any errors identified during design-time validation that result in the component returning <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_NEEDSNEWMETADATA"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.ReleaseConnections">
			<summary>Frees the connections established during <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.AcquireConnections(System.Object)"></see> at either design time or run time.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetComponentProperty(System.String,System.Object)">
			<summary>Assigns a value to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="vValue">The object stored in the Value property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetExternalMetadataColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of the specified external metadata column.</summary>
			<param name="lPrecision">The numeric precision of the new external metadata column.</param>
			<param name="eDataType">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that contains the data type of the new external metadata column.</param>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lScale">The numeric scale of the new external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  with which the external metadata column is associated.</param>
			<param name="lCodePage">The code page of the new external metadata column.</param>
			<param name="lLength">The length of the new external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetExternalMetadataColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Sets an individual property of an external metadata column.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> that contains the modified property value.</returns>
			<param name="bstrPropertyName">The name of the property whose value is being set.</param>
			<param name="vtValue">The value to assign to the property.</param>
			<param name="lExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  with which the external metadata column is associated.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetInputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="vValue">The value set in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
			<param name="lInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is being set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetInputProperty(System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value is set.</returns>
			<param name="vValue">The value to assign to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that contains the custom property.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetOutputColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<param name="lPrecision">The total number of digits in the column for numeric data types.</param>
			<param name="lCodePage">The code page of the column.</param>
			<param name="eDataType">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of the column.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="lScale">The number of digits of precision in the column for numeric data types.</param>
			<param name="lLength">The length of the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetOutputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Sets the value of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value is set.</returns>
			<param name="vValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="lOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetOutputProperty(System.Int32,System.String,System.Object)">
			<summary>Sets the value of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> on an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value was set.</returns>
			<param name="vValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="PropertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> to set.</param>
			<param name="lOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.SetUsageType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> of the component and sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UsageType"></see> property of the column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object whose <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UsageType"></see> is set.</returns>
			<param name="eUsageType">A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType"></see> enumeration that is assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
			<param name="pIDTSVirtualInputObject">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object that contains the virtual input column and that is used to map the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see>.</param>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSDesigntimeComponent90.Validate">
			<summary>Verifies that the component is correctly configured.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus"></see> enumeration that indicates the status of the component.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90">
			<summary>Represents a column from an external data source.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.CodePage">
			<summary>Gets or sets the character set used to interpret the data contained in the column.</summary>
			<returns>The code page of the external metadata column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.CustomPropertyCollection">
			<summary>Gets the custom property collection of the external metadata column.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> that contains the custom property collection of the external metadata column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.DataType">
			<summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of the column.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> enumeration that indicates the type of data stored in the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.Description">
			<summary>Gets or sets the descriptive text for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</summary>
			<returns>The description of the external metadata column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.ID">
			<summary>Gets or sets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</summary>
			<returns>The numeric ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.IdentificationString">
			<summary>Gets the String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object in the data flow.</summary>
			<returns>The String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object in the data flow.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.Length">
			<summary>Gets or sets the length of the external metadata column.</summary>
			<returns>The length of the external metadata column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.Name">
			<summary>Gets or sets a String that contains the name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</summary>
			<returns>The name of the external metadata column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.ObjectType">
			<summary>Returns the value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration that corresponds to an external metadata column.</summary>
			<returns><see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_EXTERNALMETADATACOLUMN"></see> for <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> objects.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.Precision">
			<summary>Gets or sets the number of decimal places stored by an external metadata column that has a decimal data type.</summary>
			<returns>The number of decimal places stored by an external metadata column that has a decimal data type.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.Scale">
			<summary>Gets or sets the number of digits stored by an external metadata column that has a decimal data type.</summary>
			<returns>The number of digits stored by an external metadata column that has a decimal data type.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> objects that represent the columns of an external data source.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.FindObjectByID(System.Int32)">
			<summary>Locates an object in the collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of an object in the collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see>.</summary>
			<returns>A System.Collections.Generic.IEnumerator that can iterate through the external metadata column collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.GetObjectByID(System.Int32)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that has the specified ID.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object having the specified value for its <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90.ID"></see> property.</returns>
			<param name="lID">The ID of the column to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Gets the index of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that has the specified ID.</summary>
			<returns>An integer that contains the location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> in the zero-based collection.</returns>
			<param name="lID">The id of the column whose index is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object and adds it to the end of a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.NewAt(System.Int32)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> at the specified location in a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</returns>
			<param name="lIndex">The location in the index to create the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.RemoveAll">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object in a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.RemoveObjectByID(System.Int32)">
			<summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that has the specified ID.</summary>
			<param name="lID">The ID of the column to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object at the specified index.</summary>
			<param name="Index">The location of the column in the collection to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location in the collection of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</summary>
			<param name="lNewIndex">The new location of the column.</param>
			<param name="lOldIndex">The current location in the collection of the column.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.Count">
			<summary>Gets the number of elements contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see>.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.IsUsed">
			<summary>Gets or sets a value that indicates whether the collection is populated by the component.</summary>
			<returns>true if the component populates the collection; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90">
			<summary>Provides names for the values of an enumeration.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90.Name">
			<summary>Gets the name of a value in an enumeration. </summary>
			<returns>The name of a value in the enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90.Value">
			<summary>Gets the friendly name used for an enumeration item identified by the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90.Name"></see> property.</summary>
			<returns>The friendly name of the item in the enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> objects.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90.Count">
			<summary>Gets the number of elements contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90.IsFlags">
			<summary>Gets a value that specifies whether the values of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> objects in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> can be combined together.</summary>
			<returns>true if the values of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> objects in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> can be combined; otherwise, false. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnumCollection90"></see> specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSFriendlyEnum90"></see> object to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90">
			<summary>Contains the collection of columns that represents the data provided to a component in the form of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> objects at run time.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.GetVirtualInput">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Buffer">
			<summary>Gets the ID of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> that is allocated for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object and provided to the component in the <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ProcessInput(System.Int32,Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer)"></see> method.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> allocated for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Component">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>Returns the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.CustomPropertyCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> object of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Dangling">
			<summary>Gets or sets a value that notifies the data flow engine that the input can be unattached.</summary>
			<returns>true if the input is unattached during execution; otherwise, false. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>A String that contains the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ErrorOrTruncationOperation">
			<summary>Gets or sets a String that specifies the types of errors or truncations that can occur while processing a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</summary>
			<returns>A String that specifies the types of errors or truncations that can occur while processing a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row during execution.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ErrorRowDisposition">
			<summary>Gets or sets a value from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration that specifies how the component will handle error conditions that occur when processing a row from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ExternalMetadataColumnCollection">
			<summary>Gets the collection of columns that reflects the columns in an external data source, which are used to validate an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> when the component is not connected to the external data source.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.HasSideEffects">
			<summary>Gets or sets a value that indicates whether a data flow component should be removed or remain in the execution plan of a data flow task when its output is not attached to a downstream component and when the RunInOptimizedMode property of the Data Flow task is true.</summary>
			<returns>true if the component performs custom actions that are not visible to the data flow engine; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ID">
			<summary>Gets or sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ID"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>An Integer that contains the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.IdentificationString">
			<summary>Gets a String that uniquely identifies an<see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>A concatenated String that consists of the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ObjectType"></see>, <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Name"></see>, and <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.InputColumnCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.IsAttached">
			<summary>Gets a value that indicates if an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> is attached to an upstream component through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object is attached to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see>; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.IsSorted">
			<summary>Gets a value that indicates whether the columns in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> are sorted.</summary>
			<returns>true if the columns are sorted; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.Name">
			<summary>Gets or sets the name of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>A String that contains the name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.ObjectType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>Returns the <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_INPUT"></see> value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.SourceLocale">
			<summary>Gets the locale for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>An integer that contains the locale of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90.TruncationRowDisposition">
			<summary>Gets or sets a value that determines how the component handles truncations that occur while processing rows from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in a collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see>.</summary>
			<returns>Returns an IEnumerator object used to iterate through the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.GetObjectByID(System.Int32)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that has the ID specified by the InputID parameter.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> to retrieve from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Retrieves the index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object in a collection.</summary>
			<returns>An Integer that indicates the location of the item in the index.</returns>
			<param name="lID">The ID of the input object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object and adds it to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see>.</summary>
			<returns>Returns the newly added <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.NewAt(System.Int32)">
			<summary>Adds a new input object at the specified index in a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
			<param name="lIndex">The location in the collection to add the new input.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.RemoveAll">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object from a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.RemoveObjectByID(System.Int32)">
			<summary>Removes an input object specified by its ID from a collection.</summary>
			<param name="lID">The ID of the input to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes an input object from a collection.</summary>
			<param name="Index">The location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see>  to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<param name="lNewIndex">The new location of the input in the collection.</param>
			<param name="lOldIndex">The current location of the input in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.Count">
			<summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90">
			<summary>Represents an output column of an upstream component that is selected for use by a component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.DescribeRedirectedErrorCode(System.Int32)">
			<summary>Returns a String that describes an error code.</summary>
			<returns>A String that contains the error message for the specified errorCode parameter.</returns>
			<param name="hrErrorCode">The error code whose message is retrieved.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.CodePage">
			<summary>Gets the character set used to interpret the data contained in a column.</summary>
			<returns>An Integer that represents the code page.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ComparisonFlags">
			<summary>Gets a value that specifies how two strings are compared.</summary>
			<returns>An Integer, which can include the summation of multiple flags.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.CustomPropertyCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> collection of an input column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> of the input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.DataType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of a column.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.Description">
			<summary>Gets or sets the descriptive text for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</summary>
			<returns>Returns the description of the input column object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ErrorOrTruncationOperation">
			<summary>Gets or sets a String that describes the operation that is taking place when an error or truncation occurs.</summary>
			<returns>A String that contains the text that describes the operation that is taking place when an error or truncation occurs during package execution.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ErrorRowDisposition">
			<summary>Gets or sets a value that specifies how a component proceeds when an error occurs while processing an input column at runtime.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ExternalMetadataColumnID">
			<summary>Gets or sets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> assigned to an input column.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object assigned to this column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ID">
			<summary>Gets or sets the ID of an input column object.</summary>
			<returns>The numeric ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.IdentificationString">
			<summary>Gets a String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object in a data flow layout.</summary>
			<returns>A String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> in the data flow layout.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.IsValid">
			<summary>Gets a value that indicates whether an input column references an upstream column.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object still exists and has the same properties; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.Length">
			<summary>Gets the length of a column.</summary>
			<returns>An Integer that contains the length of the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.LineageID">
			<summary>Gets or sets the identifier of an upstream column object.</summary>
			<returns>An Integer that contains the lineage ID of the upstream column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.Name">
			<summary>Gets or sets the name of an input column.</summary>
			<returns>A String that contains the name of the input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.ObjectType">
			<summary>Gets the value from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration that corresponds to an input column.</summary>
			<returns><see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_INPUTCOLUMN"></see> for <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> objects.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.Precision">
			<summary>Gets the total number of digits contained in an input column.</summary>
			<returns>An Integer that indicates the total number of digits stored in the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.Scale">
			<summary>Gets the number of decimal places contained in a numeric input column.</summary>
			<returns>An Integer that specifies the number of decimal places in the input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.SortKeyPosition">
			<summary>Gets the sort key of an input column.</summary>
			<returns>An Integer that specifies the sort key of the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.TruncationRowDisposition">
			<summary>Gets or sets a value from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UpstreamComponentName">
			<summary>Gets the name of the component that originally supplied the column.</summary>
			<returns>A String that contains the name of the component that originated the input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UsageType">
			<summary>Gets or sets a value that determines how an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object is used by the component.</summary>
			<returns>Returns a value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in a collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see>.</summary>
			<returns>An IEnumerator used to iterate the collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.GetInputColumnByLineageID(System.Int32)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object that has the specified lineage ID.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object that has the specified LineageID.</returns>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.LineageID"></see> property to use as the search criteria in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.GetInputColumnByName(System.String,System.String)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object having the specified name.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object with the specified name.</returns>
			<param name="bstrName">The name of the component that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
			<param name="bstrComponentName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.GetObjectByID(System.Int32)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object having the specified ID.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that has the specified ID.</returns>
			<param name="lID">The ID of the<see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> to look for.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Gets the index of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object that has the specified ID.</summary>
			<returns>An Integer that contains the index in the collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>object to locate.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> and adds it to a collection.</summary>
			<returns>The new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.NewAt(System.Int32)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object and adds it to a collection at the specified index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</returns>
			<param name="lIndex">The location to create the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.RemoveAll">
			<summary>Deletes every <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> object in a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.RemoveObjectByID(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object specified by ID.</summary>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> at the specified location in the collection.</summary>
			<param name="Index">The location in the index to delete the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object specified by the lOldIndex parameter.</summary>
			<param name="lNewIndex">The location to move the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> to.</param>
			<param name="lOldIndex">The current location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.Count">
			<summary>Gets the number of columns contained in a collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90">
			<summary>Defines the base object interface for data flow objects.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</summary>
			<returns>The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.Description"></see> property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.ID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>object.</summary>
			<returns>An integer value that uniquely identifies the object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.IdentificationString">
			<summary>Gets a string that uniquely identifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</summary>
			<returns>A concatenated string consisting of the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.Name"></see>, <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.ID"></see>, and <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.ObjectType"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.Name">
			<summary>Gets or sets the name of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> object.</summary>
			<returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.ObjectType">
			<summary>Gets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90.ObjectType"></see> property of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration that identifies the object type of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see>.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90">
			<summary>Contains the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> columns available to downstream components in a graph.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.Buffer">
			<summary>Gets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> allocated for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The integer ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.Component">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> object of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.CustomPropertyCollection">
			<summary>Gets the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> objects defined for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> object that is used to access the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.Dangling">
			<summary>Gets or sets a value that notifies the data flow engine that the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> can be unattached.</summary>
			<returns>true if the output is unattached during execution; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.DeleteOutputOnPathDetached">
			<summary>Gets or sets a value that determines whether the data flow engine deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object when it is detached from an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is deleted; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>A String that contains the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ErrorOrTruncationOperation">
			<summary>Gets or sets text that describes the error or truncation operation of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>A String that describes the type of error or truncation operation of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ErrorRowDisposition">
			<summary>Gets or sets a value that specifies how a component proceeds when an error occurs while processing the columns in the output at run time.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ExclusionGroup">
			<summary>Gets or sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ExclusionGroup"></see> property of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ExclusionGroup"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ExternalMetadataColumnCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumnCollection90"></see> of the output.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.HasSideEffects">
			<summary>Gets or sets a value that indicates whether a data flow component should be removed or remain in the execution plan of a data flow task when its input is not attached to an upstream component and when the RunInOptimizedMode property of the Data Flow task is true.</summary>
			<returns>true if the component performs custom actions that are not visible to the data flow engine; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ID">
			<summary>Gets or sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ID"></see> property of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IdentificationString">
			<summary>Gets a string that uniquely identifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>A String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsAttached">
			<summary>Gets a value that indicates if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object is attached to another component via an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see>object.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is connected to another component; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsErrorOut">
			<summary>Gets or sets a value that indicates whether an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object is an error output.</summary>
			<returns>true if the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is an error output; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsSorted">
			<summary>Gets a value that indicates whether the columns in an output object are sorted.</summary>
			<returns>true if the columns in the output are sorted; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.Name">
			<summary>Gets or sets the name of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</summary>
			<returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.ObjectType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_OUTPUT"></see> value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.OutputColumnCollection">
			<summary>Gets the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> objects defined for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.SynchronousInputID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that is synchronous to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that is synchronous to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object. The default ID is 0.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.TruncationRowDisposition">
			<summary>Gets or sets a value that determines how a component processes a row where a column has been truncated as a result of its operation on a column in the row.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in the collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see>.</summary>
			<returns>Returns an IEnumerator used to iterate over the collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.GetObjectByID(System.Int32)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that has the specified ID.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that has the specified ID.</returns>
			<param name="lID">The ID of the output to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Retrieves the index of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that has the specified ID.</summary>
			<returns>An Integer that indicates the location of the item in the collection.</returns>
			<param name="lID">The ID of the output.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object and adds it to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see>.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.NewAt(System.Int32)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object and adds it to a collection at the specified Index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</returns>
			<param name="lIndex">The location in the collection to add the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.RemoveAll">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.RemoveObjectByID(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> specified by the lID parameter.</summary>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> at the specified location.</summary>
			<param name="Index">The location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in the collection.</summary>
			<param name="lNewIndex">The new location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> in the collection.</param>
			<param name="lOldIndex">The current location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.Count">
			<summary>Gets the number of elements contained in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see>.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90">
			<summary>Contains the design-time definition of a column provided by a component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.SetDataTypeProperties(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets multiple data type properties of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object simultaneously.</summary>
			<param name="lPrecision">The total number of digits of the output column.</param>
			<param name="lCodePage">The character set of the output column.</param>
			<param name="lScale">The number of decimal places of the output column.</param>
			<param name="eDataType">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of the column.</param>
			<param name="lLength">The length of the column.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.CodePage">
			<summary>Gets the character set used to interpret the data contained in a column.</summary>
			<returns>An Integer that represents the code page.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ComparisonFlags">
			<summary>Gets or sets a value that specifies how two strings are compared.</summary>
			<returns>An integer value that contains the summation of multiple flags.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.CustomPropertyCollection">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> collection of the output column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> collection of the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.DataType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of a column.</summary>
			<returns>Returns a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> enumeration that indicates the type of data stored in the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<returns>A String that describes the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ErrorOrTruncationOperation">
			<summary>Gets or sets a String that describes the operation that is taking place when an error or truncation occurs.</summary>
			<returns>A String that contains the text that describes the operation that is taking place when an error or truncation occurs during package execution.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ErrorRowDisposition">
			<summary>Gets or sets a value that specifies how a component proceeds if an error occurs while processing an output column at run time.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ExternalMetadataColumnID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> assigned to an output column.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object assigned to this column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> column.</summary>
			<returns>The numeric ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.IdentificationString">
			<summary>Gets the string that uniquely identifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object in the data flow layout.</summary>
			<returns>A String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object in the data flow layout.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.Length">
			<summary>Gets the length of the column.</summary>
			<returns>An Integer that contains the length of the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.LineageID">
			<summary>Gets or sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.LineageID"></see> property of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCOlumn90"></see> column.</summary>
			<returns>The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.LineageID"></see> of the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.Name">
			<summary>Gets or sets a string value that contains the name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</summary>
			<returns>A String that contains the name of the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.ObjectType">
			<summary>Gets the value from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration that corresponds to an output column.</summary>
			<returns>For <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> objects, this value is always <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_OUTPUTCOLUMN"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.Precision">
			<summary>Gets the total number of digits contained in an output column.</summary>
			<returns>An Integer that represents the number of digits stored in the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.Scale">
			<summary>Gets the number of decimal places contained in a numeric output column.</summary>
			<returns>An Integer that represents the number of decimal places in the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.SortKeyPosition">
			<summary>Gets or sets the sort key of an output column.</summary>
			<returns>The sort key position of the output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.SpecialFlags">
			<summary>Gets or sets an integer that specifies the special flags of the output column.</summary>
			<returns>The special flags of an output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.TruncationRowDisposition">
			<summary>Gets or sets a value that specifies how a component proceeds when a truncation occurs while processing an output column at runtime.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSRowDisposition"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in the collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through an output column collection.</summary>
			<returns>An IEnumerator that is used to iterate the collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.GetObjectByID(System.Int32)">
			<summary>Retrieves the output column object that has the specified ID from a collection.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object with the specified ID.</returns>
			<param name="lID">The ID of the output column to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Retrieves the location of an output column in a collection.</summary>
			<returns>An Integer that specifies the location in the collection of the output column object.</returns>
			<param name="lID">Specifies the ID of the output column whose index in the collection is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.GetOutputColumnByLineageID(System.Int32)">
			<summary>Retrieves an output column object with the specified lineage ID from a collection.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object with the specified <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.LineageID"></see> property.</returns>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90.LineageID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.New">
			<summary>Creates an output column object and adds it to a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.NewAt(System.Int32)">
			<summary>Creates a new output column object and adds it to a collection at the specified index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
			<param name="lIndex">The location to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.RemoveAll">
			<summary>Deletes all the output column objects from a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.RemoveObjectByID(System.Int32)">
			<summary>Deletes the output column object with the specified ID from a collection.</summary>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Removes the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object at the specified location in a collection.</summary>
			<param name="Index">The location in the collection to remove the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Moves an output column to a new location in a collection.</summary>
			<param name="lNewIndex">The new location in the collection.</param>
			<param name="lOldIndex">The index of the output column to move.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.Count">
			<summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> columns in the collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90">
			<summary>Represents a connection between two components.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.AttachPathAndPropagateNotifications(Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90)">
			<summary>Establishes a path between two components and notifies the affected components.</summary>
			<param name="pIDTSInput">The input of the downstream component.</param>
			<param name="pIDTSOutput">The output of the upstream component.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.Description">
			<summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>The description of the path.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.EndPoint">
			<summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object associated with a path.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> of the component downstream in the path.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.ID">
			<summary>Gets or sets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>The unique integer ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.IdentificationString">
			<summary>Gets a unique string that identifies an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> in the data flow layout.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.Name">
			<summary>Gets or sets the string identifier of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
			<returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.ObjectType">
			<summary>Returns a value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</summary>
			<returns>The <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_PATH"></see> value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.StartPoint">
			<summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object associated with a path.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that is the upstream component in a path.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.Visualized">
			<summary>Sets a value indicating that the user has attached a data viewer to this path in SSIS Designer.</summary>
			<returns>A value indicating that the user has attached a data viewer to this path in SSIS Designer.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90">
			<summary>Provides a collection container for storing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in a collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see>.</summary>
			<returns>Returns an IEnumerator that is used to iterate the collection.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.GetObjectByID(System.Int32)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> object that has the specified ID.</summary>
			<returns>Returns the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object that has the specified ID.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Gets the index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object that has the specified ID.</summary>
			<returns>The index in the collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object to locate.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> and adds it to a collection.</summary>
			<returns>The new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.NewAt(System.Int32)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object at the specified location in a collection.</summary>
			<returns>The new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</returns>
			<param name="lIndex">The location to create the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.RemoveAll">
			<summary>Deletes every <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object in a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.RemoveObjectByID(System.Int32)">
			<summary>Removes a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object specified by the ID parameter.</summary>
			<param name="lID">The ID of the IDTSPath90 object to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Removes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object located at the specified index.</summary>
			<param name="Index">The location in the collection where the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> exists.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object specified at the lOldIndex parameter.</summary>
			<param name="lNewIndex">The new location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object in the collection.</param>
			<param name="lOldIndex">The current location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object in the collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.Count">
			<summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> objects contained in the collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object specified by the Index parameter.</returns>
			<param name="Index">The name or index of the   <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> to retrieve. </param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90">
			<summary>Defines the methods and properties implemented by the data flow task.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.GetNextPasteID">
			<summary>Gets the next available ID that the data flow task generates.</summary>
			<returns>An integer that contains the next available unique ID in the data flow.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.GetObjectByID(System.Int32)">
			<summary>Retrieves an object contained in the data flow task by using the ID of the object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> interface of the object that is retrieved.</returns>
			<param name="lID">The ID of the object to retrieve.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.AutoGenerateIDForNewObjects">
			<summary>Gets or sets a value that specifies whether the data flow automatically generates and sets the ID property for newly created objects.</summary>
			<returns>true if the data flow automatically generates the ID for new objects; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.BLOBTempStoragePath">
			<summary>Gets or sets a value that specifies the file system location where Binary Large Objects (BLOBs) are temporarily written to disk.</summary>
			<returns>A String that contains the path where Binary Large Objects are temporarily written to disk.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.BufferManager">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.BufferTempStoragePath">
			<summary>Gets or sets the file system path used to temporarily cache buffer data.</summary>
			<returns>A String that specifies the file system location used by the task to temporarily cache buffer data.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.ComponentMetaDataCollection">
			<summary>Gets the collection of data flow components in the task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.DefaultBufferMaxRows">
			<summary>Gets or sets the maximum number of rows the task allows in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> buffer.</summary>
			<returns>An integer that specifies the maximum number of rows contained in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.DefaultBufferSize">
			<summary>Gets or sets the default size of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by the task.</summary>
			<returns>An integer that contains the default size, in bytes, of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.EngineThreads">
			<summary>Gets or sets the number of threads the data flow task uses.</summary>
			<returns>An integer that specifies the number of threads that the data flow task can use during execution.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.Events">
			<summary>Sets the events interface that the data flow and its components use to raise events during execution.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90"></see> interface.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.PathCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection for the data flow task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection of the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.PersistenceCustomPropertyCollection(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistenceFormat)">
			<summary>Gets the collection of custom properties that have the specified persistence format.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomPropertyCollection90"></see> that contains the collection of custom properties that have the specified persistence format.</returns>
			<param name="Format">The persistence format.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.RunInOptimizedMode">
			<summary>Gets or sets a value that specifies whether the data flow task runs in optimized mode.</summary>
			<returns>true if the data flow task runs in optimized mode; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90.VariableDispenser">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> used to lock variables in the package for reading and writing.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> for the data flow task.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90">
			<summary>Defines the run-time methods of a data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.Cleanup">
			<summary>Frees resources and completes the execution of a component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PerformUpgrade(System.Int32)">
			<summary>Upgrades the component metadata to the version of the component that is installed on the local computer.</summary>
			<param name="lPipelineVersion">The current version of the Integration Services data flow engine.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PostExecute">
			<summary>Called at the end of the execution of a component. The developer can supply code that executes after the component's main processing.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PreExecute">
			<summary>Called after <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PrepareForExecute"></see>, and before <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PrimeOutput(System.Int32,System.Int32@,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90@)"></see> and <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.ProcessInput(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90)"></see>. The developer can supply code that executes once before the component performs its main processing.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PrepareForExecute">
			<summary>Called prior to <see cref="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PreExecute"></see>. The developer can supply code that executes once before the component performs its main processing and before the input buffers are available.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.PrimeOutput(System.Int32,System.Int32@,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90@)">
			<summary>Called during package execution for components that add rows to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see>; including source components and transformation components with asynchronous <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects. The developer needs to supply the code that adds the rows to the output buffers.</summary>
			<param name="lOutputs">The number of elements in the outputIDs and buffers arrays.</param>
			<param name="pIDTSBufferOutputs">An array of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects.</param>
			<param name="lOutputIDs">An array of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> IDs.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.ProcessInput(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90)">
			<summary>Called on transformation and destination components that have <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects that are connected to an upstream component. The developer needs to supply the code that processes the input buffers.</summary>
			<param name="pIDTSBufferInput">The input <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> object.</param>
			<param name="lInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.BufferManager">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> of a pipeline component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.ComponentMetaData">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> for a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.EventInfos">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90"></see> object provided to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.LogEntryInfos">
			<summary>Provides the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90"></see> object to a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.ReferenceTracker">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90"></see>. </summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90"></see> interface.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.RequiredProductLevel">
			<summary>Gets or sets a value indicating the required SQL Server 2005 product level for the data flow component.</summary>
			<returns>One of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProductLevel"></see> values.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeComponent90.VariableDispenser">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> of a data flow component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90">
			<summary>References a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> object in a package.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.ReleaseConnectionManager">
			<summary>Releases the reference to a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> referenced by an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.ConnectionManager">
			<summary>Gets or sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager90"></see> object referenced by the run-time connection object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSConnectionManager90"></see> of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.ConnectionManagerID">
			<summary>Gets or sets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> object contained in the package and used by the component.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.Description">
			<summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</summary>
			<returns>The description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.ID">
			<summary>Gets or sets the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.IdentificationString">
			<summary>Gets a string that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.Name">
			<summary>Gets or sets the name of the run-time connection object.</summary>
			<returns>The name of the run-time connection object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90.ObjectType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> of the run-time connection object.</summary>
			<returns>The <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_RUNTIMECONNECTION"></see> value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of the requested object in a collection by its ID.</summary>
			<returns>The index of the object.</returns>
			<param name="lID">The ID of the object whose index to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.GetObjectByID(System.Int32)">
			<summary>Retrieves an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object from a collection.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object with the specified ID.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> to retrieve from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Retrieves the index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object in a collection.</summary>
			<returns>The location of the item in the index.</returns>
			<param name="lID">The ID of the run-time connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.New">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object and adds it to a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.NewAt(System.Int32)">
			<summary>Adds a new run-time connection at the specified location in a collection.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> connection.</returns>
			<param name="lIndex">The location in the collection to add the new run-time connection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.RemoveAll">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object from a collection.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.RemoveObjectByID(System.Int32)">
			<summary>Removes the specified connection object from a collection.</summary>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.RemoveObjectByIndex(System.Object)">
			<summary>Deletes the run-time connection at the specified index from a collection.</summary>
			<param name="Index">The location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object to delete from the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of the run-time connection object in a collection.</summary>
			<param name="lNewIndex">The new location in the collection of the run-time connection.</param>
			<param name="lOldIndex">The current location of the run-time connection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.Count">
			<summary>Returns the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> objects in a collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90"></see> objects in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnectionCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> object specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSRuntimeConnection90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the connection to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90">
			<summary>Represents the columns available to a component from the upstream component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.SetUsageType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType)">
			<summary>Maps a virtual input column object and sets its usage type.</summary>
			<returns>The index of the newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>, or -1 if eUsageType is <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType.UT_IGNORED"></see> and the column is removed from the input column collection.</returns>
			<param name="eUsageType">A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType"></see> enumeration that indicates how the input column is used by the component.</param>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> that is being mapped.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.Description">
			<summary>Gets or sets the description of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> object.</summary>
			<returns>The description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.ID">
			<summary>Gets or sets the ID of a virtual input object.</summary>
			<returns>The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.IdentificationString">
			<summary>Gets a string that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.IsSorted">
			<summary>Gets a value that indicates whether the virtual input columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see> are sorted.</summary>
			<returns>true if the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsSorted"></see> property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> representing the virtual input is true; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.Name">
			<summary>Gets or sets the name of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</summary>
			<returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.ObjectType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</summary>
			<returns>Returns <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_VIRTUALINPUT"></see> from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.SourceLocale">
			<summary>Gets the locale ID (LCID) of the source of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</summary>
			<returns>The locale ID (LCID) of the source of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90.VirtualInputColumnCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90"></see>, which can be used to iterate over the collection of virtual input columns.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90">
			<summary>Represents an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> in the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90.StartPoint"></see> object of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.DescribeRedirectedErrorCode(System.Int32)">
			<summary>Gets the error message for the error code on the upstream output column.</summary>
			<returns>A String that contains the error message provided by the upstream component for the specified error code.</returns>
			<param name="hrErrorCode">The error code whose error message is retrieved.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.CodePage">
			<summary>Gets the character set used to interpret the data contained in a virtual input column.</summary>
			<returns>An Integer that represents the code page of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.ComparisonFlags">
			<summary>Gets the comparison flags set on an upstream output column.</summary>
			<returns>An Integer that represents the comparison flags on the upstream output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.DataType">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of a column.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> enumeration that specifies the data type of the virtual column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.Description">
			<summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</summary>
			<returns>A String that contains the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.ID">
			<summary>Gets the ID of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</summary>
			<returns>The numeric ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.IdentificationString">
			<summary>Gets the string that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object in a data flow layout.</summary>
			<returns>A String that uniquely identifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object in the data flow layout.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.Length">
			<summary>Gets the length of a column.</summary>
			<returns>The length of the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID">
			<summary>Gets the lineage ID of an upstream output column.</summary>
			<returns>The lineage ID of the upstream output column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.Name">
			<summary>Gets or sets a value that contains the name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see>.</summary>
			<returns>The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.NewDescription">
			<summary>Gets or sets the description of a newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> column.</summary>
			<returns>A String that contains the description assigned to the newly created input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.NewName">
			<summary>Gets or sets the name of a newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> column.</summary>
			<returns>The name assigned to the newly created input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.ObjectType">
			<summary>Gets the value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType"></see> enumeration for a virtual input column.</summary>
			<returns><see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSObjectType.OT_VIRTUALINPUTCOLUMN"></see> for <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> objects.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.Precision">
			<summary>Gets the total number of digits contained in a virtual input column.</summary>
			<returns>The total number of digits places stored in the virtual input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.Scale">
			<summary>Gets the number of decimal places contained in a virtual input column.</summary>
			<returns>The number of decimal places in the virtual input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.SortKeyPosition">
			<summary>Gets the sort key of a virtual input column.</summary>
			<returns>The sort key position of the virtual input column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.SourceComponent">
			<summary>Gets the name of the component where a virtual input column originates.</summary>
			<returns>The name of the originating component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.UpstreamComponentName">
			<summary>Gets the name of the component directly upstream to the current component.</summary>
			<returns>The name of the component directly upstream.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.UsageType">
			<summary>Gets a value that indicates how the virtual column is used by the component.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType"></see> enumeration.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.FindObjectByID(System.Int32)">
			<summary>Locates the requested object in a collection by its ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> that represents the object.</returns>
			<param name="lID">The ID of the object to find.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.FindObjectIndexByID(System.Int32)">
			<summary>Locates the index of a requested object in a collection by its ID.</summary>
			<returns>An Integer that represents the index of the object.</returns>
			<param name="lID">The ID of the object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.GetEnumerator">
			<summary>Returns an enumerator that can iterate through the collection of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> objects.</summary>
			<returns>An IEnumerator for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90"></see>.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.GetObjectByID(System.Int32)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object having the specified ID.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object from the collection.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.GetObjectIndexByID(System.Int32)">
			<summary>Gets the index of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object in the collection.</summary>
			<returns>An Integer that specifies the location of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> in the collection.</returns>
			<param name="lID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> whose index is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.GetVirtualInputColumnByLineageID(System.Int32)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object from the collection having the specified <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> property.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object having the specified <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see>.</returns>
			<param name="lLineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> of the column to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.GetVirtualInputColumnByName(System.String,System.String)">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object having the specified name.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object having the specified value for its Name property.</returns>
			<param name="bstrName">The name of the component that added the column to its <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</param>
			<param name="bstrComponentName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.SetIndex(System.Int32,System.Int32)">
			<summary>Changes the location of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object in a collection.</summary>
			<param name="lNewIndex">The new location for the column in the collection.</param>
			<param name="lOldIndex">The current location of the column in the zero-based collection.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.Count">
			<summary>Gets the number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> columns in a collection.</summary>
			<returns>The number of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> columns in the collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumnCollection90.Item(System.Object)">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> specified by the Index parameter.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> specified by the Index parameter.</returns>
			<param name="Index">The name or index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> to retrieve.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipe">
			<summary>Provides the managed implementation of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPipeline90"></see> interface used to programmatically configure a data flow task.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass">
			<summary>Adds and connects components in a data flow layout.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.GetNextPasteID">
			<summary>Gets the next available ID that a data flow task generates.</summary>
			<returns>The next available unique ID in the data flow layout.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.GetObjectByID(System.Int32)">
			<summary>Retrieves an object contained in a data flow task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> interface of the object that is retrieved.</returns>
			<param name="lID">The ID of the object to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.IDTSObjectModel90_GetObjectByID(System.Int32)">
			<summary>Retrieves an object contained in a data flow task by the ID of the object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSObject90"></see> interface of the object that is retrieved.</returns>
			<param name="lID">The ID of the object to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.IDTSObjectModel90_New">
			<summary>Resets the layout of components in a data flow task.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.AutoGenerateIDForNewObjects">
			<summary>Gets or sets a value that specifies whether a data flow automatically generates and sets the ID property for newly created objects.</summary>
			<returns>true if the data flow automatically generates the ID for new objects; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.BLOBTempStoragePath">
			<summary>Gets or sets a value that specifies the file system location where binary large objects (BLOBs) are temporarily written to disk.</summary>
			<returns>A String that contains the path where BLOBs are temporarily written to disk.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.BufferManager">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.BufferTempStoragePath">
			<summary>Gets or sets the file system path used to temporarily cache buffer data.</summary>
			<returns>A String that specifies the file system location used by the task to temporarily cache buffer data.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.ComponentMetaDataCollection">
			<summary>Gets the collection of data flow components in the task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.DefaultBufferMaxRows">
			<summary>Gets or sets the maximum number of rows the task allows in an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> buffer.</summary>
			<returns>An Integer that specifies the maximum number of rows contained in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.DefaultBufferSize">
			<summary>Gets or sets the default size of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by a task.</summary>
			<returns>The default size, in bytes, of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> objects created by the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.EngineThreads">
			<summary>Gets or sets the number of threads a data flow task uses.</summary>
			<returns>The number of threads the data flow task can use during execution.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.Events">
			<summary>Sets the events interface that a data flow, and the components it contains, use to raise events during execution.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSComponentEvents90"></see> interface.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.IDTSObjectModel90_AutoGenerateIDForNewObjects">
			<summary>Gets or sets a value that specifies whether a data flow automatically generates and sets the ID property for newly created objects.</summary>
			<returns>true if the data flow automatically generates the ID for new objects; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.IDTSObjectModel90_ComponentMetaDataCollection">
			<summary>Gets the collection of data flow components in a task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaDataCollection90"></see> collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.IDTSObjectModel90_PathCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection for a data flow task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection of the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.PathCollection">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection for a data flow task.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPathCollection90"></see> collection of the task.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.PersistenceCustomPropertyCollection(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSPersistenceFormat)">
			<summary>Gets the persistence format of the data flow task's custom property collection.</summary>
			<param name="Format">The persistence format.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.RunInOptimizedMode">
			<summary>Gets or sets a value that specifies whether a data flow task runs in optimized mode.</summary>
			<returns>true if the data flow task runs in optimized mode; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.MainPipeClass.VariableDispenser">
			<summary>Sets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> used to lock variables in a package for reading and writing.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> for the data flow task.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL">
			<summary>Contains metadata that describes the data stored in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.DataType">
			<summary>Specifies the data type of the value contained in the column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lCodePage">
			<summary>Specifies the character set used to interpret the data in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lLengthOffset">
			<summary>Indicates the number of bytes from the beginning of a buffer row to the end of the column data.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lMaxLength">
			<summary>Indicates the maximum length of the data stored in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lOffset">
			<summary>Indicates the number of bytes from the beginning of a buffer row to the beginning of the column data.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lPrecision">
			<summary>Indicates the number of decimal places of precision contained in a buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lScale">
			<summary>Indicates the number of decimal places contained in the buffer column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.tagBUFFERCOL.lStatusOffset">
			<summary>Indicates the length in bytes from the beginning of a buffer row to the status value of a column.</summary>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SqlServer.PipelineHost.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.PipelineHost</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Pipeline">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Pipeline"></see> namespace contains managed classes that are used to develop managed data flow components. It contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> class, which is the base class for managed data flow components, and the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> class, which is the managed implementation of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBuffer90"></see> interface. The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> class marshals data flow buffers between the COM data flow engine and managed data flow components.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.BlobColumn">
			<summary>Defines a column in a data flow buffer that contains data that has a SQL Server data type of text, ntext, or image.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.AddBlobData(System.Byte[])">
			<summary>Inserts binary data into the column.</summary>
			<param name="data">The binary data to insert into the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.GetBlobData(System.Int32,System.Int32)">
			<summary>Returns the specified portion of the data in the column.</summary>
			<returns>An array of bytes that contains the specified portion of the data in the column.</returns>
			<param name="offset">The byte index at which to begin retrieving data.</param>
			<param name="count">The number of bytes of data to retrieve.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.ResetBlobData">
			<summary>Deletes the contents of the column.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.SetNull">
			<summary>Sets the column value to null.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.ColumnInfo">
			<summary>Gets read-only metadata about the column.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn"></see> that contains read-only metadata about the column.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.IsNull">
			<summary>Gets a value that indicates whether the column is null.</summary>
			<returns>A value that indicates whether the column is null.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.BlobColumn.Length">
			<summary>Gets the length of the contents of the column.</summary>
			<returns>The length of the contents of the column.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn">
			<summary>Provides read-only metadata for a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.BufferColumn.CodePage">
			<summary>Specifies the code page for <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> columns that contain text data types.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.BufferColumn.DataType">
			<summary>Specifies the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of the value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.BufferColumn.MaxLength">
			<summary>Indicates the maximum number of characters or digits that will fit in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.BufferColumn.Precision">
			<summary>Specifies the total number of digits contained in a column that has a numeric data type <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.BufferColumn.Scale">
			<summary>Specifies the number of digits to the right of the decimal place for numeric data type <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> columns.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.BufferDisconnectedException">
			<summary>The exception that is thrown when an attempt to access a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object fails.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.BufferDisconnectedException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferDisconnectedException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.CannotCreatePipelineComponentException">
			<summary>The exception that is thrown when the data flow cannot create an instance of a Script component. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.CannotCreatePipelineComponentException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.CannotCreatePipelineComponentException"></see> class.</summary>
			<param name="className">The value of the UserComponentTypeName property of the Script component.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.ColumnIndexOutOfRangeException">
			<summary>The exception that is thrown when an attempt to access a buffer column by using an index is outside the bounds of the collection of buffer columns.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.ColumnIndexOutOfRangeException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.ColumnIndexOutOfRangeException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.ColumnIsNullException">
			<summary>The exception that is thrown when using a specific data type column access method and the column value is null.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.ColumnIsNullException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.ColumnIsNullException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.ComponentType">
			<summary>Specifies the three types of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.ComponentType.DestinationAdapter">
			<summary>Identifies a component as a destination, which has one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects and no <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.ComponentType.SourceAdapter">
			<summary>Identifies a component as a source, which has one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects and no <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.ComponentType.Transform">
			<summary>Identifies a component as a transformation, which has both one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> objects and one or more <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> objects.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.ComponentUpgradeFailedException">
			<summary>The exception that is thrown when the <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PerformUpgrade(System.Int32)"></see> method of a component fails.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.ComponentUpgradeFailedException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.ComponentUpgradeFailedException"></see> class with the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IdentificationString"></see> of the component that failed to upgrade.</summary>
			<param name="strComponentName">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IdentificationString"></see> of the component.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.ComponentVersionMismatchException">
			<summary>The exception that is thrown when the component version stored in the package XML is higher than the version of the component installed on the current computer.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.ComponentVersionMismatchException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.ComponentVersionMismatchException"></see> class with the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IdentificationString"></see> of the mismatched component.</summary>
			<param name="componentName">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90.IdentificationString"></see> of the component.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.DoesNotFitBufferException">
			<summary>The exception that is thrown when a value that is too large to fit in the data area of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn"></see> is written to the buffer.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.DoesNotFitBufferException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.DoesNotFitBufferException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute">
			<summary>Contains design-time information about a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute"></see> class.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.ComponentType">
			<summary>Identifies a component as a source, destination, or transformation.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.ComponentType"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.CurrentVersion">
			<summary>Gets or sets the version of the component.</summary>
			<returns>An integer that contains the version of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.IconResource">
			<summary>Gets or sets the icon used to represent the component in the toolbox.</summary>
			<returns>A string that identifies the icon resource used to represent the component in the toolbox.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.NoEditor">
			<summary>Gets or sets a value indicating whether the Advanced Properties editor is available for the component.</summary>
			<returns>true if the Advanced Properties editor is disabled; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.RequiredProductLevel">
			<summary>Gets or sets a value indicating the required SQL Server 2005 product level for the data flow component.</summary>
			<returns>One of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProductLevel"></see> values.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.ShapeProgID">
			<summary>Gets or sets the designer shape of the component.</summary>
			<returns>The PROGID of the object that implements the shape for the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.DtsPipelineComponentAttribute.UITypeName">
			<summary>Gets or sets the qualified name of the assembly implementing the user interface of the component.</summary>
			<returns>The fully qualified name of the type implementing the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Design.IDtsComponentUI"></see> interface.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.NoCurrentRowException">
			<summary>The exception that is thrown when the address of the beginning of a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row is null.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.NoCurrentRowException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.NoCurrentRowException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.NotOutputBufferException">
			<summary>The exception that is thrown when a method that is restricted to <see cref="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Output"></see> objects is called on an <see cref="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Input"></see><see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.NotOutputBufferException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.NotOutputBufferException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer">
			<summary>Provides an in-memory data store containing rows and columns of data.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.#ctor(System.IntPtr,Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode)">
			<summary>Instantiates a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
			<param name="bufferWirePacket">The bufferWirePacket.</param>
			<param name="bufferMode">Specifies the mode of the newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.AddBlobData(System.Int32,System.Byte[])">
			<summary>Adds an array of bytes to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<param name="columnIndex">The index of the PipelineBuffer column to add the array of bytes to.</param>
			<param name="data">The array of bytes added to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.AddRow">
			<summary>Adds a row to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.DirectErrorRow(System.Int32,System.Int32,System.Int32)">
			<summary>Sends a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row to an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> whose <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsErrorOut"></see> property is true.</summary>
			<param name="errorColumn">The index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column that caused the error.</param>
			<param name="errorCode">The error number that occurred while processing the row.</param>
			<param name="outputID">The ID of the error <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> to send the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.DirectRow(System.Int32)">
			<summary>Sends a row from a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> to the specified <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>.</summary>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> where the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row is sent.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.Dispose">
			<summary>Releases all resources used by the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.Finalize">
			<summary>Releases all resources used by the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetBlobData(System.Int32,System.Int32,System.Int32)">
			<summary>Retrieves an array of bytes from a binary large object (BLOB) stored in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The array of bytes in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="offset">The point in the binary large to begin retrieving bytes from the BLOB.</param>
			<param name="columnIndex">The index of the column containing the BLOB.</param>
			<param name="count">The number of bytes to retrieve from the BLOB.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetBlobLength(System.Int32)">
			<summary>Gets the number of bytes contained in a binary large object (BLOB) <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The number of bytes in the binary large object.</returns>
			<param name="columnIndex">The index of the column containing the BLOB.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetBoolean(System.Int32)">
			<summary>Gets the bool value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The bool value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetByte(System.Int32)">
			<summary>Gets the byte value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The byte value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetBytes(System.Int32)">
			<summary>Gets the array of bytes stored in a buffer column.</summary>
			<returns>The array of bytes stored in the buffer column.</returns>
			<param name="columnIndex">The index of the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetColumnInfo(System.Int32)">
			<summary>Retrieves the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn"></see> structure for a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn"></see> structure of the specified <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.BufferColumn"></see> structure is retrieved.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetDateTime(System.Int32)">
			<summary>Gets the DateTime value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The DateTime value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetDecimal(System.Int32)">
			<summary>Gets the decimal value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The decimal value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetDouble(System.Int32)">
			<summary>Gets the double stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The double stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetGuid(System.Int32)">
			<summary>Gets the Guid value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The Guid value stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetInt16(System.Int32)">
			<summary>Gets the short stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The short stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetInt32(System.Int32)">
			<summary>Gets the int stored in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The int stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetInt64(System.Int32)">
			<summary>Gets the long stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The long stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetSByte(System.Int32)">
			<summary>Gets the SByte value stored in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The sbyte stored in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetSingle(System.Int32)">
			<summary>Gets the float stored in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<returns>The float contained in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetString(System.Int32)">
			<summary>Gets the string stored in the buffer column.</summary>
			<returns>The string stored in the buffer column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetUInt16(System.Int32)">
			<summary>Gets the ushort value stored in the buffer column.</summary>
			<returns>The ushort stored in the buffer column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetUInt32(System.Int32)">
			<summary>Gets the UInt32 value stored in the buffer column.</summary>
			<returns>The UInt32 value stored in the buffer column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.GetUInt64(System.Int32)">
			<summary>Gets the ulong value stored in the buffer column.</summary>
			<returns>The ulong value stored in the buffer column.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.IsNull(System.Int32)">
			<summary>Checks to see if the data in a buffer column is null.</summary>
			<returns>true if the column contains null; otherwise, false.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.NextRow">
			<summary>Advances the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> to the next row.</summary>
			<returns>true if the buffer was advanced to the next row; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.RemoveRow">
			<summary>Removes the current row from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.ResetBlobData(System.Int32)">
			<summary>Deletes the contents of the specified BLOB column.</summary>
			<param name="columnIndex">The index of the column from which to delete existing BLOB data.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetBoolean(System.Int32,System.Boolean)">
			<summary>Assigns a bool value to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetByte(System.Int32,System.Byte)">
			<summary>Assigns a byte to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetBytes(System.Int32,System.Byte[])">
			<summary>Assigns an array of bytes to a buffer column.</summary>
			<param name="bytesValue">The array of bytes to assign to the column.</param>
			<param name="columnIndex">The index of the buffer column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetDateTime(System.Int32,System.DateTime)">
			<summary>Assigns a DateTime value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetDecimal(System.Int32,System.Decimal)">
			<summary>Assigns a decimal to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetDouble(System.Int32,System.Double)">
			<summary>Assigns a double to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetEndOfRowset">
			<summary>Notifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> that a component has finished adding rows to the buffer.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetErrorInfo(System.Int32,System.Int32,System.Int32)">
			<summary>Sets the error information for the current <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row.</summary>
			<param name="ErrorColumn">The index of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> column where the error occurred.</param>
			<param name="OutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object in which the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> error occurred.</param>
			<param name="ErrorCode">The error number that occurred.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetGuid(System.Int32,System.Guid)">
			<summary>Assigns a Guid to a buffer column.</summary>
			<param name="value">The Guid to assign to the column.</param>
			<param name="columnIndex">The index of the buffer column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetInt16(System.Int32,System.Int16)">
			<summary>Assigns a 16-bit signed integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetInt32(System.Int32,System.Int32)">
			<summary>Assigns a 32-bit signed integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetInt64(System.Int32,System.Int64)">
			<summary>Assigns a 64-bit signed integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetNull(System.Int32)">
			<summary>Assigns null to a buffer column.</summary>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetSByte(System.Int32,System.SByte)">
			<summary>Assigns a signed 8-bit integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetSingle(System.Int32,System.Single)">
			<summary>Assigns a float to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetString(System.Int32,System.String)">
			<summary>Assigns a string to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetUInt16(System.Int32,System.UInt16)">
			<summary>Assigns an unsigned 16-bit integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetUInt32(System.Int32,System.UInt32)">
			<summary>Assigns an unsigned 32-bit integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.SetUInt64(System.Int32,System.UInt64)">
			<summary>Assigns an unsigned 64-bit integer to a buffer column.</summary>
			<param name="value">The value assigned to the buffer column.</param>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.TruncateStrA(System.Int32,System.IntPtr,System.Int32)">
			<summary>Truncates a non-Unicode string to the specified length.</summary>
			<returns>An integer value that indicates whether the truncation produced a shorter string or a string of the same length.</returns>
			<param name="addressOfString">Pointer to the string to truncate.</param>
			<param name="lengthOfString">Length of the new, truncated string.</param>
			<param name="codePage">Code page to use for the conversion.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.ColumnCount">
			<summary>Gets the number of columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
			<returns>The number of columns in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.CurrentRow">
			<summary>Gets the index of the current row in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</summary>
			<returns>The index of the current row in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.EndOfRowset">
			<summary>Gets a value indicating whether the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> has reached the end of its collection of rows.</summary>
			<returns>true if there are more rows coming from the upstream component; otherwise, false. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.Item(System.Int32)">
			<summary>Gets the data stored in a buffer column.</summary>
			<returns>The data stored in the buffer column as an object.</returns>
			<param name="columnIndex">The index of the column in the buffer row.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.Mode">
			<summary>Gets a value indicating whether a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> is an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> buffer or an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> buffer.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode"></see> enumeration that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> is in <see cref="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Output"></see> mode or <see cref="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Input"></see> mode.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer.RowCount">
			<summary>Gets the number of rows in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object.</summary>
			<returns>The number of rows in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode">
			<summary>Contains values used to identify a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> as an input or output buffer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Input">
			<summary>Identifies a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> as an input buffer.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineBufferMode.Output">
			<summary>Identifies a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> as an output buffer.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent">
			<summary>Defines the base class that is used when developing managed data flow components.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> class.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_COMPFLAGS">
			<summary>Contains the name of the ComparisonFlags property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_DELOUTPUTONPATHDETACHED">
			<summary>Contains the name of the DeleteOutputOnPathDetached property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_EXCLGROUP">
			<summary>Contains the name of the ExclusionGroup property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_HASSIDEEFFECTS">
			<summary>Contains the name of the HasSideEffects property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_ISDISTRIBUTABLE">
			<summary>Contains the name of the IsDistributable property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_ISERROROUT">
			<summary>Contains the name of the IsErrorOut property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_ISSORTED">
			<summary>Contains the name of the IsSorted property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_REFMETADATAID">
			<summary>Contains the name of the ReferenceMetaDataID property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_SORTKEYPOS">
			<summary>Contains the name of the SortKeyPosition property of data flow components.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.s_STOCKPROPNAME_SYNCINPUTID">
			<summary>Contains the name of the SynchronousInputID property of data flow components.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.AcquireConnections(System.Object)">
			<summary>Establishes a connection to a connection manager.</summary>
			<param name="transaction">The transaction the connection is participating in.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.AddErrorOutput(System.String,System.Int32,System.Int32)">
			<summary>Adds an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object and marks it as an error output by setting the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsErrorOut"></see> property to true.</summary>
			<param name="lExclusionGroup">Specifies the exclusion group of the output.</param>
			<param name="lInputID">Specifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> of the error output.</param>
			<param name="strOutputName">Specifies the name of the output.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.BufferTypeToDataRecordType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)">
			<summary>Returns a managed data type based on an Integration Services data type.</summary>
			<returns>The managed type that maps to an Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see>.</returns>
			<param name="type">A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.Cleanup">
			<summary>Frees resources and finishes the execution of the component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ConvertBufferDataTypeToFitManaged(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Boolean@)">
			<summary>Gets the appropriate Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> from managed code.</summary>
			<returns>An Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that corresponds to a managed type. </returns>
			<param name="IsLong">Indicates if the data type is a long.</param>
			<param name="dt">The Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see></param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DataRecordTypeToBufferType(System.Type)">
			<summary>Gets the Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that corresponds to a managed type.</summary>
			<returns>The Integration Services<see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that corresponds to the managed type.</returns>
			<param name="type">A managed type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DeleteExternalMetadataColumn(System.Int32,System.Int32)">
			<summary>Deletes the external metadata column at the specified index from the collection of external metadata columns.</summary>
			<param name="iID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
			<param name="iExternalMetadataColumnID">The ID of the external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DeleteInput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see> collection.</summary>
			<param name="inputID">The ID of the input object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DeleteOutput(System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputCollection90"></see> collection.</summary>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DeleteOutputColumn(System.Int32,System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> collection.</summary>
			<param name="outputColumnID">The ID of the IDTSOutputColumn90 object to delete.</param>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.DescribeRedirectedErrorCode(System.Int32)">
			<summary>Provides error code information for a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> row added to an output buffer.</summary>
			<returns>The description associated with the error code.</returns>
			<param name="iErrorCode">The error code that is described.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.GetErrorOutputInfo(System.Int32@,System.Int32@)">
			<summary>Returns the index and ID of the error output of the component.</summary>
			<returns>true if the component has an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object with the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90.IsErrorOut"></see> property set to true; otherwise, false.</returns>
			<param name="iErrorOutputID">Contains the ID of the error <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> when the method returns.</param>
			<param name="iErrorOutputIndex">Contains the index of the error <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> when the method returns.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.idxOfBufferType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)">
			<param name="type"> </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.idxOfDataRecordType(System.Type)">
			<param name="type"> </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.Initialize">
			<summary>When overridden in a derived class, initializes a new instance of a custom data flow component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.InsertExternalMetadataColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Inserts a new external metadata column into the collection of external metadata columns at the specified index.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see>.</returns>
			<param name="iExternalMetadataColumnIndex">The index at which the new external metadata column should be inserted into the collection.</param>
			<param name="iID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
			<param name="strName">The Name of the new external metadata column.</param>
			<param name="strDescription">The Description of the new external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.InsertInput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputCollection90"></see>.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</returns>
			<param name="insertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object specified by inputID.</param>
			<param name="inputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.InsertOutput(Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSInsertPlacement,System.Int32)">
			<summary>Adds a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object </summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object</returns>
			<param name="insertPlacement">Specifies whether to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object before or after the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object specified by outputID.</param>
			<param name="outputID">Specifies an existing <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object that the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> is inserted next to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.InsertOutputColumnAt(System.Int32,System.Int32,System.String,System.String)">
			<summary>Creates a new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object and inserts it into the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see>.</summary>
			<returns>The newly created <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</returns>
			<param name="outputColumnIndex">Specifies the location in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumnCollection90"></see> to insert the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="description">Specifies the value assigned to the Description property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
			<param name="outputID">Specifies the IDTSOutput90 object to add the column to.</param>
			<param name="name">Specifies the value assigned to the Name property of the new <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.MapInputColumn(System.Int32,System.Int32,System.Int32)">
			<summary>Establishes a relationship between an input column and a corresponding external metadata column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object that the input column is mapped to.</returns>
			<param name="iInputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
			<param name="iInputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</param>
			<param name="iExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.MapOutputColumn(System.Int32,System.Int32,System.Int32,System.Boolean)">
			<summary>Establishes a relationship between an output column and a corresponding external metadata column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> that is mapped to the output column.</returns>
			<param name="iOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="iOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="iExternalMetadataColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSExternalMetadataColumn90"></see> object.</param>
			<param name="bMatch">Indicates whether the columns match.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.OnDeletingInputColumn(System.Int32,System.Int32)">
			<summary>Deletes an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see>.</summary>
			<param name="inputID">Specifies the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that is being deleted.</param>
			<param name="inputColumnID">Specifies the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> that is being deleted.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.OnInputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object is connected to the component through the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> interface.</summary>
			<param name="inputID">Contains the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that is attached.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.OnInputPathDetached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object is disconnected from the component through the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> interface.</summary>
			<param name="inputID">Specifies the ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> that was connected to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSPath90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.OnOutputPathAttached(System.Int32)">
			<summary>Called when an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object of the component is attached to a downstream component.</summary>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PerformUpgrade(System.Int32)">
			<summary>Upgrades the component metadata to the version of the component installed on the local computer.</summary>
			<param name="pipelineVersion">The current version of the Integration Services data flow engine.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PostExecute">
			<summary>Called at the end of component execution, but before <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.Cleanup"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PreExecute">
			<summary>Called after <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PrepareForExecute"></see>, and before <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PrimeOutput(System.Int32,System.Int32[],Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer[])"></see> and <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ProcessInput(System.Int32,Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer)"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PrepareForExecute">
			<summary>Called before <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PreExecute"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.PrimeOutput(System.Int32,System.Int32[],Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer[])">
			<summary>Called at run time for source components and transformation components with asynchronous outputs to let these components add rows to the output buffers.</summary>
			<param name="outputs">The number of elements in the outputIDs and buffers arrays.</param>
			<param name="outputIDs">An array of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> ID's.</param>
			<param name="buffers">An array of <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> objects.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ProcessInput(System.Int32,Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer)">
			<summary>Called at run time when a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> from an upstream component is available to the component to let the component process the incoming rows.</summary>
			<param name="buffer">The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> object.</param>
			<param name="inputID">The ID of the input of the component.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ProvideComponentProperties">
			<summary>Called when a component is first added to the data flow task, to initialize the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ComponentMetaData"></see> of the component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.RegisterEvents">
			<summary>When you are developing a custom data flow component, you override this method to create custom events.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.RegisterLogEntries">
			<summary>Registers the events that the component will log.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ReinitializeMetaData">
			<summary>Repairs any errors identified during validation that cause the component to return <see cref="F:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus.VS_NEEDSNEWMETADATA"></see> at design time.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ReleaseConnections">
			<summary>Frees the connections established during <see cref="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.AcquireConnections(System.Object)"></see>. Called at design time and run time.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.RemoveAllInputsOutputsAndCustomProperties">
			<summary>Deletes each <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> and <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object from the component.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetComponentProperty(System.String,System.Object)">
			<summary>Assigns a value to a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of the component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="propertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value is set.</param>
			<param name="propertyValue">The object stored in the Value property of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetExternalMetadataColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of the specified external metadata column.</summary>
			<param name="iPrecision">The numeric precision of the new external metadata column.</param>
			<param name="iScale">The numeric scale of the new external metadata column.</param>
			<param name="iID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
			<param name="iCodePage">The code page of the new external metadata column.</param>
			<param name="eDataType">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> that contains the data type of the new external metadata column.</param>
			<param name="iExternalMetadataColumnID">The ID of the external metadata column.</param>
			<param name="iLength">The length of the new external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetExternalMetadataColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Sets an individual property of an external metadata column.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> that contains the modified property value.</returns>
			<param name="strPropertyName">The name of the property whose value is being set.</param>
			<param name="iID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> or <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see>  that the external metadata column is associated with.</param>
			<param name="oValue">The value to assign to the property.</param>
			<param name="iExternalMetadataColumnID">The ID of the external metadata column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetInputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose property is set.</returns>
			<param name="propertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object.</param>
			<param name="propertyValue">The value set in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="inputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see>.</param>
			<param name="inputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is being set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetInputProperty(System.Int32,System.String,System.Object)">
			<summary>Assigns a value to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value is set.</returns>
			<param name="propertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="propertyValue">The value to assign to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="inputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInput90"></see> object that contains the custom property.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetOutputColumnDataTypeProperties(System.Int32,System.Int32,Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the data type properties of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<param name="iOutputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</param>
			<param name="iOutputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="iPrecision">The total number of digits in the column.</param>
			<param name="iCodePage">The code page of the column.</param>
			<param name="iScale">The number of digits of precision in the column.</param>
			<param name="eDataType">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType"></see> of the column.</param>
			<param name="iLength">The length of the column.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetOutputColumnProperty(System.Int32,System.Int32,System.String,System.Object)">
			<summary>Sets the value of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> for an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> whose value was set.</returns>
			<param name="propertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="outputColumnID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> that contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutputColumn90"></see> object.</param>
			<param name="propertyValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetOutputProperty(System.Int32,System.String,System.Object)">
			<summary>Sets the value of an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> on an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> object whose value was set.</returns>
			<param name="propertyName">The name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> to set.</param>
			<param name="propertyValue">The value assigned to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see>.</param>
			<param name="outputID">The ID of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSOutput90"></see> whose <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSCustomProperty90"></see> is set.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.SetUsageType(System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInput90,System.Int32,Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType)">
			<summary>Creates an <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object in the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumnCollection90"></see> of the component and sets the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UsageType"></see> property of the column.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object whose <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90.UsageType"></see> is set.</returns>
			<param name="lineageID">The <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90.LineageID"></see> of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSVirtualInputColumn90"></see> object.</param>
			<param name="virtualInput">The IDTSVirtualInput90 object that is used to map the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSInputColumn90"></see> object.</param>
			<param name="usageType">A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSUsageType"></see> enumeration.</param>
			<param name="inputID">The ID of the IDTSInput90 object.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.Validate">
			<summary>Verifies that the component is correctly configured.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.DTSValidationStatus"></see> enumeration that indicates the status of the component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.BufferManager">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> of the pipeline component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSBufferManager90"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ComponentMetaData">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> for a component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Wrapper.IDTSComponentMetaData90"></see> of the data flow component.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ErrorSupport">
			<summary>Returns an <see cref="T:Microsoft.SqlServer.Dts.ManagedMsg.ErrorSupport"></see> object that lets the component raise errors, warnings, or other information events based on HRESULTs returned by Integration Services components written in native code.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.ManagedMsg.ErrorSupport"></see> object that lets the component raise errors, warnings, or other information events based on HRESULTs returned by Integration Services components written in native code.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.EventInfos">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90"></see> collection of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> object.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSEventInfos90"></see> object provided to the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent"></see> object.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.LogEntryInfos">
			<summary>Gets an <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90"></see> collection of logging events that the component has registered.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSLogEntryInfos90"></see> collection of logging events that the component has registered.For more information, see Logging and Defining Custom Log Entries.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.ReferenceTracker">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSObjectReferenceTracker90"></see> associated with the component.</summary>
			<returns>The ReferenceTracker provides impact analysis for the SSIS run-time engine. Components register the variables and connections used by the component. If another object in the package tries to delete the variable or the connection referenced by the component, the system can verify that the variable or connection is used by the component, and displays the information.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.PipelineComponent.VariableDispenser">
			<summary>Gets the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> of the data flow component.</summary>
			<returns>The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Wrapper.IDTSVariableDispenser90"></see> object provided to the component.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponentHResultException">
			<summary>Exception raised by the Script component when it encounters a COM exception. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponentHResultException.#ctor(System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponentHResultException"></see> class.</summary>
			<param name="code">The COM hresult returned by the underlying COM exception.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.PipelineComponentHResultException.#ctor(System.String,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineComponentHResultException"></see> class.</summary>
			<param name="code">The COM hresult returned by the underlying COM exception.</param>
			<param name="message">The message returned by the underlying COM exception.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.RowIndexOutOfRangeException">
			<summary>The exception that is thrown when an invalid index is supplied when accessing a row in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see>. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.RowIndexOutOfRangeException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.RowIndexOutOfRangeException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.UnsupportedBufferDataTypeException">
			<summary>The exception that is thrown when assigning a value to a buffer column that contains the incorrect data type.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.UnsupportedBufferDataTypeException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.UnsupportedBufferDataTypeException"></see> class.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.UnsupportedValueTypeForTextStreamColumnException">
			<summary>The exception that is thrown when the value of the type that is being assigned to a column in a <see cref="T:Microsoft.SqlServer.Dts.Pipeline.PipelineBuffer"></see> is not a string or byte array.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.UnsupportedValueTypeForTextStreamColumnException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.UnsupportedValueTypeForTextStreamColumnException"></see> class.</summary>
		</member>
		<member name="N:Microsoft.SqlServer.Dts.Pipeline.Localization">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Pipeline.Localization"></see> namespace contains the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see> class, which supports the localization of properties common to most data flow objects.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute">
			<summary>Provides localization support by populating the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.DisplayName"></see> and <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.Description"></see> properties from an embedded resource file.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see> class.</summary>
			<param name="localizedDisplayNameProperty">The name of the property used to look up the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.DisplayName"></see> property in the resource class.</param>
			<param name="localizedDescriptionProperty">The name of the property used to look up the <see cref="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.Description"></see> property in the resource class.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.Description">
			<summary>Gets or sets the description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</summary>
			<returns>The description of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.DisplayName">
			<summary>Gets or sets the display name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</summary>
			<returns>The display name of the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute.LocalizationType">
			<summary>Gets or sets the class that supplies values for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</summary>
			<returns>A System.Type that represents the class that supplies values for the <see cref="T:Microsoft.SqlServer.Dts.Pipeline.Localization.DtsLocalizableAttribute"></see>.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sql\2005\SDKAssemblies\en\Microsoft.SQLServer.ManagedDTS.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.ManagedDTS</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Runtime">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Runtime"></see> namespace contains the classes and interfaces to create packages, custom tasks, and other package control flow elements.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Application">
			<summary>Discovers and accesses <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see> objects. It can also access collections and properties that contain information about the system.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see> class.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)">
			<summary>Creates a folder on the server that appears in the Stored Packages node of the Integration Services service hierarchy. </summary>
			<param name="sServerName">The name of the server running the Integration Services service.</param>
			<param name="sNewFolderName">The name to give the newly created folder.</param>
			<param name="sParent">The name of the top level folder to save this folder under.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String)">
			<summary>Creates a folder on the specified instance of SQL Server.</summary>
			<param name="strNewFolderName">The name of the folder to create.</param>
			<param name="strServerUserName">The user name to use when authenticating on the server.</param>
			<param name="strServerName">The name of the instance of SQL Server.</param>
			<param name="strParent">The name of the parent folder. If you want to create a folder under the File System node, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)"></see> method.</param>
			<param name="strServerPassword">The password associated with the strServerUserName account.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfoFromDataType(Microsoft.SqlServer.Dts.Runtime.Wrapper.DataType)">
			<summary>Returns the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo"></see> object for the specified data type. </summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo"></see> object.</returns>
			<param name="dt">The data type. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.ExistsOnDtsServer(System.String,System.String)">
			<summary>Returns a Boolean that indicates whether the specified package already exists on the Integration Services service.</summary>
			<returns>true if the package specified by sPackagePath exists on the server named by sServerName; otherwise, false.</returns>
			<param name="sPackagePath">The fully qualified path of the package.</param>
			<param name="sServerName">The name of the server to search for the package.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.ExistsOnSqlServer(System.String,System.String,System.String,System.String)">
			<summary>Returns a Boolean that indicates whether the specified package exists on the instance of SQL Server.</summary>
			<returns>true if the package exists on the specified instance of SQL Server. false if the package does not exist.</returns>
			<param name="serverName">The name of the instance of SQL Server to search for the package.</param>
			<param name="serverUserName">The user name to authenticate against the instance of SQL Server.</param>
			<param name="serverPassword">The password for the specified serverUserName.</param>
			<param name="packagePath">The package you are looking for.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.FolderExistsOnDtsServer(System.String,System.String)">
			<summary>Returns a Boolean that indicates whether the specified folder already exists on the file system.</summary>
			<returns>true if the folder specified exists on the server; false if the folder does not exist.</returns>
			<param name="sServerName">The name of the server to search for the package.</param>
			<param name="sFolderName">The name of the folder you are looking for. For example, to see if a folder name myFolder exists under the File System folder, use the escaped string, @"\File System\myFolder".</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.FolderExistsOnSqlServer(System.String,System.String,System.String,System.String)">
			<summary>Returns a Boolean that indicates whether the specified folder already exists on the instance of SQL Server.</summary>
			<returns>true if the folder exists on the specified instance of SQL Server; false if the folder does not exist.</returns>
			<param name="strServerUserName">The user name to authenticate against the instance of SQL Server.</param>
			<param name="strServerName">The name of the instance of SQL Server to search for the package.</param>
			<param name="strServerPassword">The password for the given strserverUserName.</param>
			<param name="strFolderName">The folder you are looking for.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerPackageInfos(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos"></see> collection that contains the packages stored in the SSIS Package Store on an instance of SQL Server, within the specified folder.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfo"></see> objects.</returns>
			<param name="sServerName">The name of the SQL Server instance where the packages reside. For the local server, use the server name or "."; "(local)" and "localhost" are not acceptable.</param>
			<param name="sPackageFolder">The folder under Stored Packages that contains the packages you want to enumerate. If you want package information from the msdb database in SQL Server, you can also use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos(System.String,System.String,System.String,System.String)"></see> method. The folders in which packages are stored within the SSIS Package Store can be created from the Stored Packages node in Management Studio, by the dtutil.exe command prompt utility, or by the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnDtsServer(System.String,System.String,System.String)"></see> method.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerRoles(System.String,System.String)">
			<summary>Returns an array of Strings that lists the roles available for a folder.</summary>
			<returns>An array of Strings, each string containing a role name.</returns>
			<param name="sFolderPath">The folder whose roles you are interested in. </param>
			<param name="sServerName">The name of the instance that is running the Integration Services service.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos(System.String,System.String,System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos"></see> collection that contains the packages stored in an instance of SQL Server, within the specified logical folder, by using the server name, user name, and password.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.PackageInfos"></see> collection.</returns>
			<param name="serverName">The name of the SQL Server instance where the packages reside. </param>
			<param name="serverUserName">The account name used to log on to the instance of SQL Server, if you need to log in to SQL Server using standard authentication. If you are using Windows Authentication, use null.</param>
			<param name="serverPassword">The password of the user account, if you need to log in to SQL Server using standard authentication. If you are using Windows Authentication, use null.</param>
			<param name="strFolder">The logical folder that contains the packages you want to enumerate. If you want package information from the File System folder in the SSIS Package Store, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.GetDtsServerPackageInfos(System.String,System.String)"></see> method. The logical folders in which packages are stored within MSDB can be created from the Stored Packages\MSDB node in Management Studio, by the dtutil.exe command prompt utility, or by the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.CreateFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String)"></see> method.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageInfos2(System.String,System.Object)">
			<param name="strFolder"> </param>
			<param name="connectionObject"> </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetPackageRoles(System.String,System.String,System.String@,System.String@)">
			<summary>Returns the database roles that have read access and write access to the package. Database roles apply only to packages stored in the SQL Servermsdb database.</summary>
			<param name="serverName">Specify the name and instance of the server that contains the package.</param>
			<param name="readerRole">Returns the roles with read access.</param>
			<param name="writerRole">Returns the roles with write access.</param>
			<param name="packagePath">Specify the name of the package.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetRunningPackages(System.String)">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackages"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.RunningPackage"></see> objects that represent all the packages that are currently running on the computer </returns>
			<param name="server">The instance of SQL Server that the application is running on.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetServerInfo(System.String,System.String@)">
			<summary>Returns the SQL Server version number of the SQL Server product installed on the target server. </summary>
			<param name="server">The name of the server hardware to check for the SQL Server product version.</param>
			<param name="serverVersion">The version number of the SQL Server product, defined as an out parameter.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.GetServerVersionEx(System.String,System.Int32@,Microsoft.SqlServer.Dts.Runtime.DTSProductLevel@,System.String@,System.String@)">
			<summary>Returns the edition, product level, and other values that indicate the version of SSIS installed.</summary>
			<param name="editionID">An out parameter containing an integer that indicates the edition of the product. The mapping of the editionID to the edition name is shown in the Remarks section.</param>
			<param name="productLevel">An out parameter providing the service pack level of the SSIS server.</param>
			<param name="server">The name of the server to get the product version information from.</param>
			<param name="ssisEditionID">An out parameter containing a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSProductLevel"></see> enumeration.</param>
			<param name="productVersion">An out parameter containing the build number as seen in Help / About, formatted as major.minor.build. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromDtsServer(System.String,System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>Loads a package from the specified server.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see> object.</returns>
			<param name="sPackagePath">The fully qualified path of the package.</param>
			<param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface.</param>
			<param name="sServerName">The server where the package is stored.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromSqlServer(System.String,System.String,System.String,System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>Loads a package from SQL Server by specifying the server name, user name, and password.</summary>
			<returns>The package that was loaded.</returns>
			<param name="serverName">The name of the instance of SQL Server that the package is loaded from.</param>
			<param name="serverUserName">The account name used to log on to the server.</param>
			<param name="events">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface.</param>
			<param name="serverPassword">The password of the account.</param>
			<param name="packagePath">The name and path of the package to load.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadFromSqlServer2(System.String,System.Object,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<param name="events"> </param>
			<param name="connectionObject"> </param>
			<param name="packagePath"> </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>Loads a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see> from the file system.</summary>
			<returns>The package that was loaded.</returns>
			<param name="events">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface.</param>
			<param name="fileName">The name of the file that contains the package to load.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.Boolean)">
			<summary>Loads a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see> from the file system, and specifies the threading model.</summary>
			<returns>The package that was loaded.</returns>
			<param name="events">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface.</param>
			<param name="fileName">The name of the file that contains the package to load.</param>
			<param name="loadNeutral">A Boolean that indicates whether to load the package as neutral threaded. If false, loads the package as apartment threaded.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFolderFromDtsServer(System.String,System.String)">
			<summary>Removes the specified folder from the specified server.</summary>
			<param name="sServerName">The name of the server where the folder is located.</param>
			<param name="sFolderName">The name of the folder to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFolderFromSqlServer(System.String,System.String,System.String,System.String)">
			<summary>Removes the specified folder from the specified instance of SQL Server.</summary>
			<param name="strServerUserName">The user name to authenticate against the instance of SQL Server.</param>
			<param name="strServerName">The name of the instance of SQL Server to remove the folder from.</param>
			<param name="strServerPassword">The password for the specified strServerUserName.</param>
			<param name="strFolderName">The name of the folder to delete.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFromDtsServer(System.String,System.String)">
			<summary>Removes a package from the specified server.</summary>
			<param name="sPackagePath">The fully qualified path of the package.</param>
			<param name="sServerName">The name of the server where the package is located.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RemoveFromSqlServer(System.String,System.String,System.String,System.String)">
			<summary>Removes a package from the specified instance of SQL Server.</summary>
			<param name="serverName">The name of the instance of SQL Server.</param>
			<param name="serverUserName">The user name to use when authenticating against the server.</param>
			<param name="serverPassword">The password associated with the ServerUserName account.</param>
			<param name="packagePath">The name of the package to remove.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RenameFolderOnDtsServer(System.String,System.String,System.String,System.String)">
			<summary>Renames a folder on the specified instance of SQL Server.</summary>
			<param name="sServerName">The name of the server where the folder is located.</param>
			<param name="sOldName">The name of the existing folder.</param>
			<param name="sNewName">The new name of the folder.</param>
			<param name="sParent">The name of the parent folder.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.RenameFolderOnSqlServer(System.String,System.String,System.String,System.String,System.String,System.String)">
			<summary>Renames a folder on the specified instance of SQL Server.</summary>
			<param name="strNewName">The new name of the folder.</param>
			<param name="strServerUserName">The user name to use when authenticating on the server.</param>
			<param name="strServerName">The name of the instance of SQL Server.</param>
			<param name="strServerPassword">The password associated with the strServerUserName account.</param>
			<param name="strParent">The name of the parent folder. </param>
			<param name="strOldName">The name of the existing folder.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToDtsServer(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String)">
			<summary>Saves a package to the file system.</summary>
			<param name="sPackagePath">The name to give the package when saved. You can preface the name with a path. For example, to save a package with the name myPackage to the File System folder, the parameter would be @"File System\myPackage".</param>
			<param name="pEvents">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> object.</param>
			<param name="pPackage">The package to save.</param>
			<param name="sServerName">The name of the server to save the package to.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToSqlServer(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String,System.String)">
			<summary>Saves a package to an instance of SQL Server.</summary>
			<param name="serverName">The name of the instance of SQL Server to save the package to.</param>
			<param name="serverUserName">The user name used to log on to the server.</param>
			<param name="serverPassword">The password for the user account.</param>
			<param name="events">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> object.</param>
			<param name="package">The package to save.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToSqlServerAs(Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents,System.String,System.String,System.String,System.String)">
			<summary>Saves a package to an instance of SQL Server with a new name.</summary>
			<param name="serverName">The name of the instance of SQL Server.</param>
			<param name="serverUserName">The name of the account used to log on to the instance of SQL Server.</param>
			<param name="serverPassword">The password of the user account.</param>
			<param name="events">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> object.</param>
			<param name="package">The package to save.</param>
			<param name="packagePath">The path and new name to assign to the package. The parameter packagePath is in the format of \\folder\\packageName. If packagePath is specified without an existing folder, the package will be saved with this parameter as its new name. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>Saves the XML definition of a package to a file.</summary>
			<param name="events">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> object.</param>
			<param name="fileName">The name of the file to save.</param>
			<param name="package">The package object to save. </param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Application.SetPackageRoles(System.String,System.String,System.String,System.String)">
			<summary>Sets the database roles that have read access and write access to the package. Database roles apply only to package stored in the SQL Servermsdb database.</summary>
			<param name="serverName">Specify the name and instance of the server that contains the package.</param>
			<param name="readerRole">Specify a role to have read access.</param>
			<param name="writerRole">Specify a role to have write access.</param>
			<param name="packagePath">Specify the name of the package.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.CheckSignatureOnLoad">
			<summary>Gets or sets a Boolean that indicates whether a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Package"></see> object should check the signature when loading.</summary>
			<returns>true indicates that the package checks the signature when loading. false causes the package to ignore the signature. The default is true.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.ComponentStorePath">
			<summary>Returns the path where pipeline components are stored. This property is read-only. </summary>
			<returns>A String that indicates the location of the pipeline components.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.ConnectionInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.DataTypeInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DataTypeInfo"></see> objects. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.DBProviderInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo"></see> objects in the application. This property is read-only.</summary>
			<returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.DBProviderInfos"></see> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DBProviderInfo"></see> objects for the application. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.ForEachEnumeratorInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfos"></see> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ForEachEnumeratorInfo"></see> objects in the application. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.LogProviderInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.LogProviderInfos"></see> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.LogProviderInfo"></see> objects for the application. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.PackagePassword">
			<summary>Sets the value of the password for the package. This property is write-only.</summary>
			<returns>A String that contains the password for the package.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.PipelineComponentInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo"></see> objects.</summary>
			<returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.PipelineComponentInfos"></see> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.PipelineComponentInfo"></see> objects for the application. This property is read-only.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.TaskInfos">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfos"></see> collection that contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo"></see> objects. This property is read-only.</summary>
			<returns>A <see cref="P:Microsoft.SqlServer.Dts.Runtime.Application.TaskInfos"></see> collection that contains all the <see cref="T:Microsoft.SqlServer.Dts.Runtime.TaskInfo"></see> objects in the application. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.UpdateObjects">
			<summary>Gets or sets a Boolean that indicates whether extensible objects can be updated at package load time if an updated version is found.</summary>
			<returns>true if extensible objects can be updated at package load time when an updated version is found; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Application.UpdatePackage">
			<summary>Gets or sets a Boolean that indicates whether packages can be updated when an updated version is found.</summary>
			<returns>true if packages can be updated when an updated version is found; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager">
			<summary>Manages all the breakpoints that are set in on a task. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointManager.ClearBreakpointTargets">
			<summary>Removes all the breakpoints set in a task.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointManager.CreateBreakpointTarget(System.Int32,System.String)">
			<summary>Creates a new breakpoint in the task with the specified breakpoint ID and description.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see> object.</returns>
			<param name="breakpointID">The ID to assign to the breakpoint to distinguish it from other breakpoints.</param>
			<param name="description">A string describing the breakpoint.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointManager.GetBreakpointTarget(System.Int32)">
			<summary>Returns the breakpoint object for a specific breakpoint ID.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see> object. </returns>
			<param name="breakpointID">The ID of the breakpoint to return.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointManager.IsBreakpointTargetEnabled(System.Int32)">
			<summary>A Boolean that indicates if the breakpoint is enabled.</summary>
			<returns>A Boolean that indicates if the breakpoint is enabled. A value of true indicates that a previously created breakpoint has been enabled by the client task.</returns>
			<param name="breakpointID">The ID of the breakpoint that you want to verify if it is enabled or not.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointManager.RemoveBreakpointTarget(System.Int32)">
			<summary>Removes a previously created breakpoint from a task.</summary>
			<param name="breakpointID">The ID of the breakpoint to remove.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget">
			<summary>Contains information on breakpoints that are set in the package. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.ResetHitCount">
			<summary>Resets the <see cref="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitCount"></see> value to zero.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.BreakOnExpressionChange">
			<summary>Gets or sets a Boolean that indicates whether the code is to continue running or break and stop executing when the expression changes.</summary>
			<returns>A Boolean indicating if the code is to break when an expression changes. true indicates that the package is to break; false indicates that the package will not break.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.Description">
			<summary>Returns the description associated with the breakpoint.</summary>
			<returns>A String containing a description for the breakpoint.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.Enabled">
			<summary>Gets or sets a Boolean indicating if a specific breakpoint is currently enabled.</summary>
			<returns>A Boolean indicating if the breakpoint is enabled. true indicates the breakpoint is enabled; false indicates it is disabled.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.Expression">
			<summary>Gets or sets an expression to be evaluated to determine if the breakpoint should occur.</summary>
			<returns>A String containing the expression to evaluate.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitCount">
			<summary>Gets or sets an Integer that specifies the number of times a breakpoint occurs before the run-time engine is suspended.</summary>
			<returns>An Integer containing the number of times a breakpoint occurs before the run-time engine is suspended.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitTarget">
			<summary>Gets or sets the value used in conjunction with <see cref="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitTest"></see> operation.</summary>
			<returns>An Integer representing the target value; compare to the <see cref="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitCount"></see> value to determine if the breakpoint should occur.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.HitTest">
			<summary>Gets or sets a <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSBreakpointHitTest"></see> enumeration used as a switch to test if a breakpoint should occur.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSBreakpointHitTest"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.ID">
			<summary>Gets the unique identifier assigned to the breakpoint.</summary>
			<returns>An Integer containing the unique identifier.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget.Owner">
			<summary>Returns an <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see> for the task that owns the breakpoint.</summary>
			<returns>An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSBreakpointSite"></see> interface.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargetEnumerator">
			<summary>Creates a <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargetEnumerator"></see> for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets"></see> collection. This class cannot be inherited. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.BreakpointTargetEnumerator.Current">
			<summary>Gets the current <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see> object in the collection.</summary>
			<returns>The current <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see> object in the collection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets">
			<summary>Contains a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTarget"></see> objects. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets.GetEnumerator">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargetEnumerator"></see> that can iterate through the <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets"></see> collection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargetEnumerator"></see> for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointTargets"></see> collection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Configuration">
			<summary>Represents a configuration class that contains information about how a package is configured. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configuration.LoadFromXML(System.Xml.XmlNode,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>This method is not callable by your application code. To load a package saved as .xml, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)"></see> method.</summary>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> for raising events (errors, warnings, and so on) during persistence.</param>
			<param name="node">The node that contains the configuration to be loaded.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configuration.SaveToXML(System.Xml.XmlDocument@,System.Xml.XmlNode,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>This method is not callable by your application code. To save a package as .xml, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)"></see> method.</summary>
			<param name="events">An <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface.</param>
			<param name="node">The node that contains the object to be stored.</param>
			<param name="doc">The XML document to which to save the information.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.ConfigurationString">
			<summary>Gets or sets the location of the configuration. </summary>
			<returns>A String that contains the location of the configuration. The location can be a path, an environment variable, a parent package variable name, or a registry key.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.ConfigurationType">
			<summary>Gets or sets a value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSConfigurationType"></see> that describes what kind of file the configuration information is stored in.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSConfigurationType"></see> enumeration whose value describes where the configuration information is stored.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.CreationName">
			<summary>Returns the string that is used by the run-time engine to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object and to add the object to the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see> collection. This property is read-only.</summary>
			<returns>A String that contains the configuration name or ID. </returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.Description">
			<summary>Gets or sets the description of the configuration. This property is read-only.</summary>
			<returns>A String that contains the description given to the configuration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.ID">
			<summary>Returns the ID assigned to the configuration. This property is read-only.</summary>
			<returns>A String that contains the unique ID assigned to this configuration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.Name">
			<summary>Gests or sets the name given to this configuration.</summary>
			<returns>A String that contains the name of the configuration.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configuration.PackagePath">
			<summary>Gets or sets the path of the package that the configuration applies to.</summary>
			<returns>A String that contains the path to the package.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConfigurationEnumerator">
			<summary>Supports iteration over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see> collection. This class cannot be inherited.</summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConfigurationEnumerator.Current">
			<summary>Gets the current <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object from the collection.</summary>
			<returns>The current element in the collection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.Configurations">
			<summary>Represents a collection of <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> objects. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.Contains(System.Object)">
			<summary>Returns a Boolean that indicates whether the items in the collection can be accessed by an index without throwing an exception.</summary>
			<returns>A Boolean that indicates whether the collection can be accessed by name, identity, ID, or index. A value of true indicates that the collection can be accessed by using the syntax Configurations[index]. A value of false indicates that indexing cannot be used to retrieve items from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see> collection; using this property throws an exception.</returns>
			<param name="index">The name, identity, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to locate in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.GetEnumerator">
			<summary>Returns an enumerator for iterating over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see> collection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConfigurationEnumerator"></see> enumerator.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.InsertAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Configuration)">
			<summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object into the collection after an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object.</summary>
			<param name="config">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to insert into the collection. </param>
			<param name="index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object that is already in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.InsertBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Configuration)">
			<summary>Adds a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object into the collection before an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object.</summary>
			<param name="config">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to insert into the collection.</param>
			<param name="index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object that is already in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.MoveAfter(System.Object,Microsoft.SqlServer.Dts.Runtime.Configuration)">
			<summary>Moves a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object after an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object.</summary>
			<param name="config">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to move in the collection. </param>
			<param name="index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object that is already in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.MoveBefore(System.Object,Microsoft.SqlServer.Dts.Runtime.Configuration)">
			<summary>Moves a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object in front of an existing <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object.</summary>
			<param name="config">The <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to move in the collection. </param>
			<param name="index">The name, description, ID, or identity of a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object that is already in the collection.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.Configurations.Remove(System.Object)">
			<summary>Removes a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configurations"></see> collection.</summary>
			<param name="index">The name, index, ID, or identity of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to remove.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.Configurations.Item(System.Object)">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object from the collection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object.</returns>
			<param name="index">The name, description, ID, or index of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Configuration"></see> object to return.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConnectionEnumerator">
			<summary>Supports iteration over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see> collection. This class cannot be inherited. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionEnumerator.Current">
			<summary>Gets the current <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> object from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see> collection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> object.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo">
			<summary>Contains information about the connections available on the computer. This class cannot be inherited. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.ConnectionContact">
			<summary>Represents a writer-defined String. This value is read-only.</summary>
			<returns>A String that contains information put in by the developer. The value typically contains the contact information for the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.ConnectionType">
			<summary>Returns the name of the connection manager used to create the connection. This value is read-only.</summary>
			<returns>A String that contains the name of the connection manager used to create the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.CreationName">
			<summary>Returns the string that is used to create an instance of the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> object. This property is read-only.</summary>
			<returns>A String that contains the creation name. The name may be the fully qualified assembly name (for managed assemblies), it may be the ProgID or CLSID (for COM DLLs), or it may be one of the STOCK monikers such as STOCK:FILE that is used to create the connection manager for a file.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.Description">
			<summary>Gets or sets a description for a connection. </summary>
			<returns>A String that contains the connection's description.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.FileName">
			<summary>Returns the name of the file that is the data source for the connection. This value is read-only.</summary>
			<returns>A String that contains the file name of the source data for the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.FileNameVersionString">
			<summary>Returns a String that contains the version number of the file. This value is read-only.</summary>
			<returns>A String that contains the version number.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.IconFile">
			<summary>Represents the name of the resource file that contains the icon to use when representing this connection type in the graphical user interface. This value is read-only.</summary>
			<returns>A String that contains the name of the resource file that contains the icon.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.IconResource">
			<summary>Returns the name of the .resource file or the .resx file that contains the icon to use when representing this connection type in the graphical user interface. This value is read-only.</summary>
			<returns>A String that contains the name of the .resource file or the .resx file that contains the icon.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.ID">
			<summary>Represents the GUID assigned to the connection. This value is read-only.</summary>
			<returns>The GUID assigned to the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.Name">
			<summary>Gets or sets the name of the connection. </summary>
			<returns>A String that contains the name of the connection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo.UITypeName">
			<summary>Returns the name of the connection type that is shown in the graphical user interface. This value is read-only.</summary>
			<returns>A String that contains the connection type value that is shown in the user interface.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfoEnumerator">
			<summary>Supports iteration over the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Connections"></see> collection. This class cannot be inherited. </summary>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfoEnumerator.Current">
			<summary>Gets the current element in the collection.</summary>
			<returns>The current element in the collection.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos">
			<summary>Contains information about all the connections on the computer. The collection contains <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> objects that provide the details about each connection. The collection is available using the <see cref="T:Microsoft.SqlServer.Dts.Runtime.Application"></see> class. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos.Contains(System.Object)">
			<summary>Returns a Boolean that indicates whether the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> items in the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection can be accessed by using the name, index, ID, or identity parameter as the index.</summary>
			<returns>true indicates that you can retrieve the item using the syntax ConnectionInfos[index]; false indicates that indexing cannot be used to retrieve items from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection. </returns>
			<param name="index">The name, index, ID, or identity of the object in the collection to match.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos.GetEnumerator">
			<summary>Returns a <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfoEnumerator"></see> that can iterate through the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfoEnumerator"></see> for the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos"></see> collection.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Runtime.ConnectionInfos.Item(System.Object)">
			<summary>Retrieves the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> object from the collection by the name, index, ID, or identity.</summary>
			<returns>A <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionInfo"></see> object from the collection that matches the name, index, ID, or identity given in the index parameter.</returns>
			<param name="index">The name, index, ID, or identity of the object in the collection to return.</param>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager">
			<summary>Provides the information that you must have to connect to a data source. All classes that inherit from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> contain the same properties and methods. The <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see> class isolates the implementation details of the different connection types from the runtime. This enables the runtime to interact with each connection manager in a consistent and predictable manner. Connection managers contain a set of stock properties that all connections have in common, such as the <see cref="P:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Name"></see>, <see cref="P:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.ID"></see>, <see cref="P:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Description"></see>, and <see cref="P:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.ConnectionString"></see>. However, each connection type has additional properties that are specific to that connection type. These can be accessed through the <see cref="P:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Properties"></see> collection.This class cannot be inherited.</summary>
		</member>
		<member name="E:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Disposed">
			<summary>Adds an event handler to listen to the <see cref="E:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Disposed"></see> event on the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.AcquireConnection(System.Object)">
			<summary>Creates an instance of the connection type.</summary>
			<returns>An object that contains the transaction connection.</returns>
			<param name="txn">The handle to a transaction type.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.Dispose">
			<summary>Releases the resources used by the <see cref="T:Microsoft.SqlServer.Dts.Runtime.ConnectionManager"></see>.</summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.GetExpression(System.String)">
			<summary>Returns a String that contains the expression for the specified property. Null means that no expression has been assigned.</summary>
			<returns>A String that contains the expression used to evaluate the property.</returns>
			<param name="propertyName">The name of the property whose expression you want to see.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.GetPackagePath">
			<summary>Gets or sets the path of the package that the connection applies to. </summary>
			<returns>A String that contains the package path.</returns>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.LoadFromXML(System.Xml.XmlNode,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)">
			<summary>This method is not callable by your application code. To load a package that has been saved as .xml, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)"></see> method.</summary>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSEvents"></see> interface for raising events (errors, warnings, and so on) during persistence.</param>
			<param name="node">The node that contains the connection manager information to be loaded.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.ReleaseConnection(System.Object)">
			<summary>Frees the connection established during <see cref="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.AcquireConnection(System.Object)"></see>. Called at design time and runtime.</summary>
			<param name="connection">The connection to release.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Runtime.ConnectionManager.SaveToXML(System.Xml.XmlDocument@,System.Xml.XmlNode,Microsoft.SqlServer.Dts.Ru